{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "3c269e4c-d62e-437f-84a8-d3b516b04264",
        "name": "Clear Cache",
        "item": [
          {
            "id": "45f4b20d-e420-49d3-a43c-3536be7475fa",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8781773d-f86c-4c9a-a030-d40fb43f372d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "4c9d980a-5066-42a3-8340-7bac46b56dbf"
                }
              }
            ]
          },
          {
            "id": "24b2393e-9ffb-47b3-9fd9-efab660c8010",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5eda0055-8b8a-4c8b-b45c-92c69a26b40e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "021f3c62-679c-4a8a-955a-7d84d4658ed5"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "3c979a8d-0b8f-46cc-9bea-c529ec2a16ce",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "9eb7a94e-53ff-479e-96b2-f4d022adcee2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a16964d7-0313-4ca1-add8-33de85f26535",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f647aa1b-0030-4240-a746-40212e8eb6a1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ac2ff2ce-90a4-4ece-a8bc-df3d2093b8cd"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5ac07e2d-afc6-4912-b7fe-76979f6e80b7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b6a5a3b5-367d-4189-8e39-59df24ceabdb"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c0324c73-93bf-40cf-8951-7d43a2b31b3f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d2a478e9-5eba-4034-9a31-e32194af749f"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f6397878-d69e-4b49-80fc-b251a5d0b34e",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "2632696a-5914-47cd-9e46-1ca5371da14b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2f87c749-d45d-4aeb-9fab-ca12aba25386",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6ebdea0e-5a49-40fe-9a68-9ae01dda6ed0"
            }
          }
        ]
      },
      {
        "id": "5c5fa6e8-a8f7-40fc-ac6a-5b236ff07770",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "f27d2e31-5599-4837-99a8-7a03628dd2ec",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a845d35e-4303-44b1-9bfc-fe1a84398344",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e644a2ad-05ca-4b95-826d-77a59cbdfb0e",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffb9bd5d-4505-4bac-8ac1-24a12ce8d91a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "98940551-1ec4-42d0-bf79-fb64f9df09ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e76fe7b-3be2-4ace-9266-bb3b30e18ed4",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe85c7a3-4b0b-475f-8b4d-73cc0b5efaa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2d12a67a-fd7e-4b98-80b8-71920e9b650c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a651879-f2cb-4489-b879-3d510ed8e1fb",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7477eb62-0f16-44d9-9b28-3c63df0b928a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "44160a9a-a0dc-4b3a-8b70-d137e2761c22"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "41f169f1-7a13-4cae-8361-61bcc0229520",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "efabce0c-17dd-4e78-90cf-be64d390881d",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee864fd2-9881-4a67-b97f-d24532559f49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cdfb6155-e3c7-44d8-9249-1b908e3b073f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54eac8c0-4d41-4ab8-bca3-84f17d93319b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc0c2837-a1c6-404d-ab19-446857cda46d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "35a7f779-be8a-4ff9-be49-9f42aabe2ad7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "65ca0204-3d4f-4351-8157-7a81b08a5b9d",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bf01f0de-aa03-40bb-93c3-11b1fadc884e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "e40f96a4-d62f-4ccb-a268-50122f4eacc2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8a2afaaa-e652-42d4-9c0f-6421688c97ef",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "66d181df-27ae-4180-9926-c95902b7a0a8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4307107c-2bcb-4db1-a2d2-1246064f0157",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a8d04a0b-1d0a-4f00-ad90-a409d7f20e13"
            }
          }
        ]
      },
      {
        "id": "53841e05-a629-47f9-8813-c1ab8b7989c9",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "dc24b710-013f-46cf-a76a-1d0107aac620",
            "name": "Negative Testing",
            "item": [
              {
                "id": "056d67e0-6f4c-4ffc-9339-7010ecadef0f",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "819cd7bc-d16f-4bbe-8cb4-2dfae2ef38e5",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c806e8c8-6e7a-4244-8cd5-15dd97902f01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25a0e6f3-7f46-4b48-9bb2-312030d1b3b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb832828-313f-4342-bc10-fbb403ead3ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b71274e2-a293-4307-b277-4275313b1bb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d3139be-4f6e-4605-ac56-4779fb038968",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3b1c34a-25e5-43aa-a0a5-81d5e03a7b01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "552b899e-92de-4bc4-9cc5-d52d29c9d0e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68427101-1f31-4448-a3ce-910568e670b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "57519fe5-dbc9-41dd-8f96-7bfe245776d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "779a0245-7d42-4758-9d92-6a5776295765",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6db114e0-a32e-4173-bebe-5bab0f67d91f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03c67a63-89b0-4975-974a-9744fc05e758"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18e118f5-d482-4c03-9478-e78fa7b855ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c8106d0f-1dc3-4309-b810-97fffbac52f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d8b147b-892b-4360-9366-eb49f83189cc",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2c6505d-3d9f-4e21-9e02-94a6ba95177c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88275c1b-0157-4975-bc96-6fdc5cd10560"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42947ca1-2aa0-4b46-9489-29f0e486781a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "589419aa-3bbc-4691-8531-971280c39a10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "108c0c04-9963-4284-9795-e5be29f61b59",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "798f5197-9e45-46de-b975-b46ed4b79ea4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dd41601-8ed3-43f9-81fc-e9d6fea6f7e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4969ac61-d01f-479c-9482-1a6d3002ccd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9b333a84-ae93-47a1-a566-a1260d35e024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca517756-35a6-4be1-94a1-bb486f50e63c",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e28dd614-810f-4196-8407-9ae0ba22e578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c62dd02b-fedc-4bb4-8184-5d78c731d471"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f46306be-c026-4f30-b5b9-75911092af82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5ae34b1a-b986-4c05-b179-e914236da749"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea543c54-3743-430b-8579-003a1ea393a0",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3bd3821-c67d-46fd-878d-33674c64376a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45f9aeaa-8e76-4bbe-b1a6-f6cc8a8d36bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e096d8c1-d75f-448c-b7a6-b145812d07de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "76ae2fcd-ba3f-444a-bca5-6ffdc4f036ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e137f662-7b4c-4501-bdb3-2ffa35360113",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c49ea1c1-b553-4331-9815-da37d2544e47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1eb5abfe-b88a-46aa-b6fd-9ba851bd752e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fc0f853-3a3f-499c-8aab-d6b790ea8fcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2bd10609-6b30-421d-8364-9fcfc4696df4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4df31a7c-a818-40d3-8381-789ff50d81f9",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "815da749-5de5-47a0-8444-44e788bb8f95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e10a97f-8468-4a82-b4cc-233f7c6a511d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b99e8bb-d3bc-48de-beeb-8c4282dd12f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3a406f16-6105-4f5c-9e6f-c8748784498b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80d24302-afec-4be2-9bce-e6ca7f1645ae",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a09c609-d618-4958-a890-ade0e48d66b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f79c6cd6-954f-4da2-83a0-f84b434d5cfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a78dff8b-23f1-4d09-978c-1375468ad743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "577e621d-d429-4700-a22b-34082131a20d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e507c5d7-ce1d-435a-991c-fef407f56e59",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b87fcf0-530c-4fea-8776-004d46a356e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8929f1e-33b2-4794-8e1a-836430757c3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b07e853-35a9-45e0-bbab-35444072da24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5e1acb02-6040-4f92-9ebc-0d42d94f4cb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9541c04d-173d-4648-9071-bbe52a9f2e22",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6265a26-2623-48e3-85af-5d447c9dc541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d6f9143-a316-447c-b6f7-d04d346ee530"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf371bf0-3ac8-4c1f-8200-729773454b57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6b1f9ae9-3785-4ad5-a962-99f4da8c63d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70e7a5f1-956c-4343-94f1-e69d58248f37",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d242161f-e3ac-40f2-b46e-73a47ae86691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd70cdd4-3c48-4797-b44f-7f79dc6b1c27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5209a6a-f6dd-470b-99ba-6abba4160144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6dc4f212-48dc-40a4-abf8-a3feeb690de6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a9e5f6e-9796-40f0-85ca-28c24ed961d3",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c16f603-adb2-40d5-9939-01efb4892fd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ade17579-53fa-48d1-9b01-814100c4c13e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "457225b5-4de6-4cde-9fc8-86bc326b0597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e0c5b38c-5d54-4954-903f-df24e43a0c60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "476c1e2e-1968-4103-8316-0fc66f61b446",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a53def7-30db-4e7f-a51b-e4b68bff1e97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8704ac4a-7d86-45a7-b410-39bb3b6c23f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f334db50-d67b-402a-b413-b79b5d7e86b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4daed7f5-fe5d-425c-bc06-99a134b3e093"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ed196f8-9220-4570-89c0-349946844cf0",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b08237d8-529f-4787-8e06-4e0451db368c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cdc7f4c-9ddc-4ac1-805c-f6c4d03eff98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a478aeaf-6f9c-45fa-8936-e447d1ef1389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ee1b27b3-28f7-4920-8e40-928f68680a90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fb6d33d-f3fd-40a6-84f1-34cbeb3d0cb4",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf357982-602d-4fa8-86a5-4b2c9bf4b94f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68e30d6d-dfdb-44d2-8aec-4ee1f49c11af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "167335d8-5563-48d1-a9eb-bfb0a13e4a73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "93a6af44-c131-4c7a-a086-735215663fce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45986cdd-d4c8-43b1-a3ca-162bc7227b89",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b027ad16-0d1b-4eb0-b26f-55f82543c250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da8ab0c9-520d-40b2-b333-da7ea2d71b2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bb04923-f7d3-4fb8-a4fd-69ca93385bef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf9fb134-9348-4209-b569-0c8f67b477d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bf7dbda-9d25-4e22-823c-11ac7ce8f5df",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e15e940f-0baf-4c14-b359-5902b0fbec66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ade2acc-a245-45c0-9880-f27c2c02d0d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c15db26f-674b-4d24-ae85-5b10e04b87ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2cf8fe57-092e-4348-8b7c-a0f488c6525e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb49ce19-55d9-42c0-9257-609c64494339",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f744ad7-8bca-4f15-b74b-c72db6f4446f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de217061-0a34-48d8-b9c7-483666287451"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91369bf0-c5f4-4201-b8fd-6247135e580f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d31536e-8ac0-4b94-a5d2-8e2e41a4218a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efa9143b-1cf1-4a03-bc02-ded246b58723",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e1e85bf-0fbc-4a46-89d1-473cbc72be4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3ca52fb-b27a-4165-a361-2e2bf781b077"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f39e9654-02ea-4880-a454-5f47bad5a607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d65ffe7d-01ef-461f-9a04-b0c5b3075a8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6510c665-1334-4650-8952-69bd7ef647b9",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5d2085b-f4db-4f0d-8abf-4e2718fa0c5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c17b645-9b97-401c-acb1-8e32dbd12605"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74898077-2664-4360-876e-23b949cfd04f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b6c2ff5c-57dc-482d-afc7-22328a283130"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cd9ed94-f399-4547-a8c7-9b63ec2d5258",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "316a3b07-20af-4569-88ac-1aeb1a4b6ce1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "030e57c4-90c4-4a75-a0b1-b56274dee40d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "871f7944-7fd4-4829-b409-499b4d60936f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dd8d5b0e-3724-442d-90e3-763826ce071d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3caf881f-5e44-43ca-b884-6010a32e2cc4",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12c9f2f0-375e-458e-9482-3cea4cb811c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b37e6bdb-dd84-4861-8a33-a859090d8d60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e7a6330-c710-497e-b5c9-730b8bf240d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "37f949c6-f4c9-4702-a267-d94083bf32fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d879329-8a1f-446a-bd48-3b0a1b8311e2",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bc9e5c5-0798-48e4-9122-63212a77d3b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb5bf505-70a2-43a1-be9d-7b0e70ced8f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53cfe180-7ed6-40fe-969e-2642a0b1139b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0332e5d-0709-477d-989a-685753a788ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "330fef4d-9af9-45f1-b3d9-2224c5c24b27",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ff739b0-1515-4349-a292-f5dc3f9ddecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5427b36e-2a46-49f9-9c8c-ab2029e3aee8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88a58f67-bf62-401d-ae08-590619b4d47a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8458946-18df-4510-8e48-1db2f4fe1eca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5b96c69-fc88-4e29-a48d-71b2af67bf0f",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f47cbeb0-8842-404e-9c6c-8b642db979dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c900e12-d46e-49b9-b03a-46b1634728e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7633a7d-5a82-40ab-8199-da77ebec7836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3a5ad9a-dd28-4296-8569-57a75d47c371"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9035cf12-6671-4d51-84f6-e2fb0c320508",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37539b2a-b6e2-47aa-858d-e5ae91341d07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "618a3a6d-db17-4812-b174-d525e80e8afd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41725d14-3d30-4946-9638-d02c3a4c62c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "51189253-0e59-4e03-8d58-a82ceaff2bc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e671e43-ff93-45c8-8a71-773fd97d10d4",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80c827ea-5330-4b2e-82ed-cdee8477a678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4acdb99c-3d81-48f9-a0f6-e98bf97734d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "970c6297-0aa8-4807-97c5-db29e797d7eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3e713a2-5a0f-4148-865c-5cfa225357b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b621664b-8d84-419f-9cb2-6dee4e83acfa",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e3376ee-d455-439d-9b10-8a7a5b4adfcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9773fec0-6f64-4c86-9872-ea8a054424e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1a0c900-2b3c-4b6f-9a9d-efc3d7b19571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "d87b7388-553a-41cd-8abe-46259587fcd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b314c384-1aeb-4abc-af87-c9a556499f73",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bee261e-23b6-4b3d-a83b-6ff0d322f372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "959be346-52f4-4648-a218-20b4063b6dd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32636432-9cc0-4e23-b05e-0b6fa0e5173c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "32664692-b937-4eb7-8242-83bc1931c95a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aabe80a-ae2a-48b5-85a4-965e174df08c",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e26e7ca-b2ef-4891-aac6-53e4d6230f21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "096da68c-3802-4bcf-8f2d-eb825826e91d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52ee9881-bd8a-4011-ad38-3ee528650942",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb50de7a-7845-4ce2-8e1e-84f8859be97d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a25f853-6694-4cc4-b020-0c0993f3d569",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7141b50c-fd34-4b62-b0b3-91b6b7dcc3b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a34be53c-eed4-409a-8ed6-655dad5dd3fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "220e0920-5726-411c-96f9-260455074a80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "62708740-a5cd-4ca5-a877-73972ec78ae8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1afd81d4-6c55-4c9c-ad1b-dd17bf3ed47b",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44998b81-d87d-4afa-8dbe-3ec86385056c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "401be33e-f357-4bac-b369-11221c5f6f5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5167c0c1-5897-4b99-9ba4-2bb32c6502d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a98dd3b-3a81-4575-920d-82062951b6a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1275e5e-94cf-46d9-82ca-5ccb3a58d601",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "379981f8-d97f-4479-b41f-f8de00e03187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d9476ae-be13-4eb3-ba67-57a427a90b60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "795c376b-aaeb-4c0d-9bdf-627c03f49d22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "86316cea-1b9d-4d92-a67e-0336ca8cd754"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ae0e28e-bf59-4210-9668-df0091b38ea5",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42b2ceed-7ac6-442b-a51b-62b81c3cac28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bdbdfb62-a855-4315-beeb-b4fbcf33ab66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "254f100c-2cde-4331-a6a2-2361ec63b8b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7ba86445-11b7-4e7b-99c2-3d376699db40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "915f05e6-69de-4d3d-a64c-5d0d24cfa05b",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b261223-91f2-4a0c-ad7e-4ad771712468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9a006ea-20e8-4da5-a5a8-2767ff737ac5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa2edd79-00bf-4194-880b-959ee5ed4b29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2cf6028e-9667-4135-bc55-5ff9541a4876"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddce3e25-2983-4660-ae01-5ae011eabce7",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1e7ea83-23e9-4d77-84ce-2f08bb5d6ff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59a9c055-7ec7-464d-9b94-95480db58d52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fae0a8b-ee06-4420-a021-e961d2b54f16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ebaa0740-ae22-4b99-a9c8-033f5a98b4bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ec6effa-0366-438a-b1a0-4392539ce329",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd406234-d23d-475e-963b-357458c7b936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec613d9c-c118-46e2-a9cf-6053a158524c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd94e4f7-7d91-4552-a3c2-ffac43857e26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d13a012d-732b-4812-a5e2-27855cd83447"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9da6049b-d677-43a7-80e1-68e5d629c546",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48dbabac-cc62-4f0f-8696-63b3e3d78262",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "885c7281-7812-428a-8a30-e15a7ba67b7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9235735-7d83-42cb-9413-af5eef321758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2b0c4ab7-b0bf-4e94-a870-9f1f71e286f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3abd8deb-4966-44b8-866f-5b2641b1ff8b",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c610a732-dcea-446b-9958-2a08acd24c8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8cdabab-6931-4883-8faa-756a7585e5b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67e4c191-2ebb-43d6-bd20-1d9c13b727f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "213fd746-e862-4340-a16f-9375de9d6c14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0204b219-5dfa-45bf-b01b-d737496449af",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19cdff4c-b2cd-4442-9323-c5410cb5979a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00f6cc00-f588-441b-a3b4-ab9716a11711"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05c17e54-89f0-41a5-8b61-56c2c0dc96b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "ce0cba8b-1a10-4540-bf52-6114b3db300a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59edc509-48f8-4f54-a22a-fcfd3c49f841",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5711d36c-8a20-4e7d-a3b5-afe200f430ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b287ca1-ec8b-4f95-8144-bf1d734ab245"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cde0b690-27f5-4eed-ae98-0c9a7a773250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c9df1f6-a2ed-4b32-b900-e8d5acf17322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12612fbc-0fe2-4322-85d0-7f9fc7f53d0d",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96e15806-f201-421b-85b2-fdbea813f9fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f561e250-194a-4163-be23-9932efa566e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2800f3ad-6476-4a78-951a-dc93c4fecdd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8c6dcd4-1dd7-437d-b0d2-1854a65d8c31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "892a00e1-a47f-4aa9-9a57-8e68c7c28644",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86df3204-818c-4148-8e26-6cfd5c2aec05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9189b340-8b65-49b7-b575-cd7323a176bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2befca65-7dde-4224-856f-a4c23cc6a6e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "63f54a8f-b1ee-4ba2-a8ed-1844f2e10c5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62b9d586-4a72-414e-8bf5-b0a4e76b0dbe",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf05b365-b60e-4584-a411-e6de47f2724b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48d8b23b-54eb-466e-ac0b-2be1354ec524"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6569eb61-322f-47af-b7ea-ece740dc5784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "470d24d4-067b-4585-b4d6-760336d4182b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a013f8a-1516-415e-a5d3-95d1f1fa8c26",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45029edb-50a7-48f1-bc39-5fe17a70c8d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cb5ab64-f26d-4f10-8234-ead278abed38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec3cd94f-fa0a-4f2d-89f1-18444292cab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc9f86d6-8cc6-4566-a8f2-01af8589acf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "956e99a3-8dc9-4bc2-b944-f0aaa88b96a3",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f98abc0-da1f-451a-8b21-c03439bace16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51fe15d7-f044-4be2-a190-40afb2927ad2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "539d0ed9-be8c-46ca-8f79-2e4759111298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b43be23-156c-4959-a789-50e456647515"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66334900-3871-49aa-b673-6746a3cc28b2",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "317b10cc-d877-4f9c-abb4-7683e2b63fdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "536cafe8-4fe7-42b8-90ff-58416e14f826"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "642da4da-940e-4585-983c-740783baa4e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d470dceb-5022-4a54-98a0-351d394461a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac33674a-b611-4da6-96ad-8d45864b194f",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc9f5d52-d35f-4ab2-946e-9cf7d4eab013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "539525ec-b025-420f-9ac8-ab58faa1fa05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19bbcdac-82ab-4b08-91a7-69afc046e1bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "187568db-3f9e-4790-9d97-94e048d6a6f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e305b0bb-fb53-493e-9347-d11da5326c2a",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "864a638d-bdaf-45a7-a29b-afea9666cfa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80885d3a-39c0-4977-9a32-690709c76f31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd0252a6-70c4-40ab-afa9-19f76f9571b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a3bef9c-20b2-45d3-ad0b-b303432aa0ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb6b8adb-1917-449a-b995-16225e4929a1",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0b368ce-2b7d-4404-9f59-d8bc97a518f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee7555a9-4cf5-4fc0-b415-db113ac7866f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2584c8a-1763-4907-bbc4-160a314f63de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5b6e0cf-2041-4349-9665-bd65e67e0c76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44a7bcca-8492-4a53-b967-2421a7d12ad6",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96b5d10f-e471-4baf-9431-f3737027e888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27076455-1126-4253-af19-d0b92f1950b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e12d41d-b41e-48dd-974e-479d10a591ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bbbabd6d-66d3-4a58-8cb1-84257592f026"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e486a299-eb8f-4e83-930d-9a7e01db381b",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dee4ab9-850f-466b-a721-ffbace0e9347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2989c1e4-d2f8-4a21-afe9-b1f5b4c749fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "965b5ce7-7adc-4218-aa47-6223df1bef0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4225a04-a405-4720-899b-21ddc870c0cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9288fc93-7b34-4efb-93a5-54f9b30cafaf",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edcf9814-87f2-49e5-892d-2bcf1c4f9a87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62bc9d8f-1faf-4c24-9d15-3340e181782d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "312970de-234d-4169-89d4-65545adfa188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b1cbcd3-56ba-4c84-95d3-af21889a1a03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05dce3d0-9fd8-49eb-88ca-b2fc1ac4ba8b",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52f5fadc-4b9c-4e1a-9f32-ab42628fde0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4913e9a2-650e-4e22-924e-5db206788765"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d94647ca-8824-4c03-bc66-fe11a5e408e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "f3c6cac3-b731-4fef-a3e0-243626c90b70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d21adcaa-6338-4816-ac8e-806a05638bb4",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dd5973b-ad69-4966-b5f0-f9767ebfdb31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70b3cc6d-9a0a-4c33-a4e9-99a40c379711"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c68d49e2-e3cb-4b1d-9ab0-98c90ca4839c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "fc9699a5-192f-4967-8f07-73099e164a3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "446a45b6-73e2-4079-a274-85b11d7579aa",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c4a0b49-d22c-4ef0-939b-fade309da886",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "beca4623-20ca-4669-8bdc-b19000e054a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9528b3a-62d0-4b31-bc11-b0c204d08e3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c0a97a8c-409a-4c68-9bda-73481276a089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95b1a7a7-fa74-477f-8a76-3ee9d72d6ee7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e036e631-455a-4133-a661-e6258e623e1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99b01b81-2593-4921-9a74-151d2eab4ef3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "845b8f00-7882-4c21-beb3-aed288a62b00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "018044d8-9b75-4887-ad64-b1577b9dddef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cecfca8-02e3-4c90-a0f9-5f9e09ce9ed2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35e4d09f-b837-469a-82c7-ed1c789832b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81052f16-e57f-4ab6-b656-b0fb27332133"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1cb8fd2-71b5-49f1-b9db-67344868fef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5ae5437e-422d-42c0-8720-ef2fba169b42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc5c0141-1cce-4dcd-b1de-cfe43df598b3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eb402f7-9ac0-4e9c-b4e1-7a06c1c6cf6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5daa4b4-ac9b-4086-a94b-71b174375e68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "398ae8d1-a4e5-4408-a51b-c9be73638bc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a96f0e8a-9f3a-4c57-8695-fdee31255328"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a35dd0b-79a3-4831-b00d-967b0b814bd3",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2221824c-a1cd-420c-9405-267536733ad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27a3d635-9955-423a-9c5c-7090b8f9ce23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eab9833-3417-4fe8-ab16-b2330a72aafd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "1637c2c8-5370-4eea-a901-12e443d178f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d334c148-d9cf-46fb-b83f-604891ae65eb",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a33645b2-2f22-4ebd-bc46-d34b3efccd1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a521ecf2-603f-4ad5-ac45-f74fa645e7a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea54f301-bbe5-4367-b864-94c55f18fccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "883aae5e-8a25-4d11-8c4f-84093a47c913"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af1759aa-193d-4293-8182-f2cfd9e1a79b",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94dbbec7-201f-4d3c-9aff-9818e00bf387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95a5d3b2-c7ad-45a8-a21c-1973c15e62ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0872b0e0-5f85-4992-adc4-9813fefa075e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f50986fd-123c-4439-9f24-bf01dd364033"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2e5d55b-7fd4-4797-8949-5e05e8c140b2",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15db4ddb-8b24-4857-a31f-0ce372971e05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cce9225c-e671-40b7-9018-a8551d558238"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3921f2af-71ab-4ce3-8fbf-067339cde707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc5ebff4-b2fc-4cff-8478-455aae068892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c266463-aadf-4cc1-bc58-9f771d73198f",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30b1645f-857d-4be5-a66b-6eb0a6a8e4b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3638c6a-4832-479a-ab4c-e633e06b40ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "657fb1f1-5a32-40ef-ade4-d6c79bceb3c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad7a7aa1-72ba-496b-a749-481eba6fd179"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7026583-0450-42f8-a275-aab53ce2b0f3",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8983e043-dff7-48c4-9c16-46cbb6191e52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee999785-c7bb-422e-bca6-68d9e7639229"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "493ced74-72e2-4717-8e71-39294667eb74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1218d02f-b244-4d66-88f7-119a322e8044"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b190e0c-de23-4dc5-bdac-109b29e0b704",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6433d79-1c55-4f54-af88-033084837067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcd3489c-3e96-42fb-95c5-79f66c912931"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f96750a9-6c5a-4c61-ad0b-e78b06768133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "995b1a11-7670-48cf-b243-78192214b85d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39721349-2b35-432a-bec1-a030d0fe3121",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d931eef-fc85-419c-857f-5982f7714252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d7248fe-5bd6-42fb-920d-5f2a29700c45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53809367-4bd1-44f9-8f56-0975f806d6a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e48f870-c38e-45c0-bff2-026719fd961e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24630b2c-173d-43d1-ad1d-0b3f2a1884b7",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2faf713-0759-4973-af6f-e3efc7fd3706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd180e04-6133-4109-845d-241cf56c97af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aeb2567-374e-45a5-a930-812bdaceceee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cac52d3f-f42a-4ac9-ab01-ef1ea0ff1099"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b061f3a9-c3f8-4d0c-9cc4-ca3e8ddb7ad2",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1d3158b-3c1e-47ad-9e99-dee8d9f72ddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cc3f82f-f83c-40b3-ba37-e9e95035b23f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48edc794-fee5-4ed6-8f14-9f4224d26c8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "32350888-1866-43cf-a568-c85fb08be08e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46cbfb0f-dd6c-40e3-b0d0-786e878fbb73",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b3e8b65-b839-4596-ae2e-fd2b4db2be3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94e2cde3-07d9-4e86-91ce-19f60379eb1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01054de5-cbf1-433b-ac80-62482b218cb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a611c9e3-3d72-41bf-834a-1deabec53a5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bef64654-d27f-4c4c-aba2-2c19717dac03",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8ffa84c-5fac-49ff-afd9-687cd922089b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13172c8d-2a02-4306-88dc-8ea636d0f02b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7926de7f-91e2-47db-968f-9df68a1c3eb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "60321455-101c-4385-8603-a1130e6b514d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf5fb930-cfa4-4921-94e7-ae8e994b36c1",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d484b9a-64cd-4989-8a54-657c5cdb6d3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1aecd55e-dac7-44a7-977f-4a4f8ac31b00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "339cf130-21cd-479f-8e2f-114a77a87533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "429f5281-f6aa-4bb2-91f8-3e36e8e43597"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c3da977-6b6a-42ad-852e-1caa4e2618c5",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97a4425d-bb07-483b-b6b2-08173fb6560f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a2bbbbc-39f0-447c-92bc-6d7cd9204251"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a267333-ed96-4dc5-8512-dfcc0d2ec3be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b70a651-1d86-4afb-a9c6-b41337f58a00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5eea839-cd61-43d9-960a-1fe1fc80e880",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "423de19b-62f2-40e2-8105-ac74dd1fb590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e21d7d5d-4308-4b2f-a2fe-935d131f30f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1115a89e-9eca-49b8-a5a8-10522ece80c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3e3deb0-097d-4103-bcb2-9a11fc5a0a5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43884dab-9406-451d-ae11-8b2d4d19a688",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "652b33ba-960d-42ed-9a4d-08354a909a47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe49a8a0-4bbf-4e31-bfb5-be5a713d1b83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7826c487-8e40-41ab-adbf-dfcd4148b0d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d91ddf1c-c5a3-4688-8428-31b1cfaae73c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0daf21ed-fe88-425f-ab88-2ca08bcb0532",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a39e968-9228-4a60-b8ad-e2ce4a77ca25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e8e5bfe-3380-49c9-a7e7-34e206dd78eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a97977e-b351-47f5-8db0-dabcc4d21418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5568f9f-f4ed-46c0-8bdc-2d8f8ac17bf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8239ca5f-f3f0-413d-b38b-31da9bddd29b",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f70f72b8-9607-4477-921e-3d8f2be1fdee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63085c3d-0d4b-4b45-a407-67bb03c432f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a4e76b1-cef9-45b3-bca7-1ffb54acc340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "09b7e17d-8c5c-453b-b5d2-dc513386a18c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f268172c-b731-4699-b655-095e00081b1d",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f76417ee-5249-4b8d-a83f-5e608ba8b810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d68d02db-df19-423c-8cb8-7cf851da955f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85a667be-1683-4ec9-9a1e-9d79d591a868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5d61c07e-1258-4a01-baa9-5e2c49202e4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1947caa4-d5a1-463f-b5c1-ec93c3742bab",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50c5322f-e097-4e64-9fc4-7dafa62e08af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "662e35e1-7bb8-4b16-96c9-bf0cc2985f19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8fc1a47-eaf2-4968-bdc0-8efa4a79d95c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "bfd2118d-5094-458a-bd6e-1bba6bf3b8d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93fa9ba7-e50a-4cd1-8549-7c0960084a66",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f63f327a-8d8f-49a6-909c-ffea0a4e7229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3aad8b70-9158-4db8-95d8-dc629aef30b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e8a14a2-3e1a-481e-812f-8bb5385775b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9eba52e2-b349-4456-a6e0-79315d6824f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "632e885d-56a2-40b4-a21a-0be3d6fda2b0",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e37f8039-ec05-44c5-83f9-01c7636aecc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f775958e-5dcc-4df2-a537-3fa9c079fd56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4079a291-866c-4167-b869-6e902160ad9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "24094c6b-c33c-46d0-a7bd-ecdf58943d93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84d66146-b76a-49a2-b27a-b080f744a0b5",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bd8f940-3a34-499d-b573-906f197cf257",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4cda9b8-d138-405a-853f-1bb9f2653a80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e0a9b71-7dfc-4d3e-8e36-1805a9672ceb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d156919-8bd4-4931-a82d-72a91882df7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52197189-47fb-41ec-9225-16bcb87629a2",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d01ea2d-4869-4928-932c-6cec4580867a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29c0556c-843c-4659-8240-eaf81d976da2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e81f4714-d3cf-4bd8-95ee-7a473768ed10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "63a10743-9942-49cd-ad86-e48300cf683b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05ab2085-1b27-4624-8d15-0ce45477ca1b",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b32318fe-ea8c-4458-83b3-c0e514609624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "604f57bc-992b-418d-a5a8-4fa5d5230ed4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d87c11d2-6dad-445e-9a9f-734615e91885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "80f6e3db-847e-4caa-ad24-3f41e30a60a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a38ccbeb-ed13-4e4b-87f8-42854c22a18f",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e82a5014-7759-4772-a987-e7972249e5df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a18c6590-7520-4f3e-8379-c11ca91b17ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6eb62e5-bedd-4266-81d6-c4599a87faa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4c361233-9cc6-4a88-a7fc-6ea5463cdf4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0058c99-1df7-408e-bcf3-4b36296d48e1",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d360efb7-313f-448a-81cd-6d95d9564512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cff5960b-4733-471b-b840-d7bd7de86021"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da6830c9-a789-45d7-826f-1894962bd086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6169a2e9-192e-4b72-898d-c2505774660a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2af0ee49-e1dd-463e-9740-9508487e4601",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b48db313-5211-4a7e-9e98-c32383ab255f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b454da3-a462-414d-a22e-da345d0060dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5990172-52a5-4120-8da5-0b7561ff9d22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e04ed41d-3493-4f61-9a48-7af36227fb34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac89c809-2c07-42ee-bab6-ac057c3f2678",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "237c1dc9-4815-4505-bc17-7142178bf395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "938b41cc-78c0-441a-9b10-07fcdb781c7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e923efb-5d86-448c-9667-286de19c4e63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a4dfad82-a3ed-49f7-9954-0a354e044b10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0283de92-2ff4-41bc-83d3-599e71d74e94",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4632cb58-af0a-460b-abc0-ac65b3e9ecbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b131fcf-80c7-4f26-a77f-62311e750fdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0584fd50-390a-4e74-b79e-c9862a1109d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "01f8e009-53d3-42df-a857-07539f0cb85e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "122a29e0-2a47-403f-871f-65ccfacb52ae",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "869e79e1-8efc-44e1-84df-e5d9d24b4b02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "0f8466f0-0e14-44b6-906b-65359dfb2d17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b22a830-2dcb-4c7c-b28a-1c05c9127120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "9d4b2bad-d68e-4c1d-b443-09c29608eca5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4eddd809-3e36-4d9b-af7b-c05df0ed5020",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "58956ccc-4fce-4d39-976a-e7d366d600f1",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58b1fee2-4e48-4ec5-a531-d78a6adaccbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "270bb8b0-0053-4dd3-85a8-abf1d6d5efc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78527f8b-b0d3-4dff-a97c-6913d77f296f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d84221e1-e1de-4f92-814a-51cf714efafc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "86efc804-ee61-4e9f-a4bf-4450863e5d1d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9f31465b-470d-4e52-8410-5b10c3f1ba24"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "163ed4f1-fb7c-447d-b033-101c79c308c7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9af1d470-f2f3-48ff-986d-e05d83b0e156"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "eed2f79c-ad60-45c1-b888-cd54b01ad16a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a2bd86a5-b6ab-402f-84d8-c916ebf818f9"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "27e70f98-4eaa-4e50-b0e6-78d67c6d6cac",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "48f6790c-9190-464a-a988-04af0b25bd98"
                }
              }
            ]
          },
          {
            "id": "c8b6f22e-b188-4646-9c7e-aa60a872e616",
            "name": "Positive Testing",
            "item": [
              {
                "id": "94cc4392-5b2c-4630-a4fd-0b8d34652d9b",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "c5921a62-33bb-4ecc-85ee-cf7b8b08fce3",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf13abb1-96bf-49ec-823e-c40c1bea7961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "0d8fef55-71b1-4a0d-b924-2d30fd04e78f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a908c685-7b1b-4721-b561-29d1369e032a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d354464-cff5-4b2e-989e-8c762f9ab498"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bcda0412-53e4-47c9-b8d9-1bfef18b8854",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9e9c0b8e-c237-42ef-bc6e-eefacae38e83",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "37e3860e-aa68-4ce4-ae89-933d104ee20e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e4301882-e453-40d6-882a-debd9cbd45a8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1e79977a-e191-4d9c-b386-5a4eb2a05749"
                    }
                  }
                ]
              },
              {
                "id": "ad2cd149-c0db-4462-a6d4-7af96beabc55",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f8cff9ca-bcf1-46d2-a882-37dadc11f930",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d342e64f-9a63-4625-841b-e8d25dc3fa0b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "30bde807-1c83-485a-9453-2f0a00fd7850",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2cb4d9f2-be0f-4105-8e14-2b755fbde849"
                    }
                  }
                ]
              },
              {
                "id": "aec7a6ee-ccfa-487b-b4da-b0879d447551",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e7f144df-f241-42fc-a58a-357c6f11e0a2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5f9fd9d9-3715-4216-b069-9fe348d37bee"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "145a934b-950c-4d30-a86a-8f8feaa9f24e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1e794f5d-a968-419d-aa90-204c4358c01d"
                    }
                  }
                ]
              },
              {
                "id": "62f7165a-39b5-4998-ab36-8a394e14e4f2",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a6d2e48a-441d-4d97-b65c-97fc8c3ab334",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8294a895-e856-4f95-bd55-1b70e678d6ef"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0e8b34cd-4c12-4fb9-a24a-adfe0b3a2f95",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "6a39da96-d799-4c24-bed7-dd53ab3f3fb9"
                    }
                  }
                ]
              },
              {
                "id": "ece17548-a0ec-48e4-866c-da2851780dee",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ec0ed696-359e-4fd5-967c-faaa72960a2c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "eb7f2b28-56c6-45da-bec9-240bfb809cbe"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f0395f1a-9e4f-4e21-922f-9f076e91087d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "6e8dee7f-c052-4eb9-9ab4-e9a01825d493"
                    }
                  }
                ]
              },
              {
                "id": "ada02319-a8df-4462-9cb8-920670f9041e",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4571b193-215a-4b62-857c-1365eaa829cd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a9aebb66-491a-46b8-9fa7-6d457d872ca2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0944f73d-085e-4ae6-a300-8df67191291a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a03ef46b-df05-4148-8e93-b936e3db514f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ceb61563-87e4-4c1c-be4c-762b082df3de",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f26de14e-36d1-4091-8376-c171d1dab6c8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "29b98539-76d1-4f88-8990-8db05fd9a778",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7bc01024-43f6-4c9a-83c5-a14309dd64ca"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "78a70ff8-bdbb-4c88-95e2-244b6b1c50c8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "b195d353-593d-47fa-8856-2158de9df487"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0340b9e8-9cb4-47e4-bfe2-1cbb96e93b39",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c47f6eb7-7beb-4428-9d36-61b7ecc366f0"
            }
          }
        ]
      },
      {
        "id": "54ec5205-83f0-4a48-ae3a-8bd54507a8de",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "fcbc0323-5907-457d-8f1a-fc328d6419c4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8cce1a7e-d617-4b78-8560-73bf59ec6deb",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e8847767-4b73-4e8a-9dee-138bc13ee3a4",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ac93bf0-78df-40ab-8e54-954d9a0332c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2abc4fc5-2ae1-483c-8a38-18a64f7fa561"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "749e43eb-a25e-437f-bad4-b9843f532723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "988bfe9f-96be-4b7d-962d-ca294484117e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a35eeb2f-e242-42dc-930f-aaf56e91a856",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33f70cf6-0b30-404d-a1c9-43dfa01c9324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac0cd442-ad22-47b1-936c-41d9452ce7e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa114844-10e1-4d14-aa70-2f95d7017fa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ce88e51-0350-4e75-b84b-f1772a3ae8b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5c51370-1221-4349-9821-157ec0698926",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74ed797f-278c-4e49-a18f-c17664d3f8cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "872b29b0-663a-4b38-a5bc-6b31cf632017"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf705bde-56fa-47e9-8314-18d5b91da506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "777fb67b-c1e5-4911-8838-6d26f1f2498e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b403bd76-f697-49d6-ba91-d5c0be0b2c04",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0ce17a3-97bb-4b85-90cc-8c75ac1fcf30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "436173f2-5d87-4b52-b606-6eb23969554b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddbe0cc9-3192-48f6-9862-1d5d2957bdcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "622d89ba-2de4-4259-90bf-852747aa8aa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c23215a-676e-4512-8de7-543a5c90af2a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53f02da1-7e3a-448b-a197-bcd06b278daa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd80a5a5-fc82-403c-a2a1-8d6282f93996"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d12b85ab-2078-4838-ad27-b6d07009dc42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e34617cc-fdf5-4914-9b78-01d56799bb34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b62e493-0619-41e4-abd8-f8c4b31acefc",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49e88ed0-2dc1-4be2-bc10-9843f1ffcbd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0aa9efc3-ae30-465a-935f-704d5b920426"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e36fbec2-8a13-40ec-98be-b0af36f26497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a3c5f931-a89c-4054-a4bd-4ac4ccd67500"
                        }
                      }
                    ]
                  },
                  {
                    "id": "692e912b-e9cf-4ee7-aa67-d2b3eb0306f6",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4c57ca6-746c-407e-bd50-b33738ae23eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94826856-b1f9-4e02-88bd-8d20b360058b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fe0c0cd-b2e3-4721-b893-171885c1f3cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2b583b5-be1a-4026-8797-f215f718714c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0443145-2df7-4c88-a7bd-eae20b3eba7b",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3b6e097-d656-43d1-a8e7-70b9241c1026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7577bd36-0acc-44cf-a650-d1c6a18f329f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08efe2f2-1302-49e9-8d79-0efd48c1915e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec147ee0-ae44-44db-bbb6-e7f7ea2a091d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41e39452-fca2-4fa0-9dee-6127bac8a27b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22b4077a-0e53-476a-9339-a91ffd4737d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c84992e-9e2e-4b54-9481-2f6773d8164c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b6314a5-f42e-4602-886d-8da06a20fe6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4452c973-219d-4fbb-958b-e3bdfe592e1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21787621-02da-4a3f-afce-165cead618c2",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7a17627-813a-489d-9044-d2d568d1b093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf0b43b0-9b7c-4998-b4da-6899941e52f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b09df10-ceef-4348-8388-2bdebe8f6ecb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f917863f-f1b9-4732-9118-26fe30a1518e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53f9ac34-fb7d-439b-8609-e5ffb196f25f",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3761a932-5118-44de-b186-6ee5f426e09b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "386692dc-e36a-41eb-93c8-5552c6f0479f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49576029-de67-4876-ae7b-3aa85c196012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "db485e7f-faa3-4e0b-9a4b-cf50e904419a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20912e5d-686a-43a2-88e6-211c2a2fe914",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dac855d-4eda-484c-85a7-be26d1616688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34cad80d-9d66-41a7-9569-953e9514ce04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27142edb-945e-4149-9167-e016fae1a454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dd1fc773-324e-449b-a636-840e39d86174"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65016892-818b-4922-b01e-fa5baa8568c6",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1db1c046-36fb-4f3f-8d1c-7149ee114bc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "766636ec-8f73-46cc-a241-7b9665c267f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "114b6b76-5b1a-42d9-a7df-6fdcf477432f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f750cb7c-3d29-40b5-b828-32d951c6a57d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "272cab27-9d4d-4bb3-aead-dcae558c1386",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a855c437-492b-4564-a3e0-7f5e00ad9502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32969fc3-ae0a-40ba-960f-9f5a444298e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f0bd87d-a2ea-49dc-9ddf-018389cbe72a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "da844422-f2c3-49b2-b139-dbfee7420d45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "841f554d-2d2a-4b48-b8c4-40b1819efcbd",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c0bf37e-a733-4501-b33b-c23a5da1a73b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d7fd53f-6a9d-4e6c-b142-9a2d9cd9485a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc17dbc3-31b9-42ef-ad4a-130a5e5ca6aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "88b378c3-f5f9-4348-96a1-3a8a7673e7d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a9a2098-1bcd-40b2-b5b7-b58f68388544",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8629ff17-b160-4e81-bec1-45be18a59c27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd90a80c-896b-4104-a4e8-a37eec1a4c30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1f99bb0-2962-4336-989d-51364c1e0644",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "4aa22c0d-5090-42ca-bb9c-7ecc2e6ab15c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36817dd0-b226-42d1-aac6-6e893272fbc9",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d5bec47-6d93-4c95-8134-01acb5c8ca14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "058189b4-3323-4759-be7b-99b465cf6d10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75d83548-6833-49c4-9de2-54a866f5851e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "13e958a7-ef8a-4c78-924c-2804a512b75a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66951516-d2bd-4750-8736-34cbb31799ec",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baddf6e0-6fcb-4edd-a4c8-6726992828c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a63deef-7848-48c4-86a2-aa73138a1eea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b85f0060-fde7-45f7-8852-0d0b7de63f63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "59cb4422-c3ef-4af7-a9eb-a5aca03047b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "195d5372-4115-4be9-941e-4b853ffdf344",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bf34b7e-7db1-410a-ba35-9ac33c293667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "533655cc-c8ec-4e66-84d1-bbc891a5cb27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "224b270f-0650-4f42-af99-97adabfef757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "904f3496-8b4d-4c17-9004-02a4b9d84c16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23f6d2ba-b047-4ef4-9221-176d81ac4ef3",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66ab22b6-ba19-4df7-804e-b7bfa22cb1cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa27cc87-f9b0-4e16-8abd-ccc4459c7bad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb989f19-bd10-4cfc-96bf-26a8ae8968ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b4052d4-6ba1-45e7-a492-1321a0593466"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b366811-a01f-44da-ae53-ceb059f421a3",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "079529ac-50d2-4db0-9d42-155ba16455b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9505c610-ae13-4440-b562-08549f2ac288"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b09f8be-11fe-4a85-a90c-1135e35b88a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8e42e21-6e36-486e-bfb7-c9ab78565dcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4ab6473-5af4-4e5a-9adb-a9c04d7c3337",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0d98b72-9bea-4aa4-8880-afff7c014276",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b1315d3-d046-425b-9f19-23b9d877fe11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3515437-d4b2-4bb2-9768-48b7de96414e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6af130be-cfae-438d-af0a-ae7040364ae4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73c6286a-8acc-4f5e-835c-0d643ab653bf",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7514a56-3343-464a-89b8-b0dd9f211f21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27c784eb-0d25-4560-a20f-45b550f2c802"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "430cb9e5-98ab-4a85-9823-631d12420e59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2afcae1a-5ad3-4640-9e5b-f9221007a24a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9ed83ff-6729-4c2d-837a-9e0bcb59a61d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e397831d-38a8-4db7-9984-646b427da8b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6208f2e-5586-436f-b9db-6ac1440b89b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f3e5894-71ba-4a68-98f2-96228a727008",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b1a844a-9779-419a-ad71-e25bff273d9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b182ffa-0a73-4b82-982b-3a994ee667bb",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "141ca93e-9e99-40ca-8a1f-be08471a3f74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9744d3f-2bf6-44a5-9498-09fad404d000"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea95ebd7-a472-4692-903d-305e8e90fd25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e3de183-4dbc-4974-93bb-865c2f1e3b36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b807d121-b163-4142-9db5-328ac42641df",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45ce0a8d-5a97-47d4-997d-1568c5c22fd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf5fac39-0937-465b-b451-c90f22248ab8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ce52899-e840-44d6-9e12-9fc73dbeb140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "52637dc2-beac-4bf1-aa28-923f3ffe4a07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4098b555-e2ad-4d21-9da1-999b783c16cc",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1441ad4c-f732-40a0-9257-29f01f13937b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ca2f13b-8181-404f-87e4-09ff4229686c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e8fbce8-51be-4a6f-9163-53744177c3bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "98fab808-c312-4433-811d-5fc98f04a7fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "942203a6-00b6-463d-9f1e-8ec960278916",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e323cd7b-72c2-40ab-b095-8e3cd24de689",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faf30e48-195a-4c02-b695-75e672bc71a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4c5dae0-13c8-4ecf-95ac-6470ce50a87c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "73601417-f97b-4d35-8c49-0a832d0659ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aabd11c2-6123-4878-8537-b272cbd3e3ad",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3d40b21-7196-4b3c-9483-4a283dea8009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b0c82cf-402e-409d-a611-89ac337d24cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45c051bf-7f03-44b3-a4c3-be2ded5caf7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9cdc755-a8ab-49ce-9911-b116cad1f2c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6eacf3b-5fb8-4249-9b16-55e935195f37",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d034f782-38f2-44e9-b6cf-724e8503aa33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7f31e6f-e621-4562-a1e2-7f5e612b831f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37a67435-b846-4ba5-aa07-9301b39541c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "776fc54e-c036-4e6e-9779-482df208ccd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da63b315-6fb3-4f50-a05c-decafb4510de",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f1b3669-81b4-4262-bf44-cbfc0afed1bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85079dc6-7e9a-4105-8bdf-fa8d9d7fadc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6b2c041-3d9f-49eb-b25b-d695df146ed1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e47fd116-06be-4a07-8d8c-8a4177541305"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c5772bc-079f-49a3-a84a-a2080fa5b68b",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c41e9b07-6718-41b3-9dc1-d4d1b1999e80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2e208e5-d7e1-4640-89fe-22cd9b37b87f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdb8b9a1-7690-4142-8289-af4d2eff04b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8be05821-649e-4bb0-8c2b-c3bf3fbaf414"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f65c39f-1837-42b0-aa4c-5d311a13219a",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb2800b2-2196-4d35-aa81-098c99944365",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7036a89b-8564-4520-99a9-6a3f1f5902cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "970203f7-3c0b-4bec-a542-f3a8da978c47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "155e7272-48ef-431b-87e4-bef127a14c05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a26a002-88e4-41e8-bf7d-b0d1623d3df4",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d58afcf-972e-4c01-906d-a5f065ac9561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38bbec99-c040-44aa-bf6f-7d209f9deb2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7712307e-9268-4697-ac00-ba4c9708e86c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c35363ff-3007-4c3c-9e70-06d5e1e5c04c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "107919f7-c8ce-49e2-b7d7-26262b8180e9",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ecd9f3e-9c31-4ea1-b9a7-d000cfe448d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84b574c3-e2e2-4fed-89ac-1543bdb73bf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4b0b496-3ba5-451e-8193-98a917a1da21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "365133c2-7057-4803-84ef-e834b8d31eb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08a84004-e067-4b78-b76f-1ba7601f109e",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef891036-386b-4252-808a-e9b0685c5529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7de8583b-873a-4a1c-99a1-cab11fce7739"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a05aa78-7fdd-4bd4-bb73-87c5930a437a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d3adc9d-b871-4f70-9b3e-565b53b113ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6be78ecc-55c7-4f56-aeb9-8d9b6b3d3259",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c92699d-4a84-46aa-94d0-f81c605003c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22aeae30-7006-41ef-aa5f-906281680664"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77580616-978c-4ad4-a8d0-476aaf9c0715",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "43bb6415-c2b4-41c7-a10c-5580bc4db842"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2d4b3abb-d758-4a55-b9ce-7b4162080d93",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f6fc3da5-0731-4e92-82a8-805b3afe6061",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eb2e42e-c2e2-43fc-a013-91ab7548d176",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f2b29253-a91f-4bf9-aebe-95eb97e18c0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e17df83e-b6b7-4b94-a000-d812d178ae4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e2bc2942-d7d4-471d-9f18-b3045a502c39"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f72f0dfc-b91c-4e39-ac87-4ac3a6e2fc44",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "58941732-83a4-45eb-bce3-b2c8e9e51e1d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1e6be06d-72bf-401e-a889-1d96a477237f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2811e0e2-f71e-48bd-9110-e6fd0389d2e9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4c15ccd3-406d-48ce-821c-e5f5f9005596",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1d2bd3bf-aa7e-4ce5-aabc-b465c62bc39d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "07ecf92c-1889-4246-8ef8-2c5209fd1cd1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2d2e7574-0e75-4f77-ae7d-62f6d2da3f13"
            }
          }
        ]
      },
      {
        "id": "e8999f35-c54f-4b1c-991a-925c6d1b83cb",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "71dcd74a-bf82-433b-9657-2793cd6c191b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b9150b63-899b-4222-baa0-0073b8cfc264",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6e2aee58-0b44-4fec-b796-9f6a56f3d4c0",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c75c5b6-d45c-4803-88b1-3afaeea3ba76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c771474a-1c9a-4701-bdb6-e2eadfbf210c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4cd2e6c-b3ca-4162-aa09-a8334482607a",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acefe66b-609d-442f-bb6b-7abf3b639989",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a1ed2e3-484e-45d9-a81c-aff7f85d4fdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0a7ada7-a479-4423-bcf2-d69bc3b1f97f",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "171d5365-40ee-4041-a5d4-9e90e6f43f41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29e3d0aa-cb7a-4384-a863-99b58f9f2baf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "801e71ec-5042-4633-a3b0-7c4af7455557",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f793fe4-64ae-4cfa-a51b-ccdfc4065cc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf083426-9892-4a41-af21-e1d0a24afb7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e28b66c-d373-475e-8ca0-25cebcf5274d",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f13bed9-6b58-4515-a72f-052b29596a29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58b3608c-dedd-4e02-af89-df7dbad31243"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d2cc663-0e07-43a3-99d0-2bfe76bdb81f",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "863cdfe2-c104-424a-a908-311ec59082dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0da0f80f-0ff6-4143-af68-5c064e97a95f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e0c0af6-1f6c-44d3-bff2-0c21cdc00da6",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ef8d917-c421-4ef8-8145-7de04eb40136",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f26e5114-21da-4ffd-8ccf-62d378982847"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8b055f8-3014-4291-bb06-9e9e757e2397",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2f142fe-5d66-4fcd-bf9c-e2e4a8083fb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93e25372-f02f-4a9f-bc7c-d3daf10f582a",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bd5b3e2-60db-4d7e-8eaa-a5edb21dac92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d553c84-70be-4c63-8191-d625d564ebb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc2d76e1-1763-423d-b863-ea630fe433fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03f84e29-e4f9-43c3-a532-540536d759c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48fb0cd3-6ee6-40c6-988c-a92a904f90cb",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b052fc7f-31e2-43d6-9a89-326eb1906c2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e9daf0a-d0d5-445a-8d29-7febb7d2d912"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f3c5dd1-9e62-44b1-b84a-28099e8b25fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaac1000-0ab3-4552-9e37-9604ab3c07fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "979a1739-ef73-4190-8001-807ee1bf78e5",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9d64fa2-47a2-4a96-a4c7-ffb29c8347b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12b9e3c4-3af7-4f51-890d-ecb9a746c9d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f35276da-ed9c-4a87-87cd-806061f22dce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "672f3d36-dca5-48b7-88a5-1b46ebd6874d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f61479a6-2ed9-4868-8dae-09262352bef0",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15ad3c3f-b1da-42bd-b8a0-d59c0be8688b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00b22770-c763-4783-9f83-d1e4c2e9d928"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "496e936a-c67b-4615-98c4-a3d5a79ca39c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a6176fa-f259-4ced-a4ca-18a91b12bddb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e762006-eacd-45b9-ac48-43455dbf723e",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aac6f7f1-c718-4318-9b41-f56133fb346d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3074171b-95dd-42d0-aa61-2afcea63c3c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c71e636b-962b-46f0-9838-7831b34bf30b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1577a91-21a4-4852-b3bc-0e6415d5f26d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74a8bc69-467c-4acb-a1dd-16bc7fac5218",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0bfeef0-26e7-46e2-83e9-c3a393938626",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "153cb17d-a007-4ed1-9a2f-1d9461069047"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b339d46a-0212-4a05-9695-eec319891235",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4520050-28e6-4113-9237-9b9532ac7744"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47523236-bb50-491e-9c2d-6aeee67941e3",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d10cdc3-853d-4bb1-860f-239568551cf6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d4cb86d-d2e7-4342-8f75-bb5f276c5428"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32768972-b499-4489-b744-9aeeac1791a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ed7eba0-0944-4cb0-a683-680f9b21a4b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8035b7e7-ec34-43d6-8982-64fb731a1179",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed29950b-8d66-4726-bed7-4c7acdf11e68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20a94dd9-4716-4e55-8647-2401d9fb0bf5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89a3e7ac-74d4-468a-9c5d-a12b0bb33e80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6216fd9f-6c55-4b77-9333-d4bf0dfb141f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af63ac8b-f19c-4747-b030-a94844fd0554",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "507d7610-7d1f-403b-87f8-3d497ffa92d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76e50d9f-1b47-454b-90fe-01ed057ed176"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c9211a4-dd46-4079-b744-7396e4b805e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "209ace1f-be9f-4f0f-8bc4-6c60eefb810e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c10efa9-b3b2-4717-888b-0abf32b12714",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f70c9982-b736-499c-b173-f9aabeca5c21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2242b04-f712-4458-a9c5-104c2a9a5a1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5699eb30-2333-45ce-92fb-60451b177a8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4626047-ceac-4795-98ab-566d3c1e30b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "237e8064-6b4b-4137-a8bd-de845e102139",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9831acab-bd7c-4a5d-8734-7be51ff87b30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd31452a-172e-43cd-9b4e-00e8407e8030"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7808f76e-5036-4557-89b6-71658e97d439",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ecff6f6-0d3b-4ed2-bdbf-3b95041f03f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fe14c4e-9f39-4b9c-b250-8035c3dff50e",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aafc05f-97fa-4e7a-bb82-965090c6a270",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92dd2800-7582-4359-9843-93e6882ed6bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ec05f07-7d93-497e-9343-35c25aef6fe1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03fa2a01-49ff-43f6-9f8d-98723189dd40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "956abfbf-1806-4b6c-864a-8e7cafec4e6b",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27500a05-2666-4846-b2ec-458c47724156",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef849fa1-e0c3-48d8-b8d3-7a3c43ee0baf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d249d526-062a-4b1b-ac75-ecb37d2a5f26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62e2b22e-b028-4de2-a7b7-53ad1fe030ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8b81a72-9c67-40f6-998b-f62a988d7539",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78485b30-288f-4fa8-be35-b8d6b82d44f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e079688-c7ce-4ecc-9ad5-d3a702b572bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "301cd5ed-18b1-4022-a1d4-88a384206ce4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6812ae84-50a5-4aa2-b448-eebdc1e4589e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7c77e14-6ce3-4368-9889-6a730b1307af",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f82786b5-b008-4591-b068-3e7f1040261d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc8d572a-e33d-4589-a026-fec37fdd4dee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec7586da-823c-4071-a0b6-f22d8fd80c87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5461f77a-a764-47a2-866e-bc85c78d11de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e482344-114f-431d-b3e1-52e8bf20f0fc",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f5e2b7e-6e4a-44ce-b511-4b6c0b6111b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1a8350a-2acc-4c3e-9faa-6f7943556909"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dcb466f-1f05-4758-b80b-98c383a471cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5936df4-c9e3-40eb-8e2e-d57d3fd4c249"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d4ea865-9dfa-466b-80d2-ea648c772a13",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f178960-6034-49dc-9023-7328a3485e39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb45f40e-8d6b-4e18-9f48-ea9b5cf3f9d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15e6d822-d04b-4d40-b5e9-44a75bb16cd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28795ea9-a171-4c29-8f96-6f29e128db09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30a8b479-6f8c-4fd7-9bbc-5efe80ef35cd",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cf19953-88ae-4ab9-92f3-f80138ef0ef6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8cbbf84c-eb92-4af7-8a2b-d8ae2865aa17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28663656-4b39-4cac-9fed-1f7ddb498cad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92df9134-d55d-4b1c-ad58-7c90f33824bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cd8ad73-5281-485f-bec9-e063f08fa000",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b54f67a7-f3fc-4bcc-9f71-fc710c8d19ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c138a797-6557-46d6-97e0-d2650b318887"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f06cdf5b-7574-40fd-a91a-4bb2a8a60df2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4e68602-e805-4308-b888-8c5e1a2adb36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e3f077c-4d08-45cf-92b1-154303dbabd4",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c3e31c4-5a73-4d24-918a-a53d9fe71ca7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3796f25-e61f-43d8-b670-eaf56a43e369"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb7e74c4-917f-4cda-9583-5bc3d666ed43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3124b5f4-6311-48c9-afd2-f050b229c900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "388d1bf8-453e-4023-a1fd-58af8e84f118",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27e28785-3b3b-48d0-9cb4-cce3748cdca7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ffcbe23-197a-4452-9021-86b41be8d6af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2183aa98-7950-4988-b707-e2e351e29e94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef7ebc3f-929f-43ea-8538-c38de466eaf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d92174ba-dbf8-4203-b580-35786625f2ba",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44dfa840-38c9-4d50-bbdd-219c5bf061bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6d933ef-716f-4317-b23c-8cbedb841f39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fc88954-93db-4dbc-b0e9-8dca7ffbf417",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71f213eb-ec44-46d6-90ed-077bccfb5085"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8183ebc9-a7bc-4e10-8024-419fce4ed740",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06d814e5-1204-4037-ba10-27360cdb4ca3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c5438d3-a497-4df6-9a55-d8fe856391df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca90dfd8-7e63-4f5c-b0c7-813a1b8be58f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9d07224-b335-467b-a113-0f6d7cfee494"
                        }
                      }
                    ]
                  },
                  {
                    "id": "515292cc-cc35-4b9e-899c-8b8c2add8a19",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18cc5907-aa22-4cda-be1b-8c77c409d5c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ddbfc517-4d10-4e6b-af42-2471be85d312"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6938f8f7-8406-4880-98e1-8c93379e4d89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "438f4e68-d1d6-45a0-91b3-0ec9b29f6ea2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e8d04fb-697f-4f7d-8191-def758e0bf15",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d75f2ec-416f-48a9-b5e7-f0a801cb90d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62d52ebc-636e-4374-9dba-6c7f21fcc4be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd5baa45-e1be-4cee-933e-0181192de385",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d923bea-1390-4674-8c52-740ba24be5b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c51f01d7-7d2b-421a-838f-ce59de94d4f4",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a23bbe7-7385-488e-8531-424c638f6f3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3f7a1b7-a57a-4d03-9cd9-38b75108aaca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "054c51cb-9caf-4e02-8e6a-83918f368466",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5edc5885-e639-46df-9574-09902544d1c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df32da56-cafc-4f76-8943-e86af7afc036",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6edff6ae-8a74-48e4-af25-42115bc3d428",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24cf6864-ce4e-4919-af9d-36bfa1651a23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dea021e4-84ca-4a21-8b7c-5930cb444ba5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acb9a388-27b1-4cef-a6f0-b4e49ecdb071"
                        }
                      }
                    ]
                  },
                  {
                    "id": "210fc7c1-df00-43bc-8cd2-4438245f7265",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cbdf9ff-8e15-4519-b291-9a1b568df4c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "818d02de-93eb-4263-bd31-7dfaa2d37029"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b91aec82-30f2-4420-ba1c-cddcf36bb120",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64daa07c-ab83-432a-a908-b72297827bed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff0e4e02-1219-4a7a-b168-70ca93bcd804",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b9e1da7-5527-408e-888c-cb7d149731a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2db644b4-0c60-4df4-88eb-ee4945a78124"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2362cf59-0227-4ce7-8b3a-b0044744acfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f91519d8-9c48-4aae-a03c-4ed1beca57af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0803fed0-93d6-4aa4-a19c-73cf9b712aae",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f223a1c5-5859-4b5a-8bec-abc7c0a86053",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "537419c6-5b58-4321-9c38-48fb75aacd11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "047dd26f-60bb-401f-84cc-98c849cebf8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93762c1d-380f-4d50-a606-85b90977bebe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5516a005-f4fd-4df5-9273-a6040c193a3d",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c6a422e-ed16-4986-b826-662bae352f87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f2daaa2-ed33-4b11-a0a3-c04aa17fb1dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4251ed67-84c4-467d-829d-a9cebaa3df10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4932a2a-74da-44f7-b58f-1bcd29b7ec95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcffe6f2-11b1-46b3-933b-80155ac86741",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7e0f2aa-cf36-4380-acf9-5a3c4c5acd21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39b1aa3f-7c37-4210-95f3-9b9f82bec5d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efa895a9-d699-42c8-896a-dec7a2f3853e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d2b9ed9-4910-4f98-865d-0f4ff1625939"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a389394-eb49-4d36-a442-29965d42695b",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11f864d1-3c25-4460-a52f-9dd44907caaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "313b3010-6cd4-424b-9ed5-70e27930c6fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c22dba6c-25da-4510-8968-5c4c20a842e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "158b55dc-db55-49b0-8a2e-2f24550237ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4d1a2bd-f0a8-45be-927d-e59c8380bc7b",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b3f6f4e-3833-4bdb-8c5e-b22bef4cbb61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c83daa2-73ae-427d-9054-f0b71b4823d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "482abe1b-dc37-4261-b455-f6b0e4855100",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eac8afb9-7415-49d9-afef-f3c5ab250ab8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a245dd7d-365f-47ac-aad3-e3e7fbf90848",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4afcf052-1bd2-4c0c-89ba-3a28b6bf5d27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9a7a6a3-7c7c-4042-9a1e-b840a1318608"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eebbcfc-d6c1-41a9-a8c6-ee681f960cbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "839af5fe-20c7-44c9-892c-2fbc83e45356"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1df56248-dd61-46f0-b14e-8d13b2bb459f",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb37625d-f8d0-410d-9684-df9a9390741d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e3d7940-a22e-4c2e-9e4f-bdfb5da21298"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a845ae49-2604-4731-a156-726248c7b79e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18e6995e-d463-4eee-99c2-f2d6fcac339a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73378d68-8215-4f0b-a0e3-c5aeb43c0fde",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e6efc42-b9f8-40fc-a60f-cddb94ef82ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "534a5ec6-0022-484b-8d70-0d41ae4e7276"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3193a98c-0079-497c-8584-3c610c5c786a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad021d80-b998-4f09-b2d5-72e9039f1711"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00e8f733-6cb4-4523-891d-8c677cc191a1",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dcbc45d-4cff-4cc7-ab08-bd4d21773f64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a993ebf8-419f-429d-b4ec-b46c788acf1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb711f39-307c-4d85-9f4a-fa4c846f3cad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "783db881-c0c2-4389-86df-e5f26ad16d95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b23de3ca-867b-4b40-acb6-9dbf76c20002",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f39aabcb-4cdb-4bf0-8976-d6bf3af1ff5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c1ea328-07b2-47ce-9ce4-5eef9feac863"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "764beffe-7ebc-4cec-9aaf-e2ec091279bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48c30d62-e121-483c-a7c4-d09335c4de49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e93ee89-b3ca-4736-850c-d542012d3bcc",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b282cb56-2470-4b8e-ba8c-9f1324329250",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a0aac94-5871-47a2-bbf3-09f7ef14fe63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a4dc637-f84b-4098-ab03-d0910e391378",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a87cc2b5-46b6-4ea7-bac5-18c7cf38b306"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fd8378c-fdcf-44c4-bb0c-d8977985c94f",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7324fdd-880d-439b-9288-afb2175d6bfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eef737e8-4750-474d-8a44-5b2a2ca239db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90dba485-9fc0-4c89-94b4-1624cd03d431",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fab9198-af6d-495d-9a3b-60682ddbee2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7b9d49f-d367-4669-9f83-64c8b777d688",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1024dbd-978a-4342-bc70-ff53256881af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d929317-7f80-444e-985e-8375923e1023"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "828d78e8-8ae7-4034-aaf8-d469a69eacfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8367261-ceb0-47f3-8da3-31588b180e8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2997667e-f79c-4121-95cc-3fca7213fc08",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44ac39b2-adda-4bbb-a8ba-27e52e32e936",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3344944d-98c9-4037-abcb-48de662ce327"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "433fcb4f-e71b-464b-9275-ef1ae17dcf6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7cc5399-e9ca-4e74-bed3-a629430c3528"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81c6d84c-3047-4ce0-b590-c59d2df1a8f4",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85568569-ca58-4657-bf54-fb3e27ba1cf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ac4fea7-807e-4181-b377-b1fb5e657d79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "162a6505-6185-473d-850e-e8b00826ca2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6251a92-64a0-4bd1-9ae8-5f54e164e022"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71f0334e-bdd5-4378-9b8e-b3c405cbdcd5",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f775c2fc-7d2d-4e22-b224-06fdd5e0c388",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "207e2fbe-ab10-4f75-b805-99c9b5458068"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce91b82c-8448-4cd1-ae29-7f3914b49dc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00b9bc66-6491-4623-aab6-5f1f5f4a6c53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a675872-ab63-4cbe-8101-31c89a752eca",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e64950fc-1819-4016-af8f-240a875d3c39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93bbad71-fba3-4c15-8d94-857aae913c29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58f2cce1-d3e1-454e-8a12-b46ef8443f95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee3933d8-8093-4319-9387-9a611fcf28f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7494ee4-b747-4dbe-aba2-509c9fe55940",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c4f33a4-ae9b-4aa9-b9a7-34487b415a56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46c3ae55-9642-48dd-b006-4d72bb8b6ae6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bf6d47f-f2ca-4f26-939b-5ad9911843eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "435c5260-3f05-4263-bf22-d46636bd9579"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4facf1d2-c01c-4c5c-a8af-299ed83764ea",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9480a94-df35-45c7-9e22-e5247c99987b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb9830ef-3170-4547-b42f-3d88887ee5e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce7515b9-7bfa-4e3b-b89f-6c2b188744e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5decaa16-8e05-4ca5-bc45-a5fc1b817e1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23668cfd-1c43-484f-868e-279dc5405d83",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe6ee387-d06e-4158-bd38-498d8a358277",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c124c98-3bff-4b0b-b6c0-e42143098173"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "faf49927-7d19-489e-8cc2-fda49d43a134",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaa52d80-0df3-4a72-b3ae-935cb264b118"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5738a36f-9d7c-4f02-ba74-be90b1ebc958",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea37525a-9c53-4cf8-9c9a-f88edb30599c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe61a2c0-efe7-402a-b9a7-5c0662aaff34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e80ee251-cf6d-4f0b-9f90-bfda0358dae7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d895a57-947b-4b6e-946b-1943ed39240b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "177c1c50-5ad8-4280-b10a-45487fc7ef76",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e26b55f-1c0d-4061-ae0a-962e7ddfab98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd3714c5-2220-4a06-acc7-11d21e61d59c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dd167a3-abe4-4bf7-8818-e6e4a7d6a526",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "145d7d40-5471-4ed9-ae29-da0e4cee9013"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d18de3bf-c61d-433f-82c3-a3c3fe77edfe",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e732f8f-9d09-4005-be34-bcfd16a49c62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "917b075c-c91f-492f-b211-b6b8c54d8536"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8092202-4208-4f7b-bf11-8d62bd37c57f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5a9be45-4562-4c11-a71c-3f6548679d25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac9a5cca-7b0e-48c5-9486-8fd3e9dc1a11",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acd5dc48-10ba-416b-a673-984065983d3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed70d4d2-4656-4174-8e57-cf9529bcacaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2cd143f-f0f6-432c-b9e8-1d4fc2f14319",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efdb4cf9-4c4c-499b-9231-6af082937243"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75d08403-8ab7-4acc-92eb-01e9ba3e8c7e",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79a39260-f3d1-4034-ad19-b3da9b1034ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "188a25b6-43ff-4583-8246-270d94615367"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98b81b8d-1f34-4f0d-a489-d11d85a8ff77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86756782-1cf2-467c-bd20-cb5f2f91732d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2126f2c3-dd34-4323-942d-0dda755b70b6",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fab473f4-3b4b-4fb0-af5e-2e0dd64c9447",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ee46df1-e170-40b0-878c-fed25dd9d9b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72f82cf9-71b8-4168-8ab0-5cab19ece3a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91288207-c838-48e3-9574-d665c4a82a04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29a746aa-6bae-4d8a-9fe2-f137a0a29cd7",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9709d51a-26a5-42d0-90d4-9267e210ff95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed442a77-062f-4e77-9ed8-7db2c36e83af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d70156d-3269-44f2-b251-95a039f70149",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd9b5796-4a55-4c41-8aa3-f523200e1b05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43efb0e1-4180-492b-9852-e50acce32a14",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b32c1ce4-c2c7-4d89-8c59-a3d9bc94af95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0fd86fb-5e82-4d7e-8c6b-04afef13b2e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eee8592-96a0-492a-90f6-6617a0e3bca5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cb1bda4-3db3-48a0-9eed-57bbdc1f196c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71067f05-29d7-4e8e-90d7-90d33d3de865",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eb356bc-b166-4eb3-9ff5-a422fb8ed462",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77f5cf68-49d6-4775-9919-f80957c28f24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0f13aca-386f-47d5-a184-2d1011c0f1f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b2c06e3-f2a5-4106-a9ca-4c6c089f9c99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ceb6d62-5cc4-45e8-b506-a7f9450945e6",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2105ddd-46a8-4c9a-be88-6e9baeaafb0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3c568cf-f047-4589-8d1d-e80369b4871a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0827bfef-b19c-4ae7-8bb8-d19a023e319f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a82346e0-ff15-4d59-93df-97675531d60c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6972dd49-a257-41be-9989-26a50160481f",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "485aeed8-a041-441c-9894-5c94c47a5d25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "593e66d4-b188-41d3-987e-159d8ddb80da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc1942e8-9c1d-45a6-b28c-dcfc3aa67dc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12cdd05e-1b23-4ec1-927e-c87647678315"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9c2666e-0e3d-48f8-94d0-45686195b788",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83ae9a89-5a8b-4900-a063-4437107ab473",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6855086f-a4e6-4c0c-8e7c-3691f2c15935"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d94bfcb2-7c2b-4f20-b50e-67cd273f9eb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92742fbb-8df1-4e72-bc8d-6c4fa928cf52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "020df46b-20a1-4e2b-82bb-77c344ee6ab3",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6d78639-c472-48b5-a08e-1e2a36a726b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66501404-ced0-479b-a055-277d916ec81c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0a30d08-20b6-4c3c-8951-19a5f4c0a3e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d028f06-bceb-41dd-bd0b-dac4a119cac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff3c7bf6-d6b7-4f58-a76a-016a99cd4f4e",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af7e653c-a164-4e44-8bb5-77e602cbcf8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df8856e5-4bc0-400e-9e1f-5402427f887b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fc44d67-563f-4c8e-98dd-a6564c145d82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f6dbd3c-12a7-4cbe-bb1c-46b744773c80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "845ca6d9-a50e-4474-892f-698f224626f1",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95c266c2-0374-4bee-bc93-4ca08084a8b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87d3ece1-0cf1-4c71-b328-9f0c8353f972"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ad0a2ed-e534-46f0-bff9-c2e79d31877b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f9fc5b5-ee10-4186-907c-3d924b4e255e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1641288c-d8c5-47fb-b947-c4a72f7f591f",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d95dc8b-b51b-443e-a65a-e8263fc5e1a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7723398-91a7-456f-b55c-a28a1a4541e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2073b0d0-17f9-4af7-b418-33a8840eb3e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8d176ef-fb28-4f75-aa49-7c5c9038ba47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0009d8ae-57cc-4fcf-ba7e-3ac35be340f3",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68c619fc-1e42-4f02-8113-8d9ae8a2c4f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34124221-a3c0-4440-9628-52d3cc49d0d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15c61d13-e3ac-4d31-91b0-8fcc3d5e190c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b18c2b5-810e-470b-ab13-9695e22f0c06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7045ef6b-dfe0-43bd-8a51-0a64c075147f",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b45d900-f488-4731-b158-29bd93847ba7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7e1114d-7cad-4c92-95ad-befea0465a76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5999ae92-f13d-45c1-b92b-a6305881abe2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e75da222-48fa-4a3c-8ce0-875b326fe6f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "381ebcc8-e83c-4108-92d5-b7295ca662a3",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b487871d-506c-41b5-8902-89bd9a95327f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45b1d510-43fe-4193-ae72-0f5aa5b8b89c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdf63bec-10ff-468f-b4d9-d752311104ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e4b1e47-1e61-4856-bd02-9ed26203ebbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b660d52b-e073-4b64-8f12-64d0e62c8cb8",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a7c52be-d15f-4261-8b02-06a1122f90ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07d89665-4ce0-44f2-972d-f6acc51a2140"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3af6194-850b-48d3-aba5-4149a699b425",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02e5614b-797f-4dba-a43a-1be76e1e703d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d06ff553-5d33-4580-bcf5-77380f5452a6",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36e2461e-5efd-48f5-8f67-39b9104e2f49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a613139-97d0-483e-a509-ff6e8d7cd9a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9160b34d-9c16-4189-a44b-231ad1aa8523",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c1873bf-dd4d-4065-9811-ed87cf80c933"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd31640d-248c-418b-9037-f34eb4486c6a",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b4413f3-c5d1-4377-bcde-b4225f8886af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "666be875-3aef-4ce8-b5b4-0258074305b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "902d89c2-5063-4874-b7d2-424f54bb65bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60c052f6-ca89-4cea-baa0-83f1cb5a376a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3217916e-a270-4eb6-9653-72ef85d6f31f",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "156bea56-38e8-4c29-aa16-2d6eeabd53c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8919a8a7-d580-4b3e-a6f9-0c77e9cbd429"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f528f51-3f57-478e-9643-4937f0add300",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "413ae89f-c3a8-4e5c-9f77-14cf1785b581"
                        }
                      }
                    ]
                  },
                  {
                    "id": "767ecdbf-0bf2-4656-9b8e-4cc293e4a73d",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fe501e1-d44f-4ec1-b329-0b4289692322",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56760dc6-53e1-477d-9c8f-736096c1e2f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0df7f305-fa2b-476b-ac7c-6530d1d14ef8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e19fc8c-82a6-4c46-9c3f-e8948516cf7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bb189ef-db69-4e0d-8753-21daed593d07",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaed6ec1-6aa9-401f-8ad6-9bf711ddf676",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be788798-45f2-4ce9-95b4-f281d6012604"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a580dfe7-8b24-4ea3-9e79-142e66220069",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d51cd02-b8c5-4fd5-8bb0-64b6e7d87df1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "795740da-bea0-4021-9b4c-ea0e0e13e7bd",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7008d72d-240a-47d3-9758-92f864593ba7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f59f548-f423-469c-a891-d2c789bd7da8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "711d5c47-e5a4-49c9-950b-7db2745810b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eee77e12-efc3-4adc-9fb9-ce04a35d0524"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fa7da41-865c-45e1-b5e8-b2955d9762b3",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26b31c30-5e81-4654-95a7-4e5db8a7104a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa71f306-fd62-4af8-b7c9-d4ba8d5de887"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bb0a06f-d610-427e-bbd2-73e929100b55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16dec842-3c10-41d0-aac2-98d7ae4f09d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "907df679-4f06-4ae5-a774-f1820b1fe2a2",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "130e2d37-3291-47e1-a035-677cb7c24f41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f12126a-0278-498d-9d5e-1afaf280ac4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ef0b8d2-f24f-47d6-84ca-3ecafa00c2e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85a731ef-f338-4f61-b8ec-f3d9db892243"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23a0825c-2f1b-4e9c-bf70-fcc94d68a3e0",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee1a72a2-1216-4012-b606-75810ad54412",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3d971f5-28af-45c2-aa5f-23718e3512f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f06423b-8111-4ea1-bf6c-2f0ce5f6648d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5eef780f-83ce-4319-8b30-ba50391f5b26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2a96c4f-54a8-45fa-8bae-210502b88ae6",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb929063-0b33-4cfe-9d1c-f28a8a872f95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d00c7465-85dd-4652-98e1-12e42f4f1e12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e670672-2cf1-41e2-a9ed-fb04842866a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ccce7f2-cf9c-47b1-8023-77d4c8ffce07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49c49d73-df9f-48b6-a98d-8a6ad4039dc1",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9c61850-3f6c-4eb6-a581-e563ba627528",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "476755b8-ddea-40e3-92dc-3270db5ddee5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "579741f5-80ae-451f-8cf6-ece5428306b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c65cff08-6bce-407a-8e67-0309dace2eac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dd1b643-45d7-4416-869a-3927d2eae2a2",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "792b0e91-bff3-41f9-9645-2a1392c93042",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6218549b-8b60-4fae-afc4-2b0c68fc9717"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0f5951c-57b9-4983-a196-c59f05486126",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abeff732-a030-42a9-8281-2f7c4fe56e7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d111b17-662d-4c2a-b0cf-fb28fee137d6",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efd49e72-f2f9-4964-9a2e-79f2d9d6d671",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3143448-0b8b-401f-8db1-deeb782c9673"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13c13587-54ab-476a-9dce-ba5fe877e7d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7219a4f9-388e-4fa9-b7f8-205230d42a5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ca430a7-2a51-4144-bde2-20ea5475bfb4",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c51145b-2a8b-49ae-8337-3726f1fd3425",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ad2a4dd-1f93-4f65-93d8-e5e6da320485"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47bae66f-5824-4d20-85e5-64d02dfaeb1b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9ffc0c9-f538-44a4-98c2-70513414124e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94fa128f-1c29-4df3-a1d3-5e0bcde21473",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aea40fa9-155c-4f24-8d00-d9405987f59b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe84356a-3b64-4328-9f89-8587bbaf504f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1156576b-4668-4fa3-b804-476bfe747255",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9dee3bb-7bc0-47b0-aca6-9e4f06124373"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa6c309c-aec7-4539-8869-4c857bfadde1",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1adaf73-73e0-45ca-954b-c6a27e2566a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "305ac779-21f5-4cda-806b-1b5bd6847085"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "937bf231-a7cf-4018-9728-0fa63b537b0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10d7b09a-bdd8-4240-838a-a8173425eaea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec7c1411-6f2e-42c5-90e1-a9b3c73685df",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b02faebf-f996-447d-9f46-ca74b2092a16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "279067ba-f93f-4e7c-8e43-8e5feaea8b40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ca854d6-8991-48b4-a6d5-02374b8ff3a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90587a3d-9ebc-4a73-b828-30094edf5ee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d05ddb99-506c-4feb-92b8-283c0e8b1b79",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4cf2ec1-6f71-4cb1-97aa-118285064730",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6b9a06e-1971-4209-8e00-4213560ac01a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c063625-2726-447b-b3c6-839ace56a417",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bd901d1-5dc5-46ff-af75-fc8bf1436aff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b869180-2038-430c-a1ff-5eec53ea95f3",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbf56169-e66b-4bb9-a69f-262754dcba1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57969c1d-35b2-4d13-96ae-0a0b9841c104"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8619807-e954-4231-be2e-eea28a198f13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c42ef7be-051b-4b6f-96ba-6aee9e5b84f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18aac9e1-85bd-43c3-9787-8f08fe5ee050",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aec61f49-5cbf-4670-a4cf-eea3dfd8ff5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1bebbad-5508-48dc-99e9-c3bc2b40ae68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e865c0ac-7a74-4edd-ae67-10195cc32806",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7310c2d9-91aa-4a53-a8ee-0eacb97e8979"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7d8433e-87b7-4082-83e8-c60ae3afb22d",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dcce044-b509-4ee9-a805-0a2029adcbdc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77f14bd8-819b-47e0-b049-4d69fc332e2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24a12389-bf38-4be4-bcb5-82c57489aac5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "474dd228-956d-4f81-a2e7-e9b43ef16917"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3d48c00a-ef11-4a84-8d0c-1e7c1b5af09a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "306bf89f-f248-4458-bc1d-44c82de727cf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "29e27287-1a9f-4f64-999d-fcd3e9f52709",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "afcef6fa-b0d4-48b0-ac0c-38a6a47f3def"
                    }
                  }
                ]
              },
              {
                "id": "e5de6b68-b163-4127-9aaa-df864573574c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "664e5656-829e-43f4-ad61-a5d9c9b197dd",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "917304e2-7c3f-4d12-bd96-81e4081cfaff",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "b9eb51d8-ae46-401c-af32-9047f503e7b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94856f03-0f0b-4c93-8898-d5cf6e3f8266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "204695aa-7e3a-45f5-a391-1bfffe4455eb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "566a6e2b-d62b-46f9-bf2d-6b43e29ea4ed",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9ad6e936-ccf8-4596-9458-9eb5e214d8c5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7b2c4ebc-366b-4231-8971-931e2af894fb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8eee5035-083b-4407-b7dc-fe6e807889a3"
                    }
                  }
                ]
              },
              {
                "id": "4e353fbe-51ae-4f2b-87d9-e4d1a8f41244",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "6b623445-2ff0-472f-99f3-76eaded1dc03",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a60500e-7f8e-4cdd-a483-2e7f7bba8c64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "60d96094-161d-491f-98eb-146a9e9c18b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "391e088b-b0f3-4d19-a969-eda4a6f61355",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a29eaf25-338d-407f-aedb-adc0b27da116"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "7127e1ed-162a-4a44-82ce-adb0c5cc58c9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "92f6df2b-9b3f-49f4-8d56-31702c38e3e3",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "617104de-46fd-4bba-adda-997c93e24960",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "4628860b-adc0-4e2b-8e4c-4481ea60d23a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "03f29bcc-5ed4-4f83-8bcf-0111f33c3894",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a0c23d36-b4f5-4953-a0ab-e6ed10438d7c"
                    }
                  }
                ]
              },
              {
                "id": "54dd99c7-c748-4c17-bd6c-1188d2a3f799",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fff08fd2-039f-48da-9bb8-38bd650af23a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "0849e593-6c59-48a7-8a8d-e800031bc149"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bed686ca-dec1-41f2-add8-1b21610c2d8d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "69dec328-b776-4d1e-8eb2-c3feb1ba66d1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "421dbc7d-def8-48b7-80b9-5c5d2e2bf5f6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "68d7481f-0e64-4783-96a5-c62a1cf39ea3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c8decd78-3b5f-4958-a75a-ec53db0a8fad",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8a5e6caa-ef43-407c-8103-f8bde6a511e3"
            }
          }
        ]
      },
      {
        "id": "30acf6cd-e73b-4dfb-a19a-ebd31d164393",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "28fa012b-4ef9-4fa2-a76c-871427c3126b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c3a7a210-badd-4122-ba46-4f0013cc17ad",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "53c1c7c8-aa8d-4034-aa79-a3d6c8839799",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "853bc5a1-d633-4360-8b18-c3a57630c34b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "e697f5a9-479e-4633-8208-442343fde2bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc19dd3a-d60e-4e46-be3a-b22419cf9e86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e70200a5-dcc0-498b-bb3a-14586275a7ee"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3c282712-48ef-482b-b2fe-213fefd877da",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "45392e8e-4c3e-4962-95c3-58571df6ce1a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "73febcb5-60fd-4942-aada-02ac11f57349",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aa3698d0-80a7-4711-a899-894c12eb001d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "47a493ce-8d9c-431b-9462-b279c87e94da",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "07da5bda-b99a-408a-9951-482bc3df43d8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "036e757f-ecf8-412a-9a40-c3d6909ea43d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f672ece7-659e-4ecc-9ad0-6bdcf4581b9a"
            }
          }
        ]
      },
      {
        "id": "bc05bf3f-154e-42c5-b091-116cfbdc9496",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "1c6a347b-de64-440e-8b1d-ebc435d53e7e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dbf83364-ba37-4392-acf8-cf3745d82c70",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d4af5f6a-bb46-4233-a4be-838037ca7c10",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f60461d1-b40d-4ff4-b3ab-513c02e28a9c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "62042e39-c4fd-46e4-9f06-e892cd6b1b2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18fc394a-a0e6-4ec8-9b31-fd5813f161ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "adf6280a-295e-457b-a76a-2bca8ec290d8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2218ccc6-fd7c-43fc-88d3-aff3ee6213d4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "98be88b2-686d-45b2-955d-7391e1a2df97"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "35a61f65-2d24-4f25-9e4a-a91a839ac112",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4497964a-d05d-4e80-88be-232984f5c8b6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "47dfd6b1-284b-4d8e-b042-e424b1b4c745",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "30383ad4-56a6-4eda-96d4-fc5ba780d8c0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ef6adad5-1c65-47ce-b795-957420de92b1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "207ef8c2-0b93-4ab8-8971-90738cbba62f"
            }
          }
        ]
      },
      {
        "id": "f316eba5-2e90-4145-bd52-80dea1aa5e53",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "9f2091a6-a342-42ac-adf7-d455890ffa61",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b9d4bfb8-9a7c-4312-946e-3439b8112fc1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "de6ba7a1-8477-4858-b553-3ad9b5faa6ad",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83d713e7-18a7-43e0-84a6-a08cecbd333b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4b1fec3d-a934-4733-800f-bee27d7bdcc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b63e88e3-ddd4-4409-88bf-6ca8ec0b43fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4c470cfc-4579-460e-b7f0-31e6d02f2b4e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "66742aa6-7db3-4448-903b-e28304293543",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "832f5a96-c0a6-4f2b-a068-2196656dc941"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b7ff1ae8-15ea-47ab-9f15-ee1043bba61e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1d1b96fa-a9a4-4abe-8651-3ab6b96a295b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dfa3fcae-484e-4a44-85e3-74eedb03e463",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "16d38c28-36bc-4b70-a311-6118a137992d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fb4a3048-b0f0-4877-9fdb-9c286b77c767",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "046bc9da-b3f9-4174-8b8b-7cd5124bd1a1"
            }
          }
        ]
      },
      {
        "id": "14a30236-57dc-4ff0-a40a-5c6c09c172b0",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e9692ea4-eeda-4787-a7e9-982cbb38bd07",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1e880183-6c58-4d57-9e8d-f190cd0cb5ba",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "55211c19-52eb-489b-9188-a98c2aae4b66",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3fe2ba61-7f8e-4791-8f71-000249f3f42c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c82f9cc6-6fbc-4968-9257-2340d22bf795",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 138.4365079365079,
      "responseMin": 6,
      "responseMax": 10082,
      "responseSd": 679.2854204800033,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1718066279297,
      "completed": 1718066322413
    },
    "executions": [
      {
        "id": "45f4b20d-e420-49d3-a43c-3536be7475fa",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "8b72cb7e-a6e7-4ad4-8751-6fea9466f8fb",
          "httpRequestId": "7c59c9d1-0140-4ad7-b872-7aadb854c374"
        },
        "item": {
          "id": "45f4b20d-e420-49d3-a43c-3536be7475fa",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "d3e70f4f-befe-4950-965c-2fa13dbc0240",
          "status": "OK",
          "code": 200,
          "responseTime": 38,
          "responseSize": 0
        }
      },
      {
        "id": "24b2393e-9ffb-47b3-9fd9-efab660c8010",
        "cursor": {
          "ref": "d450b70e-4708-40b8-a63d-8c9a5fc178df",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "9c931b38-19d2-4458-b49f-082491047557"
        },
        "item": {
          "id": "24b2393e-9ffb-47b3-9fd9-efab660c8010",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "cc808e3b-d74d-4ae2-98b0-a658f25ad537",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "a16964d7-0313-4ca1-add8-33de85f26535",
        "cursor": {
          "ref": "0ce7c303-8322-4187-80f7-9bd4b1bacfaf",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "ad3d2920-1e85-4b08-931e-67dc03726334"
        },
        "item": {
          "id": "a16964d7-0313-4ca1-add8-33de85f26535",
          "name": "did_json"
        },
        "response": {
          "id": "6d37d346-9dfd-4624-9757-5d69a3628b3d",
          "status": "OK",
          "code": 200,
          "responseTime": 283,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e644a2ad-05ca-4b95-826d-77a59cbdfb0e",
        "cursor": {
          "ref": "183b5118-a944-42d4-ac9f-d94f3ba74734",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e90b9841-f613-4c7b-a571-e7c416ab5a47"
        },
        "item": {
          "id": "e644a2ad-05ca-4b95-826d-77a59cbdfb0e",
          "name": "did:invalid"
        },
        "response": {
          "id": "41b40913-80a7-4df8-bf30-0e372203561b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 442,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e644a2ad-05ca-4b95-826d-77a59cbdfb0e",
        "cursor": {
          "ref": "183b5118-a944-42d4-ac9f-d94f3ba74734",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e90b9841-f613-4c7b-a571-e7c416ab5a47"
        },
        "item": {
          "id": "e644a2ad-05ca-4b95-826d-77a59cbdfb0e",
          "name": "did:invalid"
        },
        "response": {
          "id": "41b40913-80a7-4df8-bf30-0e372203561b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 442,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e76fe7b-3be2-4ace-9266-bb3b30e18ed4",
        "cursor": {
          "ref": "a83d61f5-2dec-43c6-90e8-ea8397b98b88",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "f99af21d-4798-422c-9f1f-5e22465aaf50"
        },
        "item": {
          "id": "9e76fe7b-3be2-4ace-9266-bb3b30e18ed4",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "ce039336-5731-4a53-a757-31878b3ffbac",
          "status": "Not Found",
          "code": 404,
          "responseTime": 59,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a651879-f2cb-4489-b879-3d510ed8e1fb",
        "cursor": {
          "ref": "a015ada9-742e-44bd-b1c5-189d46a73489",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "d5d4655f-33f0-4e61-a353-56e018d4a502"
        },
        "item": {
          "id": "3a651879-f2cb-4489-b879-3d510ed8e1fb",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "1c9ec252-6d5f-44b4-b661-d42990386539",
          "status": "Not Found",
          "code": 404,
          "responseTime": 69,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efabce0c-17dd-4e78-90cf-be64d390881d",
        "cursor": {
          "ref": "ba17d003-ed78-447b-9283-982e9d4d2f14",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "2aa7bbba-706b-4bff-9805-96821bc660a1"
        },
        "item": {
          "id": "efabce0c-17dd-4e78-90cf-be64d390881d",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "51d4be32-13c4-42db-a98f-81886d89e09f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65ca0204-3d4f-4351-8157-7a81b08a5b9d",
        "cursor": {
          "ref": "706767fc-09e8-4525-8b23-0459d5def0f0",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "fe2f23c3-008a-4a1b-b337-654ed0b2ceed"
        },
        "item": {
          "id": "65ca0204-3d4f-4351-8157-7a81b08a5b9d",
          "name": "identifiers"
        },
        "response": {
          "id": "db3f5a4a-e8bb-42ad-8f41-400f73dba4bc",
          "status": "OK",
          "code": 200,
          "responseTime": 66,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "819cd7bc-d16f-4bbe-8cb4-2dfae2ef38e5",
        "cursor": {
          "ref": "2bac5d75-7225-4c32-94bb-f827a7386496",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "7638c78f-4d01-4024-ad0d-3eb5b0c7cba8"
        },
        "item": {
          "id": "819cd7bc-d16f-4bbe-8cb4-2dfae2ef38e5",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "dc7719af-05eb-4546-b921-2bc36c4f9993",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d3139be-4f6e-4605-ac56-4779fb038968",
        "cursor": {
          "ref": "58c2bddb-134e-4d11-a8ba-fa6f50696437",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "4277016a-cedd-4e53-9e06-7a9f4a6eeff4"
        },
        "item": {
          "id": "6d3139be-4f6e-4605-ac56-4779fb038968",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "cddd2f04-a01e-4558-a030-2ed9e65cb52a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "779a0245-7d42-4758-9d92-6a5776295765",
        "cursor": {
          "ref": "36617bfe-6c20-452e-8dd4-ce919f71d88a",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "298c84e8-0c70-41db-9acf-048a3911aea0"
        },
        "item": {
          "id": "779a0245-7d42-4758-9d92-6a5776295765",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "53ab4244-6d71-4674-9605-3b2a55b17650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d8b147b-892b-4360-9366-eb49f83189cc",
        "cursor": {
          "ref": "be339893-ee10-454d-adc6-0b15bdd2d765",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "151738e3-0192-4490-a4fe-2a6a98f26e90"
        },
        "item": {
          "id": "8d8b147b-892b-4360-9366-eb49f83189cc",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "cae8c79b-7515-4a83-9935-778a420b9a9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "108c0c04-9963-4284-9795-e5be29f61b59",
        "cursor": {
          "ref": "aa92c771-7a67-4148-bac3-44ab90b72771",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "b36dfaa5-5964-4534-bfbe-1bd4bcec1e12"
        },
        "item": {
          "id": "108c0c04-9963-4284-9795-e5be29f61b59",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "f2aa23b1-221c-4c96-88ce-941fbc604fde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca517756-35a6-4be1-94a1-bb486f50e63c",
        "cursor": {
          "ref": "8be69204-cf27-4615-af59-c881e2ee10ca",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "8da3e98f-5fa2-4f2b-bd2c-4489572a6999"
        },
        "item": {
          "id": "ca517756-35a6-4be1-94a1-bb486f50e63c",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "6671df74-fb7d-4927-b580-a8d8c103537e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea543c54-3743-430b-8579-003a1ea393a0",
        "cursor": {
          "ref": "ae8e3ac4-a984-4ff5-96dc-e59c69993490",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "c789e68d-0b39-49f1-83b8-d4a695a950a5"
        },
        "item": {
          "id": "ea543c54-3743-430b-8579-003a1ea393a0",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "7286f2cd-a0b6-400a-85cb-84244fccf926",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e137f662-7b4c-4501-bdb3-2ffa35360113",
        "cursor": {
          "ref": "1fe0ae60-1a90-43b4-a5c2-f43f9733c3d8",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "418207d6-2263-42a0-a2f3-e92f7a709d12"
        },
        "item": {
          "id": "e137f662-7b4c-4501-bdb3-2ffa35360113",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "32c8985e-380b-4aa7-8ab3-4cd683ff4240",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4df31a7c-a818-40d3-8381-789ff50d81f9",
        "cursor": {
          "ref": "a2b1a8e6-cf58-44bf-9e71-5592d44ad793",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "6c5bb515-1275-46a0-9815-06b1b05e6eb8"
        },
        "item": {
          "id": "4df31a7c-a818-40d3-8381-789ff50d81f9",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "6c4e00c2-73d9-4bff-9ad9-9c4348c4335f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80d24302-afec-4be2-9bce-e6ca7f1645ae",
        "cursor": {
          "ref": "1ef76117-c3c0-44e5-b162-8d342d0fd6a2",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "76819808-3a1d-4a15-855a-4e864752b72e"
        },
        "item": {
          "id": "80d24302-afec-4be2-9bce-e6ca7f1645ae",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "f931f21a-5362-4d7d-97b9-7118fbf68990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e507c5d7-ce1d-435a-991c-fef407f56e59",
        "cursor": {
          "ref": "321fe760-97fd-4e00-a57f-1cae2f60c126",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "d37122ff-e427-4e7f-bfc6-312def393a93"
        },
        "item": {
          "id": "e507c5d7-ce1d-435a-991c-fef407f56e59",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "111ff6c8-bb1e-453f-9145-092afb077965",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9541c04d-173d-4648-9071-bbe52a9f2e22",
        "cursor": {
          "ref": "00c40f87-8530-457a-bfdf-20830af012ae",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "d392efe8-9edf-4c59-be70-f7bd3e3da3bf"
        },
        "item": {
          "id": "9541c04d-173d-4648-9071-bbe52a9f2e22",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "6dd63525-2377-4249-a63f-188178f55b2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70e7a5f1-956c-4343-94f1-e69d58248f37",
        "cursor": {
          "ref": "3da697d7-ed0b-401d-840b-8ee8f9a1f2ae",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "93c2024a-5a87-4663-9a45-0ceb975928ae"
        },
        "item": {
          "id": "70e7a5f1-956c-4343-94f1-e69d58248f37",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "c86c69c2-8044-4f8c-b09e-973ed45f8bff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a9e5f6e-9796-40f0-85ca-28c24ed961d3",
        "cursor": {
          "ref": "1a51c9b7-8624-421d-9e46-fef675df6f83",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "b4103c61-326e-418e-8b0a-1e0651d644f2"
        },
        "item": {
          "id": "5a9e5f6e-9796-40f0-85ca-28c24ed961d3",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "82b30bea-af1d-4552-a024-b88b97f27a02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "476c1e2e-1968-4103-8316-0fc66f61b446",
        "cursor": {
          "ref": "2296e5ae-6c95-43a7-84e5-24b152c8e711",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "802782fd-55a7-4fa3-9f97-5fb2a402ea9e"
        },
        "item": {
          "id": "476c1e2e-1968-4103-8316-0fc66f61b446",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "02432f55-1078-4cf7-a398-c2cb70d0cfd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 112,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ed196f8-9220-4570-89c0-349946844cf0",
        "cursor": {
          "ref": "9b658459-9bec-40a4-9b61-97f03559348d",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "6d43cf3b-58d8-49f8-9d5a-915b6311fcf5"
        },
        "item": {
          "id": "7ed196f8-9220-4570-89c0-349946844cf0",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "ac6dc2b4-288b-4c3c-95d3-4b6654101220",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fb6d33d-f3fd-40a6-84f1-34cbeb3d0cb4",
        "cursor": {
          "ref": "3263eab1-34a3-4206-bb29-5cb0e24341cc",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "5972262f-289d-4333-9e53-a7473344762a"
        },
        "item": {
          "id": "2fb6d33d-f3fd-40a6-84f1-34cbeb3d0cb4",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "4a9902ac-9fd1-4765-aef4-cb8a98e9eb26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45986cdd-d4c8-43b1-a3ca-162bc7227b89",
        "cursor": {
          "ref": "1a4ea5ea-0384-445e-b9ef-4e15fe3adbd9",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "0ed1bcbe-307a-4688-b373-f7acdcfedfdb"
        },
        "item": {
          "id": "45986cdd-d4c8-43b1-a3ca-162bc7227b89",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "823e29ce-72c4-4933-8bb8-e6927017c568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bf7dbda-9d25-4e22-823c-11ac7ce8f5df",
        "cursor": {
          "ref": "08f02562-8e3a-485c-854c-663cbc366dc3",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "5dc2bb0c-621e-4e1f-95b1-2eb9b334fbdf"
        },
        "item": {
          "id": "9bf7dbda-9d25-4e22-823c-11ac7ce8f5df",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "b86fbf1b-02d7-4889-9b3f-9ad2a4826973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 172,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb49ce19-55d9-42c0-9257-609c64494339",
        "cursor": {
          "ref": "f1e30c19-27ad-4ed6-97d2-900f63f99a66",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "a927b88d-c350-483c-a72b-b36de6d1b786"
        },
        "item": {
          "id": "bb49ce19-55d9-42c0-9257-609c64494339",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "c60c468c-dfb6-4388-bf06-b7b66bb3ffb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efa9143b-1cf1-4a03-bc02-ded246b58723",
        "cursor": {
          "ref": "542a34fc-af91-4664-9878-3c8b69ab7f1a",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "330cb4bf-6911-4d25-982a-ea9e9b176bda"
        },
        "item": {
          "id": "efa9143b-1cf1-4a03-bc02-ded246b58723",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "00bab9ec-87d5-4191-88a2-ce788c080d56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6510c665-1334-4650-8952-69bd7ef647b9",
        "cursor": {
          "ref": "64c122a9-2ef9-4e06-9aca-50adc46b2842",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "e8fd869c-e92e-461f-892a-cb11624b9f23"
        },
        "item": {
          "id": "6510c665-1334-4650-8952-69bd7ef647b9",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "046097f2-e6df-4de5-a825-0df4560e28b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cd9ed94-f399-4547-a8c7-9b63ec2d5258",
        "cursor": {
          "ref": "0dcb49bf-5d99-47c7-9ce6-705eeae685a0",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "e447cfcc-b3bd-48cd-89cd-86bb76db310c"
        },
        "item": {
          "id": "6cd9ed94-f399-4547-a8c7-9b63ec2d5258",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "88399767-43a3-4fe8-be1c-d3159db2f129",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3caf881f-5e44-43ca-b884-6010a32e2cc4",
        "cursor": {
          "ref": "63439d25-5425-4351-9102-7bb2bd3ad08a",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "e0c5d24f-527c-4999-999f-1a9f95e0eecd"
        },
        "item": {
          "id": "3caf881f-5e44-43ca-b884-6010a32e2cc4",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "7555f012-0f64-454b-879c-8d4a64a4b425",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d879329-8a1f-446a-bd48-3b0a1b8311e2",
        "cursor": {
          "ref": "8452b62d-3e7c-4a8b-9234-8450e145d493",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "384597bc-2241-49b0-a468-22fb2d9625db"
        },
        "item": {
          "id": "4d879329-8a1f-446a-bd48-3b0a1b8311e2",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "a9256826-aca9-4591-b553-86b3329a8d9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "330fef4d-9af9-45f1-b3d9-2224c5c24b27",
        "cursor": {
          "ref": "56bb4a9a-1ad5-4c8d-9c1f-64c5da3dad6d",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "87e65e4b-c043-44ed-bb56-509a8d8b4313"
        },
        "item": {
          "id": "330fef4d-9af9-45f1-b3d9-2224c5c24b27",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "c554b680-fc11-40e9-8cdb-38e1f260c411",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5b96c69-fc88-4e29-a48d-71b2af67bf0f",
        "cursor": {
          "ref": "1b92f8e5-7913-40c3-8af8-b7fc8bf88d16",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "0d0b0caf-7ae9-4d09-b6aa-2c2f95f1a94e"
        },
        "item": {
          "id": "a5b96c69-fc88-4e29-a48d-71b2af67bf0f",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "7f39f3fc-d0a7-4eef-8ef5-c661aee155fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9035cf12-6671-4d51-84f6-e2fb0c320508",
        "cursor": {
          "ref": "444fb6f5-7183-4241-bc52-b846ea57de71",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "4686b13a-381b-4274-852f-81bac7dafc76"
        },
        "item": {
          "id": "9035cf12-6671-4d51-84f6-e2fb0c320508",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "182aa697-2741-47f4-9011-0c949a1ab5ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e671e43-ff93-45c8-8a71-773fd97d10d4",
        "cursor": {
          "ref": "d14dcdb7-5db9-4888-b705-b1a8fe7da287",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "cbbf78b8-55d1-4e6c-8e5f-d2c9acf4868b"
        },
        "item": {
          "id": "4e671e43-ff93-45c8-8a71-773fd97d10d4",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "e194b633-0756-4103-a24f-383aaa992af2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b621664b-8d84-419f-9cb2-6dee4e83acfa",
        "cursor": {
          "ref": "5dd6fe90-975a-47b2-adfb-ebe46fa3ff57",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "aee69af7-837f-4745-bc85-126ab929584f"
        },
        "item": {
          "id": "b621664b-8d84-419f-9cb2-6dee4e83acfa",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "a997bf56-e202-40a4-b7aa-11c6027e15e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b314c384-1aeb-4abc-af87-c9a556499f73",
        "cursor": {
          "ref": "24431bf2-f192-4bcb-8713-140d08f3caf8",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "6a12f12c-7d18-4875-a389-655769e13994"
        },
        "item": {
          "id": "b314c384-1aeb-4abc-af87-c9a556499f73",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "76f7e08e-7b4f-4f4a-90e3-d412fa56fba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aabe80a-ae2a-48b5-85a4-965e174df08c",
        "cursor": {
          "ref": "8c72a608-144c-4719-ac54-82331a5113ca",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "85990ded-4777-4bbf-838b-74e63ed52796"
        },
        "item": {
          "id": "0aabe80a-ae2a-48b5-85a4-965e174df08c",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "d405c184-81e5-45b2-a1fb-d6d256b70fc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a25f853-6694-4cc4-b020-0c0993f3d569",
        "cursor": {
          "ref": "29831e12-d230-47b9-90bc-cdb054340fbd",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "a541add8-a2ed-42b4-8d22-f84f5f244969"
        },
        "item": {
          "id": "4a25f853-6694-4cc4-b020-0c0993f3d569",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "49ba58a1-d911-42ec-9d9c-95c5fca11138",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1afd81d4-6c55-4c9c-ad1b-dd17bf3ed47b",
        "cursor": {
          "ref": "f18b00ea-bf7b-4607-ba62-0225e0bc78b7",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "32a1218f-d104-4c2e-b947-46da2f6f0506"
        },
        "item": {
          "id": "1afd81d4-6c55-4c9c-ad1b-dd17bf3ed47b",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "3e16b90a-d893-4455-8ccb-4da3e0270ab9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1275e5e-94cf-46d9-82ca-5ccb3a58d601",
        "cursor": {
          "ref": "331bf36b-9d27-4f7d-a1bd-d86aee3265d0",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "c1cc4399-1d86-48fc-8ce0-6dfdddf7975a"
        },
        "item": {
          "id": "e1275e5e-94cf-46d9-82ca-5ccb3a58d601",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "a5775f7c-bb1a-4d49-ba83-f322126ad6ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ae0e28e-bf59-4210-9668-df0091b38ea5",
        "cursor": {
          "ref": "2580d867-5678-48ea-a417-4c42b9fa048a",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "2a77d3de-a759-4886-b645-95fa75c44576"
        },
        "item": {
          "id": "1ae0e28e-bf59-4210-9668-df0091b38ea5",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "82272794-e509-4998-a066-f5159b805d30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "915f05e6-69de-4d3d-a64c-5d0d24cfa05b",
        "cursor": {
          "ref": "002ed0d3-7e20-47af-bb48-bd76f5f141ee",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "61aa5c3c-ea64-45b7-bc61-fecc92e76dba"
        },
        "item": {
          "id": "915f05e6-69de-4d3d-a64c-5d0d24cfa05b",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "7e7853a1-3271-44c2-ad80-c8f3a6a5eb07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddce3e25-2983-4660-ae01-5ae011eabce7",
        "cursor": {
          "ref": "6459ec84-2529-4737-a8b3-46c6db3c8fe0",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "b8bb6301-a5ab-4f9e-96b9-a21e3e2c3e2b"
        },
        "item": {
          "id": "ddce3e25-2983-4660-ae01-5ae011eabce7",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "dcf395b0-7c5f-4620-b2c8-388970a91bff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ec6effa-0366-438a-b1a0-4392539ce329",
        "cursor": {
          "ref": "1603aebe-75b9-49ee-8c62-65fad077749a",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "7265fcb6-cd53-4ae6-ac85-857c851972cd"
        },
        "item": {
          "id": "5ec6effa-0366-438a-b1a0-4392539ce329",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "b627d20e-91e0-46b7-8f03-d27abe1c394e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9da6049b-d677-43a7-80e1-68e5d629c546",
        "cursor": {
          "ref": "6e4c4022-4055-4171-b4f9-7edeba4677fc",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "0c4a6307-6191-478a-b10e-ad837106b471"
        },
        "item": {
          "id": "9da6049b-d677-43a7-80e1-68e5d629c546",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "74457845-5040-4077-9c11-3d8ac856893e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3abd8deb-4966-44b8-866f-5b2641b1ff8b",
        "cursor": {
          "ref": "155e30a1-9be9-4a54-8b0a-b38796af1bdc",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "1d2d09e7-ad3a-4699-be18-5202abc1dc18"
        },
        "item": {
          "id": "3abd8deb-4966-44b8-866f-5b2641b1ff8b",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "6e7d7703-5a4f-4267-b135-8d052e551e47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0204b219-5dfa-45bf-b01b-d737496449af",
        "cursor": {
          "ref": "8e095747-832f-4dbf-b0f2-f4a78f5c5aab",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "f2db93b3-7e45-4138-ab94-34ea33aa5aed"
        },
        "item": {
          "id": "0204b219-5dfa-45bf-b01b-d737496449af",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "ef9e3234-2505-4551-a44c-ae4146c248b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59edc509-48f8-4f54-a22a-fcfd3c49f841",
        "cursor": {
          "ref": "d90a8325-391b-4916-b4e9-f210d889b3bb",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "22e35744-da54-4016-996f-071be7ea7b64"
        },
        "item": {
          "id": "59edc509-48f8-4f54-a22a-fcfd3c49f841",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "0b482fe7-ef7c-45f5-9202-32ec881df01d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12612fbc-0fe2-4322-85d0-7f9fc7f53d0d",
        "cursor": {
          "ref": "7075db7d-4222-4f98-860e-ce7a74610c83",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "ec72f600-7f6b-487a-9bc5-ed8f320da998"
        },
        "item": {
          "id": "12612fbc-0fe2-4322-85d0-7f9fc7f53d0d",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "89892f61-2b20-4953-bb1f-f04211d6f84a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "892a00e1-a47f-4aa9-9a57-8e68c7c28644",
        "cursor": {
          "ref": "ba1311f6-6a7c-40e9-9be2-9580eb294768",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "e43e0441-5ed4-41c1-bb54-f217abf1101a"
        },
        "item": {
          "id": "892a00e1-a47f-4aa9-9a57-8e68c7c28644",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "ab0031ba-9e59-4a41-90f8-dfbebf89c300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62b9d586-4a72-414e-8bf5-b0a4e76b0dbe",
        "cursor": {
          "ref": "c61f8e31-caec-492b-bbfc-adb0e57484b1",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "8f39dc91-c901-4088-abda-5215e694042a"
        },
        "item": {
          "id": "62b9d586-4a72-414e-8bf5-b0a4e76b0dbe",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "b6c52f6b-2043-4741-9fb6-702f70da1743",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a013f8a-1516-415e-a5d3-95d1f1fa8c26",
        "cursor": {
          "ref": "a6280ef8-5419-4303-b532-1afb1dffff51",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "af75d7eb-2d28-4eb1-9af3-ec0af02b6582"
        },
        "item": {
          "id": "7a013f8a-1516-415e-a5d3-95d1f1fa8c26",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "4afdbdce-33d7-4cce-a862-2e2503c1bd97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "956e99a3-8dc9-4bc2-b944-f0aaa88b96a3",
        "cursor": {
          "ref": "7653cdc3-5976-486f-be1c-06ae788dae29",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "14007277-8352-43b4-ada7-f7464b4965c2"
        },
        "item": {
          "id": "956e99a3-8dc9-4bc2-b944-f0aaa88b96a3",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "4ce5533a-c94c-4c0a-a89d-ef3ce7a3f102",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66334900-3871-49aa-b673-6746a3cc28b2",
        "cursor": {
          "ref": "49f1776f-7762-4b73-93c6-9a894a8e47a8",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "9efb15bd-700d-49eb-858f-71c52953bf5e"
        },
        "item": {
          "id": "66334900-3871-49aa-b673-6746a3cc28b2",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "be68bea0-0b44-4ece-8270-561c46bd0e63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac33674a-b611-4da6-96ad-8d45864b194f",
        "cursor": {
          "ref": "eac90a9c-0a0c-4be8-b34d-8300f60d583a",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "71a75619-ba8e-4927-979e-8dd252e6b1b3"
        },
        "item": {
          "id": "ac33674a-b611-4da6-96ad-8d45864b194f",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "098cf040-0161-42d4-834b-c66ce6efa52d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e305b0bb-fb53-493e-9347-d11da5326c2a",
        "cursor": {
          "ref": "492d70ea-5a6c-422c-9816-a498f92fb94a",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "a4c03283-8448-4d5e-a60e-556d7812d1db"
        },
        "item": {
          "id": "e305b0bb-fb53-493e-9347-d11da5326c2a",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "e597621c-3add-47a0-97d0-97fd5c31fe68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb6b8adb-1917-449a-b995-16225e4929a1",
        "cursor": {
          "ref": "0840a6e7-1444-4f75-8127-4b75158d0c2d",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "27220d9a-56af-42ac-915e-7df0bbd0e6ec"
        },
        "item": {
          "id": "bb6b8adb-1917-449a-b995-16225e4929a1",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "e6eb87f5-5c71-4ddb-9725-e8d7cf1d4e47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44a7bcca-8492-4a53-b967-2421a7d12ad6",
        "cursor": {
          "ref": "2460b6c3-43a0-4b50-9450-2b0c905a0b45",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "3d55340c-fed9-4842-91c2-682e8162bb0b"
        },
        "item": {
          "id": "44a7bcca-8492-4a53-b967-2421a7d12ad6",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "3b0761c5-368a-4fa7-aca2-80ab83f91ace",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e486a299-eb8f-4e83-930d-9a7e01db381b",
        "cursor": {
          "ref": "af69a2b3-b71f-40af-b0e2-c8069010e926",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "df6c278d-8279-4737-8124-2af6c5744e8f"
        },
        "item": {
          "id": "e486a299-eb8f-4e83-930d-9a7e01db381b",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "61f55ddd-10d9-42f2-8b6c-8adbf6cd915d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9288fc93-7b34-4efb-93a5-54f9b30cafaf",
        "cursor": {
          "ref": "318a6292-0f0c-40b5-aac6-8c5e8a34f85d",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "e8d3f46d-e9fd-4328-adc1-3946a3d497d0"
        },
        "item": {
          "id": "9288fc93-7b34-4efb-93a5-54f9b30cafaf",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "b518c90e-b076-4e3d-be8f-1d63bb7cb98b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05dce3d0-9fd8-49eb-88ca-b2fc1ac4ba8b",
        "cursor": {
          "ref": "a7c73bbe-a83b-463e-ad8b-68fab9bf0930",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "3a0c20a8-0639-4a45-a708-1e418fdbdd12"
        },
        "item": {
          "id": "05dce3d0-9fd8-49eb-88ca-b2fc1ac4ba8b",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "d306cfe5-c337-4943-ba62-0f644dcb0d3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d21adcaa-6338-4816-ac8e-806a05638bb4",
        "cursor": {
          "ref": "64c24c7c-6af6-47b6-9e77-307386e817df",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "d271d0e9-8749-42a0-9fd8-7d502ca3a93d"
        },
        "item": {
          "id": "d21adcaa-6338-4816-ac8e-806a05638bb4",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "ce830db8-5a86-445a-905a-b8a4fd53de16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "446a45b6-73e2-4079-a274-85b11d7579aa",
        "cursor": {
          "ref": "a1b73af9-d7b2-4516-a7d3-0f4574c525b9",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "123b9420-041a-4958-8e14-cc486cd65e93"
        },
        "item": {
          "id": "446a45b6-73e2-4079-a274-85b11d7579aa",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "ece63a69-8681-4e75-a530-dff22076cf52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95b1a7a7-fa74-477f-8a76-3ee9d72d6ee7",
        "cursor": {
          "ref": "c361feb8-1442-4a29-937f-3b8f58809cc8",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "d0ee7c90-5bdf-4f56-93e3-137ef25404ee"
        },
        "item": {
          "id": "95b1a7a7-fa74-477f-8a76-3ee9d72d6ee7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "f4f63f77-5536-4b47-8b5e-8b87433b6dc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cecfca8-02e3-4c90-a0f9-5f9e09ce9ed2",
        "cursor": {
          "ref": "31db92f2-a88b-4d1c-8c96-d5c11221b06e",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "c0912ea8-4509-45da-9fa5-c05c9ae76ae3"
        },
        "item": {
          "id": "9cecfca8-02e3-4c90-a0f9-5f9e09ce9ed2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "4357aea2-829b-4b4a-b352-44ad486d5751",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc5c0141-1cce-4dcd-b1de-cfe43df598b3",
        "cursor": {
          "ref": "c369c2f8-0ec2-40a9-9055-9850d0c2bf77",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "9e03a82f-09e5-42a0-a647-76363054e643"
        },
        "item": {
          "id": "dc5c0141-1cce-4dcd-b1de-cfe43df598b3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "c57a3ee8-0340-4a81-8dea-09167b0570e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a35dd0b-79a3-4831-b00d-967b0b814bd3",
        "cursor": {
          "ref": "b792979c-4ea9-47e7-b4e8-e5a43d553ae2",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "9849ab90-9d55-4b20-97d4-686697ff1c6b"
        },
        "item": {
          "id": "2a35dd0b-79a3-4831-b00d-967b0b814bd3",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "d10d3f8b-5ad0-4c50-a4ee-3b219c24d944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d334c148-d9cf-46fb-b83f-604891ae65eb",
        "cursor": {
          "ref": "a285aff7-3379-4ab6-b772-9391e2935736",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "c75c3804-07ff-4977-b5d9-6ddb5fd7ca1d"
        },
        "item": {
          "id": "d334c148-d9cf-46fb-b83f-604891ae65eb",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "57fca931-71d0-48d4-91ef-4496a0b22918",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af1759aa-193d-4293-8182-f2cfd9e1a79b",
        "cursor": {
          "ref": "ec5c08dd-dd18-45e3-b574-5771270e2a0a",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "469b0e10-d5c9-49c8-bc13-d5b90848403c"
        },
        "item": {
          "id": "af1759aa-193d-4293-8182-f2cfd9e1a79b",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "c89d86e6-7be3-4396-91a2-71d088668164",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2e5d55b-7fd4-4797-8949-5e05e8c140b2",
        "cursor": {
          "ref": "b7025448-d3ef-4740-a9ca-a86f246de7de",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "673e9896-102a-4997-a69c-e8bcd48ad9e2"
        },
        "item": {
          "id": "f2e5d55b-7fd4-4797-8949-5e05e8c140b2",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "5508f06c-d950-4335-be9f-a34e3e152b83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c266463-aadf-4cc1-bc58-9f771d73198f",
        "cursor": {
          "ref": "7e92ab28-74fb-400c-880d-913b9246a8d1",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "baff5171-4c43-4181-a7ee-635898ad7b6c"
        },
        "item": {
          "id": "9c266463-aadf-4cc1-bc58-9f771d73198f",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "10dd3c41-646a-4f42-9ea8-8a6c672811c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7026583-0450-42f8-a275-aab53ce2b0f3",
        "cursor": {
          "ref": "419dfcf1-1277-4630-9d9e-807d0aeb96e7",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "438f080b-65fc-457a-a776-e321c994c0af"
        },
        "item": {
          "id": "e7026583-0450-42f8-a275-aab53ce2b0f3",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "19eac7fe-5d27-4e62-bbe7-fa1771dddbc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b190e0c-de23-4dc5-bdac-109b29e0b704",
        "cursor": {
          "ref": "41c2947c-d10d-4a88-ac96-961bafcbc471",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "73566daa-7410-4eee-aaef-e92a95e1f5e3"
        },
        "item": {
          "id": "6b190e0c-de23-4dc5-bdac-109b29e0b704",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "24cd636c-537c-4f4f-94f3-c3ac6dcf94c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39721349-2b35-432a-bec1-a030d0fe3121",
        "cursor": {
          "ref": "8249ecfa-de91-4bc0-9ae2-c5cd4ed62719",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "924fcc39-0f84-4de3-ad7d-ab7c5fa81546"
        },
        "item": {
          "id": "39721349-2b35-432a-bec1-a030d0fe3121",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "10ee71ab-46ef-4e00-a163-b8b168d4e9c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24630b2c-173d-43d1-ad1d-0b3f2a1884b7",
        "cursor": {
          "ref": "690e731c-963d-4328-85ae-a62554a11a85",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "49d46d03-c115-4c8f-b5d0-62f9153dc86b"
        },
        "item": {
          "id": "24630b2c-173d-43d1-ad1d-0b3f2a1884b7",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "4fb08cff-d11c-4395-9bec-41ec78927134",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b061f3a9-c3f8-4d0c-9cc4-ca3e8ddb7ad2",
        "cursor": {
          "ref": "d01d30d2-1419-4cdf-abd3-3682a05a69f4",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "a1f808fc-2454-461f-b329-08c468e2fc46"
        },
        "item": {
          "id": "b061f3a9-c3f8-4d0c-9cc4-ca3e8ddb7ad2",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "47ea2c1a-d1b8-47de-9159-ccf0862de4e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46cbfb0f-dd6c-40e3-b0d0-786e878fbb73",
        "cursor": {
          "ref": "d9170913-f491-439b-88c0-5c5e96b5542e",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "d031448d-d41d-4cf1-956e-c4a6cc05a289"
        },
        "item": {
          "id": "46cbfb0f-dd6c-40e3-b0d0-786e878fbb73",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "563dc3d2-4cce-4245-a4cc-7c4b046fd522",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bef64654-d27f-4c4c-aba2-2c19717dac03",
        "cursor": {
          "ref": "d9104426-e8f1-4e9e-a1e4-79aebfc3edda",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "daad8a34-c0e0-4508-867b-fdb428f6e3d9"
        },
        "item": {
          "id": "bef64654-d27f-4c4c-aba2-2c19717dac03",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "3ef35fc6-21b0-4ecd-959a-19af6232a3cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf5fb930-cfa4-4921-94e7-ae8e994b36c1",
        "cursor": {
          "ref": "c2a99870-4bc1-4231-86b3-4585afb28971",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "3858188a-58d2-4098-ba66-2210a24c2df0"
        },
        "item": {
          "id": "bf5fb930-cfa4-4921-94e7-ae8e994b36c1",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "54e683ae-9cab-4110-80b3-a05f8d4c0dc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c3da977-6b6a-42ad-852e-1caa4e2618c5",
        "cursor": {
          "ref": "3317487c-5e6d-4bf6-a003-d400a5390bab",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "16fcc97c-5aeb-4652-bdb9-d80ee32943cb"
        },
        "item": {
          "id": "9c3da977-6b6a-42ad-852e-1caa4e2618c5",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "dee91098-dd79-49e1-a68f-ba627d8d15bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 861,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5eea839-cd61-43d9-960a-1fe1fc80e880",
        "cursor": {
          "ref": "96e64d75-e71f-44fc-ace9-c910f8c41c13",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "eb8e8f97-1288-4225-a2ec-f36a6667bebb"
        },
        "item": {
          "id": "f5eea839-cd61-43d9-960a-1fe1fc80e880",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "89caf33f-0cfb-466a-b3b6-62e5b2a85c2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43884dab-9406-451d-ae11-8b2d4d19a688",
        "cursor": {
          "ref": "fb8588c2-1b19-4e05-8d2b-6b32b6901de2",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "de0e578c-17b1-451e-a73f-f3a7521bb16e"
        },
        "item": {
          "id": "43884dab-9406-451d-ae11-8b2d4d19a688",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "513865d3-6872-4702-a3e9-e7bff8479c44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0daf21ed-fe88-425f-ab88-2ca08bcb0532",
        "cursor": {
          "ref": "78d5a6f7-aa24-433b-a938-0a069d87b6c0",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "239a0dee-f800-4f1a-b0c3-b69a879d0ba2"
        },
        "item": {
          "id": "0daf21ed-fe88-425f-ab88-2ca08bcb0532",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "1f340859-8123-4346-b2cb-12feada6fb7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8239ca5f-f3f0-413d-b38b-31da9bddd29b",
        "cursor": {
          "ref": "22b3754a-8843-4f68-8887-0d16272b20aa",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "3b3b9666-00c5-46c2-b43a-8d774962ab9a"
        },
        "item": {
          "id": "8239ca5f-f3f0-413d-b38b-31da9bddd29b",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "39d8b282-4a5a-4d64-b3c0-58fe63fbeaaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f268172c-b731-4699-b655-095e00081b1d",
        "cursor": {
          "ref": "b4dc3b1d-2ac2-4964-9e56-7b38bb67fe40",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "9414b6a6-5bb3-40fc-ab0e-1f96fa81c179"
        },
        "item": {
          "id": "f268172c-b731-4699-b655-095e00081b1d",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "84fb9c04-abef-443d-badd-e263953f6915",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1947caa4-d5a1-463f-b5c1-ec93c3742bab",
        "cursor": {
          "ref": "5239f8a0-aadd-4182-89f4-09d9d24ee8ea",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "924ccb5b-96a8-4cb4-b46b-20b7da2df8e6"
        },
        "item": {
          "id": "1947caa4-d5a1-463f-b5c1-ec93c3742bab",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "41f08a14-b96f-4d9d-9b71-ff379099c6f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93fa9ba7-e50a-4cd1-8549-7c0960084a66",
        "cursor": {
          "ref": "1775f19c-8af1-46e8-9d82-8b3eda97c8a5",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "f5c5d1c0-f3ec-40bd-8966-a5f44573e5cd"
        },
        "item": {
          "id": "93fa9ba7-e50a-4cd1-8549-7c0960084a66",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "81dac1a7-e1fc-479c-a985-87cfb87ebe03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "632e885d-56a2-40b4-a21a-0be3d6fda2b0",
        "cursor": {
          "ref": "f9b7d548-a936-45cb-b938-6ca1368609ee",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "6f61dde9-40b6-4111-9d84-2c4e64f872d3"
        },
        "item": {
          "id": "632e885d-56a2-40b4-a21a-0be3d6fda2b0",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "1e0671ff-c694-4da6-947b-6e2806567899",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84d66146-b76a-49a2-b27a-b080f744a0b5",
        "cursor": {
          "ref": "c0a0274e-7e7e-47c7-9452-394ba654edcf",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "bdf08ebc-e210-4a30-8e34-e4da25154d01"
        },
        "item": {
          "id": "84d66146-b76a-49a2-b27a-b080f744a0b5",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "2ee02981-5368-46bf-a09f-00cbd9492d52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52197189-47fb-41ec-9225-16bcb87629a2",
        "cursor": {
          "ref": "2fcf7f17-d200-486f-8586-9e736389d562",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "79878dbc-543f-451f-832f-5cf4dbfc4e32"
        },
        "item": {
          "id": "52197189-47fb-41ec-9225-16bcb87629a2",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "ef40e63e-d3f2-44d8-a688-7297bc00bd4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05ab2085-1b27-4624-8d15-0ce45477ca1b",
        "cursor": {
          "ref": "c0d5cc58-5f3a-4ce4-9c42-43148853fb96",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "f8487441-d437-4eab-a499-629ca8f04c2e"
        },
        "item": {
          "id": "05ab2085-1b27-4624-8d15-0ce45477ca1b",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "6097af65-9e16-4324-8429-bfda1eb68ed6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a38ccbeb-ed13-4e4b-87f8-42854c22a18f",
        "cursor": {
          "ref": "a0b4cd5d-70f2-4d9e-8e0c-6887c95abdd0",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "ab2e1f28-ee16-4083-bfd1-aabc88d62bc8"
        },
        "item": {
          "id": "a38ccbeb-ed13-4e4b-87f8-42854c22a18f",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "9eac633e-c262-4201-8b70-c5fb8d4527e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0058c99-1df7-408e-bcf3-4b36296d48e1",
        "cursor": {
          "ref": "df76ddeb-93b1-4451-b859-7bd28e25c547",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "81c25982-928a-441d-a6a4-e244da6e6ff8"
        },
        "item": {
          "id": "a0058c99-1df7-408e-bcf3-4b36296d48e1",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "93914cc5-be27-45c8-ae0b-bd24d83a21bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2af0ee49-e1dd-463e-9740-9508487e4601",
        "cursor": {
          "ref": "61162b08-4732-444c-b4e9-39c56f0be781",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "ac736053-c6ab-4f8e-bca3-dbbd5cad616f"
        },
        "item": {
          "id": "2af0ee49-e1dd-463e-9740-9508487e4601",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "7ff61510-6f56-4133-9a2d-adb8b75b335c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac89c809-2c07-42ee-bab6-ac057c3f2678",
        "cursor": {
          "ref": "395756c6-076d-4673-b7a9-f153c21d5245",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "de8b7674-5638-4b13-9025-d9856ceb1653"
        },
        "item": {
          "id": "ac89c809-2c07-42ee-bab6-ac057c3f2678",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "52ae307d-3a4c-4eaa-acd7-2bbc5b281e80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0283de92-2ff4-41bc-83d3-599e71d74e94",
        "cursor": {
          "ref": "488eb688-c120-4778-98f3-76c273708002",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "371685a4-1a4f-4ff2-b719-938bced524e5"
        },
        "item": {
          "id": "0283de92-2ff4-41bc-83d3-599e71d74e94",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "8ce25f5e-1b50-4d16-86b8-30a5f264b39c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "122a29e0-2a47-403f-871f-65ccfacb52ae",
        "cursor": {
          "ref": "ad87e2ca-989d-49dc-bc13-91bbe1347c06",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "f1bf6fae-3e8b-49a5-9c61-6f8dd86b11f1"
        },
        "item": {
          "id": "122a29e0-2a47-403f-871f-65ccfacb52ae",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "436b196d-b356-429d-b6c7-03a0ba1c82f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58956ccc-4fce-4d39-976a-e7d366d600f1",
        "cursor": {
          "ref": "e73e6a1e-d504-41ec-8820-2d040e8cec18",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "4cf53cdb-9820-4e8c-af70-1b46298ed431"
        },
        "item": {
          "id": "58956ccc-4fce-4d39-976a-e7d366d600f1",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "2ec30b07-2d92-450c-9f72-25f69efa6f08",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5921a62-33bb-4ecc-85ee-cf7b8b08fce3",
        "cursor": {
          "ref": "e24210dc-09a3-4ce2-8d4b-b17e7b09d7ed",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "be8bbcac-dd74-4ab2-8b71-7e31b8199f10"
        },
        "item": {
          "id": "c5921a62-33bb-4ecc-85ee-cf7b8b08fce3",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "16f341db-775f-4aab-b6b5-ee3a68b9c246",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "bcda0412-53e4-47c9-b8d9-1bfef18b8854",
        "cursor": {
          "ref": "1033065f-0584-45c8-868d-ac429656ebc7",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "a69e2f0e-c6b1-4c50-a6c5-9b2f809ba9ab"
        },
        "item": {
          "id": "bcda0412-53e4-47c9-b8d9-1bfef18b8854",
          "name": "credentials_issue"
        },
        "response": {
          "id": "7f7e1b1a-7dbf-4cbf-8b56-8a1eef997a67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "ad2cd149-c0db-4462-a6d4-7af96beabc55",
        "cursor": {
          "ref": "8e96c8c7-fd4f-4bef-a76a-8bb1bc10b1ed",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "07535040-0fbd-43a2-a807-e915820658ff"
        },
        "item": {
          "id": "ad2cd149-c0db-4462-a6d4-7af96beabc55",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "2e5053ff-6d03-4065-9f4d-696ed7072f8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "aec7a6ee-ccfa-487b-b4da-b0879d447551",
        "cursor": {
          "ref": "06fec8e2-19a1-4ca1-9625-6f0da1e90616",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "7f7b1433-0e54-4815-91e5-974e66d3a3b6"
        },
        "item": {
          "id": "aec7a6ee-ccfa-487b-b4da-b0879d447551",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "cb21089c-a392-4b59-9d1b-ab739f127953",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "62f7165a-39b5-4998-ab36-8a394e14e4f2",
        "cursor": {
          "ref": "c5dec7ee-1419-4da8-98b1-8babd49e6e3b",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "3bb1bacc-7fac-496d-a783-a5fc41c690e0"
        },
        "item": {
          "id": "62f7165a-39b5-4998-ab36-8a394e14e4f2",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "3c316a13-067c-4c91-9bad-f4af637ae483",
          "status": "Created",
          "code": 201,
          "responseTime": 10082,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ece17548-a0ec-48e4-866c-da2851780dee",
        "cursor": {
          "ref": "a721ace1-e373-42a8-b3c1-c303a9212e1e",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "5b6fff61-509d-4042-bb23-9b47ea4df77c"
        },
        "item": {
          "id": "ece17548-a0ec-48e4-866c-da2851780dee",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "32a8b428-e1cf-4276-8679-d27dbccb12e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "ada02319-a8df-4462-9cb8-920670f9041e",
        "cursor": {
          "ref": "219ca0a9-4edb-4f73-b3b2-a913d6d50403",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "b5a9c50b-dd4e-4b6d-8997-a39921ab4c4f"
        },
        "item": {
          "id": "ada02319-a8df-4462-9cb8-920670f9041e",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "26624b27-4ca6-4a58-a5e6-8c8bcec7e4ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "e8847767-4b73-4e8a-9dee-138bc13ee3a4",
        "cursor": {
          "ref": "56c425ea-b43d-4a8d-ad87-a6fa7da283b5",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "ad43e4a5-a252-4354-ad96-8c50a048d809"
        },
        "item": {
          "id": "e8847767-4b73-4e8a-9dee-138bc13ee3a4",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "11d8ee42-e3b0-4d79-94ed-5e466e7237ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a35eeb2f-e242-42dc-930f-aaf56e91a856",
        "cursor": {
          "ref": "c66da17a-f2ad-405e-b1af-908f8d1c02e0",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "2fc0224c-3640-4d62-9933-5815f4fb2eca"
        },
        "item": {
          "id": "a35eeb2f-e242-42dc-930f-aaf56e91a856",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "411d0453-bfad-48f8-befe-ed7f13922c03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5c51370-1221-4349-9821-157ec0698926",
        "cursor": {
          "ref": "7ad83467-ca48-4a2f-80c7-a883021da18a",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "733286c4-069c-450f-9778-d8550d5b1688"
        },
        "item": {
          "id": "a5c51370-1221-4349-9821-157ec0698926",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "44d3cfd2-4f19-4c04-8e35-4c1427fcbc70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b403bd76-f697-49d6-ba91-d5c0be0b2c04",
        "cursor": {
          "ref": "2591c944-88b4-4233-ad75-225456a3132e",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "0849da3a-d698-4f01-a78f-65617dde3c9a"
        },
        "item": {
          "id": "b403bd76-f697-49d6-ba91-d5c0be0b2c04",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "639883b4-f717-4a31-856d-a200b16fc6ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c23215a-676e-4512-8de7-543a5c90af2a",
        "cursor": {
          "ref": "51b541fa-1ae8-4ca0-9a50-705eb3012c20",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "9ed5209d-16ea-4dcc-a33f-d58e605969bc"
        },
        "item": {
          "id": "4c23215a-676e-4512-8de7-543a5c90af2a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "983cc9a2-10f6-4e60-99e1-8459baf40387",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b62e493-0619-41e4-abd8-f8c4b31acefc",
        "cursor": {
          "ref": "d55fb4fa-4d5f-4880-ac7e-d87b9ba4eff6",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "acfe7e50-99c7-46bf-8ae5-8f8cab989657"
        },
        "item": {
          "id": "6b62e493-0619-41e4-abd8-f8c4b31acefc",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "496d0de2-ded0-4144-baa5-8fd606f3546f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "692e912b-e9cf-4ee7-aa67-d2b3eb0306f6",
        "cursor": {
          "ref": "713055ec-8ac6-49ec-964c-68bb01efbe23",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "0d99b5e5-1586-4284-8ebc-0e11ac829400"
        },
        "item": {
          "id": "692e912b-e9cf-4ee7-aa67-d2b3eb0306f6",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "e870aee2-5773-485b-bd09-2d1afa12374c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0443145-2df7-4c88-a7bd-eae20b3eba7b",
        "cursor": {
          "ref": "24f27b09-1547-4098-ba67-799dd01ded92",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "cac009fe-373e-4ab6-b583-4ed521fd8b59"
        },
        "item": {
          "id": "e0443145-2df7-4c88-a7bd-eae20b3eba7b",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "6b2a43dc-81c9-4fa6-b899-f964205b9797",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41e39452-fca2-4fa0-9dee-6127bac8a27b",
        "cursor": {
          "ref": "21324949-c4c5-4b98-9534-752094c055e1",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "ff6b5b2f-7d51-4575-aa53-22d368ef207e"
        },
        "item": {
          "id": "41e39452-fca2-4fa0-9dee-6127bac8a27b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "50ce6b3b-30e5-4877-b9a4-eae5924d2646",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21787621-02da-4a3f-afce-165cead618c2",
        "cursor": {
          "ref": "6a6bbe88-374f-49df-872d-323f028700f5",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "1e738b29-5634-4596-b260-a2b5f54e7a61"
        },
        "item": {
          "id": "21787621-02da-4a3f-afce-165cead618c2",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "d3e13020-dc0d-4c80-a978-00a46e5f6f92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53f9ac34-fb7d-439b-8609-e5ffb196f25f",
        "cursor": {
          "ref": "ee0729e7-573b-40a8-8551-21cf98d2b2ad",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "d47d5e6f-f8ae-496e-82a1-6e6fc2207516"
        },
        "item": {
          "id": "53f9ac34-fb7d-439b-8609-e5ffb196f25f",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "ac7106a0-2364-4fe6-9c22-5c737b7c2337",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20912e5d-686a-43a2-88e6-211c2a2fe914",
        "cursor": {
          "ref": "dbf97bd3-583e-4c87-8f1a-2462a04a265a",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "7360ee3e-ad5c-479d-b04b-39fa30c43bdb"
        },
        "item": {
          "id": "20912e5d-686a-43a2-88e6-211c2a2fe914",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "b4ae54eb-9ea3-434a-af36-53f26a21a21b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 113,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65016892-818b-4922-b01e-fa5baa8568c6",
        "cursor": {
          "ref": "06992720-d5d0-4520-b3d5-8bf5adc8c13a",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "7d6503e6-b00f-4169-bd3d-e8171e9e08dd"
        },
        "item": {
          "id": "65016892-818b-4922-b01e-fa5baa8568c6",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "8f801adb-a67d-4927-b74f-ca5b93d3fb30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "272cab27-9d4d-4bb3-aead-dcae558c1386",
        "cursor": {
          "ref": "507032bd-f1af-4e33-bba2-c88fcb1026f8",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "f23ff14d-00ba-4085-a083-78aabd60e9a7"
        },
        "item": {
          "id": "272cab27-9d4d-4bb3-aead-dcae558c1386",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "c9f4b862-71b7-4415-bea6-ca0606222373",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "841f554d-2d2a-4b48-b8c4-40b1819efcbd",
        "cursor": {
          "ref": "7e38a1d4-95e1-49c7-bf6b-dadc9f981bd7",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "dca8a1d4-0875-4bf0-865c-9afbd94d3e3b"
        },
        "item": {
          "id": "841f554d-2d2a-4b48-b8c4-40b1819efcbd",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "2f4abead-c752-432c-9e40-89350be71ac8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a9a2098-1bcd-40b2-b5b7-b58f68388544",
        "cursor": {
          "ref": "71e4434d-bdce-453e-915a-0587659e212b",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "90d47599-29b1-4ea6-9042-d667f750f04b"
        },
        "item": {
          "id": "7a9a2098-1bcd-40b2-b5b7-b58f68388544",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "67052358-1fc8-44bf-932b-12bdb6761062",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36817dd0-b226-42d1-aac6-6e893272fbc9",
        "cursor": {
          "ref": "3818e28e-406c-4aa5-b160-588962efa2ff",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "473aa2cf-e6c4-4cbb-8bfb-8e4dbee82669"
        },
        "item": {
          "id": "36817dd0-b226-42d1-aac6-6e893272fbc9",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "87eb2bed-b23e-4706-8c5d-3195e9cd5d5f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 63,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "66951516-d2bd-4750-8736-34cbb31799ec",
        "cursor": {
          "ref": "e3ab4e48-1c40-4e65-b9f9-da77d5ec8252",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "616ed004-8ba1-4f8d-875c-ffe53cce5521"
        },
        "item": {
          "id": "66951516-d2bd-4750-8736-34cbb31799ec",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "31ded26e-08ed-4f7e-8fea-d8ec75f74704",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "195d5372-4115-4be9-941e-4b853ffdf344",
        "cursor": {
          "ref": "9655ee2b-57e6-4227-bcff-4a0309020f3b",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "aba64f1d-2f6d-4300-9b4f-f647528ed0b0"
        },
        "item": {
          "id": "195d5372-4115-4be9-941e-4b853ffdf344",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "49eea9f4-7df2-4c2e-98e2-5e8dcf10e576",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23f6d2ba-b047-4ef4-9221-176d81ac4ef3",
        "cursor": {
          "ref": "b2f4a0d4-bad7-4aaf-970a-55310cddb6cb",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "e41a8139-80ac-45c0-946f-8b29b5630996"
        },
        "item": {
          "id": "23f6d2ba-b047-4ef4-9221-176d81ac4ef3",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "8d711098-9b68-445a-be92-bace9617cd11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b366811-a01f-44da-ae53-ceb059f421a3",
        "cursor": {
          "ref": "5f355093-1575-4c76-b82f-ddfa9bf07398",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "7b45e325-5b43-44f4-bcb2-18c86c4e5dff"
        },
        "item": {
          "id": "8b366811-a01f-44da-ae53-ceb059f421a3",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "52dc9ecc-2a86-43e4-9ed8-a8ea503bc125",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4ab6473-5af4-4e5a-9adb-a9c04d7c3337",
        "cursor": {
          "ref": "c4f4f486-8d7a-43f1-bbdc-39a25c47cdee",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "bec14cae-89d4-465c-b5cd-6fe009fc08c2"
        },
        "item": {
          "id": "a4ab6473-5af4-4e5a-9adb-a9c04d7c3337",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "81c7e269-bb91-4ddc-ab06-0e1fda012ec6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73c6286a-8acc-4f5e-835c-0d643ab653bf",
        "cursor": {
          "ref": "22cfb506-2dae-4343-8022-407bb592045c",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "19ba15e3-ffce-4bff-895a-c689c302f7a2"
        },
        "item": {
          "id": "73c6286a-8acc-4f5e-835c-0d643ab653bf",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "de5d2204-e4ba-4141-98f2-0315e8028085",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9ed83ff-6729-4c2d-837a-9e0bcb59a61d",
        "cursor": {
          "ref": "61069d42-1f4d-47e2-8152-3c3a8a450df8",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "5d95a085-d064-494b-ba87-a01eb2137637"
        },
        "item": {
          "id": "e9ed83ff-6729-4c2d-837a-9e0bcb59a61d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "eda50785-cde2-49e9-af74-df9e663b51cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b182ffa-0a73-4b82-982b-3a994ee667bb",
        "cursor": {
          "ref": "a3f198a5-fa99-4b67-9317-3d6804407334",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "24678c7c-351a-4395-9547-e4ac70466349"
        },
        "item": {
          "id": "2b182ffa-0a73-4b82-982b-3a994ee667bb",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "814d165d-45c0-494a-bf4f-8de176f2b58b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 64,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "b807d121-b163-4142-9db5-328ac42641df",
        "cursor": {
          "ref": "ec0c76e9-c035-4872-acc1-5e67e3bf61d9",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "a6e530b2-4612-4dac-b9cb-80abd3af08e4"
        },
        "item": {
          "id": "b807d121-b163-4142-9db5-328ac42641df",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "2c77a9ec-4b3d-41b3-8421-c0c70be542c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4098b555-e2ad-4d21-9da1-999b783c16cc",
        "cursor": {
          "ref": "0e350c75-5f1e-4d0a-8cf1-d96b3ba6eba9",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "5d88a184-a0ac-4ebd-b44d-a81f48b01d09"
        },
        "item": {
          "id": "4098b555-e2ad-4d21-9da1-999b783c16cc",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "3899ae4d-4259-490b-8a50-f310906e9c50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "942203a6-00b6-463d-9f1e-8ec960278916",
        "cursor": {
          "ref": "f3eb62d4-d07b-4bd7-bc03-0fee5efccb80",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "036de702-8eeb-40d0-9635-cf50f88f3469"
        },
        "item": {
          "id": "942203a6-00b6-463d-9f1e-8ec960278916",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b0b6f9cf-c4ed-4067-b43d-159b11271877",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aabd11c2-6123-4878-8537-b272cbd3e3ad",
        "cursor": {
          "ref": "610e2bbc-ae16-489e-b79d-263cbcbcf487",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "edc4db91-899d-4234-81e6-8d8a1e343918"
        },
        "item": {
          "id": "aabd11c2-6123-4878-8537-b272cbd3e3ad",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "dfdc3436-fb89-409f-b6e9-32db4986ea84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6eacf3b-5fb8-4249-9b16-55e935195f37",
        "cursor": {
          "ref": "6b61dccb-aa84-471a-8667-241dd0f821fd",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "749a83c6-0e29-4c58-bd2b-7b392dd27834"
        },
        "item": {
          "id": "c6eacf3b-5fb8-4249-9b16-55e935195f37",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "fc84b5fa-e844-461f-a5cf-0fb0019f6447",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da63b315-6fb3-4f50-a05c-decafb4510de",
        "cursor": {
          "ref": "610c9cee-48ed-40ff-8683-d260d102ed1c",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "5509ba39-11b1-45fc-ab73-dfa52bbe8aa2"
        },
        "item": {
          "id": "da63b315-6fb3-4f50-a05c-decafb4510de",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "d1fd663c-8b75-46ef-8409-417b5dcf6eaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c5772bc-079f-49a3-a84a-a2080fa5b68b",
        "cursor": {
          "ref": "8a0b8784-316e-4429-98c5-739e51ad96d0",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "7a603727-f1c8-42ca-994a-ff1f3fa00246"
        },
        "item": {
          "id": "9c5772bc-079f-49a3-a84a-a2080fa5b68b",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "e181442f-0c2c-4446-be3a-b5e05e451116",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 66,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "1f65c39f-1837-42b0-aa4c-5d311a13219a",
        "cursor": {
          "ref": "0a52c140-48eb-4713-926a-2ec1dc8eacf6",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "9a39ab21-d5e1-4a6a-bc52-6854542524c1"
        },
        "item": {
          "id": "1f65c39f-1837-42b0-aa4c-5d311a13219a",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "69e87ea1-621d-4c79-9a67-847907598faa",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 59,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "4a26a002-88e4-41e8-bf7d-b0d1623d3df4",
        "cursor": {
          "ref": "02349d7e-bdcb-4da8-ba58-4321764f338d",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "a4ae12b7-5173-40a1-bf54-765254bd271b"
        },
        "item": {
          "id": "4a26a002-88e4-41e8-bf7d-b0d1623d3df4",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "dddbb403-d542-420a-a89a-31679fd40db0",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 63,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "107919f7-c8ce-49e2-b7d7-26262b8180e9",
        "cursor": {
          "ref": "c636eb33-0c53-4d31-ad4e-ab1d468551cb",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "bf44dc84-df79-4ebb-812e-2503df8a8f5d"
        },
        "item": {
          "id": "107919f7-c8ce-49e2-b7d7-26262b8180e9",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "9bb1efae-d0d8-45c1-a309-67e28290d27b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 78,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "08a84004-e067-4b78-b76f-1ba7601f109e",
        "cursor": {
          "ref": "8894c089-afc5-4cbf-8966-4818b664765c",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "9119ea60-1a6c-46df-af6f-c8d164b32b47"
        },
        "item": {
          "id": "08a84004-e067-4b78-b76f-1ba7601f109e",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "8228a128-9096-4484-898a-06c8c45d23c4",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 60,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "6be78ecc-55c7-4f56-aeb9-8d9b6b3d3259",
        "cursor": {
          "ref": "173a013d-26fc-4068-b1a1-a54897f4bb00",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "31a3fd8a-0d00-4bb2-a8aa-7687dcb13f25"
        },
        "item": {
          "id": "6be78ecc-55c7-4f56-aeb9-8d9b6b3d3259",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "dfb6cbe1-ab68-4c83-8bf0-97c634509b67",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 59,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "f6fc3da5-0731-4e92-82a8-805b3afe6061",
        "cursor": {
          "ref": "38de9488-6e9a-4507-8830-f10e941121a8",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "dd53dfbd-5137-46d4-b2a3-63b98338dbc4"
        },
        "item": {
          "id": "f6fc3da5-0731-4e92-82a8-805b3afe6061",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "c06b144c-0251-4135-8d43-0ef0cedf3b54",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e2aee58-0b44-4fec-b796-9f6a56f3d4c0",
        "cursor": {
          "ref": "2350afdf-d8e4-4867-90af-a0a8bc6a5ba4",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "17af6ba4-3795-4c3a-85bd-e2bca60e1187"
        },
        "item": {
          "id": "6e2aee58-0b44-4fec-b796-9f6a56f3d4c0",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "01bbcb8e-b882-4fcf-9df3-f18ac3eb9fda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4cd2e6c-b3ca-4162-aa09-a8334482607a",
        "cursor": {
          "ref": "056a621e-c023-46cb-bb8d-1653fd0be887",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "d5348380-b00a-45c1-b83a-5070c0f20661"
        },
        "item": {
          "id": "a4cd2e6c-b3ca-4162-aa09-a8334482607a",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "a02409e3-4757-4768-add4-830f3d49e7a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0a7ada7-a479-4423-bcf2-d69bc3b1f97f",
        "cursor": {
          "ref": "eae4aa3b-c03a-4017-9ff3-630d06de5ef0",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "fe6b0315-a95e-462d-988e-e89a5ee784d3"
        },
        "item": {
          "id": "d0a7ada7-a479-4423-bcf2-d69bc3b1f97f",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "014d0962-81ba-412c-9779-68f272c59e0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "801e71ec-5042-4633-a3b0-7c4af7455557",
        "cursor": {
          "ref": "ebd8f3db-9a5d-4096-bbe4-3e643281341a",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "d0a40712-588e-4c12-97e7-13386191eb2b"
        },
        "item": {
          "id": "801e71ec-5042-4633-a3b0-7c4af7455557",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "2c158a3b-328c-475a-ad85-ba4bb7dce197",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e28b66c-d373-475e-8ca0-25cebcf5274d",
        "cursor": {
          "ref": "40fec6ef-aa48-4524-8015-b30ef193eb0b",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "dc194596-4fd2-4355-8739-c94d995ba414"
        },
        "item": {
          "id": "7e28b66c-d373-475e-8ca0-25cebcf5274d",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "62817822-1dd7-43cd-bb40-94b48aaef0e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d2cc663-0e07-43a3-99d0-2bfe76bdb81f",
        "cursor": {
          "ref": "bca790f0-ac95-4ed2-8bc1-2c4b7a3aa96b",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "9562842f-6e28-48ca-99b0-52dd8e80e12c"
        },
        "item": {
          "id": "1d2cc663-0e07-43a3-99d0-2bfe76bdb81f",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "f93ace4b-97e9-4701-bfd9-7bf17b31dcb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e0c0af6-1f6c-44d3-bff2-0c21cdc00da6",
        "cursor": {
          "ref": "62d9e9b7-44a8-4960-8026-dc5083a45df2",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "a4c72911-9f46-4685-837e-92ae9d058d6a"
        },
        "item": {
          "id": "6e0c0af6-1f6c-44d3-bff2-0c21cdc00da6",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "4445e01f-ad5c-405e-a2b3-b764f8ea3d71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93e25372-f02f-4a9f-bc7c-d3daf10f582a",
        "cursor": {
          "ref": "d423a18b-b68a-435a-8157-1b49cf75fe7f",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "6d92c28f-dfbb-4c3c-8167-4587149e4d76"
        },
        "item": {
          "id": "93e25372-f02f-4a9f-bc7c-d3daf10f582a",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "39468a0d-b879-4322-b89a-4d80034b0373",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48fb0cd3-6ee6-40c6-988c-a92a904f90cb",
        "cursor": {
          "ref": "ea5aa652-6c56-4fb6-8823-2060f5f7cf50",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "67155f14-4299-4068-9adc-852fd5c10c6a"
        },
        "item": {
          "id": "48fb0cd3-6ee6-40c6-988c-a92a904f90cb",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "b97c0e46-b5c1-4769-b7b8-c85d8da93ea5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "979a1739-ef73-4190-8001-807ee1bf78e5",
        "cursor": {
          "ref": "db6bb67f-e7dc-472a-b0eb-8cb183e7e49f",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "d6ffd6f8-b4e0-42ac-969e-631ea4404c36"
        },
        "item": {
          "id": "979a1739-ef73-4190-8001-807ee1bf78e5",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "86950973-b4e5-4d29-ac26-33610de185f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f61479a6-2ed9-4868-8dae-09262352bef0",
        "cursor": {
          "ref": "a38a729a-03cd-4766-a594-9658c0dfd284",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "804c5748-0a11-4994-ad17-f82c94d6090c"
        },
        "item": {
          "id": "f61479a6-2ed9-4868-8dae-09262352bef0",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "043f2dd0-1813-43e8-a920-67c926979d51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e762006-eacd-45b9-ac48-43455dbf723e",
        "cursor": {
          "ref": "9857b510-a70f-4596-8583-af5dcfaf51de",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "082fc701-9c34-4186-99f0-d1f159a0872d"
        },
        "item": {
          "id": "7e762006-eacd-45b9-ac48-43455dbf723e",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "72db20e8-77cd-41cb-af0f-ffc841b73356",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74a8bc69-467c-4acb-a1dd-16bc7fac5218",
        "cursor": {
          "ref": "9fb3a1dd-91d4-49d8-822c-ebfcd492318f",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "2c863b7a-e5cc-4bc7-a752-9189dbb42161"
        },
        "item": {
          "id": "74a8bc69-467c-4acb-a1dd-16bc7fac5218",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "ca3b1b2e-766f-48da-b316-e6734ddeed90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47523236-bb50-491e-9c2d-6aeee67941e3",
        "cursor": {
          "ref": "1cf70b57-4907-447b-81c2-349d7e98d5ca",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "171f7ecf-29fd-454c-a195-d81857bcabc8"
        },
        "item": {
          "id": "47523236-bb50-491e-9c2d-6aeee67941e3",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "faac8f99-f4a9-48f9-a16b-2153f09d516a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8035b7e7-ec34-43d6-8982-64fb731a1179",
        "cursor": {
          "ref": "4db5beb9-c8e2-4a2f-b2e4-1f1c1ff5aff7",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "195fa573-aebc-4ab9-8f81-ea0e62634014"
        },
        "item": {
          "id": "8035b7e7-ec34-43d6-8982-64fb731a1179",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "641b4aba-d617-47fc-946b-dc81d61966e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af63ac8b-f19c-4747-b030-a94844fd0554",
        "cursor": {
          "ref": "59278427-8b85-4536-b2a6-5196c88a1379",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "3c3f19b9-bba6-4e19-b366-db4fc5727bd2"
        },
        "item": {
          "id": "af63ac8b-f19c-4747-b030-a94844fd0554",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "7b67fd39-e537-4464-8cc5-5cf0c11074ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c10efa9-b3b2-4717-888b-0abf32b12714",
        "cursor": {
          "ref": "afd20917-e968-4cc0-8c54-9e7a23c47d8d",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "800f4b54-cbf2-4bf6-a085-d548f5736c64"
        },
        "item": {
          "id": "6c10efa9-b3b2-4717-888b-0abf32b12714",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "8a803f11-4a33-47da-b5f4-4a81d5465c5f",
          "status": "OK",
          "code": 200,
          "responseTime": 116,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "237e8064-6b4b-4137-a8bd-de845e102139",
        "cursor": {
          "ref": "41740c43-ad82-4c94-8314-edcc9cf31936",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "333df028-a677-4b3f-8b58-c6843bf11688"
        },
        "item": {
          "id": "237e8064-6b4b-4137-a8bd-de845e102139",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "3e00249a-b059-4861-be25-e170ecba05f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fe14c4e-9f39-4b9c-b250-8035c3dff50e",
        "cursor": {
          "ref": "76dccdfe-a50c-43db-ac82-ab6ee35a447c",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "06471c42-364b-44f9-9dfc-bc8ec9adaab7"
        },
        "item": {
          "id": "2fe14c4e-9f39-4b9c-b250-8035c3dff50e",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "ee38d1bb-ebfa-42d1-b6b3-1ad4e3fdeaad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "956abfbf-1806-4b6c-864a-8e7cafec4e6b",
        "cursor": {
          "ref": "465e3a8d-cb42-4c13-b2b9-be4f988e9eb6",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "ee9d21e7-3bd1-48ec-9635-0c4f23a52a64"
        },
        "item": {
          "id": "956abfbf-1806-4b6c-864a-8e7cafec4e6b",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "c519e8f8-1e76-403b-8306-28b20141da0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8b81a72-9c67-40f6-998b-f62a988d7539",
        "cursor": {
          "ref": "aed190e4-4353-4c42-80c9-3a22f58341d1",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "686d518d-c1b5-4526-9909-634d72e9b1f0"
        },
        "item": {
          "id": "d8b81a72-9c67-40f6-998b-f62a988d7539",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "0541beec-11e3-4646-a0db-0a64d914a5e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7c77e14-6ce3-4368-9889-6a730b1307af",
        "cursor": {
          "ref": "e6d4eb38-2d6a-481d-816b-83c60ae37c9c",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "9a62c1a9-f5bf-4eb8-9884-0cd52f26b928"
        },
        "item": {
          "id": "b7c77e14-6ce3-4368-9889-6a730b1307af",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "4631338f-1352-4ca2-9385-eded2f0fc986",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e482344-114f-431d-b3e1-52e8bf20f0fc",
        "cursor": {
          "ref": "0bf2b878-80a4-4c1c-a73d-4dd0798558f9",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "7933cbac-ec94-4ea1-9753-ecdd9cd8b30d"
        },
        "item": {
          "id": "2e482344-114f-431d-b3e1-52e8bf20f0fc",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "c1e8b38d-b85d-4a46-95db-917e6c1ed509",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d4ea865-9dfa-466b-80d2-ea648c772a13",
        "cursor": {
          "ref": "873ab8ce-6141-482b-b87c-c3cc698bf119",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "5f0d2be3-5f06-4d0c-9237-493f03e1743b"
        },
        "item": {
          "id": "0d4ea865-9dfa-466b-80d2-ea648c772a13",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "2cc4a23b-e55e-47d1-a272-dae2e77562a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30a8b479-6f8c-4fd7-9bbc-5efe80ef35cd",
        "cursor": {
          "ref": "7ff5db95-f9d1-48b7-9455-da4fef595828",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "e1f83718-ed2d-4cba-85e6-d941eebbdbb4"
        },
        "item": {
          "id": "30a8b479-6f8c-4fd7-9bbc-5efe80ef35cd",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "6e090d45-d999-4e48-b76e-caff9a547992",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cd8ad73-5281-485f-bec9-e063f08fa000",
        "cursor": {
          "ref": "2147de96-03c7-4931-8aaf-477b85ddb0d1",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "fe7d3d05-6f5c-4f4f-a1df-f3a4f511a77e"
        },
        "item": {
          "id": "3cd8ad73-5281-485f-bec9-e063f08fa000",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "aec982e3-1ea7-463a-ae5e-a283ed7e0fec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e3f077c-4d08-45cf-92b1-154303dbabd4",
        "cursor": {
          "ref": "bc39b19e-ed26-41c5-807a-8a69a983e7a4",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "1374f0b8-5c20-4a87-8d20-8659cc51480f"
        },
        "item": {
          "id": "8e3f077c-4d08-45cf-92b1-154303dbabd4",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "9d2921fd-f91d-4d28-9f90-2d2a624db04b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "388d1bf8-453e-4023-a1fd-58af8e84f118",
        "cursor": {
          "ref": "3b3cb51e-a824-4fdb-8a4f-a65d475662b5",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "08ee28e3-92d4-4ef7-b1f5-15096047380e"
        },
        "item": {
          "id": "388d1bf8-453e-4023-a1fd-58af8e84f118",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "bf8891fa-680a-4174-a2a5-50217c49e0e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d92174ba-dbf8-4203-b580-35786625f2ba",
        "cursor": {
          "ref": "65435e66-daa4-4793-90c7-42281150abb4",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "73a6abd4-46df-44f2-ba02-72b88408e423"
        },
        "item": {
          "id": "d92174ba-dbf8-4203-b580-35786625f2ba",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "3a42d681-a70a-4c2b-a691-a45a23b99560",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8183ebc9-a7bc-4e10-8024-419fce4ed740",
        "cursor": {
          "ref": "92cb8eca-8b82-4a76-99a0-14d95b25324e",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "05d1c5cf-607f-4c11-963e-0c65114823fe"
        },
        "item": {
          "id": "8183ebc9-a7bc-4e10-8024-419fce4ed740",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "03bc929d-b45d-4119-9f59-c2a869e000a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "515292cc-cc35-4b9e-899c-8b8c2add8a19",
        "cursor": {
          "ref": "351612d7-4e14-4c34-8d9e-caac884944d3",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "0fbc6baf-4b05-404f-a359-9f3fb8a0d064"
        },
        "item": {
          "id": "515292cc-cc35-4b9e-899c-8b8c2add8a19",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "e6e2a338-fa37-4d4f-9f4e-e17eef5c709e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e8d04fb-697f-4f7d-8191-def758e0bf15",
        "cursor": {
          "ref": "62110922-f8fb-4add-afbc-b7c046916a40",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "061b4ec5-84e4-453a-8354-798aab67f720"
        },
        "item": {
          "id": "4e8d04fb-697f-4f7d-8191-def758e0bf15",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "309efc99-b3db-4ee7-ad73-58065ef559e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c51f01d7-7d2b-421a-838f-ce59de94d4f4",
        "cursor": {
          "ref": "576442e9-f336-42ec-bf2d-67683196c194",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "8e819191-9e84-4e2e-8e7c-8e3469f3221f"
        },
        "item": {
          "id": "c51f01d7-7d2b-421a-838f-ce59de94d4f4",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "f24b3711-a5d8-4015-9229-4340badfb913",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df32da56-cafc-4f76-8943-e86af7afc036",
        "cursor": {
          "ref": "95ff3aa4-a34e-4bb2-94d5-6873e37365e5",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "9dc4ed64-678e-4b0d-a380-a39121300c95"
        },
        "item": {
          "id": "df32da56-cafc-4f76-8943-e86af7afc036",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "a85c9030-d91a-4dc3-91e3-09d9faa5be27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "210fc7c1-df00-43bc-8cd2-4438245f7265",
        "cursor": {
          "ref": "1af2e53f-d377-4103-bd7a-c9075c78f5ea",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "403d09fd-5fdd-4bf6-9c69-873f91a1c3c4"
        },
        "item": {
          "id": "210fc7c1-df00-43bc-8cd2-4438245f7265",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "a44e7521-dbf6-416a-aa0e-18891462108d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff0e4e02-1219-4a7a-b168-70ca93bcd804",
        "cursor": {
          "ref": "e19b0c21-07fe-46b7-9423-45a68bb4e733",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "4edcd219-eb60-46da-9975-4e2febd0a047"
        },
        "item": {
          "id": "ff0e4e02-1219-4a7a-b168-70ca93bcd804",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "eeac357e-d372-49cd-aa54-6b5687fbc0c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0803fed0-93d6-4aa4-a19c-73cf9b712aae",
        "cursor": {
          "ref": "41aa3fb2-0855-4ae0-aa5a-8fd82a6a2050",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "47366b63-4e58-401f-928c-54c3338073f2"
        },
        "item": {
          "id": "0803fed0-93d6-4aa4-a19c-73cf9b712aae",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "ab13f096-f14e-43d6-bc6b-8bd73be78f80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5516a005-f4fd-4df5-9273-a6040c193a3d",
        "cursor": {
          "ref": "88668ab4-74fa-476c-b299-50025a68278d",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "fa54c4a5-e5fb-4baf-9f94-e67bd2d01f2f"
        },
        "item": {
          "id": "5516a005-f4fd-4df5-9273-a6040c193a3d",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "fe4a549b-9481-422b-a5fc-ddb77d4477b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcffe6f2-11b1-46b3-933b-80155ac86741",
        "cursor": {
          "ref": "d990c42b-af60-4ef1-94f4-5132f88201fd",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "30856679-3707-491b-9524-6b4c488eb72a"
        },
        "item": {
          "id": "dcffe6f2-11b1-46b3-933b-80155ac86741",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "6e21b7c3-fcc2-4bfe-8377-37b2eee1cc37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a389394-eb49-4d36-a442-29965d42695b",
        "cursor": {
          "ref": "c633dfa1-6223-4665-b266-948deb950921",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "3bdec58d-2b31-4cc0-8692-81525789c749"
        },
        "item": {
          "id": "0a389394-eb49-4d36-a442-29965d42695b",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "e99ef068-5ab2-4e7e-be91-90a752944e90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4d1a2bd-f0a8-45be-927d-e59c8380bc7b",
        "cursor": {
          "ref": "36cc8b63-f66f-4b03-8e99-0fc3e448b732",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "f9fd8ab6-4883-4d66-b32f-782051e3ad0a"
        },
        "item": {
          "id": "d4d1a2bd-f0a8-45be-927d-e59c8380bc7b",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "4f382aa7-93fe-42b9-9193-44c51b159583",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a245dd7d-365f-47ac-aad3-e3e7fbf90848",
        "cursor": {
          "ref": "b20b4f01-e1f7-4851-b65a-9d7338f79c81",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "cab17372-116f-4a76-98f4-9d14cd815f42"
        },
        "item": {
          "id": "a245dd7d-365f-47ac-aad3-e3e7fbf90848",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "1b3f5f99-c26c-4b54-aefb-743f0d7ab2c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1df56248-dd61-46f0-b14e-8d13b2bb459f",
        "cursor": {
          "ref": "c77c40bf-17f0-46e8-bde8-d147355016d8",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "6e2115c2-0a0f-43a7-911e-4213feaf0ab0"
        },
        "item": {
          "id": "1df56248-dd61-46f0-b14e-8d13b2bb459f",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "4f4e8aa3-6fa8-4588-ab21-db7d201997aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73378d68-8215-4f0b-a0e3-c5aeb43c0fde",
        "cursor": {
          "ref": "dc4065cf-9a06-441f-934f-1f464bff4471",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "67366897-5706-46cf-9b1b-b6aa7e90001b"
        },
        "item": {
          "id": "73378d68-8215-4f0b-a0e3-c5aeb43c0fde",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "43efff37-fcda-4f5f-8331-2f9b1ddd6c94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00e8f733-6cb4-4523-891d-8c677cc191a1",
        "cursor": {
          "ref": "127e3b93-a0b0-4bd0-aa4c-a2c80d3f3677",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "3f5c0a52-f6e0-4486-84b4-addc775a1000"
        },
        "item": {
          "id": "00e8f733-6cb4-4523-891d-8c677cc191a1",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "0e6287c2-6780-46a9-a3c5-9c28a0bfebe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b23de3ca-867b-4b40-acb6-9dbf76c20002",
        "cursor": {
          "ref": "1e20e99f-9845-4d2c-9168-6c554c58d88d",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "1a993264-f1a1-46e7-b731-ce5582fbb57b"
        },
        "item": {
          "id": "b23de3ca-867b-4b40-acb6-9dbf76c20002",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "37024ffe-a07f-4f87-9e42-bb2e6dd1867a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e93ee89-b3ca-4736-850c-d542012d3bcc",
        "cursor": {
          "ref": "919fc574-1b4e-4599-a269-1647fe28b192",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "af0d3478-41cc-41f6-8bdf-333c443bec15"
        },
        "item": {
          "id": "9e93ee89-b3ca-4736-850c-d542012d3bcc",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "c17f563b-2e82-4583-a929-03df8f0ad5dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fd8378c-fdcf-44c4-bb0c-d8977985c94f",
        "cursor": {
          "ref": "cfc79454-957f-49d8-a50a-45f15c73c4ed",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "eeb4010c-fe55-4def-afd3-6ffe2e7906cf"
        },
        "item": {
          "id": "2fd8378c-fdcf-44c4-bb0c-d8977985c94f",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "fab27a98-6e95-41bf-8a46-b4c47dbc9cac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7b9d49f-d367-4669-9f83-64c8b777d688",
        "cursor": {
          "ref": "2a639eaf-3f86-4243-9978-350d41d2d468",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "0b1405f8-c149-43fb-8a2f-b82c874eb44c"
        },
        "item": {
          "id": "b7b9d49f-d367-4669-9f83-64c8b777d688",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "e69cb3c0-7185-44d3-9e64-41ce4436c86d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2997667e-f79c-4121-95cc-3fca7213fc08",
        "cursor": {
          "ref": "788b8c81-e7c0-4d1a-8f68-f8c136557b14",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "67b5b0be-9226-4273-bca5-260d99093659"
        },
        "item": {
          "id": "2997667e-f79c-4121-95cc-3fca7213fc08",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "54ca6dfc-275e-4051-8468-c3f3b82d39ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81c6d84c-3047-4ce0-b590-c59d2df1a8f4",
        "cursor": {
          "ref": "b585fd99-93b5-412d-bd93-d42a7477d091",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "81e0a2ef-f391-4faf-9086-c5915a7cfb1a"
        },
        "item": {
          "id": "81c6d84c-3047-4ce0-b590-c59d2df1a8f4",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "478ebe21-8181-4298-a257-29a380dde22c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71f0334e-bdd5-4378-9b8e-b3c405cbdcd5",
        "cursor": {
          "ref": "ac0ecf5a-a0f6-429a-8771-9bd37b39111d",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "8ceadd53-8358-48eb-b91c-9400532898c7"
        },
        "item": {
          "id": "71f0334e-bdd5-4378-9b8e-b3c405cbdcd5",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "f654fd66-72fd-4c8a-b240-1c587004f158",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a675872-ab63-4cbe-8101-31c89a752eca",
        "cursor": {
          "ref": "a6dd8ad5-f3ab-40fe-856a-c5280be8a1eb",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "0b6d58fa-7794-4d49-9904-5dd8df8ea5f5"
        },
        "item": {
          "id": "4a675872-ab63-4cbe-8101-31c89a752eca",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "2e559eff-dfa3-419e-bb99-b8c521533b9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7494ee4-b747-4dbe-aba2-509c9fe55940",
        "cursor": {
          "ref": "37bf83dd-ab64-4452-9898-ae7e5f61628c",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "e7e4bac9-0041-4073-bd33-ad040c195ea2"
        },
        "item": {
          "id": "a7494ee4-b747-4dbe-aba2-509c9fe55940",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "31721840-3d6e-4364-ad29-b80f2018a27e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4facf1d2-c01c-4c5c-a8af-299ed83764ea",
        "cursor": {
          "ref": "ad9818a7-670a-4ed7-b0e2-0d12ea035190",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "b3fca6ee-abac-44f6-bb56-c0e61660e9ff"
        },
        "item": {
          "id": "4facf1d2-c01c-4c5c-a8af-299ed83764ea",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "09d9c80c-caf2-4417-a497-5aff89531dc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23668cfd-1c43-484f-868e-279dc5405d83",
        "cursor": {
          "ref": "b98e1344-3724-4157-8d25-d5a261f915a1",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "c802ca13-5b51-427d-b602-83d7d3cc3ac4"
        },
        "item": {
          "id": "23668cfd-1c43-484f-868e-279dc5405d83",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "9ad2cc11-ea60-460a-8861-c00693dbe3c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5738a36f-9d7c-4f02-ba74-be90b1ebc958",
        "cursor": {
          "ref": "bad7166f-8cd7-43f7-9929-4d968175e174",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "4495eef7-4c50-4543-9493-e0b9076337d2"
        },
        "item": {
          "id": "5738a36f-9d7c-4f02-ba74-be90b1ebc958",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "5a10ee94-1caf-44be-9f10-d6f0d5ab05cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "177c1c50-5ad8-4280-b10a-45487fc7ef76",
        "cursor": {
          "ref": "2ba0120f-8e28-4e83-b379-019476fc3129",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "a394fe35-e0a3-432f-9855-8cbc2f4e53c8"
        },
        "item": {
          "id": "177c1c50-5ad8-4280-b10a-45487fc7ef76",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "f811480b-f20a-4e46-b741-3afcade56349",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d18de3bf-c61d-433f-82c3-a3c3fe77edfe",
        "cursor": {
          "ref": "ee72556b-6cc8-4da5-aab8-890e269004d8",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "767e8e62-f801-43ad-ba09-6ad810a4bbb8"
        },
        "item": {
          "id": "d18de3bf-c61d-433f-82c3-a3c3fe77edfe",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "5df1a84e-3095-4a4a-9e81-ed48bcc0a94e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac9a5cca-7b0e-48c5-9486-8fd3e9dc1a11",
        "cursor": {
          "ref": "5a96b7bf-962b-4bf1-9642-71272c1ddb90",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "99038cfc-c4c5-4fcd-9d11-648272730809"
        },
        "item": {
          "id": "ac9a5cca-7b0e-48c5-9486-8fd3e9dc1a11",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "9b6c35ff-ce95-453b-ade8-5929468e833a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75d08403-8ab7-4acc-92eb-01e9ba3e8c7e",
        "cursor": {
          "ref": "09b6d00d-6a01-465f-a92b-675b19df7517",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "7f7e6901-518b-45e5-945b-8dc75d3e3914"
        },
        "item": {
          "id": "75d08403-8ab7-4acc-92eb-01e9ba3e8c7e",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "4d2541e3-6cd8-41e2-8689-9c1e1de62bda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2126f2c3-dd34-4323-942d-0dda755b70b6",
        "cursor": {
          "ref": "e6d0876f-380f-41ef-917a-f75a1f44ca42",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "f7f669be-d72d-404d-92ee-9cd0bd1a9516"
        },
        "item": {
          "id": "2126f2c3-dd34-4323-942d-0dda755b70b6",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "a1b0a68a-1e14-47bf-94ac-9d492fb420a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29a746aa-6bae-4d8a-9fe2-f137a0a29cd7",
        "cursor": {
          "ref": "6b79436a-7656-491d-9910-73aa06809b0c",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "c4e37599-73ef-4466-8e93-91167be14c8f"
        },
        "item": {
          "id": "29a746aa-6bae-4d8a-9fe2-f137a0a29cd7",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "44a26c59-758e-4bb4-aa06-8aacd8a63aff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43efb0e1-4180-492b-9852-e50acce32a14",
        "cursor": {
          "ref": "94b3cc0a-f06e-4094-9237-d1772e6e8f2b",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "c1c62297-3f08-409f-a516-6f1c156ac14d"
        },
        "item": {
          "id": "43efb0e1-4180-492b-9852-e50acce32a14",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "3ecc81ec-ed45-4e80-acde-27076bf13277",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71067f05-29d7-4e8e-90d7-90d33d3de865",
        "cursor": {
          "ref": "80f889a9-be70-42b0-b7d8-8ba840713a7b",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "e3395ad7-7d08-4578-8afb-d66f7f879452"
        },
        "item": {
          "id": "71067f05-29d7-4e8e-90d7-90d33d3de865",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "3f05dde7-0418-4182-90f9-6aa312934a66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ceb6d62-5cc4-45e8-b506-a7f9450945e6",
        "cursor": {
          "ref": "66bda971-165c-4f4d-b926-877f4fb258bc",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "8687d3f4-bd5e-4144-8ede-1fe73691911b"
        },
        "item": {
          "id": "3ceb6d62-5cc4-45e8-b506-a7f9450945e6",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "c08ecc84-0b05-4f21-be75-f61a0e14dcd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6972dd49-a257-41be-9989-26a50160481f",
        "cursor": {
          "ref": "795b5c1c-b51c-40cd-ab6e-1b6fc860d44b",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "b96239cc-01ca-484e-a762-3d41fbba2f90"
        },
        "item": {
          "id": "6972dd49-a257-41be-9989-26a50160481f",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "977f19df-d142-4bc7-a466-796732356a13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9c2666e-0e3d-48f8-94d0-45686195b788",
        "cursor": {
          "ref": "f12e1e01-7c76-41d2-98a6-78c61e823a8a",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "6a7de144-4374-48ef-bf49-cab26696cd1e"
        },
        "item": {
          "id": "d9c2666e-0e3d-48f8-94d0-45686195b788",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "87d4395c-1256-4bc2-8e92-37e55d507d6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "020df46b-20a1-4e2b-82bb-77c344ee6ab3",
        "cursor": {
          "ref": "98d075b2-286f-473a-ac70-b721aac5690c",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "bc1bc5c5-910f-480a-a9c7-cb5d4aee25e6"
        },
        "item": {
          "id": "020df46b-20a1-4e2b-82bb-77c344ee6ab3",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "3cd0055b-788c-4827-adc2-33fdb064bf98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff3c7bf6-d6b7-4f58-a76a-016a99cd4f4e",
        "cursor": {
          "ref": "88bdbade-0dea-47d5-b9b5-eb29f91e91a4",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "383c5b21-6948-42f7-bf70-f801d5049070"
        },
        "item": {
          "id": "ff3c7bf6-d6b7-4f58-a76a-016a99cd4f4e",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "e22369ce-a943-4a99-940f-e603364f3d54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "845ca6d9-a50e-4474-892f-698f224626f1",
        "cursor": {
          "ref": "ccc87450-4da1-40b2-9b7a-097f30ea0d54",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "e24f8526-0ef8-4fe8-9194-26d1104f4f6a"
        },
        "item": {
          "id": "845ca6d9-a50e-4474-892f-698f224626f1",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "7d312d78-22dc-4193-9b6a-78f62092babc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1641288c-d8c5-47fb-b947-c4a72f7f591f",
        "cursor": {
          "ref": "32ae8d04-71ea-49c1-bea4-eacb72b380b3",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "77361b15-ebb0-4fb2-a827-3c6d1a5f6f5e"
        },
        "item": {
          "id": "1641288c-d8c5-47fb-b947-c4a72f7f591f",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "56da3b22-a116-41c8-a99b-4e8bd3e8f967",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0009d8ae-57cc-4fcf-ba7e-3ac35be340f3",
        "cursor": {
          "ref": "ca614307-48bb-4cc5-bc8a-8cf5454fd2af",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "c1d49025-44f1-4dcc-a150-4974e2578bd1"
        },
        "item": {
          "id": "0009d8ae-57cc-4fcf-ba7e-3ac35be340f3",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "1ed49c7d-b55d-436a-aa99-6988f3ef940d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7045ef6b-dfe0-43bd-8a51-0a64c075147f",
        "cursor": {
          "ref": "dfb89d0e-209e-4b1f-bfea-131c7a5fcd09",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "cb6eb1b8-dab1-4578-8407-00d69f8ff357"
        },
        "item": {
          "id": "7045ef6b-dfe0-43bd-8a51-0a64c075147f",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "6be9b4d7-5193-4355-bbaf-7c6b9a9480b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "381ebcc8-e83c-4108-92d5-b7295ca662a3",
        "cursor": {
          "ref": "d13f641e-0354-4179-ae60-26574828dd76",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "d74a781b-e420-48dc-8ac1-2a4863352189"
        },
        "item": {
          "id": "381ebcc8-e83c-4108-92d5-b7295ca662a3",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "14c9e6ad-f759-4991-9fa3-9cda7a7c0fdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b660d52b-e073-4b64-8f12-64d0e62c8cb8",
        "cursor": {
          "ref": "6d0afbbb-a3f6-414a-81dc-a7e32a898ee6",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "279b18c8-3e62-4231-a1ed-34410533327d"
        },
        "item": {
          "id": "b660d52b-e073-4b64-8f12-64d0e62c8cb8",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "359bf0e3-8ced-4f1d-9a19-5662dd004dd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d06ff553-5d33-4580-bcf5-77380f5452a6",
        "cursor": {
          "ref": "d421d346-f939-4188-80f2-c12d5ffa0b7a",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "08961ea6-ae1d-49ff-8f62-362cbf6ae8a3"
        },
        "item": {
          "id": "d06ff553-5d33-4580-bcf5-77380f5452a6",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "d632298c-d8b1-4449-ad73-baf75ee0d1a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd31640d-248c-418b-9037-f34eb4486c6a",
        "cursor": {
          "ref": "94218281-cee9-4b03-886c-eac8b126ab95",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "89bbdbca-39f6-41c4-a4a8-d07a51a205eb"
        },
        "item": {
          "id": "dd31640d-248c-418b-9037-f34eb4486c6a",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "a217e29a-034c-4c85-b5f0-3469ad61f407",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3217916e-a270-4eb6-9653-72ef85d6f31f",
        "cursor": {
          "ref": "4d618fd6-937b-4cdf-9655-1675a612996c",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "8f34bd0b-acd0-4634-8c86-9ca897e9b2c2"
        },
        "item": {
          "id": "3217916e-a270-4eb6-9653-72ef85d6f31f",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "40c4954a-0c13-4220-a1ef-56fdd53dd113",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "767ecdbf-0bf2-4656-9b8e-4cc293e4a73d",
        "cursor": {
          "ref": "1185d08d-4482-4d80-b6a8-b33d92293b02",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "b03c8e24-893b-4972-af26-52bc79237ee0"
        },
        "item": {
          "id": "767ecdbf-0bf2-4656-9b8e-4cc293e4a73d",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "bc0933c7-9d5a-4208-9984-4038a94fe66c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bb189ef-db69-4e0d-8753-21daed593d07",
        "cursor": {
          "ref": "ceead92e-5a64-497c-83bd-26a2264e8e21",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "c432b061-b194-4240-ab2b-eeaf1d51a54e"
        },
        "item": {
          "id": "7bb189ef-db69-4e0d-8753-21daed593d07",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "b1c2bae3-61bd-4eb3-b4cd-913ea18e4954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "795740da-bea0-4021-9b4c-ea0e0e13e7bd",
        "cursor": {
          "ref": "ec2edba4-7b8b-4c25-82cf-9d4b4fc3c7a9",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "83353193-df4e-4c9f-8be5-63227221f073"
        },
        "item": {
          "id": "795740da-bea0-4021-9b4c-ea0e0e13e7bd",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "8f0c5e61-2871-4c33-bf9c-37fe53d8c4bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 146,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fa7da41-865c-45e1-b5e8-b2955d9762b3",
        "cursor": {
          "ref": "49057805-1fff-4f0f-80ac-930060a57648",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "99d18d4c-a951-4195-8736-53ffe05d878c"
        },
        "item": {
          "id": "2fa7da41-865c-45e1-b5e8-b2955d9762b3",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "077b77fe-f703-42e9-a12f-68a92654eb6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "907df679-4f06-4ae5-a774-f1820b1fe2a2",
        "cursor": {
          "ref": "de77c12f-c167-4af8-bbe8-338469ea8853",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "b90c84c3-7833-47f5-a466-e416547275f0"
        },
        "item": {
          "id": "907df679-4f06-4ae5-a774-f1820b1fe2a2",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "f06aca93-d685-480e-848e-49c8ae0e18f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23a0825c-2f1b-4e9c-bf70-fcc94d68a3e0",
        "cursor": {
          "ref": "4e888f62-7f05-4484-a401-160e4c46aa94",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "87ba0954-eff5-45f9-9f3b-6b8c9aeac4ee"
        },
        "item": {
          "id": "23a0825c-2f1b-4e9c-bf70-fcc94d68a3e0",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "89fb5f7c-ef3e-4b1b-9c96-9c98eaeff902",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2a96c4f-54a8-45fa-8bae-210502b88ae6",
        "cursor": {
          "ref": "d165fd00-a8f9-43e2-9fb7-7d8b541c1476",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "330d02fc-e6ce-4377-9eda-69671e28796b"
        },
        "item": {
          "id": "a2a96c4f-54a8-45fa-8bae-210502b88ae6",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "6e5c82c6-e576-4b3e-afeb-36154b20df4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49c49d73-df9f-48b6-a98d-8a6ad4039dc1",
        "cursor": {
          "ref": "6e97806d-19fc-45b9-bcba-63b7844a79b4",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "3fe4a333-ec95-433f-8c96-1d19c11f994d"
        },
        "item": {
          "id": "49c49d73-df9f-48b6-a98d-8a6ad4039dc1",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "3e3ebcfc-5691-4891-ab87-90b63d2f6dae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dd1b643-45d7-4416-869a-3927d2eae2a2",
        "cursor": {
          "ref": "1634c8a1-55d4-4257-bd55-0429146e5568",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "6cd9a10a-db77-43d0-aacb-859157b576de"
        },
        "item": {
          "id": "8dd1b643-45d7-4416-869a-3927d2eae2a2",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "0ac3714a-366b-4312-800e-a7f5af42cef9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d111b17-662d-4c2a-b0cf-fb28fee137d6",
        "cursor": {
          "ref": "25d695d6-7788-45c4-b590-5917aa6e0773",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "e2138b83-26af-4869-8085-8f670b6aafa8"
        },
        "item": {
          "id": "4d111b17-662d-4c2a-b0cf-fb28fee137d6",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "f89092c0-4ae4-428b-b03d-6c797d1d126c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ca430a7-2a51-4144-bde2-20ea5475bfb4",
        "cursor": {
          "ref": "1b7ad424-e58f-4d24-8121-a7af514566c8",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "862bbe96-678f-4f13-98b9-a9b31a384008"
        },
        "item": {
          "id": "3ca430a7-2a51-4144-bde2-20ea5475bfb4",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "a3c70cc0-37ba-40f3-bc84-daebb7218c41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94fa128f-1c29-4df3-a1d3-5e0bcde21473",
        "cursor": {
          "ref": "27f42597-4af5-4ece-a688-0ccd4534cfa8",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "f303b530-c0d0-444e-a6d4-baa96af974e1"
        },
        "item": {
          "id": "94fa128f-1c29-4df3-a1d3-5e0bcde21473",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "506313f1-faf3-4266-94a6-04e8f127a40c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa6c309c-aec7-4539-8869-4c857bfadde1",
        "cursor": {
          "ref": "5a0de2ca-c674-4933-8435-c6e86997f9e4",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "8f5b71bb-9b41-4cf9-8d69-276a79a43b1b"
        },
        "item": {
          "id": "aa6c309c-aec7-4539-8869-4c857bfadde1",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "f45b615c-7bf9-446b-901c-9305520b2a0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec7c1411-6f2e-42c5-90e1-a9b3c73685df",
        "cursor": {
          "ref": "9df3f7dd-78b1-4d5b-a90c-cf24f4b7fe9d",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "5137dcc6-3551-4f23-83d5-058cf86aa76c"
        },
        "item": {
          "id": "ec7c1411-6f2e-42c5-90e1-a9b3c73685df",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "e5a80e73-5886-4ffd-9c5a-c31196356dc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d05ddb99-506c-4feb-92b8-283c0e8b1b79",
        "cursor": {
          "ref": "fe629141-d4f2-4c3e-b3ad-e2cfff8f22fd",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "2eba8524-b9d0-4d74-b345-8dcb1b397cf0"
        },
        "item": {
          "id": "d05ddb99-506c-4feb-92b8-283c0e8b1b79",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "9464771c-f17e-40c9-bebe-4728c57ae9a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b869180-2038-430c-a1ff-5eec53ea95f3",
        "cursor": {
          "ref": "fb3d2cf6-095f-4e61-8d97-2bd0e437681a",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "7c0c9d90-0c0e-472c-b109-0f8756585b6a"
        },
        "item": {
          "id": "7b869180-2038-430c-a1ff-5eec53ea95f3",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "b19bbf7f-e6ef-43a7-b61c-25805509aad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18aac9e1-85bd-43c3-9787-8f08fe5ee050",
        "cursor": {
          "ref": "6bf3d046-3455-48d7-a3b4-b54c5aa7f021",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "a85a93ad-b321-42d3-a2e7-684f56052fd7"
        },
        "item": {
          "id": "18aac9e1-85bd-43c3-9787-8f08fe5ee050",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "b2d7b723-76de-4729-918b-a4a868e1c139",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7d8433e-87b7-4082-83e8-c60ae3afb22d",
        "cursor": {
          "ref": "a10e6331-7429-469b-a0b0-1216c18147c5",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "a9c8289c-a716-42b9-8a2d-6d5cc8947712"
        },
        "item": {
          "id": "d7d8433e-87b7-4082-83e8-c60ae3afb22d",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "93bbdc76-8ca5-41d9-b3bc-1dde7dd21654",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "664e5656-829e-43f4-ad61-a5d9c9b197dd",
        "cursor": {
          "ref": "cd7c54f2-5608-4438-b6b8-d0436d110a6e",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "44d6dbff-d53e-47ee-84bc-ad9c045fb299"
        },
        "item": {
          "id": "664e5656-829e-43f4-ad61-a5d9c9b197dd",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "add1c8f6-e548-4ec2-9cfa-cefb8ca7f078",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b623445-2ff0-472f-99f3-76eaded1dc03",
        "cursor": {
          "ref": "2ca9574b-0aba-466d-a113-4270f32ecde6",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "885ffb63-88d8-474e-9bdf-d02c8740a2f4"
        },
        "item": {
          "id": "6b623445-2ff0-472f-99f3-76eaded1dc03",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "532ce900-1de9-49cb-b3ba-5fde3497e136",
          "status": "OK",
          "code": 200,
          "responseTime": 71,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "92f6df2b-9b3f-49f4-8d56-31702c38e3e3",
        "cursor": {
          "ref": "dc565344-9198-4f98-a129-ecd48d7c35fa",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "bbc840e4-8878-44d3-9375-367bab0979fd"
        },
        "item": {
          "id": "92f6df2b-9b3f-49f4-8d56-31702c38e3e3",
          "name": "credentials_verify"
        },
        "response": {
          "id": "6409c611-b0c5-4b4d-bdf8-366720d30b6b",
          "status": "OK",
          "code": 200,
          "responseTime": 2275,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "54dd99c7-c748-4c17-bd6c-1188d2a3f799",
        "cursor": {
          "ref": "5b676853-0027-4992-a505-3f45cf0af90f",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "778d2989-4980-444a-a6f3-c6cb8394090c"
        },
        "item": {
          "id": "54dd99c7-c748-4c17-bd6c-1188d2a3f799",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "f33db922-6734-4f0a-956a-86c008022c15",
          "status": "OK",
          "code": 200,
          "responseTime": 3137,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "53c1c7c8-aa8d-4034-aa79-a3d6c8839799",
        "cursor": {
          "ref": "644ea145-1f1f-4beb-8263-c3d1b07c48e3",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "8136d34f-9095-4546-9bca-bcff7ec2b3b2"
        },
        "item": {
          "id": "53c1c7c8-aa8d-4034-aa79-a3d6c8839799",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b6d2f0ad-5fae-4cf7-a1b9-9c2d76610074",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53c1c7c8-aa8d-4034-aa79-a3d6c8839799",
        "cursor": {
          "ref": "644ea145-1f1f-4beb-8263-c3d1b07c48e3",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "8136d34f-9095-4546-9bca-bcff7ec2b3b2"
        },
        "item": {
          "id": "53c1c7c8-aa8d-4034-aa79-a3d6c8839799",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b6d2f0ad-5fae-4cf7-a1b9-9c2d76610074",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4af5f6a-bb46-4233-a4be-838037ca7c10",
        "cursor": {
          "ref": "946a19b5-359f-4296-bb0d-13e4a8433236",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "39124523-206b-4d95-8df1-2fae30ec5b36"
        },
        "item": {
          "id": "d4af5f6a-bb46-4233-a4be-838037ca7c10",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "d9274760-42dc-455a-af13-015fb8445fad",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de6ba7a1-8477-4858-b553-3ad9b5faa6ad",
        "cursor": {
          "ref": "fbde783e-e4c3-472e-a2b3-a2f081153b0f",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "8d7b8357-aa9c-44f4-90c2-dd1466abbc9b"
        },
        "item": {
          "id": "de6ba7a1-8477-4858-b553-3ad9b5faa6ad",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "53c61fb9-5157-4405-b782-3de1c70b77c1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}