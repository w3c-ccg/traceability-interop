{
  "collection": {
    "info": {
      "_postman_id": "faa02ea8-9433-45af-b9a7-893a98130da9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "d29aa552-92e2-457d-bd98-9af70cfc6852",
        "name": "Clear Cache",
        "item": [
          {
            "id": "87139b2f-7de7-4aa9-b3da-4cfd823f0c17",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3ce1570f-07e3-4a84-9e0f-3b421bde0e82",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "2516841c-6105-4004-9897-8cce993b143e"
                }
              }
            ]
          },
          {
            "id": "1437a083-d64c-4426-a45b-5efbeba9ee5c",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5c6e8858-5d19-44fc-bc9f-8d5806c1c308",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "47250a5c-3622-4759-881c-03f518296de1"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "deca3562-af08-4011-875f-0bea855f53fd",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "497ba0ad-a827-4f01-8191-927459735e95",
            "name": "Positive Testing",
            "item": [
              {
                "id": "21ee9c97-801b-4dfc-876a-2daa7c8554c6",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d328a9d0-ab6a-4e6b-bcbd-d3048d70a9ac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "81c001c0-0b2c-47ba-98b2-6bd5e6d0f919"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d044e7bd-b10c-47da-a3f7-95f7d3268a43",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5c405a69-9824-4ada-b875-f52cf3775707"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8bbf91a0-2691-4755-8e37-44fabcc4ec9d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8956a58c-8f20-4ea3-8bfa-2196a716ae00"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3f8a32b1-d3bb-49ed-b029-b1894ecdd27f",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "8e5f0887-7d11-43e3-bd41-4e8a10ab59e0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f8a13690-f52f-4a5f-9444-888cedb77dc5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6dd5760f-c552-4f04-9da5-87d3d2d902f6"
            }
          }
        ]
      },
      {
        "id": "7e8ee01d-f33b-416a-b93b-36f8bcf265aa",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "7bc82c13-6f78-4102-9386-15950a04065d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c81f4bd3-a1a9-491e-9e2c-4249c901ad6d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0379383c-ce42-4f3b-bd1c-b1361b55f541",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e650932-e1e2-4d0b-af26-3c6f09f86ab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aba9b004-9d8e-4bae-a3f8-40895cd10e90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb198d7b-5911-443f-a5f1-a98271cf96ed",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d90ce473-16a3-4d00-a8ab-3988aad95cd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fa56569a-bd44-44b2-b221-f4e829f44d99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9050310-7fcc-41d8-b6c1-613bd4d1ce30",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38e20b0c-5c43-4734-bf46-d4c3cffb64d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eb30d8d3-12ac-427a-9657-947173eaefb2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "289b2c38-c5ab-49d5-b9c0-09e2b9ec3264",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "18228843-bf96-409b-a55c-9ce9ca43c758",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ed4bfeb-a496-4d7f-83b0-1ee89a9b88de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5170e093-2a63-4465-a69b-f4dbcee4d861"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a1e76ff-b846-4440-902d-ec4f04c2ee39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7a0b4bc-8d8b-4a22-af8f-356cb65f6cc2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "5c8dda11-119f-414c-9527-48e8edaaf505",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f6f41374-8b01-4929-acf8-e20b17cf4a1f",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "df3cb8a1-e6b8-48eb-8a71-c5b871909c67",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "277fc8cb-38d0-4586-ad7a-5ec0513b1d71"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "774f6e18-4b0e-4c92-8441-14e340590ccb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "5137c27f-dfee-42fa-bb3a-c0f903b6fd90"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d272c5af-6737-49a5-b0f5-f4e1b304cf0a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e375ee36-f55a-4617-a64f-1e963afe6409"
            }
          }
        ]
      },
      {
        "id": "1d595e8c-5e14-41a5-be5c-8abcbe00d78d",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "e04cfd5f-5c08-4861-b47b-cd0cfa1a9670",
            "name": "Negative Testing",
            "item": [
              {
                "id": "56437d92-d323-4536-a703-e2b9ae46ee0b",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "83d42fb2-b596-49ef-934e-6856c639890a",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3809d6d9-67b4-4cd1-9c5c-7174c0399c07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31801956-85db-4620-8a26-d7cfaf99601c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abbaa419-63e9-4c60-87de-83c040d978c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1689970a-f772-4851-beb8-eb18070b6d2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7136b407-5295-4f15-a108-c6cc0a78a15f",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fad27c9a-c31a-4853-86f9-6f0aefa71ceb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf70d16e-13d0-4290-af38-05d29e1d9ec1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1074dc30-833c-46b2-b686-bffb7dfd36b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "83a1f835-ccdc-4bb2-9424-fe16294aa4b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d9c3955-996d-47af-bbf9-4aa9704e62c2",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46f9cf14-1725-423e-8c17-9b3d423306c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87951cc5-8190-4fb1-bc78-39d201c01b46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92548102-fd32-48a1-acfd-b01e4c76e6aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0a385536-c814-4b96-bea0-d92ca34356cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20dc5baf-6722-4c07-a257-4946503bab86",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42c23772-e3b4-4526-9ca3-27610524f8a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b5ac6d0-698f-4172-ac2e-75297e0cf4a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff6069ed-7492-461b-9b58-11eb137e6030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "18a92b02-78d1-4c7f-902e-a63bb37aeac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98e46452-a8ea-45bf-a34b-a278c342e3df",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a0f8509-4308-4489-bfbd-af1b867be52a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff68249b-6c78-4fa9-869d-a50e77d61ef1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14f57b78-56ad-47b6-9235-9f55a8783696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c20a90b9-9db2-4a72-b917-6dd165e92c6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56b2d5cf-05f4-42e6-991f-299364645ef7",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0d08a79-a3d6-4af9-bb3a-fea855ba5b46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c128e17d-0ca1-4604-aef0-02fe4f2188b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16cfcafd-c575-45ab-8b37-f467543b7202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7b70b1b4-2f50-4317-a7fa-4704092197d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06643e50-01f0-4ff6-8085-103b7a07a6c6",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9329b6f-c88a-4967-9f08-41d2d819e801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4376501-dfbc-425a-a932-7d7874434a4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4e55734-1e83-46d5-a652-8a718e64c0fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "650aedff-deef-4428-be7e-42019738b92b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0802b042-708f-4130-8a21-a5e217974cec",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7f180c7-059a-40bd-a631-23ee7382af25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f870828-9a7b-4387-b96d-eb4526fa4cda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d3f53e1-06c5-4dad-8898-19f029cbbc1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "01d6816e-a631-4ced-a972-4f3732eabf3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a710d3e1-71c0-4e9d-b121-d0acd854097b",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "397d3bcf-2e96-460b-8a7a-ad08666e131c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ed0180f-d51e-4fd7-ab54-94aca0dfd97f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d01fcbcf-108f-4038-90fe-cb01d7d3fbfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a01f036d-477c-46ac-9cc5-c87848b988cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e9e2927-a9f5-477a-a8ed-531c41d6eaef",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6468892-3851-4ad0-ac33-7312df2e9915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53fd2103-bf5c-4c0e-afe0-7525123258a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c49a3ed-3545-4869-afa1-088b5c5c1142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2306497d-2254-4993-8b9c-c6002a0fbddc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27bda513-96bc-4f37-98a5-802655c167fc",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47e658f9-f6c7-435d-9420-091b197c19b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dc65b78-9a50-49a5-82cc-6e677d0b71e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe2b2f6d-ac06-4667-ad41-6935b1eef06c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b8dc0e59-854d-475a-a0c0-e471c213f978"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cb3c7f1-a282-462b-84ec-999c8541cf29",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87002031-75b7-4ad3-aa4e-68baa1922aa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "214ef4f8-bbe1-4b64-93f0-64fdc501207d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b129f9b-9bc5-47e4-906e-a748679703d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "796600bd-ca06-466b-a875-4ca3f3e47f29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae699c4c-c77b-4877-ae58-7d2f252aea18",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a47be80c-e62b-4951-886d-98f2c3b18851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "040f28f7-22fa-4f33-9caa-fc1a0ac3470c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65f853c3-0044-4ab8-b0ed-1eeb67180282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e6c9ae2e-dfb9-4bfc-8338-c62d75774d80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66982390-5de8-4134-8665-7fcfeeca7481",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e19653c-8e54-45ae-a680-7ca365a12aeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e12a840b-d656-4232-8fc6-07e878f86a79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc5b1adc-779c-4178-97bf-134f6db0a75b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "42eda9a2-a4e8-4020-9b49-cdab94a8dc63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "306271dc-024b-4caa-8f1a-c581735f2674",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08881081-03ad-4118-b13e-60f24d65b0fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef1121cb-b53c-448e-82cb-2db91b9b3936"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83bfb13c-df99-4e28-b77c-02ae18fb4628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d2c7ec22-dabf-4507-bd5d-f764f05f0806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d3743c8-9c91-408d-9a67-ba3beff3f94c",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bd382d9-0060-4926-925a-25652bde4d76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67946877-492d-4e5d-a182-88a3234b58d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7d20668-7bce-456e-85b7-db6b0b0dbcc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3a04b4f7-5c5b-463a-a69d-b8a3d9665044"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0145438-1cec-4b90-a525-906d23d8ec52",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "656d1cfa-5663-4369-981b-7aea050c6448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd01f769-54fa-4101-a7fe-186b36fe63e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3869ba9b-21c4-4106-9f65-b6b36331ecce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "351aab64-2b9a-4207-bb11-97fbc8aa28da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58bb7114-2208-4dbe-9c6f-501d4161c72a",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0236b1d-0ac8-4ae1-ac63-5083e3b2c527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce50eb71-8c5e-4fd6-b54b-b51cfa8d5590"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f0b9426-2f37-437c-acf2-ad7062edf15c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f93fd278-16c6-4da6-8a8b-d1fc86cec766"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c3d2be2-5292-49ff-9cd8-83b09449dc22",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c783568f-a712-404e-9da8-b57ece181814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06300363-caaa-454a-9e87-b56ea650d232"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06d29252-5849-438c-aff6-ea2402264cda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d74a58ab-edef-4443-a5fd-7041d8c9b03b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cfe2818-3e8f-4e24-8dc1-4a816e65e0d8",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f06f69f-9f36-4efb-a50b-2ff2286c3611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0bf4426-0d8e-4751-ab3a-736543fc9c2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea128b53-70b6-4239-aeb6-804a5eeb6b7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5073d4cc-38d7-44da-975b-4b56d6374a88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6381e3d-2b5d-4f48-a49d-b8ed543f285d",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd0951f3-2691-4bfa-89ce-c7b003600a44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbbfabd8-2b9f-4f93-8ea5-f3d3b61b3f65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f23a979d-5733-4296-be94-ca92a111c68c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "43d792dd-4811-43e6-9c48-ac617ebd336b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3d20b4b-2e2b-44db-916e-fe05d4a4124d",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f44a120-6906-4e42-8792-564fd2d26e58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "533b07a3-8b99-4b6f-8d3f-7339cc6320d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c476103f-2ac9-451f-8801-26dc18880ec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e79737f0-3251-4993-914f-a029354efaf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52654133-f0b6-461f-bef2-737ef61c20e6",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67c45018-8621-4128-a90b-51589f918e77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fb16b17-191d-45b4-9ab0-9e6b289890a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e13095f-3a90-4324-b8aa-8698a3b46463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a8ad3cf0-533e-4acd-8812-efd9fadafb3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7714776b-74d3-49e3-9092-0234e39c5280",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b900d501-b564-4786-b182-028184447afa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d0a996b-1206-4361-a40e-b628f1987b3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d93b8989-f779-4fd3-a2fc-b6cae5a38815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "50a6e217-651a-41c2-9497-8db08040dc8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55e086ad-6ebf-461e-8ae7-aeca35ade76e",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eff49813-c9b8-4f52-bc77-ada7da633dbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7ca8b39-43fe-478f-9fb3-08a3739a37b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a32de083-54fa-46da-9ab2-6bb9dc38d55f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf2f29b3-4b36-48d1-90c9-c4acbc6c62c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "296a9cfe-5804-451a-8803-5917216427b5",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eda95a5-4396-489c-a5ce-b921400a0606",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0299f79-e70a-4cea-86f8-eac9da700599"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e496de5e-93ac-4403-924b-ccbee0204438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a83d13e-f1ca-4918-bbac-f61ef85b4124"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0229fbd8-9440-4667-9168-b29164df2fcf",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dff4dd1-ef8f-4a46-ba16-915039a52563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e608ee7c-1a7d-4ada-9846-0c013fed2b53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "498b0859-bf62-4321-a193-c22ca0c56432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2901eb21-6366-4b2f-85f7-9f7c12e705d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f033c73e-e071-4b98-a0bc-b569163a7bcd",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5d5eeca-5f4e-4ac2-9711-68ddb51f575d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb8ca255-9d09-4978-8bb9-0b5b1d36a88a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6194538b-f78b-4efd-b66a-ab7c9d3c90ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "53a3ed74-1986-488a-99c5-1a011a8d1c90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b4b742e-c15c-4149-8617-d9693a06f053",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a71e7f08-2172-4d0b-b5fd-95add0c75814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d0cad41-decf-4ff4-bf93-17a909bda7dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75de0637-50e9-4115-9310-b2079e0bed61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3456e958-dcd8-4e54-b18a-c364e12ade21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bca8c40a-8b55-4855-b881-958c923791f1",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1411d24-571d-4e3f-a173-f88eb376d767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9aeb74d3-67e2-4f73-8447-656978b3f293"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fcf9cf1-8df6-49c1-9c6a-5622585f1da9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "94b7bfa8-3b04-452c-a779-84849fd86c6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b3db24a-fb56-4687-9da9-ed2b3cfd6468",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f27c072e-77db-4871-9461-1f5288cd2812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8a8d010-a4cb-4eb5-a99e-e81909616d08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e460dce-e544-4a18-bf20-011649d5f025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "db414234-27e4-480d-bfb1-322b76c7d93a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d53d78b3-fb29-4ee5-9e71-25579a5c0511",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63562351-2f8c-4cfe-ba05-b4a85ebc4fc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d61b631-ff43-4c02-b2fc-b69543e7a719"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59a801de-2d44-45fa-98f0-4e1556ed64f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c3a67ac-adce-4ab2-a8bc-eea659a65213"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f989bcea-21ee-424d-b9e5-c5c35843f986",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a665083e-a0da-4f4e-8a0c-d2c1af47ec09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5547f54f-8397-4a84-ab1d-ffbb030197cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a6689ac-b328-40c4-b19c-8c5a8829fb79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "338ca427-9a82-4678-be45-1a2141008b18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e7e99a8-a096-4ea9-8930-a993d68d8650",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bb4131e-0c91-4272-9ac5-7da0b63554b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27e50944-0ac9-43f0-8079-8cf40be8c1f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a767c510-d516-4dc9-936d-dc021aa702b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b70aeb88-14f8-4a48-81c7-d2e9bd406fec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bc97b6f-3947-4178-91fc-a87d5f358664",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1cfa1b5-f702-4cf7-9695-5b6b1a7cedd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6db1848-98d4-4967-b91f-f2458f3675b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1115af6-56d1-431c-96de-ae6a52228297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "9e193c68-195d-4a8c-a8f8-8c9cde8500a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53e11bc2-4d22-4b5f-8652-34bef1603527",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a792db11-7697-462a-8d88-4685f72bab48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eb69263a-d53a-4c5b-bd82-6f211aeeabdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb0317fc-34f6-4523-9a56-79b98f4c1bd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "99dcb603-9416-4407-bcff-5da0a05193d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eac55872-7d9f-4fe9-ac2c-92b85f2ad8ae",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4efacb9d-eda8-4e4b-8359-4aea9c952197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87263f30-f98c-49cf-8346-67697135d0e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9748cff-ac4a-473f-bce5-2934f8475a90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9e19c587-403f-42b9-8d0f-1c63ce9e2ee0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcc014e9-a1d7-4af1-96da-63f2ddd80bbf",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99a944bd-dbc4-49c9-a7b0-71490780019a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f4a0317-1d0d-4131-ab6a-938d18e83074"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0740ffc4-422e-411c-b805-67c12cc6d471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "37bdae10-cf5d-434e-8474-b6bda63ce01c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1c65179-11f9-4b7f-911b-8c6144c42ea9",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ae24eee-be5c-460e-825f-bb05e79914c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e349d877-4c2c-4733-ba15-ae9d37334d46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f18fbd3-8708-401a-a76e-159cc31425b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "68dc184b-49c7-461f-826c-38beb5bf5d63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3703db4-5a02-4c37-8581-ae9c0358a980",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43f8b3fc-6031-4d01-bc30-64995baaf19f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b27a43e9-a458-49e9-be2a-11e15f8774e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "611f69a0-64de-4754-b57f-3b5984af7cdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "097022c5-13b4-44ea-8d14-7cd472677a03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd6588eb-c7fb-4473-a6f4-47d4ae182ec3",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28fe4afc-7c9f-4636-b180-2f503a7145b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bd25179-4cda-4e03-b2e3-7ff93c361783"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85b8f4c1-b178-4fb2-9506-cb7d3a589e9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "434f3b90-a168-4941-a2e9-ebabc68ef370"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ffcc0ef-25ba-4b04-ae83-13b6c820dae1",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef28b85d-2ec9-44b9-b66c-c4cea3176f8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e8b9ded-559b-49b9-aaa6-c71ba1dfb86e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c00582a-107e-4714-b3b0-aff18f07e1eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "9e4f7de9-44f4-4657-a470-2cdae735bba3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "810ef16f-15b6-43b3-bdba-e0a1478c3f5c",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "875742de-b4b0-429d-9390-dde20caa77d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfe19d55-758c-4372-8384-cd55c2f10130"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb86059c-46be-452b-93c2-9224ebb4e7e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "fa6228c2-3c02-4c98-97a8-6075d1649002"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc59aebe-8d4e-438b-939e-de2b78dfce40",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab31db27-c875-47c4-9125-8bca050109b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53364f03-2312-4ed3-8d6e-94f05a566bc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "954f2c2d-c79a-45e7-86d3-0bcee9f9b515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0c8ea0e-1be9-472e-b0d8-049272369554"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b079244d-8b46-4cfc-9649-7580357ddb4b",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93514b03-5dba-413f-b457-6b8c2690361c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb32422f-3f9f-4118-8691-31cd6b5edc88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a7ee8d2-74b9-4305-9668-98801acbe1dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e1ce0ea-1b24-4544-969c-c35419fc70be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d23d16f1-eb6f-4578-bd03-e1af55fef3d6",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96f8d286-9eec-4aaf-aab6-64237c937688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e92670fc-4ad2-4242-87ce-7ca9d9a87240"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5c186c0-2a8b-42e4-b81c-01e42e7b0695",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "43299043-a832-4573-94a6-5e7f4cfd08fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d6a762d-1703-42ee-99db-eb63e1ca2f46",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0965c025-a118-4ee5-864b-75bfc26b1298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2725df8c-2a11-477e-ac7b-ad6af317815e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b29c2fd-bb1d-4da7-9c40-a8c0c382b78d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5d1493e-2186-45ce-b2ce-95c620c7b05b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c4be90e-d79e-45eb-83fb-3975af075b3d",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "848eb719-4d11-4864-b7cf-87a850ecf70d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ca35691-26dc-4ee6-88a6-b3fce19b5898"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c56e5c59-2ee5-48c4-ba3c-d90ae227613c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6463f16e-1358-432a-aa57-7779db5041d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "269f85ae-173a-4211-ad68-e379f0c71fc2",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d50b2581-b8db-4704-bdd5-d4ff5e3ed54a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84ecb2a9-7596-4231-ad84-27ca445ed35e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52a332d6-2f4d-4f27-930b-b16a34d9ba24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8463398d-2946-44ee-8826-2d6504c892a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c08e1f2-d652-4d55-8eed-9abe960b0d00",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f35e1da0-e983-4844-9262-2964c8c8a9df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ac8e02b-a0ed-4ac5-a323-08882a457ce1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9090417d-48e7-4e9e-95a7-e69cc8074838",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "00f7cce2-2c47-46f5-8624-ba341de0e5a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9560e230-42af-4a0c-80ea-970d8d58c7c0",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec5e0a79-3602-4a56-befb-e5fc0fb9227e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b11b2d7b-f5c7-48e4-b4f2-f0203a5cf385"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c8f3154-ce83-4a90-855e-3ea9c38c8484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "258ed5eb-5a19-4919-b29b-730ee6b00ef8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b479a3b-f767-47cf-ac8c-b16f8b7d27e7",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aabb19bc-e12d-4f7a-9203-76fd3098236d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "830c5257-ff3f-4ca3-adbc-622473fe00ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c288fc6-ac72-4245-9abe-f0626f2a8ed7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "59f1cdd8-5ec0-445b-9962-6979fd8f5a4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afd16f9b-49a4-4b43-a4fa-0929f9f4697e",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49e76ae3-18c0-4dc9-bf89-e80f22024e97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c6bd21b-c707-43d5-905f-26d26256f615"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9c3e787-4bf9-40f4-ba59-40498aa039e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "43cbc0b4-e92f-457c-aef7-0b7b08a5c091"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c8ac286-49a1-42fb-bb23-c70847540421",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14bb155b-55ba-4bd5-af98-40a2f21c5c8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f166d291-728b-4440-9ac3-2faffe40d068"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec46afda-37a7-4947-b473-136be651e6b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d38e15ff-489d-4cdc-af21-632976bd67d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12463756-9c38-4ca7-959f-916ec740492a",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a10d8e56-2017-483d-9f4f-95c381fdbbff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ca3ffe7-319a-442d-bf9c-1748fe5fe04c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e38081b-03bf-46a6-99bd-4f6fab51398a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0fc481b5-8cfb-4bbb-8853-1400603f79f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b75e2ee-7cda-4b32-951e-8cda55178d2e",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96e16750-71eb-4c9b-9b4c-b3f265efddd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c75396f-7b1c-4235-ba75-078f551bfc5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88b03bdc-b6f3-497a-8ec0-6cd057ac83f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "0eb867a7-2b3c-4b8b-a11e-6fa6d7c113b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7d18605-9a1f-40bb-ac4f-20f1da126e21",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "131ae214-d4d8-4595-9573-e2fd5188779c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21f00bf7-ae20-4464-bce2-6f53c0c8c91b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b608444-ce8f-46b1-95d6-60bef6a11424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3b7f2813-45d5-48ea-b600-21aa85abda1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "400a80cf-3274-477d-84a3-f6bde9168fb5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50009794-3433-439f-b2b1-676ffdd79066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6840c0b-8fb2-480f-955e-ab9693700615"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a03dc7c-e2cd-42d6-b564-c143f7055866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e1863716-19f9-4fe3-a59f-82383d8a563b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "157c875d-4c5a-4b11-886f-84e415bc3e7c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64ac2d4c-c51f-4114-9385-c1d9d6ed4749",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55d42663-6463-4c3c-b6af-6b50f75790cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc68c6cb-53ed-4229-95d9-292fc98a8f40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "538ea50c-4b85-48e7-b485-a3387513eb9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35be3e5e-4144-4979-acf6-47a10018cab5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a21332a-e375-4341-bf83-436f03c208a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a7bd181-8839-4044-8127-d3b66e3fb008"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3b9460a-8c00-46df-a645-74ae2732ebb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "07619a4f-6b18-4495-9962-8630906e0e12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1989d11-bf42-450e-9f8e-c2d4d96c3ee3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04ff8318-a346-4f16-bf63-54f88afbdcfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e19d27f8-d63e-4961-893c-b1641d0f9a11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bdddf60-c056-4c14-9719-fa68e4ef1f23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "5d51038b-b586-469b-b271-e09735337e04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f046b3c-daa4-45b7-af16-41261d02bdc7",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba8179e7-b35a-4401-9758-72ae4f8be588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de875a65-315c-4e3a-940d-0db31e14d7e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fac838d-7445-4d6c-bfa0-464c4d1986a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "2078f564-4b46-486d-af8f-9fa5c8a79ab9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "513fd455-b5bb-473e-ad1a-04d3b404a6b6",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37f6359e-45ae-4a61-a02e-939ee6b1cdbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c6d0e18-87e9-4f79-9780-ef6d77259e85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de9fa2f4-de23-4513-9f5f-0c4de0fea0a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0180def-dafc-4e1a-81d5-262ffee7a2f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eef09ed5-e902-42fb-8b7d-700664a922f2",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90924ca0-5258-461e-a143-d6462a39d308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d1173e0-dc22-42e8-94b3-d3f673c6be8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab857d66-99a8-480c-8d0b-b0cac87f1afc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0daf50f-ac11-42b8-9cf3-acc31be931bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb6297ae-cc75-465e-9649-0a27f8549723",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "debd2272-1a36-4676-a175-4c804abefe55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03af14c2-28d7-40e5-8b41-e6046d3aa85f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "650607a8-532a-4b39-b528-d4564009ec87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1b18063-c676-4fce-869c-187e147abe25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c535a474-5ad6-4c95-a6da-cf97b549e207",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "772a4de5-ba37-4d3e-b1fd-46c362b8a287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cdbdd6b-bb46-4c4e-9f04-1764d1a04468"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "677dc438-9b79-4cb0-824a-190781e9fa7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5149a75a-abd2-4d8c-853b-af9a56a25eb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eafdc53-6c6d-4871-a3b4-90e362c88073",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4257ed2-7f63-4985-bd9c-37b01aa9164e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0038a30b-cbf1-454c-aa48-e4775c93f1cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5318deb3-20fe-4dd0-8d71-cd2146c23610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "31a82e1e-4ea9-4c0d-ba16-d4ac791afc53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6960e24-d4a4-4feb-8fb2-68d58ce88e32",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "853db896-025c-43e1-9fd3-032dcac76d5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c75923dc-7421-48ff-8b97-1d4f5b8127ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb1c560a-13a6-453b-a897-77f94e0f9bc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0698ef1-647e-48c9-86ab-7263a7f368d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "392846e5-5fd6-4048-9d5b-7d2270d8adee",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6352a342-9212-425e-b44d-35ee800496f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a18cb0a-eaed-44af-9155-eb3d37c6e4ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c01bef27-f40f-472f-bc09-eb8a5a127fe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2e72b63-b76a-4824-a858-6823be2c8c47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c33ed55-576b-4e09-b2ac-0a31fb16539c",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "116061e7-be5c-44b6-aa3f-70ac6c185377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41394487-2eb3-43e2-b352-81a47761a65a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2798fcd4-87d2-481a-b759-d1152ffd28ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c850c1ad-5243-43ee-9aa1-42c1bb892cb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6d0cb91-c281-4a9d-b5b4-f8466e1e9ae6",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4b0cb7b-1a9e-4d24-b814-2266d62391b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84b23964-7bf7-46e5-8ce2-0844d4408fe7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "198bc664-2fd7-4608-8f86-39a528586f39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "333ed930-9336-4a6c-abee-dce0ed1ec806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c505fe2-7089-4782-8eba-64c365207e8d",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af815a5d-b45f-4b69-aed6-85e3e742a5b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5daba69-8ef0-4282-8901-cd6d8623b000"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2b530f0-affa-42b0-81ff-e59c339fede2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a934e69e-e9ab-432d-9241-2a53c1679a3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e33b7ccd-46a3-4d5a-bcbe-d68ca8cddd3f",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9c1a4e3-fc34-48df-b14b-b4297999987c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c19addf2-35d9-4875-9e8c-091b08f5e17b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d30554fa-d516-4d6f-894b-dc2aff76cdbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5abd74f1-d7e1-4601-8111-26c7409c3935"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b924f224-b84f-4ce4-bc7e-fd2642b66434",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9614c297-5e29-499c-b54f-99e9e6bc6caf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56cc3b28-bbf8-4833-b81e-ca40bc323d7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d47e836c-07f9-4cdc-94de-1e90913f6f80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "60aca731-c3d1-455c-8b7a-6423d200869a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e268e6a9-bdee-4b7f-9a59-a10d0eb8b2d1",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6669d73a-62f9-4491-8499-84d0ff654ffd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b85d81b-b0ce-4ae5-8ab1-b3b6eff0499b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58102ce6-d437-4e0c-a46f-38d2129977a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ef68bce-551f-42dc-927a-acf176e5f9b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1172885e-14f6-413d-b2fa-bda0347a849e",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f33672b-37e8-41a0-9127-85b433f0e7ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a50dd9d-c63e-4f4e-92fc-623c05fbb0a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4864fac-acf4-4bd1-9752-b513f893a319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "53ab6b65-e2c4-45f4-b867-ed50dd3948ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc2a8648-aed7-4c7f-b27e-c113edb2eddd",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa4d1ffe-d6ae-4516-8f2e-6f53f9b233e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08c128a6-276c-42b8-a52e-a40b16f09fce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbab90f7-8d9c-4695-ad85-eda1d93b6791",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf08e167-6b05-45ad-9d0b-27efedb29f73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d05c822b-8b84-4059-9720-430cf12773b5",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "240cb019-ddb6-44b9-b2dd-34eaad0af39a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4e74a1c-48b2-4d43-acd4-707e7ca24e15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfc69c65-f43c-4722-9827-c84b9c8a2be7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff957618-8ec8-45e5-9b52-5f3aae30199a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "516a8a4e-e1ce-4353-8cb6-d975b6df1f69",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75f28c48-3abc-4b26-a43f-ea7aa481b3a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1638fc4d-889e-49c2-80d3-ea43b27551a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21a84eac-0e10-4191-b233-b9666e986009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "08afdbe2-6ee5-4b88-b421-31847588d3eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df54bec0-029e-40a3-98dd-8dae882b959c",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a93080c4-b399-4c72-8d57-7a4d778a8f45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c54c364-6325-47f5-bbbc-f1d4aea7fa85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa016758-a0e3-494a-8792-3ca69be866fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7fb9ceb6-a901-4cf7-b700-a758e762c7ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bab2497-617b-492c-a1ea-e1509206d395",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4f5eafc-9c64-47cd-84d4-79c4713db155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b96d72e7-509a-41ec-b1b8-43ad6ca3e475"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c11f906f-4026-4528-9c49-8ada731f861e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "009ed106-8cd0-4c79-a687-3e7cd8002996"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13fed4db-f7f9-42ef-a48a-e9208b233571",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cbec50d-89e0-4dac-a067-ed8343243937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92bebe06-f937-48a5-be30-2087d46088ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "856810a9-b14d-4199-a920-687471b31fc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e8035e5-3703-44a9-9c46-cd7c9753a7bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "827c7526-d403-47ba-b51e-846eed06a406",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b207cdf2-2236-416c-88d4-d9b129259de1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70f045b1-21b2-491b-8ac2-b8a236a7c52e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44293eb0-55e0-4dca-89b5-9062ea863d14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "75afb561-3602-4365-8ec4-811cbcd23e97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42caf6ab-b1ef-4f29-8f73-65898554236d",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bdef64f-c8b7-4635-becc-220744c0882a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "877080fa-6220-4305-b214-b932fc5a5ac7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60e8be64-5c80-4f71-94ba-990d0d61d3bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe8acdf4-57d3-4dff-9569-4bb71a04a534"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1c06246-f337-4933-9095-0fbbb3adca74",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0e1e0cd-1966-4e98-a650-b3f6f03f6b04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0024060e-dbfd-4b84-9d03-83d846480465"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aed9081e-eec9-49c2-96b6-69ae7f58c1b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2cad3440-e004-4fff-93db-69f28f7f2885"
                        }
                      }
                    ]
                  },
                  {
                    "id": "498c410b-760a-4a1f-a316-539bbeac6ad6",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5098020e-9393-4f8a-be8c-1ff1a03cfa68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5a20afa-a914-4ef0-ab3c-049d0c589e55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "222647d1-69a1-422a-9537-86bdf05e0737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2b07083d-8243-4f68-8785-0f7beb0fb846"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9da9a573-9297-4f94-b401-bb319ef2d076",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efadc3a6-cd83-4fbd-a3c0-8932055afd90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "581a7ec0-af97-4fc2-b8bc-392299b48351"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74e64927-583d-46b6-8568-cfe72ede89e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "93733e2b-64a9-428d-9ac5-dfdce2b5cb7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdc5d794-9446-469a-af04-f74f2925d138",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5402b322-c35d-4a22-9d8f-cd62205f4381",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7201a9c9-8605-4505-b63a-81b359a455ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c041d90-0901-4fca-aea8-a630bff55eb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ad6f54c3-d0c7-4d6b-af2d-0f039cf999e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44482d6f-103a-4107-8843-f2baaa1915bc",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cec5e413-ec3f-499e-9330-f01784e82b51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c61009d-6dc4-4f58-adbf-ece1fa5142cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e077727c-8ab2-45c7-a750-703118c65cfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8d65e410-e764-45fb-b47b-aefed0960c84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "537cfbad-26e9-469d-8c0e-eabce9709b1f",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "694ef701-31db-446b-ac11-e49a03a624e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b438fa3b-2260-4108-a04e-fafb1515c193"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9f92bd9-8896-4f40-944c-f02a9e5d7c40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d9a6889-88fa-4ed0-88ae-d1c21d3f5984"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9642af3-6989-4c5e-b5b9-83d64f7bd3cc",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8fd1ccd-e762-48af-a9d8-21d701baece8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d5c837a-73e3-4e3e-b67d-858d6a47adbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aa45bd0-56ce-4bad-a41a-522d42c9fcc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3ac6c6ad-f0be-4b28-8c30-c508a07a6a63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a0baafc-dbd4-4fc4-a819-e07fcb47e4e4",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc30b59d-a2ab-4dec-ba3b-d99acae5543e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "4861b51a-9bb9-4b15-897d-401ef8423695"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eb9e627-c7cc-4012-86e1-c37f3a3ec7ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "db787bba-e489-4bce-b92f-19b4e66db9ec"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7b17858a-5e49-4eab-a0f8-337c6d9d23b4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "259cebf2-7c0a-4c21-8227-0dcd048388cf",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8972ce58-44e5-4d71-9dcb-82252bdd0c00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "51463691-802d-46f1-9d10-5781c198ddcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c53af41-aa4f-4b69-b6af-7ca4657aa065",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0a913f5b-a083-4306-aaba-41fe194c28ee"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "da6e6381-d1bb-4a36-b5e8-5197df12735d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ad3aa45c-82d2-4652-ad2f-f7c63dcff522"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5beda019-7eb9-4023-9940-fc84fb6991c4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d6221b49-8601-4748-9536-509fe44dda7b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f0b1258a-97c6-42f4-8d2c-9f4da3ea7407",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "93fc4721-7c68-40e4-8f38-fe37dbbdccd0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "75c10d41-de0a-494b-be68-7cb40b1c34e4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2bb17dac-82a5-4a35-9c40-0769130d52c2"
                }
              }
            ]
          },
          {
            "id": "c6b6c0e1-7047-427b-bc89-dde0a7a9c8b7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7e5aafab-0c30-4cc9-a3f9-5295805e376b",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3d6f0b5a-32f3-4e14-8033-5f6729897c91",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "be66b525-4357-4841-9013-f1898f0053d8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "83f2dd5e-7061-4b14-bef7-fd8ef1d6b197",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f5420e87-0d37-4a73-b48f-c1f066d5441b"
                    }
                  }
                ]
              },
              {
                "id": "eb6ec574-e6f3-492d-a7b5-e8f4b9552a69",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ef874956-8f0f-44d0-8a71-8e17c0a97163",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a584a092-e1ca-44d7-8b7d-94fae7ca6ea4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "69623aa5-c789-4377-b8b8-6de970dfe554",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f4f0468a-60e9-47ae-9cc9-c566cda3d638"
                    }
                  }
                ]
              },
              {
                "id": "ddb76a0b-6a69-4c08-a1c9-cc85281197ca",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fdc0fd74-ec46-42f8-a19d-42a5633321dd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "52207d3a-61e4-4a71-a657-c6c54a237c8f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "23e1907b-7e35-4d0c-8e52-24481b265bd3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c28beb69-e420-4105-958f-c0dc15df9528"
                    }
                  }
                ]
              },
              {
                "id": "f8b5f057-3157-4a4c-8c4b-41f091f5f793",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ad16f934-d915-4362-96b6-8567aa3a469f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "26566496-fae1-47a0-84cb-1e94126ead3f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "df1cb6d3-61dc-4ea1-babb-07852faff628",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "0235d1d8-5090-4439-a978-5411df1a22a3"
                    }
                  }
                ]
              },
              {
                "id": "9e961472-3707-4e68-a3c0-3194a62fbed4",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cff876d1-812f-44eb-a67a-3c12d09b4222",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8fd0c190-19ee-470e-9891-ca740675ea3c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e60aed7c-4357-489a-89b2-a895a91ad398",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "66e1e4db-123f-4928-8f43-888244d46fb6"
                    }
                  }
                ]
              },
              {
                "id": "fcc04b14-cdfc-4506-82de-2e47742b0cf7",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cf437d35-5175-4d10-8240-31b4699a94e2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "453e4ee9-5889-4a9d-a656-edd76ddf6973"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8ef53a77-5ca6-4bad-a5ec-fde53d91ca48",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1ad3cc2b-f36d-4818-8f22-5bb2e4bd9e35"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d4153a76-7908-48ce-9b8a-eabc7fb1179e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "815c87c9-af71-405d-bbe4-036ff6d3c064"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1912693a-d140-4666-a1c6-869fbb1e377e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "dadd66ea-6715-4167-be7f-0b97bbd7d42b"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "91b60b82-2d8f-4889-8115-89e7ce6e4f4e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "3fe57227-a51d-43f2-bafc-730693b18438"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b949514f-8745-4a64-a1bd-48ad85602e4f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1aa43b66-ce63-4def-ac25-0951539d6ca9"
            }
          }
        ]
      },
      {
        "id": "2fcc1ca6-04a7-4518-8526-3cc43978cec7",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "a1b56ae6-ac0b-4265-a0a0-ae80e86416d3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f9a2636e-3f34-4884-849c-323a2374f0f8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a8ab2a24-2879-4d88-9085-d4a513ad2bd1",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a9e7d33-52de-4dfa-81cd-f4cbb85765d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed1fb838-1de0-4597-be30-405155408498"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67a5cfa2-3f82-479d-a4fb-c294e88ad84d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "17989a0d-e758-4500-aba5-de2d49829649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8872e293-c4f1-4286-bf8a-a1249a60546b",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48e3a0fa-2b99-449a-ac90-a30e30f19398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1669a7b-cecf-4dd4-9b54-b386cf510ea5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "424d7a01-afaf-480a-9c1a-1692c847102d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8f8843e-162e-477e-b083-f275cd1ff802"
                        }
                      }
                    ]
                  },
                  {
                    "id": "223b98fc-c391-409b-b247-9ffafde1d4d4",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3b80156-8282-46be-bad6-01d8128eb14b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dabf15c-5cda-4d37-b9ba-f87064d667cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dad4319-6d6d-4d3f-b12c-5cf0fc7300df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f23d66d-5b57-41f7-8e43-b1419cc9e301"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18dd2b1b-8fa4-4777-9ab4-81c6ca07a6ae",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1611ea96-d4ca-4e5d-9ae2-6f7587009785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92af81ae-3c96-4dc0-a807-003274034f09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0157cd8-b356-4dba-b725-407d73151ba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "780e69c8-ccde-460e-a099-10d5822564a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e73f5c1-9240-4d7d-8195-d9fc64f8d092",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0df01813-5821-4ab1-9b58-33ee18f4eb76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae72c110-54de-42d7-b503-585b09781c5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31874e1a-73dd-4b1b-b352-707681ee2066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "18ed18e1-a4a2-456c-957d-b5a4495adb2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "206c42ba-8d7e-4de8-9bc7-61e40223aebf",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e02daee2-4785-4923-a4c9-44c2ae4cf375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4796e0b-cf83-4170-a73e-0589e7c4be34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09dcc837-90d2-437d-848a-089813134c42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a0676200-9d60-4eaf-a586-a277ead1210f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25d0fa34-da18-461d-8de8-d1ee4585122f",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "332d4048-efb9-4c50-9882-2a13d0dd593c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "865c0c79-422d-4ac0-8eef-f1a7c3027c76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f113aa1-9b0c-48c4-9cfe-3f1e7a813843",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "06528e54-2152-4384-86d4-778b09876692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dae87b15-938b-40df-9fda-7961f0ce6e13",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54cbc44c-bec3-4c8c-aa8a-7599396196da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e9b682f-8cf4-4b39-8817-48444b1a8cee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1d83f80-712c-4166-86b0-d5bf3ffeb637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5707d095-73cb-4268-9c32-5017fede9418"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c866c732-63fd-41b3-aae4-e1d36059acd9",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ccedec1-a48c-45fc-82e6-33dfb5c4ce77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d735c1c5-6cff-4b44-83ee-3502cfe3f520"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f71c408-3113-430d-83cf-9d3ca738f3fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "90975c24-a093-4aa4-bc52-4ca3c6dcad82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62d9fd1d-8990-4261-952a-9511ca2f7f5e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3c8f9ec-1dd4-49d1-8bc0-67b29e80b506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a90befbb-ace4-47a7-a8eb-34668e1ce12c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "570e5a55-63da-41f5-a285-93b91e018d35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "168c6a4d-9157-49be-ae30-1d2ca6d05173"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63b7b5e9-4948-4622-99dc-408cd358ffe2",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa0cf340-70ae-4c68-a47d-e7e7979e8265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f6e9d10-38db-4d16-8427-ac5b3bbc996e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1683de84-6287-440b-b41b-6d6abc83dbaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "8f7d9986-948d-4fb4-9866-c79bd2a7647d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "313bc830-fd38-4af4-b0f1-b883a8cf105f",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "009ee737-a503-44ae-946e-6666bfcdbd23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4858597-db39-4647-aad7-61dc0645d698"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b12e52c-0c9d-4c46-8f84-e3da52415ad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "285d82fc-c544-44db-8059-2639e4165cf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70320ad3-dc58-4d6f-98d9-94da3ddd57e9",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ac236d2-fe49-409b-bc8c-a1e1e51ea76b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ad18349-3bdf-457c-8d43-9fd5f191b277"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc45402a-73d1-4c5f-8596-7c0b3d107398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff3574c4-822d-4122-84e9-567f7e255253"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95fa9036-9dd6-43f7-9cc2-4e62c528d304",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0de2cdd3-c6c4-45d8-9d55-3df9e8ba1f1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7553ac73-b82c-4cd3-a42d-faab6d8f003b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3149c4be-660e-41bd-a7e9-10052a87db27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "c23d2f4a-565f-4719-9105-ee7ed208a2b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a94981c-e453-404f-8880-79bf3981118f",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d5e2835-92fb-4d6b-a2e1-2d3fca529e8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d23c514-2965-4216-a724-a507dded65bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3c9abc3-28de-4f12-99c7-87cf50541357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "6cff5a66-15ff-4461-a6a6-66f31464cbc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8631a565-8497-4074-b991-ca4ae85ee119",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d5efd30-f957-4ea3-bde5-ab2d642125bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9176f35c-d336-46dd-bced-bd2ba559377b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c78ace39-debc-4319-a20f-fd000f3e2999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f2505c7-4b60-4d88-847b-7efad474306b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8774f23a-23e5-4f71-a6de-5d2fa06dd13d",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4466ed2-0498-4f2e-be18-044872eb3d44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e105913d-f115-4f0d-818e-8f4876385b23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79b5cbd7-4f7a-4796-ad83-284c246eb7ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "b431653e-1346-4d2b-8a72-8d8901fc07ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83fddb43-6def-4a43-88dc-2ff2a8bca27d",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e39737be-5d66-460c-8245-1309a997cda6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d72f9af-cc09-4741-873f-624a7c3cbafc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21d9f1bd-5e62-4181-93fc-796f9a4feaba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe745513-26fd-43f9-9f05-fbf50d1fae12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "035b5120-b503-44d3-99b4-9c3bf4275c07",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de15dcde-2fdf-4b3d-9eb0-1230800783df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e966dd14-57a1-416d-bfeb-2ed32664bb26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "072813f0-1794-4960-af3f-30186870fb6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f967dcca-7b53-4d12-b496-1241ff703eb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c188b2e3-08be-4bff-b3e9-9ef86141c446",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a18905c-3bb0-488c-9abd-a1fd2b873ed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "763c859e-1965-4133-bedc-51d56c8e4313"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4acf2143-3456-48e3-b473-d14c8cf2a510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "62f2ada6-dd64-4fcd-a8cc-aad21d0a233e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a0ae7e0-5ec8-4eda-8831-03a2be6077f8",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5952b87-ae50-4107-9262-c8d74b100a5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e459bd2-165e-432d-86ec-11ae625fe39b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98c7559a-b2b2-4e0f-a31d-2277e17f6779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "acbc529d-731f-416e-b2da-365e4a2cf145"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79695f8f-8105-4b5c-b83d-a0f78e76aa52",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f8e9799-8339-42d1-ad8f-13cabaf104a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62a03612-6912-4416-9c19-78fdfc2800c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6b851c1-fdf8-4cc7-80a0-7fb72d58aae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "98642fcd-ad74-458c-9aa4-f278d44aa118"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a4d1227-cd5e-4fa2-abe8-5bf377f5af8b",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c39346f5-f20d-4533-bd0f-bf6614a7ca1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9637e86-c6b5-4e0e-90da-9099af67c7d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9a52fed-42a1-41ed-a18b-3befd34b7292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "827def27-6461-4d4d-a242-cd5768903e85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "990a1a39-ea07-4a5d-8ddb-237418dd28c4",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed400df0-7451-4472-ace5-f95903a3d2a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9905838b-91c5-4bde-9f8e-0b3b0242bb9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8416bf4f-61e7-45bd-90a9-a8425107f877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a971a5b7-c7c5-4fe5-96d1-0b2e039b7101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80e9c2be-5c2d-4928-b472-be8f71de368e",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4993a054-402e-4d24-bd77-158bc8cd7508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3181431b-a02b-477b-b92b-dbef64630e38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69e0cb17-180e-44b3-8932-35481ebecd60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a06bed6-f2ba-4096-b155-d2e959c27584"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cea8543-a5c3-4f45-bb71-100c3336ce91",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1c4d149-c20a-4543-abe2-634e4dfadff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "305230fe-60cc-4a36-a4be-f310b918b10e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd579ac0-360a-47a0-9a59-8d5f2a4b3322",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b6ee51e-312c-435c-aaf7-39ece117e630"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d781998-54ed-48fe-a256-6a53b6888408",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb5de420-82b3-41fd-9ae0-3bb99bec6d2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "013c989e-dee3-45bd-9ac3-e39628c0d86f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b34d1df0-b6e2-4050-8dc9-f89bbf0e695b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f152daa0-a288-446c-b398-d3cf22eeb562"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e0760fd-d957-4a3f-9609-9354dee500f4",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23d0715a-e015-45ca-93cc-3c7272391087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b4f2162-e0ce-484c-875a-192b1f470a4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10c337c2-a897-4a15-aa0c-cbf529067e5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc38af22-4e24-439f-855f-4c531163200f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d065e44-4fe1-4128-8e6d-c81ed15ab092",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69d994d0-9468-4577-9c6b-59d3a1aed0d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4c97edd-4b86-462a-b19d-9daf68b0af2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fde2a0cd-4ae1-4997-9e46-5549a4b49fd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "45aba441-5fa0-45e0-8eeb-6697af38e806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13dab847-b8e2-48f6-85a3-58c21e88dd79",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf3f2d9c-13c8-45e4-acdc-e2d0cb639a5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e60efa1d-130b-42b1-bd18-43495a2534a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb5dbc73-3b35-45c6-8f10-d4f23670a785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "48a3de58-36ac-4621-a149-6dd066498dfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48451e4c-0d80-4b27-9de1-988dc971cbc2",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "332b0293-dcc5-4eee-b2a1-077b6983e665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da8dfcd7-64c5-4dfc-a829-7d9a73ac8d8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6acb4ad4-39f4-4240-b6ab-462339d84539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f51418d1-155b-4ccf-b22a-d65ac218c3e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da527e06-7ae0-441a-89f9-43bdf763670a",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4012bab1-1445-420d-b9e6-c18c266cbb13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf4c5f6c-7e01-4657-b674-2bae300fb23d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42770c60-8405-41ba-b009-9881e5113701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b543eb9d-8d19-4455-83d8-874d47e7015f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d4f23177-8dac-43b3-84c9-5c19e17d0a0b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3804e6ee-38dc-47aa-8c2b-044e62e3ef1b",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26e292bb-e85d-4c3f-ba31-6febf5b50176",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "fb6d204d-8997-4f2b-a217-c8ed159392a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4585a243-4777-492c-8374-9ed339edc71b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3108dfb2-ae0c-46cb-a500-a9883edaff2a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "93c241f9-356b-46f8-a280-fed9e39044a5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "546c4ba8-79b5-4e53-9e99-f98e354135e7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2c3f736c-17e1-4c62-a51d-36d873deaa0e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3049dcaa-7334-4ce7-b506-44c30b6b1333"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9c1fa3db-c011-4b58-9fd6-0d32b9f8f1b3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5b1f53ee-8c70-4907-bb43-09006cfd8cd4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0ca4e033-ff7c-4a87-a2c3-5049f560d153",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d6bc54a9-5c75-4793-9223-c1089f4b1ce4"
            }
          }
        ]
      },
      {
        "id": "0bb894e4-0bde-4044-98c8-4f82ae113ea0",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "9e5e4bad-53f6-40f9-bbd2-bb3c63e6a9e1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dd02c791-5bdd-4948-a861-131ddc58b922",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0dbdd850-460b-4937-8f9a-08e6af14ea44",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d60b8d7c-04e9-42ac-9908-d7141ea7a4ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ac5376b-e580-4da9-ad90-18b984e27eb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0ddb21d-08e2-4069-bb17-f1fa8046cc91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "7290d6e3-f0d0-48ba-a43c-4cb2882a221a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4312aa20-ce95-48e4-8172-ff0f3d1e4e05",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c62003c3-49e1-4466-81e8-d3d2b685ecfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6e84076-854c-422f-9739-8f72eefb7af1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f11881b6-36d8-4f29-a6d2-b552177ffec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5dc8f9f0-b7b1-40e3-9c66-67896b8547f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2c2e966-80d9-4e22-bda1-ba2a304d57af",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04e1dd02-6751-4020-abd6-85ebaea6ad1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9c97914-a34f-4e6c-affc-f6c4c53f4f9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f696449d-c8e6-4165-9291-a04f862b37e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "53eda1b1-faa2-419e-80b9-4488fb4a8761"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2349c068-168a-4037-9419-10f8ffffb40d",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ab373e5-d68d-45b5-9f15-e38638205d59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe56b3d6-8371-4df9-b5ed-3e329edc2224"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee89284e-ad23-4bfe-9d9a-a22a2aa5a110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "411d21b0-1142-415f-9bad-d06f5a95fd9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e82840f-d1bf-4978-9e53-af15b821c12c",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c843e7ba-d332-4484-9bfb-c2e186381ed1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65dcfefd-3ec3-49aa-bb59-9b0b89710876"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4518c748-dacd-4889-828f-3b60092ecd05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ed1994c-62ef-4340-b9c5-091dfe67c1cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f4b9aff-8d8f-46d2-92b5-44f39daedaaf",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14218aae-c1ea-4f55-b2b5-1607e3279963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6723041c-779e-4a19-bb82-3133b1334af6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "248c842f-1d4e-401c-a543-db09433ca0f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7f82012b-307f-48a9-8863-559f00bd5c89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89db09c6-2971-44a5-bc51-bfa0c2315a55",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fb671cc-b32e-403a-ab43-8752c0ea874f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "992f895d-077b-4d52-a0af-e6371ad5eb2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "277a2545-a041-4103-aabd-8493ab9a9ca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "d343f244-6f44-4250-b2da-38b4622a79cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76cb850c-6c51-4681-8fd9-d9f645a0f78a",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "279897ab-16fc-4f5f-b8b1-0496569f402d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16a754f2-8ad1-42b2-9c6b-9323e417954b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e8931a3-abdb-4f7d-8878-5f00ae213987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cce72df2-044d-43e2-b999-762b4480778f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23d168d1-7185-4f26-90ca-d6baf0d0214d",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79f50cb4-befb-4f10-b827-2fc8ef6de7f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81a32ea8-612c-48c0-a76f-2470f4b5c890"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a696a607-f47e-469e-b899-849625b1c7ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c549e9a-d8bd-475b-8387-9f402524b9db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a609a4a1-f79f-45e0-a391-b21aefa5c28a",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cea2e8f-a304-47f0-8395-41420061457b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f8fac92-2cf7-4e12-b228-3bdb8a48a7d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e53dcf0a-d306-4944-90eb-7f3cd129c5a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5664e871-1ab0-4fb5-aeb9-83256add1e3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d022cfa0-02c8-4330-b93e-8b15043813fe",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50ef60c2-950a-4e78-b9d1-38e5fe688baa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "700ddc92-e259-48b4-a686-00a19a467a2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f67eebc-79b7-443a-b824-1aca6d43678f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "f7f7de54-e860-4ccd-8d2d-8d58ca97cc94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3124d605-d3c0-4c29-a41f-60b26b45dda2",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33bb30d6-ea86-40a9-a6f6-01cbf5279c04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba9f00e5-a089-4e60-a6d8-dd8da6e96aab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "858ba81f-78a5-4bf1-997e-7daaa245c9c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5e55476e-e7c7-486a-8f9a-77bb59687ad7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14762a06-678e-4217-b1e5-441ddbcf2374",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62b3cf63-2351-4f14-bb30-6fa175977c1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "640214f8-8eb6-4c06-a4c5-23974e347f80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e66868f1-6817-4846-8142-997f4f0d814a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ca4f45c-23bd-4548-9252-09e1ef03c85d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85ca2118-c11d-4efe-99ed-9efc2d42aec7",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b568bc0b-6429-47a5-be3c-b8b3a6578c0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b24b9583-e0c5-44d3-a1f2-43c1ebd07eff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2266ddf4-8fc3-489f-a81d-2fcccfacaa90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b24209e-ed8b-42e4-bce4-4a4a52d68980"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c610450b-3a80-4ef2-b65c-9e87ccc497f6",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39ae6926-da32-4918-b72c-6384a9021d7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "092fa611-f0b9-4819-be58-fc5963cdacc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83c279f7-5066-4691-bac2-cc6b148fe0d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ed43bda-42ce-43cb-81d0-d4c654f09982"
                        }
                      }
                    ]
                  },
                  {
                    "id": "588d7568-e522-4d64-b19b-be7a73244b36",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01302ceb-8410-41a7-95ad-c3362bcc3922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d70c69b0-3872-493c-838d-d2f9f36556c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cb7499a-fd99-4f0a-b2e2-7321594f4df8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "5318a593-4d8e-4ac7-9f2f-a882fd470540"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db96267e-fa6e-4107-8854-3b45aa901846",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56875de0-1609-4915-a7ec-1a181b7e5884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6dcccab-43d1-4ee5-8c4c-42cd4da8aaeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd78cea9-012c-4a80-a4ed-401b9af7b3e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "c365f234-169e-49d6-a145-ecbffb4c477e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b5ad53f-f730-4332-87b0-892536ba586a",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c16ee9c-e26e-4dcf-8c9f-033d82744697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8173425-1368-40bf-926e-416820fd8977"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48fae7ce-adc4-4f3d-a072-c25fce6a0e61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed35da1c-9833-4d3a-bbd1-a5ad92d9addc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88c131fc-14fc-46ab-92c2-12ac81432cb1",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2be8fb3-4e00-4997-b75e-1b92d8aab959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd26e4f1-d713-4463-972f-2ee7980ee4dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed99a031-b193-49f2-8348-eb326c9ab83f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "76af01a2-3370-4b9f-96ee-4e7848da6238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96f77dd0-9590-4823-9672-019062c5f076",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d299ac29-2223-4458-9e3d-89ea828d4b2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "587864f5-1996-40e6-ad23-325f4b74ec24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aad182b8-8037-4754-8e7c-ed966e46ce0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "809bfa33-c655-48ea-8b06-6c54eb8ac4f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b266287-353a-4ec8-ae94-67b619c9204e",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b94cb79-55e5-4c75-ab61-7059e0fc3f4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d0c2808-18c8-4d19-b1fc-334d662ff118"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8f1586d-1926-4de9-b1d8-7c705bfecb27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c030e298-a40c-4233-8c9f-cee889800e9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bcb1db1-c6b9-4baf-90b5-8449258d2213",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e9ec405-44c5-4292-ad78-9c0f837d6d6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92ae6f01-458e-4044-8b25-cc03ce24e54a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5085fdd2-630e-4105-8767-a9fdfdc28465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5035c4f-a680-4ccd-ae17-94a4306e0307"
                        }
                      }
                    ]
                  },
                  {
                    "id": "557f0986-e443-4fc0-8774-5c53326f607a",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29ec3304-0557-49e1-8d2e-3a66d76ddccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "895c65b4-6a12-438b-9c37-2b1c4e837be2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "413e0f98-698a-42d2-8455-7bd3a7cb631a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2351022-8deb-4389-94fa-86e9128946b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a10f679-f754-4d05-ac49-8d9a45b73275",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26fce46d-08aa-4ecd-8f67-20c1b9d8b79f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93ebb076-b603-42d7-bec8-2a64d151631d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80027769-afd4-44dc-b6b2-2190f949f5ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a642d7dc-17ba-4892-8475-5aa55d8c89ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b1966c2-3790-4d2d-b0a2-780b555f3c94",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f4f0070-7e6a-41ce-ba0c-dd33330f0495",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d92f8f8c-e194-4405-89e4-51a66bad2623"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e2bda67-6cf2-4579-bf7d-390ef9fa1fa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6274183a-762a-4afb-9aaa-653c678add83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cad965b-0438-4800-8890-bce4abef16e3",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b15ce078-1142-4713-a1f3-5d145927005a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10dff6c6-fb29-43ff-b86f-0f19eeb326dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdaa6e51-584c-4d2b-98de-7e5e9a9d9124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ea2eeaf-ff9e-459f-9566-a7ce9f9b2889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6829483b-fcd0-4b14-965a-70b771f0dcc0",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efdf81a6-d415-44d6-b208-15023360cfbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73e6299d-de1c-4ced-9f8f-f8e1c0d05d90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "806913df-dbc2-4e0e-8be9-1f89e8ffa802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e35a4ed-0f04-49fe-8d0e-554f94e6f1fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "509b4f25-9d16-41b2-ab69-3662c1a2b64b",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6537d63-7d09-4735-8212-e51c16e233ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd5b0255-980f-422a-8e70-ac8552fe2cb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6a12d5e-8614-487c-a744-73ced4635ef9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7f401b5-7fa6-4bc4-8903-55f663d1e203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b349dd74-a9bb-4fc4-9e8f-2dd861cd1427",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfbe8142-d646-4ce4-aee2-74fa79d31b0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5c98f41-b1c7-42ac-a447-4f7ca20c6d26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dec82e0-afce-4f63-85bc-bbbf5775633a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3983cd6f-d484-4773-80df-8764e117c98a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b589f121-41d8-47db-822d-7d742df94592",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "001ed572-d7f0-4d59-a646-ad26081c707b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "763dafc0-c421-4d3c-bff5-c35065355e01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2bed5d9-1283-4cec-8581-b0bd196eec58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bcb6a697-8a00-467e-bc57-726bc8a52aa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "527b7a3f-d550-4170-8f78-763dc8feb595",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78ba67a1-7ff9-4274-bd66-f475650d6b63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "035e882e-47bd-4a61-99e6-e573509b1273"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23541ee5-a4df-4005-b24d-f5e26768b563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c5ba78e-1d9c-4ecf-bfba-3762931dcb8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23d8b94c-3962-45c8-a9f0-16015d15553f",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5e8ea6f-1cd5-42da-ae0c-329e77f11155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cbfd58f-b8f0-422a-90da-4b99a8880ba5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82a6d53b-4557-4443-8fe1-c6e5cd237d9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "62806506-221c-4b6e-8f7c-20c2ba8c48db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "993ff1af-2fad-4144-82e9-652e559da498",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee5008d1-ad76-4944-8ba5-ec9e617fa621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef879d20-05aa-4dbe-98a8-404907c20434"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7694face-51ac-4395-87d9-0f39d4c9829b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f86d9c12-b1e6-4843-a9a3-36a336c3d9bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3843d788-869b-4a9e-89cb-4562a6d58abc",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "344659de-8b36-4f8b-8c93-bcf30a7d6dd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c4317c0-b52b-4f84-a8a8-8dfe0a81b5d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deb58a4f-c88a-49de-a148-46930b8a7494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "83235c02-bf64-4051-9982-97b9abdb2e85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "785cbfa9-d331-4b76-8758-64a5897070a1",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b7845a5-8ecf-4acf-a638-7dc617e95fec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a6d78bb-0de7-4e36-a399-5bcb1fe10ec3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9e44a82-3c41-419c-82da-e8f2ef2feb9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "69e1ff2c-d349-42f4-9589-403c42931cdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90391583-5056-46bd-b7cb-084bd371c164",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce83778a-8c84-4d24-939f-b42044020efc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23b4a617-703f-4e21-a68c-cd45930c77e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4848eff4-9aa2-4997-81a1-3628fabad28b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9af93f8a-3be0-492d-9e78-d1028c7ba862"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71da2ffc-0162-4018-8532-6a28825a1188",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81a349ca-b7db-4707-a0ad-1d3f64ad663f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ccf488c-cf14-407c-b8b4-a2344760eef1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31a063c5-8f63-41d6-8fad-c2d334ccba2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b52bf7c-37cf-4b14-941a-fb320e722b44"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7ac94661-04c5-4524-90bb-1eef39bb8de3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "51e49e8f-7ede-4398-94e3-31b94f322ed3",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d409831-a9fb-4f02-aae3-361e6fbd1d56",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f95da9d2-dd02-4cb0-93b7-34b51c9624d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f1710ac-3d06-43be-8500-e1728e56b0e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "11c8885e-47d2-4f3b-9e68-fbdf0acbe749"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "62f8d5c7-a823-4574-a1fb-373d22bcec2d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "563c1142-9428-427c-b6e0-9bc3b0f1e50b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3c72d958-5dfa-486c-a51f-6fcc21c52816",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7e9895eb-3c0e-45a2-aee3-e5f35e9fd168"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d2aef181-0da2-41c0-946f-7d22eb02793b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "96859c99-beeb-463d-bfa2-ce1e476323e2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b54db8a5-74f0-4082-bc2a-5d7e5633fc53",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "690be7f7-14df-4307-8d6b-f035063cf768"
            }
          }
        ]
      },
      {
        "id": "5d01d119-fef2-4fbb-8d7d-93c205ff683b",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "92110907-ecea-4769-87e7-f16170821051",
            "name": "Negative Testing",
            "item": [
              {
                "id": "27a02fb6-ef45-410b-8d90-2b334224ccd3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1dbeda5b-a8eb-4b47-ac7c-53c6560d3f02",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8adbf793-977b-4ed9-b99f-af598d4edf78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "934e855e-6492-4755-9916-9689f8b3663d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e0c94bf-4c1e-4472-9295-50a2b33ec94c",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceffa5a6-b2ae-40fd-8389-4a4f04f3c0da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5be396fe-9a42-4bd3-af9f-56b3408635a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6d30052-1d3d-4f8f-8f79-75769571d3e5",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d79a5aa4-3baf-4d01-8177-343bad334482",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4b8a0e0-5b3c-4db1-b90b-3b2d7d55064c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a523e942-730b-40ca-92f0-744085c70507",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b1ff66e-76ae-469c-a193-76b2ce1dfa67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8eb8f03f-68f9-4741-b54f-0ba7624e2bbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56d4e081-0352-438b-97a6-4799ef052b14",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c06fb9b6-1e8b-4554-8d8d-54d87d3b70e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6316803-5fe3-4e2b-bcd4-2fa994be73bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1909713-17ab-4161-8604-aab127984a24",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84479a74-af67-4c30-a805-5c2676ada1b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a87b037-e2fb-4e28-a8c4-f77944bfcb00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b051922-ec93-4a8c-9297-b96a701d4937",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e78662d-3491-4fb5-88f7-5bfb24923e90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dff94c75-c260-433b-be0f-8cac4e9efd96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cd2f45e-2957-40ea-83fd-ad0939abe2d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47c9c0eb-b81e-446c-ad23-1ed83a79464c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce27bf3f-45aa-4231-a0ce-10a6ba38af9e",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c5d06fc-8052-43ba-a231-f841aeb4ab5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9f6e3be-967f-44ff-9450-3b27a1e661a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43bed052-cfe3-49b8-9f8b-85a6ed880f5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "865d5e4d-63c3-45ca-9349-2ffbc54c33b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85bfe744-fb2b-48d2-8c55-d3cfd051a38d",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69d886c6-d5fe-48f0-a3fc-39215b6f04e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c83f0fe3-8403-4ac3-9285-846003e26a7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec57db46-2ce4-4a0b-b6de-5ebbfc4373c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac46a631-dbd6-4add-b0d5-bc222f45e077"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e403703-a703-4934-a4af-cad8f95766ae",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa3f87ea-fd39-4724-9506-46954b259c83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "284183bb-145a-4244-a96e-75ce402ef146"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8290bf2-da75-477d-ab36-62b168219308",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "161a714a-c764-4a97-b642-0379ae2eab9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "954b9d24-c145-41f1-aca6-2f3622cafe2f",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dda21f0-36f1-409c-8101-5f6aacc7b367",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0106925-a520-4861-8927-42e7bc081ec9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5bac147-bec5-46e9-8f98-b93944d43674",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f938185-a641-41a5-8d6e-27ce881163cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb0e324b-1547-4191-8b44-e42c13f2cf5f",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "378a0f91-c875-41de-80eb-0c73468af035",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e641e957-2b45-42f5-840b-ce69863405c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "457b1534-6784-42ae-9fc7-0b70cd44e531",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a244ba19-a85f-44a0-bb53-1f2fda3001ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1664ca24-5eb0-4ef7-87ea-914bd52c9c08",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02b25d93-a53f-4f1b-a03f-3f05a8dd0296",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03e70705-6994-45cb-9d86-18ecfa4e186f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "719d3128-ad64-4510-8e8d-16dc07446c0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1493349b-ed11-4330-bfc0-07ee8c2bbd77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0afb597e-0782-4d46-83ae-2c86b3ee8786",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d55fb9bb-d987-46de-9b42-7f885aa0b1c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "642f5a66-79f6-4182-8663-ea7aad25df8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a499366-5a04-4a74-97d4-c480be855183",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48fda29d-1566-4b10-aaa8-7645df64d363"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7989355-b7b4-489c-9705-53b4706ed12f",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8362024e-36cf-4908-82bc-c543d88240b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff7b56b9-c0a5-429d-82ee-bc24b31dbd4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dee022aa-e096-46ec-8e70-16b6fee4931e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a03cf6b2-f8b7-4996-be9a-dc17127f784c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d095705f-a191-4edb-bb6a-f5f4f839076f",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "475c10e4-f2ad-4659-88c6-e371de65da16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f31b708-5f34-45e3-88b0-494818136ae8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d61cc0b-d7d4-4a09-ba50-e69f7239bc78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dbd053a-ad75-4662-bf00-ab2dd1576cf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f938f76-c4a1-4af8-86e5-21102ddf9756",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c3d89c8-96a0-45f9-afb1-3f9c1b95c3c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77e163f8-38b3-429e-abc0-a227b06a752a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0eab343-9f64-49c6-903f-98fd8ff7aab7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0c18f2a-bf54-41ee-8399-c328511052f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af941cbc-fd42-4a96-a796-a61382c66ece",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4705acaf-d553-419f-8f93-4de2cda405a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c25dd12-23de-4810-ba00-ca5edc1fbd55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4368c1ec-5ac9-4e06-b8b1-4be52f2df798",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "734dfdff-1259-4f5a-8643-1d87f540daae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "775581a4-c362-4ce8-8e6a-16e8b61171bc",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa09588f-15c4-4f2a-89ad-1cf576a5d665",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3c3d51e-0421-4f17-a45f-f388d703013e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "891e6247-0cfd-43f1-833c-61cda8e5c30b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9737e7b2-109e-4382-a6a2-62c790c387ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdbb349a-4de8-4a8b-8a8d-b347937fa49b",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24d285d1-1f7d-48bb-9543-20a73c808a70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9edfdaa-df47-4865-9a92-a090d70c5927"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c11f531-ec66-468d-95eb-d4e418859536",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dedf874-4d06-4f74-b2c2-d81763b222cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8382860-e54e-479c-aefe-27cc94a278f3",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "175a25ea-0ef0-45a7-bcf7-5708ac1ffd2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80a55682-4f86-4ee0-9901-4ee3e4ae0d00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c708995-1ceb-48da-8464-b5b3e938d54a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f9522a8-4ea5-4911-a41e-ab63c87b483b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82130d14-1e5d-4780-bff0-9874752fdab6",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ff3a43e-1f86-439c-9211-4e4f7af64a5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1217e3ff-20cc-4b52-80d8-cf1c49fe77e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e6480e6-cf70-49ad-86a6-c672c1bc3b8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e7281c6-f9f0-47e2-a34b-5d2cac2df09f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c69ae6eb-5f01-420f-8f7a-4043d6f18850",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8bc3ba6-83f9-4869-83e5-c8ccca3aefc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc82950f-0117-488e-b16c-1b5f2f12f3ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9abed77-d7e3-4828-9622-28301a029048",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42b97504-40e7-4b9e-ab57-28337e48bc80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05f71fbe-2e81-4a15-89f4-e7fb91844ad1",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b8ca238-0de1-4529-bd6b-07476f1362f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94e5d633-a58b-4e1f-b330-d85961fe9b82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12f26b7e-83ff-4f23-a437-79372914a3eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b31a6fb-cd71-4305-8671-d64e0be70ce0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2729bdb-6322-4f4e-bf2b-611a2589cbf5",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6d1a3f9-9778-491a-a807-600eed490637",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a1dada6-db93-4988-8deb-708598f34873"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bfbea78-8fa4-4932-ad35-f9476fd80cde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04d59ab4-eeaf-4bbc-bbbd-793d56a5387d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c129b98-d1a0-49cf-9969-fe292231ad94",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3ad742d-5584-4a76-b11d-2be73b9161f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14637c5d-67b9-44cf-a60c-96979154e739"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed1ccfc1-5528-4bdc-8209-c6b0a2131399",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9760ad7c-6b9e-4d19-b758-1fa717223c69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "020a8e78-898f-4c0a-9b1e-e93dc91c6595",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6bd6429-5551-4cb5-9743-a4721deb84a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e914d44d-5f23-42bb-a3fd-3d0074e8c8ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a95af7e-932f-4e9f-8c32-d02667389621",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19215d2f-14b2-44e3-b06e-4e885803be03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58476018-73b3-44ab-bd67-5ba47c6e587f",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87c35eea-25bd-4d12-b76e-efb738d2e937",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bb4c01b-7b1c-4876-b492-7b5e978b987b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22333f25-6b14-44c1-b31b-7234b516d332",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cad7b656-ec16-4ae5-9877-bd2642777ea2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e06663c8-b7e7-4f15-a943-6f51c27d3bc7",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d853411f-4ece-40d8-94e9-125554914d08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9aeb8730-88e2-445b-b92a-22229c70f994"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b72f59f-9949-41fb-80ee-ff7dd5e7ca31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "625dbc39-aa6c-4989-9618-72edc28ff4a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0745449d-098e-4301-99a5-f4d3efa03471",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1acd289-1ebb-48cc-9f02-5f1fe9dd5840",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b039ddd-3775-4598-82e3-46d0706312a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eda09ba-aeab-44f4-bd13-055a51a5ed38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d15f9aa5-70ca-4820-a6b9-6271ea81c81a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6514d535-b948-4974-b1eb-2a791dee7020",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0536ab5-0bcf-421a-90f6-925fcbd208e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58958334-e404-48cf-b3a8-d78a7730f7a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30811f58-2089-41f8-9c5e-56583561b850",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a134db7-19c2-4a6f-bfb4-66ac50d2bc34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93a0ddfd-656d-45a7-a947-115c4aecd173",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffb8430b-63d8-43d0-8044-fc853330b6a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f198427d-0431-441c-a803-db76392a97df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fac10b8e-c2a5-4506-b5a9-b7adca6b0745",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8be64eed-5c7a-48ff-8360-41697271396d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1ae324d-0e1a-4a70-bb69-dc804c0c0004",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d560804-28fa-40f5-ab3a-ff33ce94de57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "518bdc57-71b3-470f-b397-330141590193"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d9d4188-9782-4b56-a9f5-d76595f5c99d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "098f0447-bbee-45d5-9a42-57c9691264e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "619b5f81-3472-426e-bc3f-75afb30aae26",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6403f184-6742-4d81-99d1-c9d006db2e46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1169661c-9126-4615-916d-de1cbdb4228f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6224ef40-f8b7-4702-924d-43375567a266",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b68fc503-ab15-4c55-b394-cfb090ee1734"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ec1a7c1-2f08-4ae9-b593-8d2204ef4b70",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "941614cb-bfdb-40a7-ab6e-1b09e9956e87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28e248b2-34ce-487c-a7c7-ab39ec73336f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eb8996c-c297-4762-add5-4b8e100f1c44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7753dd3d-ff59-426d-827b-c53c8a43dc1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "898a404b-f678-43f3-a3d9-e065925fa0ce",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32b2c7f8-5873-49c7-b4a5-1fe84f00473a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "934022fc-2582-4190-ac9a-d6961b81ccfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10a20061-d29f-42de-ba90-35fee54ec868",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c404739f-67d7-4889-ab9e-e96f4b4e7b95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33d63fc9-430b-496c-a54f-5033372915c1",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a2d70f8-e83b-4868-ade7-986a90402d0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01e3e091-38c7-4b4c-9838-b90b22ee8fa9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3c16919-fa3c-4018-9a57-c3ab2c5c285c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "337ed768-4d4c-4080-8f28-ff9a6c131dc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e80a107-9330-4236-83bb-72d9e64743fc",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb1ee026-1093-4909-897b-d75b60113071",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e48869ac-8f5a-477c-96a5-7f78cf20ca52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbad8390-78aa-4b58-94a0-c2ca88092da7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdbacdcf-7c9b-4aee-b59e-b90258f6792b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03a73bdc-9bcf-4f7f-b0fb-00ce385188df",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "142d0c84-19ad-4c64-bbb9-fc1b83937745",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ced2eca-2e26-4aea-9cf9-d711ce189cac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f84b391-5ea4-4803-9ee8-50664d865547",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9aed69d0-aa75-48df-86ed-923e25cb8a74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d8c87c7-b278-49a7-ad3e-8e0eae9d7eee",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "346e394b-7e89-453c-85a5-f62224218d4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d9d542b-ac19-4e8d-9cc3-3799f9a75368"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dab66628-21f4-4406-8532-15e0806f0ce7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f9507b7-1eb5-4f03-bb38-afe889db02ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50d431d6-e065-4e0d-8225-af90bf205dc0",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a91879d6-a481-44b5-a79f-f803c8d67c52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "431490de-724e-45fa-b2fd-4e0bd53b34fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10fd3ff1-8413-4246-b732-aa593bb376af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cf86553-1e25-488d-803c-75bf9dbce038"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f52f9485-1995-4907-85f5-d04243874e9d",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf6342f7-f574-4cc0-b816-f5d995a7a0b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c10d6e67-d3ff-46e4-b3cb-1f070a954624"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69fd90c1-5ee6-4782-8dff-e9ade526f464",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e33bf98a-3aba-4d8b-bb8d-528429dbdae4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "783453f2-8f86-44c1-af47-098bc87925c5",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e20f5605-046e-427f-9a05-bb759d23ff84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "124e186b-68e4-428f-adc9-5ea4729d6a4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30f524bd-d5f3-4796-98ea-04f130bb5bff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "759735ea-ec60-4b94-b12a-0f6c131c5e8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efd4397c-cb4c-4489-8dcc-ef70910b8f48",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9bf4ae5-0331-4d05-a9b5-5f7c7f6e9448",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7ff299b-cdfd-4be8-a028-37defc5e0078"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea42f5b5-8e32-4549-b507-6d67215f3e30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42e50214-cd1b-481f-954f-0c8eb24539de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45ee1157-55ed-4062-8096-b4edf79a2a9c",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "202af9d2-ac75-4658-bfc6-374f7f088734",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34630771-9c59-435d-bbfb-139ec09ad2d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67fa2218-a794-4ea6-a950-7346bf95bafc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32f5df98-e3bc-41c8-98d8-baa049f0608a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce6d220f-04bd-46a7-a1fe-b1a013af71cf",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f3186e6-3a7f-4cb0-84db-2eb9e163bb90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d81c6c3b-9287-47c3-a2da-9bb7b7280cfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e7ecb5d-7385-4fe5-b18d-3f5dc13c6e81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d92ba8aa-63a6-4326-99ea-81fc27afcdd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f2fdbaf-a413-4083-b224-0b7aa8da013c",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "341bfe42-5352-40c5-909f-50325eefe3f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e7589a5-4f8e-4a49-810e-ef4dad82329f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b81578b0-6afa-484a-a10a-2e362310344f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1484f39c-1d4e-428e-b10c-4938607f0ca2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "288221ee-785e-46fb-b57f-ffba14b61d72",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d74818f5-dba6-49a7-a7b7-d57198f90e4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd7555e5-306c-4fcd-b231-7777b555901b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5109bd49-301d-445f-b9e7-f7138ad0fed9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a6ec100-4182-4816-aaf7-09165c542fd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d97bc84-5e63-414c-9565-569fd1cf34cf",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f14e6ff-eefd-4960-8f4b-ffb434395531",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc690a09-f111-4ba2-bd17-fc6852a9ab0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7845884f-d760-4682-80f2-9bac719722ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c9fe0a0-60ac-413a-be2f-4ea7f942e346"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37ca84e1-283c-4f24-ae4d-87a6a025f505",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eef0a82-c02e-47f9-9f5c-57ca58b9b745",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74ed7ed5-ead3-4f0f-a4df-6b28ea7d2967"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9566159c-8337-41b3-ac67-3fe6e5b00c93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5afe395-c7c0-4375-90e8-6ae03f12aa96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fa3b876-13c8-490e-b658-019e72a5a1e1",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ad3371c-11c4-40a6-8451-c55c8f246e1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f406bf1-7a8a-46bc-adf5-eac4a47dac64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9597e2eb-ee57-403d-a968-ab5c8b211109",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "482080fb-b139-4d6d-8aea-b8b55b4ebd20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5db59445-6318-494b-ae8e-3446d737f589",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8b3d591-dea4-4814-a902-fb9ea74da71b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec8fad2f-76b3-4c71-a9ba-35b6fec9dd8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6fe2978-02e7-4114-9349-f9b1a50258c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "252b3bf3-c716-4dec-bae2-c86ad33bae28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d42bf05-35a7-47c6-8716-eaa2f185b8a5",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b127b33-ea21-4762-8dcd-2a5b3992adc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5e74a4e-aa0c-452c-b3d2-f63c6f4656e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ee9da9a-c93e-4b73-8068-f8d76749dbf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86af88c2-dae1-46ac-b3e4-02a3cce3cf49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0442647-964f-4671-a938-b8fe35ca76fd",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43d3a288-1f61-44af-ba66-52184b29d1ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed0c7d9e-66c5-4b6c-b193-5c78e85d4875"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94fe7e34-a43c-425e-8702-c71cbfec7c38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e64f084-6d3f-46fa-a248-84098708117c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4003f12d-9f66-40f6-ac6d-d58bd69ba26d",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6deb409f-b045-48a3-a719-da3cd575e63d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eeb74b30-2dd0-4a42-b153-3f3d8743c24e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ae158bf-2dc3-45e9-8f08-77ca2a73a7e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "889b4a11-afe1-43df-9b9a-4e4649295aa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07827cd3-2986-4d89-87ea-c409322668ca",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bda714f-5eec-4843-a3d4-6e3ce5d013a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93740010-bebb-4e6b-9e03-7efef5607342"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "125910ec-d176-4062-8952-ce8f4260d81a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0033cbb-2319-4a96-99d4-bb42804a4b37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15418223-f5b3-4d01-8a2c-221c88c6a901",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "651ff60b-bfc1-4b6b-8332-b323667c4c75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa13d77c-debe-4efc-9c0d-fd844c4a7d2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43836963-d2ae-4216-85b5-3e57fca83e78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edcf5982-b54e-4dc1-a26e-deac114c943f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b953eaae-fa3f-443d-b1bb-606d54cd4b49",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de3d5a89-d2fb-4f2a-833b-85e7dfe99ec7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d515a08-805b-471a-8346-1aa99a297c9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e70b763-0b86-4e19-9911-3c53eb5c3268",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70095905-c1bd-4722-8b2a-f2f31cb7f5d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc19d592-10e5-42d3-b13c-4f4405c82c2b",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c06c33a-1960-4682-80cc-34dacfee0de3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b128009a-b519-4f6d-9de2-707f5e37b9c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "704d2955-f8d7-4c92-a508-57a5800a6053",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e28c29f-166d-4909-9c30-6cb10ea01263"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8619e3f-723f-4aa3-a2f1-d42a2d1c610e",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6d8fc0b-c437-4590-a0e9-c29163bc8199",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e9544ee-9ab2-4cdf-8f77-7ae211f16143"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "760aee78-7013-4372-a7f3-a6954fa51576",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dc05d05-9def-432f-a4da-515b26b9f0de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4408ac2-0bae-4762-9cc7-c9582db473a2",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f4285cf-98ae-42b3-9efa-21e99b2bc9be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65e476ed-a5a4-4497-995b-d999b48c6cca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0b6c751-a086-4beb-9c2c-6cbf4819c7f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52001c7b-597e-43bc-916c-a770f602346c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa161ff9-1ea7-448d-a3e4-6ab7b132da1a",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41496762-42b0-45be-866c-a5539dfa571a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22d79311-1f3e-4eec-a013-bd7c0ad1c69f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc248207-ca86-4ea5-9f25-a7d3ded39019",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95a88395-1e08-4c5b-9652-2169288fbed6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51fb0f5f-8385-413a-8903-c1322c7598d3",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6284f69e-887e-4a5c-bbce-9c7c94aeb47e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39cb7821-4739-4c8f-af9e-a4de6fa746a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e951ece-c82c-4c93-98f7-7932c1e10ede",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9aaff8aa-69eb-406c-a3fb-ec8dbaae5bdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "398a6017-23ce-412b-88f9-a74d1b92a877",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "664e5b24-284f-4a37-9e8a-682a042e1be8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e53219e9-5658-4adc-96fa-a359eeb7d38e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a63b16b4-1937-4e7a-a75f-8c4ea73bffaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ebc8b20-a97b-4113-bb25-522256fe4471"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d239ddc2-02d2-47a1-86d9-64dad33589bb",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "259830bb-4616-40d4-ad5c-27611668fe1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99c56b9a-9862-4abc-91f7-a2e3c6de2c8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47dd97b6-ccfa-4a45-8a6a-d866b7870e5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b1c669a-ada8-46a0-aabf-d56e70494e85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fd212a9-5fb6-478c-82e5-1dbe9a6f981b",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67d0acd5-eb55-4d45-ab39-2f393e6dd456",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5fd93365-0889-4880-93b4-0f277936e44d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0737785-d274-4d69-a4f3-0a2e77cda4b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4077ac7-8771-468a-98d9-caf2a5ddf568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e106bd4-827b-47e1-a123-e65ed06608b7",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "902eeedb-edea-4938-9a92-ca12286b81d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f52f3f0-5416-47b7-82e1-8665c81b037c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57b6a5c7-f6a9-43c5-90de-524bbc83f416",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cc11f40-9fa2-4a22-bb5e-b04f9ed66d25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90abf883-0889-40fa-a39a-1217db48d10a",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa6a6636-3dd5-4d64-9089-3f3a4adb2b95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff6c92d4-5865-47c7-b88f-b42130b0686f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81e19bd9-4d9e-4cdb-adc7-da6b1c212832",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9921487-c356-4892-a036-8cb34f11f35a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f81633b7-2697-446e-a3c4-8dedb1bdced2",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ef7bb17-d35e-4daf-82a2-190dd2c5d3dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38fb26cf-7067-4ca8-8555-f6e873fa9336"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aec7187-ae1f-456e-b935-1583252a51ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46710e1c-8a8a-4586-a538-73488ca7f541"
                        }
                      }
                    ]
                  },
                  {
                    "id": "710bad9b-e069-47ab-b916-3a4305f90da5",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37c96a02-bd11-4553-b861-fddb99928e81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "162bc5b7-b099-46c6-87ee-ebc15f5e492e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15464968-2aa4-470f-b285-44aa1073e027",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "352f516f-da52-406f-a920-e63bda2cbc30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17e3c49e-341a-4588-b86d-7dc98a440fcf",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e981dee4-0f8f-42e2-8a9d-404c1223723e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e33c29b5-9fb8-4054-9848-c131d3df38f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81140cd8-4701-419d-b269-f2b51aaba061",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "029cca3f-d327-4521-bc81-a53202b3ef21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bffbb80-3c7a-4c6d-a83c-dead23bd7be1",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "575cb6ae-1bfd-478a-bbc5-8c9d700ca12d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f604c26-7ee1-4c3d-8e6f-28ae29c9b1dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f78bd28-e08c-430c-a950-f7aaf26d43dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee2d35f2-dacb-4299-81e4-0f207b4034be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de4852a6-f285-469f-af5d-650f48e95800",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0670190d-2f2f-49a2-a22e-aa1087127469",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd4370bf-5694-4259-8ca8-772ba5f8c229"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9423c4b7-3673-4a30-849e-506e8576680b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16d5be9a-f8ea-4cbf-b115-187d4cb86861"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36718078-b9b5-4cfd-912f-8a3356216802",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec006960-cabc-4368-8653-a5dd72fe8670",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7e11fc8-64ae-4c71-aced-f1d03369b79d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "757f60ce-7bd7-4914-a05d-007e31b31552",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a84f46d9-ad6b-4da3-b6c6-7a12b7326ff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce9ebc06-8778-43ad-b88d-5bf002eed9ad",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7871836c-eda8-4ec1-b258-07c7323aecb7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "154e24c0-03f5-4b5a-afcb-ed0e84c2b194"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c05340d8-0fed-423e-aaab-8625f8f5957d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "737e01e7-0363-4bef-b8a9-f3d8b9969a88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95dc02a7-1053-4e8e-9ee3-7c036d11dffe",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a0bda70-57b2-4293-994d-5e90cd356ffb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fdda3117-1677-45fd-a3f7-0bf41e6fb6b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e49d6c88-2595-400b-9dd7-5ec6157767b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9d28a42-37d0-462c-83de-f58d9abe5c64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b744c1d0-086a-48be-a6ba-3946fbbbf9bc",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f4e7416-7785-4edd-a743-f466879e8ca3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "937bc8c8-9537-497b-ae83-9b0c2fab0d28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61f611be-a730-4446-a284-75d76fc9c047",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45b4e85e-c1f9-4823-9211-16e1843987b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c3c9348-7a64-419f-b9b0-05875a9e3658",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e366deff-178f-45c7-b28d-cd4badfdbe3f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5331fdfa-0c94-435a-85c3-37c8d2c46f7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b93d5924-996e-499a-bd8c-7ac8f45037ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a0ec497-eda4-4404-bcbf-1be2c3e33186"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c51771f-ac3a-4878-b6e2-26d8936baece",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c074898-2d86-4a5e-abcc-4fdabff7622e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31d6fd0e-7c24-49c5-b95b-094987ed4791"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1570a463-b685-4413-8880-1800cdb5d80c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1896eef6-8edd-438f-be86-8762113a64b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3eab3bb-bf12-42b5-9770-995231d7aa24",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f38d70f-2412-4d05-aae8-777d05f27004",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db498554-2954-4a91-9bf6-0be78e8240b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70e52ae9-2bb5-4164-802d-9fd2e28e9bc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65f7ee67-aa79-4896-9e23-f7a5c8f58a14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b768cdf-e8cd-47c9-b403-4f13f5196d63",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f88c51bb-ef76-4eb6-9b9a-8ece27a0949a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24397f35-0345-499a-ad74-51803248d158"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "947e43d4-40df-416c-8211-a7d47ebb2f74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "019d8e09-7436-408c-a7df-b750264f2bb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac2d226f-a6b2-419e-8deb-338ef822b219",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae9b667a-213c-4692-bf6e-10ea638980dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de7f78e0-a249-40d0-8483-fa625610b1ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d11ae1c-e0cc-481a-8c9f-dff29e50d616",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b58fc73-837c-4843-b859-54eb215dde0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6940c7dc-820a-4f10-b71c-2f2989527f6b",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "847865ab-ae2f-459a-b5fb-a7a1eb569317",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29657340-3788-460e-8f02-a6cde6a54abd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90cb062f-0e79-48ee-a34b-3ba3bd7e6915",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49cb046e-2eb9-4334-ba02-55e7d0eb6de5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8fc3097-7f61-48ee-9c2e-b521edc9ce6f",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e85ff039-bd87-418f-bec7-82fe023d3b55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6913dd16-bf88-4ab7-aad4-f2efd864f4aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79c7aaa8-df10-4bf4-b3e0-d0ad284fe732",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e8cda13-d7b0-427c-a0ad-f3c1d25756e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d73b01ec-0bf3-4346-9ef3-8169351f96a2",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0059e9be-70a8-4c6b-863c-0840ba12ee64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74acf285-ccc5-48b7-8b48-0e7a4b296d39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "477ec2f9-8935-42c8-a976-e0b556d5db97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af14e584-8f71-43d7-b77d-e2e98904d005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7fbff08-1af7-4dec-8345-32147667ee92",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c59398e-1da2-4849-8292-b02615028915",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a81c623c-35d9-403b-b35e-78df1b3f6f9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e3827e0-9011-4e42-bb73-82dd5b28ab70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "791ae152-cfc9-475b-8d1c-cc3eb9eaf56f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3645ded8-c53d-4ffe-aa64-7a005e38f855",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5f90633-24fc-4c37-a080-500bf2b77155",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47fa0e8e-036a-43fd-a93d-4a7320ddfe3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83595ad5-b989-4957-bca4-5009be635f61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cecb4081-1a25-4827-8281-a6975b6a022e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93e070e6-deec-4a93-8491-488be3d27603",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40623944-3588-4ba9-a8fe-2cc1aeea76c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83221fdf-80a7-4add-beff-b85d0f9f679a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b28c402-ccef-4687-9a81-517f963f099f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b30f4eaf-bf0f-4c76-a6b9-086519aae119"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22cdc08d-90c7-4b1c-8799-c13175a6dd9d",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e262deb-c4f5-4742-8719-a9fd784918f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9130b7e0-3e7b-47d2-bc3a-605dd2727563"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8ea8ab3-f7f1-4652-b5fa-b6b9fe42ecb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9544e875-470b-4e7a-b2f6-764be8cfeecf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30f82756-b0a9-4930-9e3f-44bab17f5b9f",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "953d1d54-9feb-4c0f-a75c-d0d5c213622a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e70319f-3aeb-4877-b36e-3cd6f081a9d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a5076b6-eb15-4926-86c8-026051ec669a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c053a38d-6d1e-43ce-8769-2f2ba95717f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1cb6b2f-7e06-47ce-874a-4a5ace70db1d",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da8c6e19-65b6-47fa-8919-975231a59dcb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e008f0e5-f3e1-4a3c-88bb-20a482600420"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb33d70d-183a-4d16-870c-f642f2be4ab4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "558d0763-a2d5-4a77-acc1-69fb0dabdc44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76658d0e-2311-4981-9f9d-014ab5ac366d",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08b6d25c-9201-45d1-b7e7-78d772a7ec93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f401c66e-0db7-48ae-82de-eaf6c0ad35b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e21fa0c-1e52-4e20-b433-5303e34387ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "913c75e7-e81c-4cad-81e7-bce345d39687"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ee9203f-af2f-48dd-ab1b-fed14b861bf6",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e89dff67-648f-4463-96bc-dcd47fb45f49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "070ff977-24a4-453b-aad6-7148e13dc250"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c5f3169-1cdf-47c3-a8c2-c051e769a165",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b85771a-7f07-41dc-9d2f-5208b30175ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02c6ed77-684a-46b7-abbb-acae2a70d3e3",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3674ace-4c67-4de7-9433-721a6263c8ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1abf913b-d7c7-4ad2-b90b-60b49a3c236e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2940793f-5b85-49cc-924a-1b7e032f07bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9580fc68-0b43-420c-a205-4a2f40dd7c33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26369e58-e8ad-48f2-ae5a-6c28744a5188",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d346d8d2-efbb-49a4-a4b1-c034bf37fc33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "724a6c7d-ef47-45b2-ac5a-7654a596d113"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01fc6653-8dd6-4d4a-92c2-5adca5107745",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efa9ae08-b53b-4754-be9b-02265fd39e64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7203cdb7-b0e7-419b-85e3-056575e9a3d4",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "080b4cbe-b65f-4f79-9915-1daf108ea8fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5cf39793-4182-4f94-a9b9-577061f7ade7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fcf9772-2662-4fba-86fd-59b555b92333",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4b8dde2-f13a-4f03-a33b-08ffdc3f069f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "297b7976-bc62-4810-bad8-5398d0dc5b36",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffafa188-58ae-4893-abf3-80387d2d7954",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34489e3b-4276-4857-858e-ef31718df393"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5631471-71e5-4d52-8443-23710fab40a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64a76686-59f8-4017-ba89-9893ab3ffbb3"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fcae4f1e-f77f-43f2-8ea9-c3cf5fef8b31",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5b96aeee-53e1-49b8-ba46-7aaa04d0eb41"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6ec62581-b5cd-4844-929d-c8b3e0f4fd51",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3f630d50-730d-4baf-8a37-68d239f3956e"
                    }
                  }
                ]
              },
              {
                "id": "7c7c4bae-df51-462e-ad4a-0ef928ecec25",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e926042e-276a-4ebf-b658-5b827208155b",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75e38d77-8c3a-4082-9cc9-8cef55a110fd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "d03f153d-65d0-43f0-84c0-ad4cbe7e4551"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6dd52ce-b233-4fe4-b5fd-80ddb1662cd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7b10aad9-0572-4443-af83-d6612317f8f5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "68d79e23-1026-446f-8332-75e3151343b5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1768ceb4-5af7-4461-bb16-08e97e40c428"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "71cf8167-c1c0-42fd-836a-8c1c49a600e2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9f68e186-87ed-4227-9593-7216dfe7c943"
                    }
                  }
                ]
              },
              {
                "id": "e3880c30-00a4-4189-99f7-0639c82ffbf2",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "142fe7de-4b50-454b-ab0b-a6b1fdb17413",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1c553db-bb5e-46fc-bc49-e1bae0b4ce2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "16820c28-4385-4502-9711-90d457d9f77d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "870288a0-30d2-4ace-9103-7db57fa2d707",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d75d1ff-5912-4da1-b9b7-6c412813545b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "747052be-3d78-4819-aac7-ecae274cd2d1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a99bc4dd-aeee-47d3-9500-836732890519",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f8c1f732-0209-436b-88df-b00ffdb26f7f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e7c432dc-fb0c-4a9d-9435-47e06ce5017f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7ba47412-a7bf-4a10-9331-97397c922a7d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f7ff0e8a-a6fc-4ef8-8297-bb4bbbf86cae"
                    }
                  }
                ]
              },
              {
                "id": "29732b69-8de3-412b-af67-229fbdb5593d",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a5a70688-ded0-4f51-85c9-729fa3d29d2d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b276646d-46e3-48d5-9a47-37593ec849ad"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "286ca739-76ff-4fbe-b24a-d919d5b87d72",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "df04e130-ec5a-4f42-bf1d-7d9e2bada799"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "78cdd0a8-8d8d-4081-b502-34df33957b2c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "83913e8b-13c4-4d50-9301-477d45575550"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "63e69a43-ee13-4bbe-b1a1-da7d2ba1aa05",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "919879d0-da6c-468e-9b45-5c3545c7943b"
            }
          }
        ]
      },
      {
        "id": "7c63c3c6-1438-4fec-8e21-d1754b0b0609",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "994c70d9-1f61-49fe-9c5f-802599c07e50",
            "name": "Negative Testing",
            "item": [
              {
                "id": "72521ae5-62a6-433b-8c73-6188d0b0092e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1613c68f-19fb-48d1-8f8a-efbe67d861eb",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7ce8bfe-760e-4393-a376-dd4e89552fef",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "4886d009-80af-4bd1-88b7-ab849413dddb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "177aaea2-3f2e-4707-a92f-55f20565b593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dfbc9bee-0a04-4016-99e2-7347e4c4db4c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "16153762-9b0e-42f6-a2d3-33b2542e4383",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "426c6b3e-6799-4c18-8af8-aa46eb1498cf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "96ddd3d8-b596-4037-9cb0-3f4b3a726959",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3b6eba7e-9de4-44bf-822d-33e0d3bbe2cb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ce691e4f-890b-4bdc-92f6-7c961e3049fd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "94cf5a02-80c9-4a4a-b8ba-b8efbc80425a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "215784e7-4313-4f49-aac1-4273f06f8c5c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fc67c446-e965-4007-82b4-fa746a5b9eaa"
            }
          }
        ]
      },
      {
        "id": "23d0d1c9-89b8-48b3-a166-a19b801989e5",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "0a98dde6-9920-4cf9-a8d0-8d40f3758171",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0c90d20f-fda5-4ac2-99be-d9c6c0473924",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5bd9574d-c526-4d4b-ae07-a83bb780b87f",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52a5809b-245d-46ce-956c-fdd70db863d1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3d6479c3-2435-433b-a361-0ee83d5cde25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f30939f-8adb-45fa-8d14-77e00f3428c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6f7d8eb5-78bc-4448-9b5c-31ad3e15a070"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "89258408-4b4e-4231-b0b2-e74f89bf97d5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "34c3a27a-1936-4982-baac-9ba8f3b3d19c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "49e010bc-0501-4cf4-9359-9c1240a928ad",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "21a15273-111e-498f-b44b-03be6807c754"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0d1a460b-cbe9-4832-8eda-4bc195be0892",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "adc028b5-9676-4405-a700-44934b2406d1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "837e2521-f6ba-4965-82e2-3996b30e3918",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b0184110-91d3-46b0-9c32-22a1297e56db"
            }
          }
        ]
      },
      {
        "id": "64121e7c-2cd4-46e4-9da8-9bb63a5442a8",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "60a80022-851e-4bba-8f07-1a779d22a7f7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "51d645b7-80d9-48f9-8835-bd8286016d92",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "07ac8d66-e04f-4457-9b82-d901539d84a8",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e7019d6-bc8c-4440-a9c0-f6d43917e56e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dc96bf06-51fa-4b31-bbb8-1d1adc883510"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc5dc52d-22d0-4113-b7e6-6289e7a80aca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3c80b3b3-d41c-41e9-9430-2e3ea0b33254"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "73ccc1e8-4934-4dbb-a5b4-63af9ba46493",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5840f946-2721-4cc9-8b82-b0e20ffb5153"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "50acfc54-04d3-4dc3-9798-e38b0ad8b0fb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "30e8a77f-0aa3-4c62-b2c8-08a1cf7591a0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1f9a07d8-6597-447f-bc41-26859e46aa23",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4b7caed4-551e-4446-bd1e-d5cad31ec48e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a2f3fbd8-4d37-4166-9344-f4fb5c68e3dd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1a06faff-f9f5-4866-bfc1-d3f7e074f479"
            }
          }
        ]
      },
      {
        "id": "e92da663-d8a2-44ae-9c9e-b24d67d99a38",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dad0e4bf-4a23-415a-bfb1-12429418af5c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4d09af9f-088e-4d7e-b538-cdfd6c77899e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "b24479a2-5759-4340-a359-1206ed5ee722",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6f01a462-4807-4863-81de-cd6f0e54ae8c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7b3e12f0-a722-49ce-82c9-772739025fb1",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 13.246478873239436,
      "responseMin": 7,
      "responseMax": 258,
      "responseSd": 20.60756275087486,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1693441960782,
      "completed": 1693441976219
    },
    "executions": [
      {
        "id": "87139b2f-7de7-4aa9-b3da-4cfd823f0c17",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "8f6c143e-03db-4099-80de-e8a13ee2f5d0",
          "httpRequestId": "3f62ee77-d17f-47a1-a6cd-cd77a1fea9fa"
        },
        "item": {
          "id": "87139b2f-7de7-4aa9-b3da-4cfd823f0c17",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "c8996d1b-0722-4f33-ab75-fb50e3cdb4a3",
          "status": "OK",
          "code": 200,
          "responseTime": 54,
          "responseSize": 0
        }
      },
      {
        "id": "1437a083-d64c-4426-a45b-5efbeba9ee5c",
        "cursor": {
          "ref": "e1b3a3ae-a8b7-4b75-a301-ad49fdd2158b",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "892582e6-a8ef-479f-9850-1cacee106051"
        },
        "item": {
          "id": "1437a083-d64c-4426-a45b-5efbeba9ee5c",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "1fafd15d-a8c8-47e4-b988-d6ef07142185",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "21ee9c97-801b-4dfc-876a-2daa7c8554c6",
        "cursor": {
          "ref": "421995dd-a7cd-43a4-a64a-824c69ee2c9f",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "fd33ae39-7590-4705-ab7c-1dc8db0b85dc"
        },
        "item": {
          "id": "21ee9c97-801b-4dfc-876a-2daa7c8554c6",
          "name": "did_json"
        },
        "response": {
          "id": "7fb1463c-f5f6-4685-a7ba-fe2f9e97a22e",
          "status": "OK",
          "code": 200,
          "responseTime": 56,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0379383c-ce42-4f3b-bd1c-b1361b55f541",
        "cursor": {
          "ref": "dec2a168-3baf-4d3b-a141-6cc1eef9e825",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "03634303-b641-4b22-b965-2319e58233ef"
        },
        "item": {
          "id": "0379383c-ce42-4f3b-bd1c-b1361b55f541",
          "name": "did:invalid"
        },
        "response": {
          "id": "91fac12e-cc64-4242-8cc0-8b9441509b6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0379383c-ce42-4f3b-bd1c-b1361b55f541",
        "cursor": {
          "ref": "dec2a168-3baf-4d3b-a141-6cc1eef9e825",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "03634303-b641-4b22-b965-2319e58233ef"
        },
        "item": {
          "id": "0379383c-ce42-4f3b-bd1c-b1361b55f541",
          "name": "did:invalid"
        },
        "response": {
          "id": "91fac12e-cc64-4242-8cc0-8b9441509b6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb198d7b-5911-443f-a5f1-a98271cf96ed",
        "cursor": {
          "ref": "e232f76f-982b-4955-b736-7109863c3620",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "86a7b238-97b2-4cd6-8f91-a04b46570c42"
        },
        "item": {
          "id": "fb198d7b-5911-443f-a5f1-a98271cf96ed",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "ee88ac63-ba0c-46af-8085-245d55edc939",
          "status": "Not Found",
          "code": 404,
          "responseTime": 55,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9050310-7fcc-41d8-b6c1-613bd4d1ce30",
        "cursor": {
          "ref": "bcaab005-d979-4523-aebc-4ff74733b314",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "c8269d69-07c3-41b2-8a68-14928d79f1d1"
        },
        "item": {
          "id": "e9050310-7fcc-41d8-b6c1-613bd4d1ce30",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "3eab2543-d99b-4b51-9b63-bf33f90eb968",
          "status": "Not Found",
          "code": 404,
          "responseTime": 10,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18228843-bf96-409b-a55c-9ce9ca43c758",
        "cursor": {
          "ref": "22d64c01-8ca0-44ac-ab77-ba7be0c4996d",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "bb46df6d-6726-4aa1-884d-828701073064"
        },
        "item": {
          "id": "18228843-bf96-409b-a55c-9ce9ca43c758",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "9a03bee9-33a4-4757-8c65-b1965b2a4c73",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 11,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6f41374-8b01-4929-acf8-e20b17cf4a1f",
        "cursor": {
          "ref": "010ab548-9af8-4662-b49b-367034672c0e",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "04d92562-e172-4328-9a8c-be739e043db1"
        },
        "item": {
          "id": "f6f41374-8b01-4929-acf8-e20b17cf4a1f",
          "name": "identifiers"
        },
        "response": {
          "id": "d5153e9a-4aae-4c67-86a6-e26420fd59ee",
          "status": "OK",
          "code": 200,
          "responseTime": 75,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83d42fb2-b596-49ef-934e-6856c639890a",
        "cursor": {
          "ref": "aa1b3f18-6604-4b6d-9ab7-da1d7a684aa9",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "44cff2f7-2cba-420e-9e7b-058c9f55aefe"
        },
        "item": {
          "id": "83d42fb2-b596-49ef-934e-6856c639890a",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "09af0262-c227-45c4-99a9-de38c9cd31b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7136b407-5295-4f15-a108-c6cc0a78a15f",
        "cursor": {
          "ref": "bac70b4d-1457-4e06-a132-7b95e589d787",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "415d82aa-500a-472b-9a83-5ebcc8f0793e"
        },
        "item": {
          "id": "7136b407-5295-4f15-a108-c6cc0a78a15f",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "4b3f78be-01dc-4360-8e24-6fcde79adf1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d9c3955-996d-47af-bbf9-4aa9704e62c2",
        "cursor": {
          "ref": "960dac57-61dd-43f2-b805-fe1e3b96db18",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "6c29730a-95d1-4ba8-863e-a949f1cf0a96"
        },
        "item": {
          "id": "7d9c3955-996d-47af-bbf9-4aa9704e62c2",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "be8a216c-246e-4e02-8619-6fb238203ffb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20dc5baf-6722-4c07-a257-4946503bab86",
        "cursor": {
          "ref": "489b8bd2-5651-4fbf-90fd-3c2282cd613b",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "6e03b430-c6ba-42aa-818a-8647976d29e6"
        },
        "item": {
          "id": "20dc5baf-6722-4c07-a257-4946503bab86",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "8cfc1f68-9e78-4389-9cca-dfc0de098cfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98e46452-a8ea-45bf-a34b-a278c342e3df",
        "cursor": {
          "ref": "762fcbff-6fb9-4ad8-a085-28a3331f9fad",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "061f2973-26cd-414d-a9a6-e1faa26e0434"
        },
        "item": {
          "id": "98e46452-a8ea-45bf-a34b-a278c342e3df",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "5729e435-c039-4ed8-9cfc-240735908232",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56b2d5cf-05f4-42e6-991f-299364645ef7",
        "cursor": {
          "ref": "c59ba712-d728-4069-97a4-7c37130d6782",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "91a1bfd8-b1a0-4adc-999e-092d5ae7e283"
        },
        "item": {
          "id": "56b2d5cf-05f4-42e6-991f-299364645ef7",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "566e9234-8efe-49cd-aa26-c323f4e9cc54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06643e50-01f0-4ff6-8085-103b7a07a6c6",
        "cursor": {
          "ref": "b192127e-4a84-410c-b2e4-6cb5f0e41bd9",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "7e656593-8c23-4534-afce-879a16ab7a06"
        },
        "item": {
          "id": "06643e50-01f0-4ff6-8085-103b7a07a6c6",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "9d8ac3ea-5105-42c4-9b17-1d7555b8142b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0802b042-708f-4130-8a21-a5e217974cec",
        "cursor": {
          "ref": "42ecae64-ff9b-45b5-a8eb-45a35ca831cf",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "bf021588-b05d-4270-8980-ee4b808a79ed"
        },
        "item": {
          "id": "0802b042-708f-4130-8a21-a5e217974cec",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "b43872b4-e24b-406c-b6ce-0737337e9c49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a710d3e1-71c0-4e9d-b121-d0acd854097b",
        "cursor": {
          "ref": "724b83e3-db46-4ac0-8f0c-ea62ddc54e96",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "177e0155-afc9-4d32-9adb-3622bcb752ac"
        },
        "item": {
          "id": "a710d3e1-71c0-4e9d-b121-d0acd854097b",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "2cbb6ff0-5839-4ab1-87db-6ed5498945b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e9e2927-a9f5-477a-a8ed-531c41d6eaef",
        "cursor": {
          "ref": "f5d37589-a635-475b-879d-990d690d3921",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "5d497fa1-408e-4123-9c2f-a87d1dbc0bf1"
        },
        "item": {
          "id": "4e9e2927-a9f5-477a-a8ed-531c41d6eaef",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "218b83e0-c3ce-48f5-b697-d8a7f2eb3b77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27bda513-96bc-4f37-98a5-802655c167fc",
        "cursor": {
          "ref": "f22e3e28-185c-4c50-9d1b-7cff580eaf05",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "12be744b-c8f4-42ac-b246-a54e074bf1e4"
        },
        "item": {
          "id": "27bda513-96bc-4f37-98a5-802655c167fc",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "c6c40784-daca-4a65-85ad-85359b696a4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cb3c7f1-a282-462b-84ec-999c8541cf29",
        "cursor": {
          "ref": "cf5c5665-8071-4d1f-bc43-cfe636efb37f",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "eb3fd7f2-e319-42cb-ac50-ef8d8883545c"
        },
        "item": {
          "id": "4cb3c7f1-a282-462b-84ec-999c8541cf29",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "76350de5-0ebd-463f-ae92-5938c0ed69d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae699c4c-c77b-4877-ae58-7d2f252aea18",
        "cursor": {
          "ref": "d318b7fd-0190-47ad-be4a-d3d7954614fb",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "a9049978-cc1e-40ff-979c-5015ea680f91"
        },
        "item": {
          "id": "ae699c4c-c77b-4877-ae58-7d2f252aea18",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "fb9207e3-8047-4959-9a95-d88676be8766",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66982390-5de8-4134-8665-7fcfeeca7481",
        "cursor": {
          "ref": "561b367b-0d01-4782-8bb0-77645a8af73b",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "0b52d5d4-83a2-48ad-bc3a-f92b5f4efbb8"
        },
        "item": {
          "id": "66982390-5de8-4134-8665-7fcfeeca7481",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "11fe22ed-a982-4c28-8e6b-438ce094900c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "306271dc-024b-4caa-8f1a-c581735f2674",
        "cursor": {
          "ref": "ee4bf69e-7808-4828-885b-69a9155be4d9",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "1598c9d7-98cd-47df-9eac-00a658a032ba"
        },
        "item": {
          "id": "306271dc-024b-4caa-8f1a-c581735f2674",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "a16fe017-c3b4-4edd-a410-b47571ba1325",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d3743c8-9c91-408d-9a67-ba3beff3f94c",
        "cursor": {
          "ref": "ef873f96-33a6-47ea-a58d-e6df2e3504e2",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "6102cc03-419b-4511-a5dd-dbd86c2ce76e"
        },
        "item": {
          "id": "5d3743c8-9c91-408d-9a67-ba3beff3f94c",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "0f4da18d-cf83-4475-8500-c1c4af858e82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0145438-1cec-4b90-a525-906d23d8ec52",
        "cursor": {
          "ref": "fc6ad781-b54f-4c91-b2a5-222037b73f40",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "1f917c9d-4f32-4247-90a9-5d7d2d470bec"
        },
        "item": {
          "id": "f0145438-1cec-4b90-a525-906d23d8ec52",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "e4b2b909-48a0-4cec-ae68-eeff435a4b66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58bb7114-2208-4dbe-9c6f-501d4161c72a",
        "cursor": {
          "ref": "5cfac2a8-0c6e-47ed-b9d2-99b9d03d68f4",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "b4e2d297-e0cf-441b-9ae0-0c95b8e4b4c2"
        },
        "item": {
          "id": "58bb7114-2208-4dbe-9c6f-501d4161c72a",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "0d5d7924-d1e7-4ad7-b091-2a51ecad67db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c3d2be2-5292-49ff-9cd8-83b09449dc22",
        "cursor": {
          "ref": "1534cd61-8d99-41bc-8dbc-32ebedbb28ae",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "6a022966-ba53-4a9c-9ec3-58188b371188"
        },
        "item": {
          "id": "1c3d2be2-5292-49ff-9cd8-83b09449dc22",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "c6b9142c-4d52-4397-9722-c0939a72667f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cfe2818-3e8f-4e24-8dc1-4a816e65e0d8",
        "cursor": {
          "ref": "d2098c1d-15e4-44c3-8d4c-ba4228fc0d9a",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "8790425e-880a-4d59-97b8-68612ef464d7"
        },
        "item": {
          "id": "7cfe2818-3e8f-4e24-8dc1-4a816e65e0d8",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "3f68385e-34eb-4178-885c-5b9f7ab804dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6381e3d-2b5d-4f48-a49d-b8ed543f285d",
        "cursor": {
          "ref": "d843d5a7-91de-4833-9cbf-0a17ba9986c5",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "d277d90f-dd66-4afe-814a-889210218f4e"
        },
        "item": {
          "id": "b6381e3d-2b5d-4f48-a49d-b8ed543f285d",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "12dc8bcf-02dc-4ed1-9ecf-cbb6071e5a94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3d20b4b-2e2b-44db-916e-fe05d4a4124d",
        "cursor": {
          "ref": "a16e0ab7-c3c1-4ba0-ac6e-c677f2a6191b",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "74d4fcb6-6836-4b8c-afc3-51e5c244f00e"
        },
        "item": {
          "id": "e3d20b4b-2e2b-44db-916e-fe05d4a4124d",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "ae33bd67-2f18-4a20-bda8-9e722131a19f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52654133-f0b6-461f-bef2-737ef61c20e6",
        "cursor": {
          "ref": "df08b6a2-0fa9-4104-b4ff-d97daed33c67",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "7d215b55-9f5f-4112-a42c-1a5ccd90915d"
        },
        "item": {
          "id": "52654133-f0b6-461f-bef2-737ef61c20e6",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "c09ae04b-5098-4c59-866b-f4a03280e3f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7714776b-74d3-49e3-9092-0234e39c5280",
        "cursor": {
          "ref": "fabcb185-ebd2-4de2-940b-28edd45e538a",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "95dd05f3-7923-4146-8d88-753089e0eec5"
        },
        "item": {
          "id": "7714776b-74d3-49e3-9092-0234e39c5280",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "40f09cf0-be90-4fe9-9fff-a0bb70be8424",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55e086ad-6ebf-461e-8ae7-aeca35ade76e",
        "cursor": {
          "ref": "29eb9173-8cfd-4669-aedc-41d06eaa0d2f",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "51c3ed71-8ef2-477e-b608-ab4c55cc974d"
        },
        "item": {
          "id": "55e086ad-6ebf-461e-8ae7-aeca35ade76e",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "3da0e6f6-4e11-4e2b-8fbe-2c5a52c796d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "296a9cfe-5804-451a-8803-5917216427b5",
        "cursor": {
          "ref": "36aebd48-3cb3-4ae7-9d90-203312322112",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "853d0a0b-a21b-44bb-be40-daff66f46911"
        },
        "item": {
          "id": "296a9cfe-5804-451a-8803-5917216427b5",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "f773adf7-fe07-4677-b2ef-f3d74031eb44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0229fbd8-9440-4667-9168-b29164df2fcf",
        "cursor": {
          "ref": "d734a981-70bc-4e01-a4f8-35fcf0180305",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "8b8edaf0-e30e-4615-ae50-fb1b04962990"
        },
        "item": {
          "id": "0229fbd8-9440-4667-9168-b29164df2fcf",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "ecbbc2b8-aecc-460b-b1a3-becad43c9a7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f033c73e-e071-4b98-a0bc-b569163a7bcd",
        "cursor": {
          "ref": "0aa4d814-0248-4440-8856-8e7746889ca4",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "cdec7fa2-5b06-41bd-9227-4d7e52d91209"
        },
        "item": {
          "id": "f033c73e-e071-4b98-a0bc-b569163a7bcd",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "b86dd289-b717-42da-ba41-1905116f7f14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b4b742e-c15c-4149-8617-d9693a06f053",
        "cursor": {
          "ref": "ee356fb0-7594-4b9e-bb48-4b2b1068e640",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "ef64d2b9-d48f-4f01-9a66-1abadfc5e51c"
        },
        "item": {
          "id": "7b4b742e-c15c-4149-8617-d9693a06f053",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "b7e74011-98ee-4376-ad06-6e1393f58c7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bca8c40a-8b55-4855-b881-958c923791f1",
        "cursor": {
          "ref": "b19b93f5-ac32-4edf-a136-1803782ffa0d",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "ee9d2a61-55d2-43a3-8e33-5a198384dde7"
        },
        "item": {
          "id": "bca8c40a-8b55-4855-b881-958c923791f1",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "24b565d7-150f-41a0-8cd6-5658aa72d9a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b3db24a-fb56-4687-9da9-ed2b3cfd6468",
        "cursor": {
          "ref": "21b2a314-9fe2-46e6-b9ad-3a7bf73a2b0c",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "2cf4ff4c-2ad2-4959-88e7-1ff6c0a4b55a"
        },
        "item": {
          "id": "0b3db24a-fb56-4687-9da9-ed2b3cfd6468",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "9d40e081-f5fc-45ac-9c8c-3aa0724abbd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d53d78b3-fb29-4ee5-9e71-25579a5c0511",
        "cursor": {
          "ref": "be30891f-0b12-41cc-b352-ff69126ed050",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "aedf10a6-45cb-46ac-a880-7f39b4805022"
        },
        "item": {
          "id": "d53d78b3-fb29-4ee5-9e71-25579a5c0511",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "d35279d1-4100-4596-ab7f-9049cb68447b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f989bcea-21ee-424d-b9e5-c5c35843f986",
        "cursor": {
          "ref": "fd59332c-eff2-4ac7-87c0-68d4aad1a92d",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "a190cd7e-8157-40e5-855e-1769d2319101"
        },
        "item": {
          "id": "f989bcea-21ee-424d-b9e5-c5c35843f986",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "22e974be-ffcc-4d59-ba14-c848999384d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e7e99a8-a096-4ea9-8930-a993d68d8650",
        "cursor": {
          "ref": "3ff660d3-0b55-429a-9fa0-e9ea5f81ada3",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "63d5ba08-b23f-4b4b-82bd-6c61600ffd85"
        },
        "item": {
          "id": "5e7e99a8-a096-4ea9-8930-a993d68d8650",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "d752dd1a-060f-4ca2-b815-a49a39208e97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bc97b6f-3947-4178-91fc-a87d5f358664",
        "cursor": {
          "ref": "5eb8a3b6-8f27-4d90-bc3d-04d2727a9976",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "1b2b09f6-a157-48fb-83a8-aeeba3080532"
        },
        "item": {
          "id": "6bc97b6f-3947-4178-91fc-a87d5f358664",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "879a51a8-4274-472d-9326-717720957bdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53e11bc2-4d22-4b5f-8652-34bef1603527",
        "cursor": {
          "ref": "90129a84-749e-4e6c-b9dd-ba8f0ac2296f",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "665375bd-0fe1-4c49-833a-d6a06e7bd682"
        },
        "item": {
          "id": "53e11bc2-4d22-4b5f-8652-34bef1603527",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "888d2f3e-7f78-4d56-81fa-ca079bcdedb0",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 32,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eac55872-7d9f-4fe9-ac2c-92b85f2ad8ae",
        "cursor": {
          "ref": "ca83bf89-7a74-41b8-a2c5-b008a13006da",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "0c94bba4-f924-418e-b6af-18736d073007"
        },
        "item": {
          "id": "eac55872-7d9f-4fe9-ac2c-92b85f2ad8ae",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "25db6f75-95af-4b89-8c38-7865346f9fd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcc014e9-a1d7-4af1-96da-63f2ddd80bbf",
        "cursor": {
          "ref": "871e0c69-6a55-4f24-af7e-7a50356336fa",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "65260273-413b-475d-9c64-53faa426b5ad"
        },
        "item": {
          "id": "fcc014e9-a1d7-4af1-96da-63f2ddd80bbf",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "e42f53cc-ca17-4e98-8e6b-46f0527d583f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1c65179-11f9-4b7f-911b-8c6144c42ea9",
        "cursor": {
          "ref": "60921919-6704-4b1a-a8dd-02c31d518337",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "615baa28-11be-4236-adda-560b3bb67e65"
        },
        "item": {
          "id": "e1c65179-11f9-4b7f-911b-8c6144c42ea9",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "0502c193-31b2-4d9e-977d-a45ead9e255e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3703db4-5a02-4c37-8581-ae9c0358a980",
        "cursor": {
          "ref": "3cca4090-3494-4a53-982d-b75827de7f3e",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "0334bc7f-0080-441e-8a3b-d8b7f66a86f2"
        },
        "item": {
          "id": "e3703db4-5a02-4c37-8581-ae9c0358a980",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "fd9ad6bb-024a-4685-94da-9ba47e4e123e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd6588eb-c7fb-4473-a6f4-47d4ae182ec3",
        "cursor": {
          "ref": "6f9cb398-0102-476a-95b7-88e0024064a7",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "f1ae1325-01da-4cda-8248-e226f49d720b"
        },
        "item": {
          "id": "dd6588eb-c7fb-4473-a6f4-47d4ae182ec3",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "e063a43b-db04-4476-9fb0-01d60638a53c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ffcc0ef-25ba-4b04-ae83-13b6c820dae1",
        "cursor": {
          "ref": "cba8439c-8986-4ce7-9a62-2d84e67481c1",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "c9647161-d338-4f1c-9fc3-b6ae0b94d2ab"
        },
        "item": {
          "id": "3ffcc0ef-25ba-4b04-ae83-13b6c820dae1",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "f6acc728-6cdb-496d-a066-fa5131c4ea42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "810ef16f-15b6-43b3-bdba-e0a1478c3f5c",
        "cursor": {
          "ref": "fd44fdcf-bf4b-430f-8906-04d0480f7c02",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "25256478-a1cf-4b84-b5bf-78cb97e3e355"
        },
        "item": {
          "id": "810ef16f-15b6-43b3-bdba-e0a1478c3f5c",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "b117fbff-2aec-470e-9a26-3337b8296338",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 23,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc59aebe-8d4e-438b-939e-de2b78dfce40",
        "cursor": {
          "ref": "a8ad45ee-6218-416f-8047-f3d2f02ae7d8",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "9831f519-d37f-4f75-a821-4f0593998d31"
        },
        "item": {
          "id": "dc59aebe-8d4e-438b-939e-de2b78dfce40",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "3c3b91d0-e4a9-485f-a98c-cac00ccd5d5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b079244d-8b46-4cfc-9649-7580357ddb4b",
        "cursor": {
          "ref": "d34fade6-2eec-45c4-8f82-d89597ec5ea3",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "23651788-b040-451a-a078-8be8d2e517f7"
        },
        "item": {
          "id": "b079244d-8b46-4cfc-9649-7580357ddb4b",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "af588011-c87f-4a53-bca7-55c5eec55a46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d23d16f1-eb6f-4578-bd03-e1af55fef3d6",
        "cursor": {
          "ref": "8ec19e23-e6f5-4404-850b-377e0edc7299",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "5fd587af-6060-4ca7-8e0a-6bcb14ae49b1"
        },
        "item": {
          "id": "d23d16f1-eb6f-4578-bd03-e1af55fef3d6",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "8e1c8d08-a727-41ef-b65c-e36da527f416",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d6a762d-1703-42ee-99db-eb63e1ca2f46",
        "cursor": {
          "ref": "a7c4b2ba-02e8-4b8e-84e1-2a9906caa835",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "629081ae-1614-4026-879b-f6e3f262f0ff"
        },
        "item": {
          "id": "4d6a762d-1703-42ee-99db-eb63e1ca2f46",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "aba4a8ea-a344-455a-8f56-c9c9b9b99f9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c4be90e-d79e-45eb-83fb-3975af075b3d",
        "cursor": {
          "ref": "acf6bde7-21b4-4db0-a43d-a0782ef46b05",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "8616a122-00d2-4da6-b040-02b16b3e44cf"
        },
        "item": {
          "id": "3c4be90e-d79e-45eb-83fb-3975af075b3d",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "09d17f71-9524-4360-bd4a-9a2ac3feb556",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "269f85ae-173a-4211-ad68-e379f0c71fc2",
        "cursor": {
          "ref": "f6095db8-a8a4-45c6-a6d3-1293b6a08ef5",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "b3ee1f15-465d-42cf-bc7b-bd6334ab06ca"
        },
        "item": {
          "id": "269f85ae-173a-4211-ad68-e379f0c71fc2",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "89a372b1-37c0-4222-b189-a9639c192562",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c08e1f2-d652-4d55-8eed-9abe960b0d00",
        "cursor": {
          "ref": "8676520e-5a84-4172-a29e-134ea0ae8958",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "f16ca8a4-2ef4-45c1-adeb-ce882b39384b"
        },
        "item": {
          "id": "8c08e1f2-d652-4d55-8eed-9abe960b0d00",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "0115569f-1ecb-470e-9ab4-1fc49d3e420a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9560e230-42af-4a0c-80ea-970d8d58c7c0",
        "cursor": {
          "ref": "b9e208fc-acc8-4a94-83aa-816befa6ab54",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "0ad63ca0-01bf-4eef-ab7d-1d9e910ba5dd"
        },
        "item": {
          "id": "9560e230-42af-4a0c-80ea-970d8d58c7c0",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "b66ecd38-128f-4602-9c04-ed2ead2ea555",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b479a3b-f767-47cf-ac8c-b16f8b7d27e7",
        "cursor": {
          "ref": "1d49947b-bbe7-4b8c-b40f-b70de42a8aad",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "698fdf33-677f-47b2-ba19-3d423fbc1d19"
        },
        "item": {
          "id": "3b479a3b-f767-47cf-ac8c-b16f8b7d27e7",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "86df85df-bbbc-4463-a14e-ba091403999c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afd16f9b-49a4-4b43-a4fa-0929f9f4697e",
        "cursor": {
          "ref": "ddaf2b14-7cdb-43c4-a762-90c0f094cc51",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "3a20b187-970d-40db-b3fc-c6ba728a2045"
        },
        "item": {
          "id": "afd16f9b-49a4-4b43-a4fa-0929f9f4697e",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "318d40d2-88ff-4072-9474-039e4375bdfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c8ac286-49a1-42fb-bb23-c70847540421",
        "cursor": {
          "ref": "a18899f2-c454-435b-bebd-57dedf6cb190",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "b8ec0b6f-99da-4f65-a7f1-7051405ea52f"
        },
        "item": {
          "id": "6c8ac286-49a1-42fb-bb23-c70847540421",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "d3189b59-e3c6-477c-a2b1-7988c6105307",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12463756-9c38-4ca7-959f-916ec740492a",
        "cursor": {
          "ref": "600526f7-d1bd-4371-85e4-af62bc40efe3",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "c1d6ae31-6d4d-4393-8abb-cf01519f231a"
        },
        "item": {
          "id": "12463756-9c38-4ca7-959f-916ec740492a",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "18797340-3994-4311-bcd1-535be094f98d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b75e2ee-7cda-4b32-951e-8cda55178d2e",
        "cursor": {
          "ref": "c5d30023-4772-4a67-a193-e36aad2949bc",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "3e7f5452-5a60-4f8f-9f07-3ef713582d9c"
        },
        "item": {
          "id": "5b75e2ee-7cda-4b32-951e-8cda55178d2e",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "c0b3a95b-9018-4250-89b2-4fe53e471bee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7d18605-9a1f-40bb-ac4f-20f1da126e21",
        "cursor": {
          "ref": "7f94d99f-8044-442a-8708-24b5b58f22a1",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "622a5214-ed99-4c0c-9e49-727665b1acd7"
        },
        "item": {
          "id": "a7d18605-9a1f-40bb-ac4f-20f1da126e21",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "0088e290-e959-4abc-932d-cd74b3b6bb3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "400a80cf-3274-477d-84a3-f6bde9168fb5",
        "cursor": {
          "ref": "bee2b39c-8be6-45eb-9e52-5384e5ff5fcd",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "40cd7073-814e-47aa-a301-06c87cb38ed3"
        },
        "item": {
          "id": "400a80cf-3274-477d-84a3-f6bde9168fb5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "c918b5f4-e78e-4154-a81b-1f024bb706b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "157c875d-4c5a-4b11-886f-84e415bc3e7c",
        "cursor": {
          "ref": "c76a21d4-82dd-4da0-a6aa-3b190f0bc37f",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "31f23b9e-375d-4948-84b5-05323d48c689"
        },
        "item": {
          "id": "157c875d-4c5a-4b11-886f-84e415bc3e7c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "1d597d95-06c3-4e40-861f-98a59671772b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35be3e5e-4144-4979-acf6-47a10018cab5",
        "cursor": {
          "ref": "138c5868-5164-4b9e-ac19-076467200cfa",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "c96df9e4-639d-49a1-9cdf-172310190d6e"
        },
        "item": {
          "id": "35be3e5e-4144-4979-acf6-47a10018cab5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "f46c8e67-9bb4-492d-ac5e-afae2d56a7a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1989d11-bf42-450e-9f8e-c2d4d96c3ee3",
        "cursor": {
          "ref": "6bcb343d-5131-4ae6-aa05-d50084735a4c",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "dcb88e16-de01-44eb-ba29-1166f864ac73"
        },
        "item": {
          "id": "d1989d11-bf42-450e-9f8e-c2d4d96c3ee3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "f517483d-fe64-44d5-950b-67e6e5118835",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f046b3c-daa4-45b7-af16-41261d02bdc7",
        "cursor": {
          "ref": "90c50e1a-0aa3-4284-a9cf-2cf8b270b30d",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "d20962bd-02b9-41c2-97b5-8d596b66bff2"
        },
        "item": {
          "id": "7f046b3c-daa4-45b7-af16-41261d02bdc7",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "03551cd5-e839-40bb-a0e8-15bfb338873b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "513fd455-b5bb-473e-ad1a-04d3b404a6b6",
        "cursor": {
          "ref": "c8deee6c-efb9-4b80-b299-183c78106f72",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "552c8e9d-65d9-4f04-ae49-24ab3a869b11"
        },
        "item": {
          "id": "513fd455-b5bb-473e-ad1a-04d3b404a6b6",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "65b78c50-783a-4b65-ab4b-ddb8fd390ee8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eef09ed5-e902-42fb-8b7d-700664a922f2",
        "cursor": {
          "ref": "3e398d2f-a866-4846-9192-7df4ea8d3de0",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "c106e808-5790-4e2c-be10-2ff41466ce27"
        },
        "item": {
          "id": "eef09ed5-e902-42fb-8b7d-700664a922f2",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "d84fe18f-8a09-48e0-bca4-e0e3489fbeda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb6297ae-cc75-465e-9649-0a27f8549723",
        "cursor": {
          "ref": "358ff2b2-ee26-40b4-8054-88c5db53063a",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "354c190f-8d4b-4424-a010-56a1851b79a7"
        },
        "item": {
          "id": "cb6297ae-cc75-465e-9649-0a27f8549723",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "d349bd20-0edc-4736-b9cb-ba4850b4dca3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c535a474-5ad6-4c95-a6da-cf97b549e207",
        "cursor": {
          "ref": "785968ad-ae5c-420d-9de2-f43c85bb8456",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "32856a4e-9048-4a14-a248-3f5133e12286"
        },
        "item": {
          "id": "c535a474-5ad6-4c95-a6da-cf97b549e207",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "6024f574-15ab-4721-8030-55276f905cf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eafdc53-6c6d-4871-a3b4-90e362c88073",
        "cursor": {
          "ref": "dbf0ace0-c8cf-4710-b952-d0762a874fee",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "5c17b510-c2fd-4600-bb11-41cf272c07b8"
        },
        "item": {
          "id": "2eafdc53-6c6d-4871-a3b4-90e362c88073",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "15256d32-4a98-4621-a31b-1081bb52d993",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6960e24-d4a4-4feb-8fb2-68d58ce88e32",
        "cursor": {
          "ref": "6ffc1cbc-7060-4ed2-99e9-86ba83d1faea",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "64b5ba3c-1786-4f68-aac9-2fcbdb3776e3"
        },
        "item": {
          "id": "e6960e24-d4a4-4feb-8fb2-68d58ce88e32",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "83e31028-acf3-4ccd-bb50-1cd85c809132",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "392846e5-5fd6-4048-9d5b-7d2270d8adee",
        "cursor": {
          "ref": "35e4dbf5-f94a-495a-a49a-8deb67e98bc5",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "8c0feeb1-bca6-45bf-b219-6318de6974aa"
        },
        "item": {
          "id": "392846e5-5fd6-4048-9d5b-7d2270d8adee",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "8e66fe9d-5e8b-466c-876b-f0211a52877e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c33ed55-576b-4e09-b2ac-0a31fb16539c",
        "cursor": {
          "ref": "e6b0b9b1-955e-4937-83e1-6c10e1088143",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "9bf3e418-b496-485e-908e-28cf85baa3d9"
        },
        "item": {
          "id": "2c33ed55-576b-4e09-b2ac-0a31fb16539c",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "2e361a27-6434-43b6-a848-ce0e1f2b87ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6d0cb91-c281-4a9d-b5b4-f8466e1e9ae6",
        "cursor": {
          "ref": "c7033f3f-b3b3-41ea-96bc-61783420705a",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "134b6d9b-e808-4c61-9c65-bb4db5326c39"
        },
        "item": {
          "id": "e6d0cb91-c281-4a9d-b5b4-f8466e1e9ae6",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "9d7623ce-7c49-4a30-adbd-7eb734e4aeb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c505fe2-7089-4782-8eba-64c365207e8d",
        "cursor": {
          "ref": "7110974c-504e-47ae-87ec-ea723bcdd1fa",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "bbff74f5-98f5-4744-9c99-8b362bfff04e"
        },
        "item": {
          "id": "4c505fe2-7089-4782-8eba-64c365207e8d",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "904da0e7-b327-4d32-8d89-78cc12108064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e33b7ccd-46a3-4d5a-bcbe-d68ca8cddd3f",
        "cursor": {
          "ref": "b7bec596-047a-4df5-9aeb-da18287ce869",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "01805937-ef29-4855-a2a8-8c0c15bb79a3"
        },
        "item": {
          "id": "e33b7ccd-46a3-4d5a-bcbe-d68ca8cddd3f",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "a42008a8-f986-4a61-bebb-ce3f9fa94597",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b924f224-b84f-4ce4-bc7e-fd2642b66434",
        "cursor": {
          "ref": "d83caf48-08f4-45c7-afe7-78af6d8fb382",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "5feb5034-3307-4e4a-ae7a-0d482372382f"
        },
        "item": {
          "id": "b924f224-b84f-4ce4-bc7e-fd2642b66434",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "e031c1ea-0d8a-4697-8caa-2f7b9ee650c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e268e6a9-bdee-4b7f-9a59-a10d0eb8b2d1",
        "cursor": {
          "ref": "decb6989-4b86-4056-a101-e51e0ddecfa8",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "4733a241-87b3-4ecc-89ac-088169fd9220"
        },
        "item": {
          "id": "e268e6a9-bdee-4b7f-9a59-a10d0eb8b2d1",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "78e415d3-d7ea-4201-885f-9e184451fe38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1172885e-14f6-413d-b2fa-bda0347a849e",
        "cursor": {
          "ref": "c94f621a-5ef6-4d2f-8de8-6afae947916d",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "3399425d-0149-4ccd-81ea-5f4d292b24b5"
        },
        "item": {
          "id": "1172885e-14f6-413d-b2fa-bda0347a849e",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "5a6c1bc7-d82d-4feb-ab3b-3864eaf99218",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc2a8648-aed7-4c7f-b27e-c113edb2eddd",
        "cursor": {
          "ref": "1a953de3-8726-4d5f-83ea-e43875f25d8c",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "9f43c708-4a3f-4039-a648-3475d3273f24"
        },
        "item": {
          "id": "dc2a8648-aed7-4c7f-b27e-c113edb2eddd",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "0ccc0e0a-e3d2-471e-8ff1-d52e45d01a22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d05c822b-8b84-4059-9720-430cf12773b5",
        "cursor": {
          "ref": "4bd13c82-7ab7-4ce4-9795-65d38bcf4a1a",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "81e86027-1271-46db-bf1f-cfcd95963b39"
        },
        "item": {
          "id": "d05c822b-8b84-4059-9720-430cf12773b5",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "5c1e2361-f9b4-411a-a026-d634a742a9bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "516a8a4e-e1ce-4353-8cb6-d975b6df1f69",
        "cursor": {
          "ref": "c1cb0851-7980-4ec3-b89b-1c0ec730e807",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "340c510a-cda6-4f1d-a309-b097c5c5a150"
        },
        "item": {
          "id": "516a8a4e-e1ce-4353-8cb6-d975b6df1f69",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "5756e407-b454-4875-a18b-9b8d18739964",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df54bec0-029e-40a3-98dd-8dae882b959c",
        "cursor": {
          "ref": "e566b844-07cf-4bb5-83f3-a5c304ea2ff2",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "b3110acb-c9cd-4216-856d-c175b69523e8"
        },
        "item": {
          "id": "df54bec0-029e-40a3-98dd-8dae882b959c",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "02310773-4889-4987-a383-9243e5beb928",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bab2497-617b-492c-a1ea-e1509206d395",
        "cursor": {
          "ref": "90a24559-9bdb-45d8-b5ec-ba18d99427df",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "a34ebb19-9035-4010-ad8a-c707d68e776e"
        },
        "item": {
          "id": "8bab2497-617b-492c-a1ea-e1509206d395",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "406c1351-22b9-4fa1-9205-87a6f7ebce04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13fed4db-f7f9-42ef-a48a-e9208b233571",
        "cursor": {
          "ref": "38484b0a-8b02-4c5a-963a-0cd0c3327808",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "6644f5e3-27a6-4599-87d2-f4507ce893c9"
        },
        "item": {
          "id": "13fed4db-f7f9-42ef-a48a-e9208b233571",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "7afba3c3-6c3d-4f84-bb41-755e84517249",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "827c7526-d403-47ba-b51e-846eed06a406",
        "cursor": {
          "ref": "27cb67f4-c232-4ed0-8b6c-11a7e405e615",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "939e8439-45ed-401c-87f6-05b1bf9dd705"
        },
        "item": {
          "id": "827c7526-d403-47ba-b51e-846eed06a406",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "3ec90732-8549-4819-83e3-8db6928fe798",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42caf6ab-b1ef-4f29-8f73-65898554236d",
        "cursor": {
          "ref": "8fd05002-fe05-4d6c-bce0-118cd0c7801d",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "7362c399-16b8-419f-8f24-9e1d0fb7df23"
        },
        "item": {
          "id": "42caf6ab-b1ef-4f29-8f73-65898554236d",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "79156eec-11ba-45e6-bcde-db4aa5ea75fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1c06246-f337-4933-9095-0fbbb3adca74",
        "cursor": {
          "ref": "3569a0bb-0226-4bc2-8219-137e21fcf302",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "32ec2750-813a-4889-a649-ea2d0d221cfb"
        },
        "item": {
          "id": "b1c06246-f337-4933-9095-0fbbb3adca74",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "c3af7fa8-8a7f-4097-ac64-7c79b4bdc876",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "498c410b-760a-4a1f-a316-539bbeac6ad6",
        "cursor": {
          "ref": "a2dbfad8-3dbf-4e7e-af6b-2ae39bafcddc",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "1fe7a2f8-c13d-43db-86bb-0e0e801c55ce"
        },
        "item": {
          "id": "498c410b-760a-4a1f-a316-539bbeac6ad6",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "4c783320-0ff2-47f4-a6fd-7320967728e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9da9a573-9297-4f94-b401-bb319ef2d076",
        "cursor": {
          "ref": "64e8791b-b6ec-48f8-b30e-8c2e1a688335",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "393f09f2-6c80-403a-a7d2-59d997896b13"
        },
        "item": {
          "id": "9da9a573-9297-4f94-b401-bb319ef2d076",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "8bffcc9a-0a03-46e3-ade8-a6e475d6cbbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdc5d794-9446-469a-af04-f74f2925d138",
        "cursor": {
          "ref": "7e123427-648a-4e85-b28f-e0f9df6414ab",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "1edcb91f-0421-444c-96f0-5ff544f757cc"
        },
        "item": {
          "id": "cdc5d794-9446-469a-af04-f74f2925d138",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "ba8920cd-731a-49a0-a49f-728c3303c723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44482d6f-103a-4107-8843-f2baaa1915bc",
        "cursor": {
          "ref": "85e3bddb-bec5-467e-b426-33029c128024",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "03c3d3c9-e078-43ce-83d2-b181595b8773"
        },
        "item": {
          "id": "44482d6f-103a-4107-8843-f2baaa1915bc",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "3a69b12f-b366-4857-8b45-64e1790eac0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "537cfbad-26e9-469d-8c0e-eabce9709b1f",
        "cursor": {
          "ref": "33e8f943-2bae-47c3-aba6-46ffba545ace",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "8c43c8c9-9154-489e-80a4-7d4413929e69"
        },
        "item": {
          "id": "537cfbad-26e9-469d-8c0e-eabce9709b1f",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "ef3699e1-e9fc-42d0-b1c8-4abf065edf5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9642af3-6989-4c5e-b5b9-83d64f7bd3cc",
        "cursor": {
          "ref": "298fafed-24b5-4bf4-90e6-233f95ebfd86",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "52b1c2e4-3d86-404b-a0e5-72f93db0bc28"
        },
        "item": {
          "id": "d9642af3-6989-4c5e-b5b9-83d64f7bd3cc",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "b4a52448-4df2-4b1e-802a-565b2d602e9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a0baafc-dbd4-4fc4-a819-e07fcb47e4e4",
        "cursor": {
          "ref": "5ddbc73d-0ea1-410c-87dd-101a8f021611",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "d52ea2f0-5a48-4561-a21c-74aca4b81435"
        },
        "item": {
          "id": "3a0baafc-dbd4-4fc4-a819-e07fcb47e4e4",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "649cdc72-555c-424c-8a48-b4f756a352c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "259cebf2-7c0a-4c21-8227-0dcd048388cf",
        "cursor": {
          "ref": "4d77ef3e-d7c2-41d1-83dc-4eb6ea131656",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "9fadf1dd-b3cf-4936-ace4-fb14bc1dac31"
        },
        "item": {
          "id": "259cebf2-7c0a-4c21-8227-0dcd048388cf",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "a3533a95-f188-456e-9f66-298e4af520fa",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e5aafab-0c30-4cc9-a3f9-5295805e376b",
        "cursor": {
          "ref": "02300907-4810-4e7c-b45b-cd3c047c5c33",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "49c9cdbe-9829-43fc-b6df-3cd4b81c4d4b"
        },
        "item": {
          "id": "7e5aafab-0c30-4cc9-a3f9-5295805e376b",
          "name": "credentials_issue"
        },
        "response": {
          "id": "2b5d2ebe-2f22-46f4-aa07-8ba87f4e01f7",
          "status": "Created",
          "code": 201,
          "responseTime": 52,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb6ec574-e6f3-492d-a7b5-e8f4b9552a69",
        "cursor": {
          "ref": "4c4c45c7-cdf0-421a-8fa7-4da5a8be7e01",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "1065819a-9f06-4d3c-ab3a-1b214e21b694"
        },
        "item": {
          "id": "eb6ec574-e6f3-492d-a7b5-e8f4b9552a69",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "5e1d6b4c-a22d-48d9-a6be-3b08de5dfb16",
          "status": "Created",
          "code": 201,
          "responseTime": 221,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddb76a0b-6a69-4c08-a1c9-cc85281197ca",
        "cursor": {
          "ref": "fcbb0ad0-3fef-4d37-9ff1-a5434ceb7b56",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "fb1dadd5-67f1-434c-a869-b579e72261cf"
        },
        "item": {
          "id": "ddb76a0b-6a69-4c08-a1c9-cc85281197ca",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "9ca8ea13-d304-41ab-8f1e-93951536495e",
          "status": "Created",
          "code": 201,
          "responseTime": 35,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8b5f057-3157-4a4c-8c4b-41f091f5f793",
        "cursor": {
          "ref": "7698dd30-544c-4e73-b259-72c095215ac3",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "0bbb954f-0814-4c4f-a804-e646aa614f52"
        },
        "item": {
          "id": "f8b5f057-3157-4a4c-8c4b-41f091f5f793",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "481e8cb6-dd3b-47b8-bb59-b7afbe342361",
          "status": "Created",
          "code": 201,
          "responseTime": 38,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e961472-3707-4e68-a3c0-3194a62fbed4",
        "cursor": {
          "ref": "732d6949-54ba-415b-b49e-21563ef451b5",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "2530931c-a367-430c-84ff-201f108cc08e"
        },
        "item": {
          "id": "9e961472-3707-4e68-a3c0-3194a62fbed4",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "acc9c179-f57a-47e2-80ee-75c42e70c2b9",
          "status": "Created",
          "code": 201,
          "responseTime": 34,
          "responseSize": 907
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcc04b14-cdfc-4506-82de-2e47742b0cf7",
        "cursor": {
          "ref": "b2011b3b-1f8e-4df8-98b7-588e877e6716",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "42d6add0-61e1-4d0d-802b-875d679ab2c6"
        },
        "item": {
          "id": "fcc04b14-cdfc-4506-82de-2e47742b0cf7",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "5265e383-1ac4-45e8-b153-560187ccbdc1",
          "status": "Created",
          "code": 201,
          "responseTime": 36,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8ab2a24-2879-4d88-9085-d4a513ad2bd1",
        "cursor": {
          "ref": "f222a05e-dd3d-46b4-a75a-4165c1524d92",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "7aca2601-7149-4a30-bfb9-8175376858ef"
        },
        "item": {
          "id": "a8ab2a24-2879-4d88-9085-d4a513ad2bd1",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "ba799973-88a2-4608-9e11-8301fee4b879",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8872e293-c4f1-4286-bf8a-a1249a60546b",
        "cursor": {
          "ref": "439664eb-4693-411f-9b93-75a3251488a2",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "74130614-3bdb-46ad-92c0-39b1ed3408d9"
        },
        "item": {
          "id": "8872e293-c4f1-4286-bf8a-a1249a60546b",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "d3781056-a508-4d4f-93cc-a51c53588db7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "223b98fc-c391-409b-b247-9ffafde1d4d4",
        "cursor": {
          "ref": "cc283f92-51bc-4fe8-a296-1fdda4b6ec93",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "db833415-f77d-40be-84f3-fb62ad103bc7"
        },
        "item": {
          "id": "223b98fc-c391-409b-b247-9ffafde1d4d4",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "fbe3606e-e12a-4cdb-a57b-66dcf05c7883",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18dd2b1b-8fa4-4777-9ab4-81c6ca07a6ae",
        "cursor": {
          "ref": "9309c335-33fe-4b89-a2c8-94a8ed9f92f0",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "b643521a-d4b6-4c03-87fd-fdad07b416cc"
        },
        "item": {
          "id": "18dd2b1b-8fa4-4777-9ab4-81c6ca07a6ae",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "f5b1b472-0c24-43ab-a739-e38cca6b5680",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e73f5c1-9240-4d7d-8195-d9fc64f8d092",
        "cursor": {
          "ref": "4f7d1038-cd21-43a8-8121-7f74fa3c2e61",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "92994cc4-0daf-4026-8c38-db34976edc84"
        },
        "item": {
          "id": "3e73f5c1-9240-4d7d-8195-d9fc64f8d092",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "1152dcd4-5028-4574-94ba-033f496893a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "206c42ba-8d7e-4de8-9bc7-61e40223aebf",
        "cursor": {
          "ref": "41b0a0d7-0452-4d7d-a3fc-61e9038b2714",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "7ca3e1bb-c7a9-4da1-95c3-2352f6eb39ba"
        },
        "item": {
          "id": "206c42ba-8d7e-4de8-9bc7-61e40223aebf",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "9d8f55c2-c9db-43a1-aa61-509d6799f226",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25d0fa34-da18-461d-8de8-d1ee4585122f",
        "cursor": {
          "ref": "de7bbdb8-abc2-4405-a9dc-543e051ee178",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "e4aab86e-c1ed-41f8-b444-f5807021e912"
        },
        "item": {
          "id": "25d0fa34-da18-461d-8de8-d1ee4585122f",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "1c5a6baf-843f-4caa-b9b9-27c5da127d20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dae87b15-938b-40df-9fda-7961f0ce6e13",
        "cursor": {
          "ref": "5e31618c-eb9f-4883-8a8f-1eeca3f468b0",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "d715e517-2e60-498e-a178-9ffac676a3a2"
        },
        "item": {
          "id": "dae87b15-938b-40df-9fda-7961f0ce6e13",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "245bfbec-b9fe-4e94-a72d-588c57279caf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c866c732-63fd-41b3-aae4-e1d36059acd9",
        "cursor": {
          "ref": "57103652-e062-42ef-b295-2e2eb8a82d22",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "e356326f-0c25-4748-a4f9-e5a59111914e"
        },
        "item": {
          "id": "c866c732-63fd-41b3-aae4-e1d36059acd9",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "e4e3af83-3549-43b6-9d16-ad4eea142aa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62d9fd1d-8990-4261-952a-9511ca2f7f5e",
        "cursor": {
          "ref": "23da77b3-bcb5-4cd6-a4d3-4987615982ec",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "3c877ef8-1d4f-4756-8dd9-561f88e462bc"
        },
        "item": {
          "id": "62d9fd1d-8990-4261-952a-9511ca2f7f5e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "e69c5605-af0c-4e19-b8cc-2e848c54ee6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63b7b5e9-4948-4622-99dc-408cd358ffe2",
        "cursor": {
          "ref": "218a9d17-f15b-4f97-b7c1-32716911c920",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "1e3fba1f-8b6e-4316-a933-7aadc23598ff"
        },
        "item": {
          "id": "63b7b5e9-4948-4622-99dc-408cd358ffe2",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "9eb4735a-43ba-41e1-b2a5-7b6146fdf4f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "313bc830-fd38-4af4-b0f1-b883a8cf105f",
        "cursor": {
          "ref": "f3aa6a31-e37b-43b1-9a93-2a2a26862aa1",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "9fcf10fb-ab58-456a-a5fc-cd4aa1739928"
        },
        "item": {
          "id": "313bc830-fd38-4af4-b0f1-b883a8cf105f",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "d4b4fc9c-281d-4153-94f9-80b1dd44ca06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70320ad3-dc58-4d6f-98d9-94da3ddd57e9",
        "cursor": {
          "ref": "0d513f5e-da65-45af-b20c-bf9244181080",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "b70b8168-c198-4e38-a933-fba204ab67a3"
        },
        "item": {
          "id": "70320ad3-dc58-4d6f-98d9-94da3ddd57e9",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "0d20664a-ca79-47a3-b5c8-fdff65e30bc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95fa9036-9dd6-43f7-9cc2-4e62c528d304",
        "cursor": {
          "ref": "8f1caecb-2dd8-4a09-b4a0-87906f189cc8",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "e359f35f-e80d-4fdb-ab7b-c774e7f23eab"
        },
        "item": {
          "id": "95fa9036-9dd6-43f7-9cc2-4e62c528d304",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "75c8fdb6-258a-47dc-99c2-6939c37dabc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a94981c-e453-404f-8880-79bf3981118f",
        "cursor": {
          "ref": "8eb9b972-0258-4dc6-84a2-ba8594c75ee9",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "ecb18207-d6b5-455d-a3c1-8adf9293996f"
        },
        "item": {
          "id": "3a94981c-e453-404f-8880-79bf3981118f",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "fa3dfcc6-fc46-42e4-93f8-5ae76e4d5513",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8631a565-8497-4074-b991-ca4ae85ee119",
        "cursor": {
          "ref": "88fd1d4e-a4f2-47e5-827d-1575633d232a",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "ba56773e-ea7d-4352-8e4e-789f40a5fefe"
        },
        "item": {
          "id": "8631a565-8497-4074-b991-ca4ae85ee119",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "dd0d9538-56fb-42b2-b3f9-1697e9a9f431",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8774f23a-23e5-4f71-a6de-5d2fa06dd13d",
        "cursor": {
          "ref": "dc4f4ebf-fb91-4f4e-b0e8-53fcfbd5d7ae",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "a7d89036-7f5b-45fb-8bf4-d91a1b837711"
        },
        "item": {
          "id": "8774f23a-23e5-4f71-a6de-5d2fa06dd13d",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "34b69e6c-8b0f-490c-ab8a-7ba7ad6b4512",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83fddb43-6def-4a43-88dc-2ff2a8bca27d",
        "cursor": {
          "ref": "27d28b3f-ee5e-4c6a-bef0-61de4fcc02f8",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "e331fe54-82bf-4958-a1f7-52280f419cb2"
        },
        "item": {
          "id": "83fddb43-6def-4a43-88dc-2ff2a8bca27d",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "5c8e7e6d-8622-4ab6-a740-a88fbd2d49ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "035b5120-b503-44d3-99b4-9c3bf4275c07",
        "cursor": {
          "ref": "378c24cf-e76b-4ab8-b0a9-eebf4ac2e91a",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "98673538-8675-4bd5-9efc-80399611bb4d"
        },
        "item": {
          "id": "035b5120-b503-44d3-99b4-9c3bf4275c07",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "d5bbb021-2c8a-4a9c-8a87-c9115cba2c65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c188b2e3-08be-4bff-b3e9-9ef86141c446",
        "cursor": {
          "ref": "4676061e-ff4f-42cb-ad12-f061d67554f2",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "8c89f1aa-3680-4d58-a5d5-d4205c5b2038"
        },
        "item": {
          "id": "c188b2e3-08be-4bff-b3e9-9ef86141c446",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "6d48d431-453a-4e78-9cc0-9d2a5a7a93d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a0ae7e0-5ec8-4eda-8831-03a2be6077f8",
        "cursor": {
          "ref": "3d404479-00fc-4e84-aa21-2433e784a9bc",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "92e6ed64-6a22-47d1-8027-d4769ffa8c04"
        },
        "item": {
          "id": "4a0ae7e0-5ec8-4eda-8831-03a2be6077f8",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "2d0e0c28-2637-4e0e-acb8-3b2c5ab86454",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79695f8f-8105-4b5c-b83d-a0f78e76aa52",
        "cursor": {
          "ref": "185f393d-f50b-448b-8247-b6364dbd6a09",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "62c95435-77ff-4134-ab34-dd79c0b92b57"
        },
        "item": {
          "id": "79695f8f-8105-4b5c-b83d-a0f78e76aa52",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "5d47b14d-f2b6-431f-804b-9e4680888146",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a4d1227-cd5e-4fa2-abe8-5bf377f5af8b",
        "cursor": {
          "ref": "2a7f2ae6-adbb-45f9-987c-05af1c77aa68",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "35e508ad-517b-4de7-ad5e-e8d5a021a3b0"
        },
        "item": {
          "id": "4a4d1227-cd5e-4fa2-abe8-5bf377f5af8b",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "4c1c5db0-5558-4b19-b001-b41eeddfc1ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "990a1a39-ea07-4a5d-8ddb-237418dd28c4",
        "cursor": {
          "ref": "ba5d4286-b237-416d-b40b-9e8a25b30384",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "0ee97823-04e9-4488-8afe-78d051f8bd24"
        },
        "item": {
          "id": "990a1a39-ea07-4a5d-8ddb-237418dd28c4",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "dad22649-4a9d-4f4d-8684-cefa5e91bbb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80e9c2be-5c2d-4928-b472-be8f71de368e",
        "cursor": {
          "ref": "763569e0-2270-48d7-ae4d-af080bd59c82",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "84f69760-6b9f-40ed-b60c-03139768dcd6"
        },
        "item": {
          "id": "80e9c2be-5c2d-4928-b472-be8f71de368e",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "31835f90-5553-43a5-a933-4918fa68be49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cea8543-a5c3-4f45-bb71-100c3336ce91",
        "cursor": {
          "ref": "98ac8d33-db44-40d3-ade5-68f5fbd74a46",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "62e8e142-8206-40e6-b298-0f89a45625bb"
        },
        "item": {
          "id": "7cea8543-a5c3-4f45-bb71-100c3336ce91",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "37012d8d-cb90-4bf8-8dbf-1027efe3c5ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d781998-54ed-48fe-a256-6a53b6888408",
        "cursor": {
          "ref": "e461a4b7-5883-47d2-8275-6ae0e124962c",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "4caffaf0-fa8e-4202-aa9e-568170787d20"
        },
        "item": {
          "id": "8d781998-54ed-48fe-a256-6a53b6888408",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "4f48eeb1-4a92-42fc-9196-d69a195e1744",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e0760fd-d957-4a3f-9609-9354dee500f4",
        "cursor": {
          "ref": "cf835a55-4c87-42bc-abdd-5382a5d4978b",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "5c9d6519-0038-404b-a6f4-7664f6064cb0"
        },
        "item": {
          "id": "6e0760fd-d957-4a3f-9609-9354dee500f4",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b7352a36-f495-4183-9dc9-ad2416d77b91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d065e44-4fe1-4128-8e6d-c81ed15ab092",
        "cursor": {
          "ref": "464b0de7-4b4a-4bca-97ce-a52d3ed57b3d",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "66ea9713-f23d-4a0c-b0fa-4bf61b164799"
        },
        "item": {
          "id": "9d065e44-4fe1-4128-8e6d-c81ed15ab092",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "6b8c1c7b-356e-41cd-9a00-e2a499aa407e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13dab847-b8e2-48f6-85a3-58c21e88dd79",
        "cursor": {
          "ref": "e5ac5117-61a4-4a05-a295-4350c83c45e9",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "2d55da1e-c49c-4be2-9583-3b7c86e4869c"
        },
        "item": {
          "id": "13dab847-b8e2-48f6-85a3-58c21e88dd79",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "bd27d2aa-3ee4-4d40-9566-4c6a2e47fa22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48451e4c-0d80-4b27-9de1-988dc971cbc2",
        "cursor": {
          "ref": "043332a9-4551-4366-87ff-727bd7552f6d",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "6c8facf0-4c7b-4714-8221-cebe430e3917"
        },
        "item": {
          "id": "48451e4c-0d80-4b27-9de1-988dc971cbc2",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "453eafd2-c83b-430f-a72c-a72fb481e926",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da527e06-7ae0-441a-89f9-43bdf763670a",
        "cursor": {
          "ref": "15861282-760b-4a3b-b12b-d4dc35090079",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "e5ca29b2-7025-42ad-a258-4544731e8400"
        },
        "item": {
          "id": "da527e06-7ae0-441a-89f9-43bdf763670a",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "b6ddb64a-f6ea-4f2a-97b3-a61cce53f6c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3804e6ee-38dc-47aa-8c2b-044e62e3ef1b",
        "cursor": {
          "ref": "0e5e2f04-29ac-4999-b31b-d10f04c2346e",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "92c2cf0b-1db9-4548-8a1e-25405da8db44"
        },
        "item": {
          "id": "3804e6ee-38dc-47aa-8c2b-044e62e3ef1b",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "7d15b3db-be7b-4b49-9c37-86ee837295ed",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dbdd850-460b-4937-8f9a-08e6af14ea44",
        "cursor": {
          "ref": "327091a1-2f9c-42fc-8dd6-dd31d2120d2f",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "75a8aa84-279a-4b26-afec-b0b143c770ac"
        },
        "item": {
          "id": "0dbdd850-460b-4937-8f9a-08e6af14ea44",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "94a04383-133e-4b3d-a5c7-f8df709c4e72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4312aa20-ce95-48e4-8172-ff0f3d1e4e05",
        "cursor": {
          "ref": "6a0cf6e3-c876-42ad-a41e-5f907b37827b",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "a454d10e-54d1-40ed-9165-a965129aad59"
        },
        "item": {
          "id": "4312aa20-ce95-48e4-8172-ff0f3d1e4e05",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "776fe13a-35e3-4d50-878b-618b5719a683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2c2e966-80d9-4e22-bda1-ba2a304d57af",
        "cursor": {
          "ref": "cebfe437-b3b6-4af0-8be6-ed59e0d94137",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "f9719e81-0382-4e1d-9599-3ddaacd18f82"
        },
        "item": {
          "id": "e2c2e966-80d9-4e22-bda1-ba2a304d57af",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "92f81e16-bff7-494e-b9c2-38da77dd8121",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2349c068-168a-4037-9419-10f8ffffb40d",
        "cursor": {
          "ref": "d1f38b2f-2152-4ae5-bea1-2016cc5608bb",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "c4df5569-6224-4e05-b106-32d3d5d83507"
        },
        "item": {
          "id": "2349c068-168a-4037-9419-10f8ffffb40d",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "2d0721ce-aa47-4543-8a62-8d8d26527de8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e82840f-d1bf-4978-9e53-af15b821c12c",
        "cursor": {
          "ref": "634b8ff0-b246-400d-af94-69dab0192c8a",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "09547b4b-15b3-4406-9cd4-d007f9b3491a"
        },
        "item": {
          "id": "9e82840f-d1bf-4978-9e53-af15b821c12c",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "14038010-c121-443b-8958-a0d3dc64b4c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f4b9aff-8d8f-46d2-92b5-44f39daedaaf",
        "cursor": {
          "ref": "3d1cdde7-1ce7-4a42-babb-6e589392973d",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "a59e2c87-7580-4f5b-a551-050eb9c9d564"
        },
        "item": {
          "id": "2f4b9aff-8d8f-46d2-92b5-44f39daedaaf",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "8cce0c0f-6116-4f39-b04d-23e1cdf01804",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89db09c6-2971-44a5-bc51-bfa0c2315a55",
        "cursor": {
          "ref": "f15bf4cd-ce26-4a24-adbd-3d19460b36e8",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "3363b244-89ee-4bfe-aeb8-8f26c413cc40"
        },
        "item": {
          "id": "89db09c6-2971-44a5-bc51-bfa0c2315a55",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "a5f34ada-f276-41af-a9f5-763e49d39b5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76cb850c-6c51-4681-8fd9-d9f645a0f78a",
        "cursor": {
          "ref": "b73ed17b-a3b7-4c06-a829-b0416c74ca66",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "b43539bb-3858-4962-ba68-66cccae4266b"
        },
        "item": {
          "id": "76cb850c-6c51-4681-8fd9-d9f645a0f78a",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "19573941-0fad-439c-9d6e-e7c9ffea415d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23d168d1-7185-4f26-90ca-d6baf0d0214d",
        "cursor": {
          "ref": "d3e43ba9-5c91-4c87-b55f-5be30d443e13",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "b8f01d0c-be8b-4586-8ef1-0a1a34dffff7"
        },
        "item": {
          "id": "23d168d1-7185-4f26-90ca-d6baf0d0214d",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "96a8efac-70fa-4eda-b9d5-be426485355e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a609a4a1-f79f-45e0-a391-b21aefa5c28a",
        "cursor": {
          "ref": "dae45674-9f06-4bb7-aadb-b9f6e9f22455",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "5aedabd1-5fb5-4b20-8336-24c040d718ec"
        },
        "item": {
          "id": "a609a4a1-f79f-45e0-a391-b21aefa5c28a",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "2cc505e9-88e4-43c7-9eb3-4852c916dbbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d022cfa0-02c8-4330-b93e-8b15043813fe",
        "cursor": {
          "ref": "e0bb462c-29e1-4305-90b5-0a3fdcd7c989",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "0eb50d22-89f8-43bb-8e5c-0d1584dc9960"
        },
        "item": {
          "id": "d022cfa0-02c8-4330-b93e-8b15043813fe",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "44b106b0-36a2-4677-90af-129399eaa17c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3124d605-d3c0-4c29-a41f-60b26b45dda2",
        "cursor": {
          "ref": "739490f6-c2d8-43df-b0f9-70df62c7b615",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "685ca686-5bde-4e80-a286-eddba680bf32"
        },
        "item": {
          "id": "3124d605-d3c0-4c29-a41f-60b26b45dda2",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "6524a647-041d-492d-a4c1-b599bd4ea755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14762a06-678e-4217-b1e5-441ddbcf2374",
        "cursor": {
          "ref": "1d7a079b-082f-4aff-925b-7ce1daea9664",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "80061f66-f831-48c3-a581-2b72a1499e63"
        },
        "item": {
          "id": "14762a06-678e-4217-b1e5-441ddbcf2374",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "7e444be5-39f9-4c8d-be7b-66c09906444c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85ca2118-c11d-4efe-99ed-9efc2d42aec7",
        "cursor": {
          "ref": "f2458f96-e01b-4f33-b797-02afa99eacc9",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "43a86a55-62f2-4065-b4e6-e7fabe6b1a52"
        },
        "item": {
          "id": "85ca2118-c11d-4efe-99ed-9efc2d42aec7",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "e4acbce4-67ad-4263-98f4-62a0e617f3aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c610450b-3a80-4ef2-b65c-9e87ccc497f6",
        "cursor": {
          "ref": "151b8077-130e-40b8-bbe0-717460c51329",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "4f51492c-b8eb-492d-96b6-de0c1941aa0b"
        },
        "item": {
          "id": "c610450b-3a80-4ef2-b65c-9e87ccc497f6",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "a532395a-79e5-493a-8b3a-62d54f9a4eef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "588d7568-e522-4d64-b19b-be7a73244b36",
        "cursor": {
          "ref": "463a3b38-672c-40a5-8ed7-93c8c8e4142e",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "3273d1e2-46f0-4c73-8847-dc10c7b1324a"
        },
        "item": {
          "id": "588d7568-e522-4d64-b19b-be7a73244b36",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "628cc7a6-d618-4f3c-b702-0ecdab86e8ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db96267e-fa6e-4107-8854-3b45aa901846",
        "cursor": {
          "ref": "f2f5c5ab-90b7-4ac9-9ce3-240092eb9f2f",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "c5d39895-9a50-4f77-b34a-6aac0e1ffc90"
        },
        "item": {
          "id": "db96267e-fa6e-4107-8854-3b45aa901846",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "33ece31f-121f-426e-a449-bf76589261fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b5ad53f-f730-4332-87b0-892536ba586a",
        "cursor": {
          "ref": "0cd27fe1-248a-479a-938a-1e6375195097",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "5c14ad6e-2aba-4ec8-9b8e-6f1200554d41"
        },
        "item": {
          "id": "8b5ad53f-f730-4332-87b0-892536ba586a",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "6b771a43-71a2-4269-a978-331f6c07b6ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88c131fc-14fc-46ab-92c2-12ac81432cb1",
        "cursor": {
          "ref": "5fae513d-4292-487c-9606-ed9e8478f8c5",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "737f6153-88ad-4f0f-819e-830431fec114"
        },
        "item": {
          "id": "88c131fc-14fc-46ab-92c2-12ac81432cb1",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "fdac6de1-14e7-4074-9eaf-de570165739c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96f77dd0-9590-4823-9672-019062c5f076",
        "cursor": {
          "ref": "fbf4aa08-c962-459f-8a81-0c257746b5c1",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "293e2edd-a4db-4743-a75b-0ec357a7ebf7"
        },
        "item": {
          "id": "96f77dd0-9590-4823-9672-019062c5f076",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "60642320-d0f8-4b08-824c-6a702177d4be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b266287-353a-4ec8-ae94-67b619c9204e",
        "cursor": {
          "ref": "bcb52d0f-aa68-4305-8e4e-7e44d18a557b",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "c709bfbf-4177-4adb-8160-2246240a58af"
        },
        "item": {
          "id": "5b266287-353a-4ec8-ae94-67b619c9204e",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "fc0faccf-a4a4-4e64-ac6a-a20f225f3a0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bcb1db1-c6b9-4baf-90b5-8449258d2213",
        "cursor": {
          "ref": "1b11c3b3-bb6b-4c6c-a448-b3a56a171210",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "9a74139a-f6bb-47f5-a760-c5ba91054db5"
        },
        "item": {
          "id": "0bcb1db1-c6b9-4baf-90b5-8449258d2213",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "c53f6879-2d51-4438-8b31-678e10c3490c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "557f0986-e443-4fc0-8774-5c53326f607a",
        "cursor": {
          "ref": "443a6283-bba4-4519-8c42-250f39e16d22",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "bc230c9a-4ce2-441d-affc-278b2fcf864f"
        },
        "item": {
          "id": "557f0986-e443-4fc0-8774-5c53326f607a",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "5b5b89cd-e6cc-4124-a2df-c4ad6986a82a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a10f679-f754-4d05-ac49-8d9a45b73275",
        "cursor": {
          "ref": "c0027af7-792e-44c1-93ec-e958a7355b98",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "6e35b7e2-bf6f-420b-ae9d-4ccc06c704d8"
        },
        "item": {
          "id": "2a10f679-f754-4d05-ac49-8d9a45b73275",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "14429f51-c5d1-4d0a-8175-efee02de414b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b1966c2-3790-4d2d-b0a2-780b555f3c94",
        "cursor": {
          "ref": "596b7d20-5efe-4096-a52d-309e3e058547",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "37de05c8-5fd1-403a-a0f5-59ca69158858"
        },
        "item": {
          "id": "4b1966c2-3790-4d2d-b0a2-780b555f3c94",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "7c56f7b3-9698-4691-863a-c2552eadcbf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cad965b-0438-4800-8890-bce4abef16e3",
        "cursor": {
          "ref": "cb83a9f4-cc92-4cb7-a1b2-e2d22fc63184",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "f712779f-622a-47ba-ab07-ba87d62d5d5e"
        },
        "item": {
          "id": "0cad965b-0438-4800-8890-bce4abef16e3",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "22acaa32-e89e-4303-96d8-35c65f8e38c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6829483b-fcd0-4b14-965a-70b771f0dcc0",
        "cursor": {
          "ref": "c54b2804-fd80-4e02-9f20-b0a4e680819d",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "0ddc62ba-f4e7-4e5e-9e25-f976d0089951"
        },
        "item": {
          "id": "6829483b-fcd0-4b14-965a-70b771f0dcc0",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "08f6f6c5-83bf-4414-8418-a0de88e76536",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "509b4f25-9d16-41b2-ab69-3662c1a2b64b",
        "cursor": {
          "ref": "b583caa6-2005-4fa3-805a-4a2143362b3c",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "63b46b0c-6c22-479f-ad8b-af7a4019d4d1"
        },
        "item": {
          "id": "509b4f25-9d16-41b2-ab69-3662c1a2b64b",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "9d6a5762-d010-4811-81c1-19991ee62b99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b349dd74-a9bb-4fc4-9e8f-2dd861cd1427",
        "cursor": {
          "ref": "187d2c17-4d5a-4e18-932e-a796580d0dc6",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "8f95610b-de29-4943-b9d1-3eeab5b287da"
        },
        "item": {
          "id": "b349dd74-a9bb-4fc4-9e8f-2dd861cd1427",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "7b2e96cc-6b10-488b-b043-3397324f8cc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b589f121-41d8-47db-822d-7d742df94592",
        "cursor": {
          "ref": "55d2dc98-0118-4e1b-9cc1-32d92df90b9d",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "c5e91469-ebc7-45d8-8df6-d41437a4a89d"
        },
        "item": {
          "id": "b589f121-41d8-47db-822d-7d742df94592",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "1e181ba5-2f18-41e3-b733-b3af841a3d38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "527b7a3f-d550-4170-8f78-763dc8feb595",
        "cursor": {
          "ref": "05f26a21-1a8e-4b52-855c-4e950e583240",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "a316a79c-410f-4e97-8206-82d110211dc0"
        },
        "item": {
          "id": "527b7a3f-d550-4170-8f78-763dc8feb595",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "eba5f9a3-c362-4ef1-ad43-8b2ec7010af3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23d8b94c-3962-45c8-a9f0-16015d15553f",
        "cursor": {
          "ref": "7d7f130b-ee2c-4042-a8a8-de98e02991d7",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "6422a8be-df6f-488b-9aaa-bea0ca33e025"
        },
        "item": {
          "id": "23d8b94c-3962-45c8-a9f0-16015d15553f",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "8df8a8c2-8cc1-42c7-a923-c1259810fef3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "993ff1af-2fad-4144-82e9-652e559da498",
        "cursor": {
          "ref": "a0c54060-5554-4369-8166-bbe2fe9daf28",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "609e1f18-4ff8-4a91-865c-753a8c1acfe0"
        },
        "item": {
          "id": "993ff1af-2fad-4144-82e9-652e559da498",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "22e97b57-3e8f-458d-b19a-fed7954ef6a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3843d788-869b-4a9e-89cb-4562a6d58abc",
        "cursor": {
          "ref": "0c7ae6bb-c6a0-41b1-8568-a08480db35ef",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "7b4f41fa-73c0-4b4e-b898-2c744f3542d9"
        },
        "item": {
          "id": "3843d788-869b-4a9e-89cb-4562a6d58abc",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "496b61d7-33d6-4433-be10-bf2d6619ac61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "785cbfa9-d331-4b76-8758-64a5897070a1",
        "cursor": {
          "ref": "eacd0e10-3bfa-48db-b131-15a9ee615854",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "163112b8-e96b-4489-a99f-c6ed70ca3c1a"
        },
        "item": {
          "id": "785cbfa9-d331-4b76-8758-64a5897070a1",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "e9883360-f116-4943-bcf6-0db453b588fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90391583-5056-46bd-b7cb-084bd371c164",
        "cursor": {
          "ref": "3e0eb02a-5399-4a3a-9425-487db1e0db7b",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "07f2a840-6c0a-4abd-abdf-87f964467892"
        },
        "item": {
          "id": "90391583-5056-46bd-b7cb-084bd371c164",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "15fa960e-b0e7-4986-8c97-7135f24bccd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71da2ffc-0162-4018-8532-6a28825a1188",
        "cursor": {
          "ref": "108c0222-58d3-4a8d-a1c2-26c4f31e6c0f",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "06dff915-bf78-444a-bb15-b613bd392c81"
        },
        "item": {
          "id": "71da2ffc-0162-4018-8532-6a28825a1188",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "2796f283-5386-47c2-901a-5564c22f9838",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51e49e8f-7ede-4398-94e3-31b94f322ed3",
        "cursor": {
          "ref": "dd5febef-9601-4b67-b278-510917491cdc",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "6e1f6ce1-edce-4728-a08a-21bdbb9a89b1"
        },
        "item": {
          "id": "51e49e8f-7ede-4398-94e3-31b94f322ed3",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "7b87348e-f594-4df5-8f30-9d35e965bf34",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dbeda5b-a8eb-4b47-ac7c-53c6560d3f02",
        "cursor": {
          "ref": "92f4dc2c-a11c-4862-aed3-be703dcc8f8a",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "6b4fe6ed-cc44-4ed2-82e7-3d4962fa4afb"
        },
        "item": {
          "id": "1dbeda5b-a8eb-4b47-ac7c-53c6560d3f02",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "72685e24-0066-48a3-817e-1cfaa5a82648",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e0c94bf-4c1e-4472-9295-50a2b33ec94c",
        "cursor": {
          "ref": "b2faadb8-fbd2-4213-afed-5065cf6405b6",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "2c0a0498-7eff-4132-9249-6fb30331c4be"
        },
        "item": {
          "id": "0e0c94bf-4c1e-4472-9295-50a2b33ec94c",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "3fc67002-6870-48f9-94bc-3ccf33219452",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6d30052-1d3d-4f8f-8f79-75769571d3e5",
        "cursor": {
          "ref": "5fcf3751-105c-4524-a5aa-2b2936617358",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "b8ae7640-057b-40e5-b01d-2df0083d2acd"
        },
        "item": {
          "id": "a6d30052-1d3d-4f8f-8f79-75769571d3e5",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "8b95349a-53ea-41cf-b27f-390aa9bb5c0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a523e942-730b-40ca-92f0-744085c70507",
        "cursor": {
          "ref": "6c326314-ec4c-456b-8b6d-7bcb7411aacf",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "9ed80a99-73e7-4de9-bb0f-b9a0eea3f1ec"
        },
        "item": {
          "id": "a523e942-730b-40ca-92f0-744085c70507",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "b3df5338-4198-4abb-8da2-fa43ad61143f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56d4e081-0352-438b-97a6-4799ef052b14",
        "cursor": {
          "ref": "fc6e3fc2-62f7-403c-a4a9-38a1869fa0fd",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "7cb48a9d-31f4-45ab-8476-3fa89c58403c"
        },
        "item": {
          "id": "56d4e081-0352-438b-97a6-4799ef052b14",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "7905db42-8c2c-4ded-a189-4f6392dcefb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1909713-17ab-4161-8604-aab127984a24",
        "cursor": {
          "ref": "f583615d-4626-4511-9b90-e527abe57b9f",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "6fe9d11e-0cae-44d2-a9b5-551d06ec5469"
        },
        "item": {
          "id": "f1909713-17ab-4161-8604-aab127984a24",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "8c13d45e-cc3f-4404-a201-047eed289e6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b051922-ec93-4a8c-9297-b96a701d4937",
        "cursor": {
          "ref": "5512f45e-91e0-490e-bdc0-a9ab2009a818",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "f3c633bd-a911-4c24-b7cb-03b5ba091050"
        },
        "item": {
          "id": "7b051922-ec93-4a8c-9297-b96a701d4937",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "ccc1c6a8-e8d6-47e1-99fa-c304f08c2044",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce27bf3f-45aa-4231-a0ce-10a6ba38af9e",
        "cursor": {
          "ref": "5c042337-6ba8-4d5d-8db4-48266fac94f8",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "49b3c411-ed84-4640-831b-f6c668b63f2e"
        },
        "item": {
          "id": "ce27bf3f-45aa-4231-a0ce-10a6ba38af9e",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "eb090c8f-4715-4d32-9c41-54906941baeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85bfe744-fb2b-48d2-8c55-d3cfd051a38d",
        "cursor": {
          "ref": "dd785cb2-5b37-49af-9b68-d089e8984a4b",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "c504a1fc-b60a-4e4e-a0e9-72bacd99b76c"
        },
        "item": {
          "id": "85bfe744-fb2b-48d2-8c55-d3cfd051a38d",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "ea4e9c5c-b06f-4c79-bd15-430d729fd22d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e403703-a703-4934-a4af-cad8f95766ae",
        "cursor": {
          "ref": "25092b15-795d-4928-91ab-95eaf2d73971",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "d0ec0dd3-c68d-44c9-9a4e-1b23b087f255"
        },
        "item": {
          "id": "1e403703-a703-4934-a4af-cad8f95766ae",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "c5df5806-1990-4b18-8c01-e6c707b5ed29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "954b9d24-c145-41f1-aca6-2f3622cafe2f",
        "cursor": {
          "ref": "cdc35f85-40a0-4ab2-ad31-d12507401a52",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "769d70ac-ac00-4dbf-a8a9-fe03de5f6c95"
        },
        "item": {
          "id": "954b9d24-c145-41f1-aca6-2f3622cafe2f",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "54a44ed4-107c-4d94-9bc5-14ea42d47e53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb0e324b-1547-4191-8b44-e42c13f2cf5f",
        "cursor": {
          "ref": "ec5390f4-6cca-4b9c-b3bb-a3080ec4707f",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "9b6c745a-b062-4525-9352-0c88a824fade"
        },
        "item": {
          "id": "fb0e324b-1547-4191-8b44-e42c13f2cf5f",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "d577700f-f2a3-4e60-9c2f-f01726dd4e3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1664ca24-5eb0-4ef7-87ea-914bd52c9c08",
        "cursor": {
          "ref": "3bab80b5-ceec-472b-a392-4bd2e221dff1",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "482a20cd-a85c-489f-9e60-c6ebba72cd07"
        },
        "item": {
          "id": "1664ca24-5eb0-4ef7-87ea-914bd52c9c08",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "edf849f5-4c36-4229-9857-04130d34d69f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0afb597e-0782-4d46-83ae-2c86b3ee8786",
        "cursor": {
          "ref": "adb7e042-f9e8-4f6d-a5d5-e8b17ddd56f4",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "29c9444c-7e9a-4576-8e94-5879af313d3e"
        },
        "item": {
          "id": "0afb597e-0782-4d46-83ae-2c86b3ee8786",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "8532eee7-2cec-40bb-ac41-0bd1ab728b61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7989355-b7b4-489c-9705-53b4706ed12f",
        "cursor": {
          "ref": "6039a2a3-53bc-4d6e-9f31-329940df3e2f",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "eacabd45-ae94-4e99-9696-8e58c1aebc80"
        },
        "item": {
          "id": "a7989355-b7b4-489c-9705-53b4706ed12f",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "e293b796-01b9-4e06-a980-5a749a536e37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d095705f-a191-4edb-bb6a-f5f4f839076f",
        "cursor": {
          "ref": "b40974fd-e7b5-469e-a80c-4ee80f861cc1",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "a8b15704-aee9-4af5-a3cb-5cd83e274db8"
        },
        "item": {
          "id": "d095705f-a191-4edb-bb6a-f5f4f839076f",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "230853b6-9b39-405c-a952-26fe9f359f3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f938f76-c4a1-4af8-86e5-21102ddf9756",
        "cursor": {
          "ref": "e77b674b-b0d4-4b14-a2c3-2a082569ae67",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "2a2121e1-fd9a-458a-9f70-6c73d1c7bbf7"
        },
        "item": {
          "id": "0f938f76-c4a1-4af8-86e5-21102ddf9756",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "1a47c5f9-ead9-44db-9e95-d01167c0f7e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af941cbc-fd42-4a96-a796-a61382c66ece",
        "cursor": {
          "ref": "3b4d7c85-d8c3-41ae-ad46-4019de306250",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "207102af-6ca8-47ed-b35a-201168af0239"
        },
        "item": {
          "id": "af941cbc-fd42-4a96-a796-a61382c66ece",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "a1562232-aedc-4ee6-b673-c87d8bb0a89f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "775581a4-c362-4ce8-8e6a-16e8b61171bc",
        "cursor": {
          "ref": "55f6aff7-c62f-4cde-a523-822a53b9fe3a",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "1cabef59-6ed2-4334-921b-afe387591fd3"
        },
        "item": {
          "id": "775581a4-c362-4ce8-8e6a-16e8b61171bc",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "12d3b88e-d925-4873-800e-701e07215851",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdbb349a-4de8-4a8b-8a8d-b347937fa49b",
        "cursor": {
          "ref": "f19d05bf-84a6-4ac8-80fb-eb25269da54d",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "f9784a56-49e1-4779-a6bc-c759a02e72aa"
        },
        "item": {
          "id": "fdbb349a-4de8-4a8b-8a8d-b347937fa49b",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "8ec24834-88fd-4035-be34-596ecb7422b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8382860-e54e-479c-aefe-27cc94a278f3",
        "cursor": {
          "ref": "220c1c11-9bee-4467-8526-9d5873d2c4be",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "cfabee84-d279-4e76-9f34-2d592a9fadce"
        },
        "item": {
          "id": "c8382860-e54e-479c-aefe-27cc94a278f3",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "4e73f6a6-4c9e-47a9-acff-c4e0fcd8293b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82130d14-1e5d-4780-bff0-9874752fdab6",
        "cursor": {
          "ref": "6bc3d8a3-7ffe-41c9-8b69-21d6c1a45d7c",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "3a2d1a8d-480a-4427-83a3-bed3bb9db466"
        },
        "item": {
          "id": "82130d14-1e5d-4780-bff0-9874752fdab6",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "73470274-f3a2-4904-8aaa-cba3a0d3aa5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c69ae6eb-5f01-420f-8f7a-4043d6f18850",
        "cursor": {
          "ref": "0ac0253b-cef7-4c0a-93e5-23c2f3b0fef8",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "f651c297-ea6f-4ee2-902b-934d46ef2f18"
        },
        "item": {
          "id": "c69ae6eb-5f01-420f-8f7a-4043d6f18850",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "1170bb34-8459-4770-8aa7-7f3ee4bb8393",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05f71fbe-2e81-4a15-89f4-e7fb91844ad1",
        "cursor": {
          "ref": "7d9bb88d-6acc-417e-bc4e-32ded386593a",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "25c9320b-74f5-4e00-8c32-29cca0e8c5c2"
        },
        "item": {
          "id": "05f71fbe-2e81-4a15-89f4-e7fb91844ad1",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "22738491-a03e-457f-9f94-f23ff7ca21b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2729bdb-6322-4f4e-bf2b-611a2589cbf5",
        "cursor": {
          "ref": "8b2690f2-d54f-4d6e-817a-972572f23428",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "493564a1-04a9-4203-9d31-060abdbe89af"
        },
        "item": {
          "id": "d2729bdb-6322-4f4e-bf2b-611a2589cbf5",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "cd163a33-6b62-450c-a3de-3c44e0e54c21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c129b98-d1a0-49cf-9969-fe292231ad94",
        "cursor": {
          "ref": "1c9b2346-5801-4125-9c04-048e10ab12f5",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "fa488ba8-7a06-4f9d-a882-48928e6cbedb"
        },
        "item": {
          "id": "0c129b98-d1a0-49cf-9969-fe292231ad94",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "675f5db3-7b06-456e-8642-bf366c7d4a16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "020a8e78-898f-4c0a-9b1e-e93dc91c6595",
        "cursor": {
          "ref": "5e0206aa-2767-4a3e-a8da-ff4c3bbc4de1",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "b5cd6102-c15f-43b9-b10d-c6d9dcf20a8b"
        },
        "item": {
          "id": "020a8e78-898f-4c0a-9b1e-e93dc91c6595",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "3960f595-dc16-4f38-a6cb-64f320b65278",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58476018-73b3-44ab-bd67-5ba47c6e587f",
        "cursor": {
          "ref": "92b98c72-6780-4c1c-a1fb-af2c7fe3708f",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "8c1f4ee9-8438-42a0-8aa6-4ab7d4bf5736"
        },
        "item": {
          "id": "58476018-73b3-44ab-bd67-5ba47c6e587f",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "3e956b0d-623d-454d-a3b2-09fdb62dbc6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e06663c8-b7e7-4f15-a943-6f51c27d3bc7",
        "cursor": {
          "ref": "2743cdf9-d271-41bc-bdbc-ec966150aced",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "b961d769-321d-451b-820c-92581ec7840d"
        },
        "item": {
          "id": "e06663c8-b7e7-4f15-a943-6f51c27d3bc7",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "63fbe2c2-b963-4b66-85ac-13bd731a74d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0745449d-098e-4301-99a5-f4d3efa03471",
        "cursor": {
          "ref": "4b79fdef-4d48-474c-97d1-0f8a6fa72c9d",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "5a8581c4-f8f3-431c-81b5-27ae243e3e0d"
        },
        "item": {
          "id": "0745449d-098e-4301-99a5-f4d3efa03471",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "9f480723-85df-4ae1-893d-9a24fd2874d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6514d535-b948-4974-b1eb-2a791dee7020",
        "cursor": {
          "ref": "64cab643-a9d6-4d52-a152-a6eba5373829",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "0e2fcf91-b80a-4204-a5d6-f7e5e4f03642"
        },
        "item": {
          "id": "6514d535-b948-4974-b1eb-2a791dee7020",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "d067d9cb-d0d2-461d-891e-344c99ddc320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93a0ddfd-656d-45a7-a947-115c4aecd173",
        "cursor": {
          "ref": "4af74b06-b4c8-4aaa-aaa8-c02197140737",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "87879980-b3fe-4afb-892c-7e419d3137e9"
        },
        "item": {
          "id": "93a0ddfd-656d-45a7-a947-115c4aecd173",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "88aede45-c457-46ce-bdcf-e3c1a0033f0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1ae324d-0e1a-4a70-bb69-dc804c0c0004",
        "cursor": {
          "ref": "4d2c8101-03d8-43d7-89fa-dcff02c0e64b",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "b74daa43-1c69-43a9-90e6-63318a5eef5f"
        },
        "item": {
          "id": "a1ae324d-0e1a-4a70-bb69-dc804c0c0004",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "0c4d3702-812b-46eb-8c9b-3c0e160cfdf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "619b5f81-3472-426e-bc3f-75afb30aae26",
        "cursor": {
          "ref": "469b232b-9625-491a-9062-74a9b92b031a",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "20c8ff72-bb8f-488a-817c-8034911c685a"
        },
        "item": {
          "id": "619b5f81-3472-426e-bc3f-75afb30aae26",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "929454e0-a4b2-4666-8afe-9ba3b79c6f69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ec1a7c1-2f08-4ae9-b593-8d2204ef4b70",
        "cursor": {
          "ref": "77c20828-6633-4053-95ee-5e89482dccf2",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "427e3519-ab4f-4fd3-9b3b-9ab52ca77d4b"
        },
        "item": {
          "id": "9ec1a7c1-2f08-4ae9-b593-8d2204ef4b70",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "e7af6187-6869-48af-9d52-b5e5ae7aeca3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "898a404b-f678-43f3-a3d9-e065925fa0ce",
        "cursor": {
          "ref": "8224f7fa-ec2e-4f62-b981-ca1b625aae60",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "5879ca8a-2980-4c34-8707-768853620a22"
        },
        "item": {
          "id": "898a404b-f678-43f3-a3d9-e065925fa0ce",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "47d9ad48-9d7b-4d30-b1a3-83ccbf974289",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33d63fc9-430b-496c-a54f-5033372915c1",
        "cursor": {
          "ref": "b3c74329-12c9-4509-8295-ca2179ec297a",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "5e9e53ac-ccac-4e7b-8d33-b4deb4689168"
        },
        "item": {
          "id": "33d63fc9-430b-496c-a54f-5033372915c1",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "3a545507-1e4d-4ace-9604-8d39369a6d98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e80a107-9330-4236-83bb-72d9e64743fc",
        "cursor": {
          "ref": "9f56c66c-3f04-4e5e-a8a0-6dad7baa5ac0",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "7118cca1-6951-4802-a470-436fa658db04"
        },
        "item": {
          "id": "0e80a107-9330-4236-83bb-72d9e64743fc",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "f3a4c95d-31d9-4535-b913-ccf14080015e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03a73bdc-9bcf-4f7f-b0fb-00ce385188df",
        "cursor": {
          "ref": "b7d837b7-f303-49b3-a8af-a7acffcabe0b",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "22aa957b-70ea-462b-b09b-5da735c231c9"
        },
        "item": {
          "id": "03a73bdc-9bcf-4f7f-b0fb-00ce385188df",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "cedf71a0-2b22-49ac-bdb8-d5d86d72062f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d8c87c7-b278-49a7-ad3e-8e0eae9d7eee",
        "cursor": {
          "ref": "36f9f0aa-ba8f-4766-9c61-e0b80d1d6737",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "76d3d65e-10b4-40cf-89a4-7c0067aa93c1"
        },
        "item": {
          "id": "6d8c87c7-b278-49a7-ad3e-8e0eae9d7eee",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "5240c25f-9e31-4cc1-8103-a13e6f57ff4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50d431d6-e065-4e0d-8225-af90bf205dc0",
        "cursor": {
          "ref": "bce0e5f7-7a7a-4e9f-8d1b-4240fdc8507b",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "2bc62e69-8eb4-4634-8e20-9a9a8867987a"
        },
        "item": {
          "id": "50d431d6-e065-4e0d-8225-af90bf205dc0",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "33018b82-584b-433b-aabd-0e3629ba2362",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f52f9485-1995-4907-85f5-d04243874e9d",
        "cursor": {
          "ref": "68fa7fc0-f371-4cbb-b9e4-0ffb6b0c6acc",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "d5b6e3dd-fb91-4445-a009-b0f67d34c611"
        },
        "item": {
          "id": "f52f9485-1995-4907-85f5-d04243874e9d",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "5200ec01-c3db-4353-b8da-232b8825d0af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "783453f2-8f86-44c1-af47-098bc87925c5",
        "cursor": {
          "ref": "d654dcf1-5ffd-4c30-876c-01c666d9c332",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "425d4ff9-03bd-476e-9dec-8aad0db56261"
        },
        "item": {
          "id": "783453f2-8f86-44c1-af47-098bc87925c5",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "8fc839f1-729f-4a02-97b4-b0b81659cbde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efd4397c-cb4c-4489-8dcc-ef70910b8f48",
        "cursor": {
          "ref": "81588d44-8f67-4c4b-bb49-49acabeb004e",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "73ff7bf3-d720-4b65-8b4a-f761e7251d5e"
        },
        "item": {
          "id": "efd4397c-cb4c-4489-8dcc-ef70910b8f48",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "cfeb7f01-5a15-48ea-9b2e-2d22f6fbf8d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45ee1157-55ed-4062-8096-b4edf79a2a9c",
        "cursor": {
          "ref": "be9b4b37-038f-44ef-85a8-b88b91267356",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "7b084f90-c05c-449c-b3b7-f0052415e3f4"
        },
        "item": {
          "id": "45ee1157-55ed-4062-8096-b4edf79a2a9c",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "d7e379cd-818e-4859-b9d3-cca7b94d88da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce6d220f-04bd-46a7-a1fe-b1a013af71cf",
        "cursor": {
          "ref": "2bbe47d7-1479-4eae-80c7-ca9454240e5c",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "224dbb03-9a2d-4f3f-a524-c33b093c7b0f"
        },
        "item": {
          "id": "ce6d220f-04bd-46a7-a1fe-b1a013af71cf",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "6dd67579-16ed-49a5-b863-ddfa04da1559",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f2fdbaf-a413-4083-b224-0b7aa8da013c",
        "cursor": {
          "ref": "901ac7a7-b9c6-4f35-b547-29956250f583",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "cdcfd50a-e7cc-44b4-87d9-d9bc5d61f427"
        },
        "item": {
          "id": "6f2fdbaf-a413-4083-b224-0b7aa8da013c",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "d70b1c1c-68b0-45a7-b25b-c6ecd504eb10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "288221ee-785e-46fb-b57f-ffba14b61d72",
        "cursor": {
          "ref": "f4cda240-d94c-40d3-9850-2a342b53446f",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "ce37b954-4abf-407e-862a-ba6d7b9ce16a"
        },
        "item": {
          "id": "288221ee-785e-46fb-b57f-ffba14b61d72",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "807b20c9-4297-4203-9b80-789888a84410",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d97bc84-5e63-414c-9565-569fd1cf34cf",
        "cursor": {
          "ref": "a51bcdab-47ab-4dc1-a35a-ebbabf2b48f1",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "6dea3207-c5d7-4bfa-ac27-b3feb0e41b4a"
        },
        "item": {
          "id": "6d97bc84-5e63-414c-9565-569fd1cf34cf",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "fc9e9367-8d8a-413e-9693-f873c8a93641",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37ca84e1-283c-4f24-ae4d-87a6a025f505",
        "cursor": {
          "ref": "fc5a9633-dec8-4697-be9a-1324b12c2049",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "e1a9f429-2cdc-49bb-89f9-179632c29a96"
        },
        "item": {
          "id": "37ca84e1-283c-4f24-ae4d-87a6a025f505",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "18e8abd1-d435-4ce1-9ce3-0908bf8387b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fa3b876-13c8-490e-b658-019e72a5a1e1",
        "cursor": {
          "ref": "6492bffe-d244-49a9-aa11-fba7f8a66312",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "1a92cf1d-3755-43b4-ad4b-1e5bfad27b53"
        },
        "item": {
          "id": "5fa3b876-13c8-490e-b658-019e72a5a1e1",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "ce6aeb6e-8e3a-4213-b969-904692738ab3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5db59445-6318-494b-ae8e-3446d737f589",
        "cursor": {
          "ref": "2d737527-6b86-42ca-a314-49d1474af4ee",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "53f78266-429d-4420-aaa9-e9d6d7806875"
        },
        "item": {
          "id": "5db59445-6318-494b-ae8e-3446d737f589",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "4c444a65-3497-4104-8b6b-7d1cbcc30992",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d42bf05-35a7-47c6-8716-eaa2f185b8a5",
        "cursor": {
          "ref": "6cfe5a7b-73a7-4aae-98a8-3aaab9ebc250",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "41ef5c2c-e66c-4033-937b-59dc767a4a27"
        },
        "item": {
          "id": "8d42bf05-35a7-47c6-8716-eaa2f185b8a5",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "67f896a7-61f6-4ce7-b5fa-59f4554dd04f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0442647-964f-4671-a938-b8fe35ca76fd",
        "cursor": {
          "ref": "57c92669-e7cf-4060-89f1-eab24a25d694",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "50836d4c-11f0-4dbf-aed3-d6a853ac4a43"
        },
        "item": {
          "id": "d0442647-964f-4671-a938-b8fe35ca76fd",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "ffd81ccc-bd21-4923-bd51-9e2ccb08e7d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4003f12d-9f66-40f6-ac6d-d58bd69ba26d",
        "cursor": {
          "ref": "13cd0c96-bb99-4264-9ae7-fbad41e24109",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "0dbd2a60-92f0-4402-ac38-d19921b9086c"
        },
        "item": {
          "id": "4003f12d-9f66-40f6-ac6d-d58bd69ba26d",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "59db0bb4-b305-41f0-8da0-b2b471b297c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07827cd3-2986-4d89-87ea-c409322668ca",
        "cursor": {
          "ref": "a11b4460-24ee-46ba-8c50-8f8a36af084e",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "9c7d4664-19b9-4294-accf-028ffdcec9ff"
        },
        "item": {
          "id": "07827cd3-2986-4d89-87ea-c409322668ca",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "eecc97e2-a744-4286-b97e-f3d85e68d4c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15418223-f5b3-4d01-8a2c-221c88c6a901",
        "cursor": {
          "ref": "bc2be09f-dbd1-495c-8c1c-8db5980a929d",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "ee2f1e38-14a5-4ec4-9eea-300a314550a0"
        },
        "item": {
          "id": "15418223-f5b3-4d01-8a2c-221c88c6a901",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "3a59b5f8-d2df-4f1f-b4fb-4a315f9b745f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b953eaae-fa3f-443d-b1bb-606d54cd4b49",
        "cursor": {
          "ref": "0be06800-6301-4f35-b07f-0178be604484",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "596f459e-c9c4-415f-a48b-489e37c5881a"
        },
        "item": {
          "id": "b953eaae-fa3f-443d-b1bb-606d54cd4b49",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "3aab42da-f92b-4728-a5d9-114aad53d630",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc19d592-10e5-42d3-b13c-4f4405c82c2b",
        "cursor": {
          "ref": "59f55636-3427-4828-82df-c16bb3791724",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "be9650e1-2d89-4967-bf40-d487aa586c8c"
        },
        "item": {
          "id": "fc19d592-10e5-42d3-b13c-4f4405c82c2b",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "fa5eadff-8b81-436a-9033-518bbb984ee2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8619e3f-723f-4aa3-a2f1-d42a2d1c610e",
        "cursor": {
          "ref": "65767a3e-7ef5-4853-b256-7b5519c5f878",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "b3b107cc-fffc-4872-87a6-583ef71755fa"
        },
        "item": {
          "id": "d8619e3f-723f-4aa3-a2f1-d42a2d1c610e",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "b8dee151-9767-4fde-818d-bf67e6557960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4408ac2-0bae-4762-9cc7-c9582db473a2",
        "cursor": {
          "ref": "2506d4e1-c5e8-44aa-b509-0ad4c3d7063b",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "e9ff5899-e005-4a87-9646-5ee870bec038"
        },
        "item": {
          "id": "b4408ac2-0bae-4762-9cc7-c9582db473a2",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "5a2c1805-fa89-45cf-9c27-00c14fc0607e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa161ff9-1ea7-448d-a3e4-6ab7b132da1a",
        "cursor": {
          "ref": "b3544611-c139-4a9f-8584-121ceae265a9",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "2c7d70d9-a11c-4d81-b0e3-2fc8d0bffeaf"
        },
        "item": {
          "id": "aa161ff9-1ea7-448d-a3e4-6ab7b132da1a",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "149fd9d4-c2d1-4691-8136-618891d6d6ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51fb0f5f-8385-413a-8903-c1322c7598d3",
        "cursor": {
          "ref": "fcb5f3f7-646e-49f2-8169-41479ed2bd5e",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "30ed4358-8464-42f4-942b-a1dffab4480c"
        },
        "item": {
          "id": "51fb0f5f-8385-413a-8903-c1322c7598d3",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "2058b715-8cb3-4cac-b87a-6670783bc556",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "398a6017-23ce-412b-88f9-a74d1b92a877",
        "cursor": {
          "ref": "e338e21a-c488-4caf-8227-91d36d844f83",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "37cb0dfd-914b-42b4-bd3c-10f13b3f166d"
        },
        "item": {
          "id": "398a6017-23ce-412b-88f9-a74d1b92a877",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "badb4948-0e2f-4b99-9b92-b67c4e2e5dd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d239ddc2-02d2-47a1-86d9-64dad33589bb",
        "cursor": {
          "ref": "69b3f1ef-cc23-408e-9344-26331638d148",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "b8f584ed-f480-4adc-b8c2-8454ce4db296"
        },
        "item": {
          "id": "d239ddc2-02d2-47a1-86d9-64dad33589bb",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "0b4863cc-980f-4cf5-ba53-0ca06bc9f1f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fd212a9-5fb6-478c-82e5-1dbe9a6f981b",
        "cursor": {
          "ref": "464f4d79-b6d3-48d2-8b08-e03752a12983",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "da9b40a2-5bac-44c1-acd4-8850feda8e16"
        },
        "item": {
          "id": "2fd212a9-5fb6-478c-82e5-1dbe9a6f981b",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "7a881be4-d16a-45b9-9e38-521ae7a16d93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e106bd4-827b-47e1-a123-e65ed06608b7",
        "cursor": {
          "ref": "829779bd-4d87-4a1e-bc3e-5afbb6c4eb46",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "51cd09a7-d9ea-4240-925d-12d6b703869f"
        },
        "item": {
          "id": "9e106bd4-827b-47e1-a123-e65ed06608b7",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "29421c92-7998-4717-92bd-1b6f9e7931f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90abf883-0889-40fa-a39a-1217db48d10a",
        "cursor": {
          "ref": "befdb77f-2f71-496e-8082-a23c50798cb6",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "d30b0bbb-952f-4de5-87d6-2865b925f1be"
        },
        "item": {
          "id": "90abf883-0889-40fa-a39a-1217db48d10a",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "0b4e6770-3080-4e21-9ec5-d11b75e25d54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f81633b7-2697-446e-a3c4-8dedb1bdced2",
        "cursor": {
          "ref": "3143b92f-6d37-4723-90dd-bf3014e414c8",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "94cc4232-acaf-40b6-8cb7-e199e27ab938"
        },
        "item": {
          "id": "f81633b7-2697-446e-a3c4-8dedb1bdced2",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "0abcc686-8981-4f01-89dd-834172d4a928",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "710bad9b-e069-47ab-b916-3a4305f90da5",
        "cursor": {
          "ref": "fffa76b2-6000-49a8-9b40-90c32540c5bc",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "6cb057f5-a391-469a-bbc4-1effc18cfc3e"
        },
        "item": {
          "id": "710bad9b-e069-47ab-b916-3a4305f90da5",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "015ea217-9f10-4222-a95a-0fd4f20f4673",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17e3c49e-341a-4588-b86d-7dc98a440fcf",
        "cursor": {
          "ref": "8d75e837-e081-4746-83e3-5bd22eb56e00",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "ef25f0cc-7551-4c76-9952-9640fcc0a81e"
        },
        "item": {
          "id": "17e3c49e-341a-4588-b86d-7dc98a440fcf",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "136acd59-feb4-4a6c-bc18-c54fc6f53fba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bffbb80-3c7a-4c6d-a83c-dead23bd7be1",
        "cursor": {
          "ref": "804fa67b-11ff-4207-8895-5e50fb6080f0",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "247b3da6-71f0-4547-9153-28734db9400a"
        },
        "item": {
          "id": "5bffbb80-3c7a-4c6d-a83c-dead23bd7be1",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "397bd8ce-de55-4a5c-b2ea-f5fccc2647d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de4852a6-f285-469f-af5d-650f48e95800",
        "cursor": {
          "ref": "a11be681-1a8a-4ced-bef6-75263629c7ce",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "a596714e-a589-4b8f-93a6-791d3792f5b2"
        },
        "item": {
          "id": "de4852a6-f285-469f-af5d-650f48e95800",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "e2f06fb1-82d7-408a-b7bc-f18329749553",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36718078-b9b5-4cfd-912f-8a3356216802",
        "cursor": {
          "ref": "6be90dd0-d5a0-4d36-9ed2-5abd9c0115c0",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "86a0c077-6355-455e-aa56-0a0218da75f2"
        },
        "item": {
          "id": "36718078-b9b5-4cfd-912f-8a3356216802",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "52181335-46ae-4963-a4ef-6020fbbc65d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce9ebc06-8778-43ad-b88d-5bf002eed9ad",
        "cursor": {
          "ref": "2b4b19e6-8be9-4039-9f1a-8e07e7afcd56",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "fd85a4f0-92ae-4c2b-b00e-862af5c575ec"
        },
        "item": {
          "id": "ce9ebc06-8778-43ad-b88d-5bf002eed9ad",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "351a4365-1a8e-4861-8fca-4a03d9ddc0fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95dc02a7-1053-4e8e-9ee3-7c036d11dffe",
        "cursor": {
          "ref": "afc266d0-93fb-47cf-8c40-c9a9d648cd22",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "0512021b-2fc3-4b85-bcb9-d4cc9b55e85d"
        },
        "item": {
          "id": "95dc02a7-1053-4e8e-9ee3-7c036d11dffe",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "2e4cada1-cfac-48f4-946d-9fd26bcecba2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b744c1d0-086a-48be-a6ba-3946fbbbf9bc",
        "cursor": {
          "ref": "f2532161-77ae-44f4-82c1-c3b5dd17214d",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "0e82de23-71f5-4209-8ff9-9fc867feab3b"
        },
        "item": {
          "id": "b744c1d0-086a-48be-a6ba-3946fbbbf9bc",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "de532f85-abbb-406b-8439-c3781f3821a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c3c9348-7a64-419f-b9b0-05875a9e3658",
        "cursor": {
          "ref": "72750656-c36b-4137-89c5-87a33d48daf7",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "0a5be68c-8f05-40e6-8bb4-18908e0c926e"
        },
        "item": {
          "id": "7c3c9348-7a64-419f-b9b0-05875a9e3658",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "bc62f098-bf2b-47c8-8ef0-612e197a28b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c51771f-ac3a-4878-b6e2-26d8936baece",
        "cursor": {
          "ref": "41d2a4f9-a2f1-455a-a8a8-99e68301094e",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "44ca2c51-f7a4-42d9-8d45-cf430a74f449"
        },
        "item": {
          "id": "9c51771f-ac3a-4878-b6e2-26d8936baece",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "5c9a6fc9-a092-4cf6-8020-4434753bf9fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3eab3bb-bf12-42b5-9770-995231d7aa24",
        "cursor": {
          "ref": "f01d24e2-e472-476a-9b72-da3ab444161d",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "fa059599-f374-49d5-bdfe-3bc9abbe7bae"
        },
        "item": {
          "id": "b3eab3bb-bf12-42b5-9770-995231d7aa24",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "298719ea-d615-4106-a8b0-24b46f6b952b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b768cdf-e8cd-47c9-b403-4f13f5196d63",
        "cursor": {
          "ref": "8ea55fed-bc6d-42b8-9b9f-37585d4e352a",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "7dd4cd0f-e8ef-4036-88d2-42d0fe46b032"
        },
        "item": {
          "id": "5b768cdf-e8cd-47c9-b403-4f13f5196d63",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "1f9fb5d4-df1f-467b-b310-43e9d2d994f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac2d226f-a6b2-419e-8deb-338ef822b219",
        "cursor": {
          "ref": "a3067984-5f19-432b-a375-32da0f4997f1",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "30203f19-bc6c-406e-a970-4a51cd7fc7a8"
        },
        "item": {
          "id": "ac2d226f-a6b2-419e-8deb-338ef822b219",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "1f4759eb-7224-48df-a910-fc8d03bbff7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6940c7dc-820a-4f10-b71c-2f2989527f6b",
        "cursor": {
          "ref": "088846e5-2360-4586-b687-a4d842ffdec7",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "ab63efe5-58dd-4f37-99b8-dcbf9f2c98da"
        },
        "item": {
          "id": "6940c7dc-820a-4f10-b71c-2f2989527f6b",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "3c41d716-0378-4a2c-9c46-b3759e4d4eba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8fc3097-7f61-48ee-9c2e-b521edc9ce6f",
        "cursor": {
          "ref": "8089c356-5028-4070-b622-c9fe19ddccba",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "909718bc-92bf-4ce0-b2ba-f0615b1db31a"
        },
        "item": {
          "id": "a8fc3097-7f61-48ee-9c2e-b521edc9ce6f",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "d6ca07b3-54a7-4bbf-99dd-3e4d503282f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d73b01ec-0bf3-4346-9ef3-8169351f96a2",
        "cursor": {
          "ref": "7357c487-2dcd-46ad-8629-0712a8fdbc1a",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "28faa290-7b63-42af-ba1e-0b2cfd6a81a6"
        },
        "item": {
          "id": "d73b01ec-0bf3-4346-9ef3-8169351f96a2",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "af91e826-8f36-4bc2-a9d3-cafd4a5bef9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7fbff08-1af7-4dec-8345-32147667ee92",
        "cursor": {
          "ref": "75082dc1-1b3a-474e-8d1b-9a63c9fcd784",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "88a5904a-d2fc-4522-b487-addf35164722"
        },
        "item": {
          "id": "d7fbff08-1af7-4dec-8345-32147667ee92",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "cad40b3f-a86f-4f30-ac5f-88776a7f8a7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3645ded8-c53d-4ffe-aa64-7a005e38f855",
        "cursor": {
          "ref": "f6e1045d-883b-4774-89dd-394f265cd6d1",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "210a603c-ad0d-444c-a756-12f303a72b86"
        },
        "item": {
          "id": "3645ded8-c53d-4ffe-aa64-7a005e38f855",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "5200b2db-8507-4628-adbd-dd82a8a587ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93e070e6-deec-4a93-8491-488be3d27603",
        "cursor": {
          "ref": "edfcff8d-0629-407f-b5b9-ccc843de8483",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "6255349b-29bb-405e-95b1-b28ba41939a4"
        },
        "item": {
          "id": "93e070e6-deec-4a93-8491-488be3d27603",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "d7e40230-4a18-4f02-815b-4a63f2e34b28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22cdc08d-90c7-4b1c-8799-c13175a6dd9d",
        "cursor": {
          "ref": "730097c8-1552-4b01-861a-fc7ce1eec5d8",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "68c0863c-8bb5-4873-b066-36f74d231719"
        },
        "item": {
          "id": "22cdc08d-90c7-4b1c-8799-c13175a6dd9d",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "94ac1ad4-973e-42e0-b1ce-41026b4a3fbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30f82756-b0a9-4930-9e3f-44bab17f5b9f",
        "cursor": {
          "ref": "27a7277a-11cb-411f-a3a8-f21d98491edc",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "077c660d-b7fa-4345-aaa6-b490a3979047"
        },
        "item": {
          "id": "30f82756-b0a9-4930-9e3f-44bab17f5b9f",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "14f8f934-ae04-4b35-9a63-8a38556c141e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1cb6b2f-7e06-47ce-874a-4a5ace70db1d",
        "cursor": {
          "ref": "d778a67b-52d9-45b8-bad5-49a6ee0866fc",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "7dfa2a3a-7ce9-440c-b125-63946a0d3f5b"
        },
        "item": {
          "id": "d1cb6b2f-7e06-47ce-874a-4a5ace70db1d",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "ed44a771-f6c8-4d1f-9670-779cb4434e77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76658d0e-2311-4981-9f9d-014ab5ac366d",
        "cursor": {
          "ref": "5a902e97-8e00-4b0e-b45b-0f43b67d8fc0",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "dfa10b43-3fb7-4e45-8ee8-d7e4c6b67449"
        },
        "item": {
          "id": "76658d0e-2311-4981-9f9d-014ab5ac366d",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "7bf5be93-780d-4276-a0ef-e136e53891ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ee9203f-af2f-48dd-ab1b-fed14b861bf6",
        "cursor": {
          "ref": "f3f02bb4-00d6-4e9b-8e6f-91383e5582be",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "3d46f713-efe0-4976-9757-d4f64637f7ea"
        },
        "item": {
          "id": "3ee9203f-af2f-48dd-ab1b-fed14b861bf6",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "164ed9b8-feb8-4bdd-9c1b-08a3b466374b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02c6ed77-684a-46b7-abbb-acae2a70d3e3",
        "cursor": {
          "ref": "2800c78f-0669-47bc-b02d-0168d9f958b8",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "f8e4c11d-a475-4cc9-bb55-a5e90505859b"
        },
        "item": {
          "id": "02c6ed77-684a-46b7-abbb-acae2a70d3e3",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "659ffea7-e5a9-44b8-9c6b-edd505b3733a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26369e58-e8ad-48f2-ae5a-6c28744a5188",
        "cursor": {
          "ref": "4eabaf8b-d454-4682-ab57-1874ecd755b3",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "e19b1df4-8ed1-4e3c-b255-835e9fb6f195"
        },
        "item": {
          "id": "26369e58-e8ad-48f2-ae5a-6c28744a5188",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "d3da970c-a82b-49da-b730-a9a68e5868f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7203cdb7-b0e7-419b-85e3-056575e9a3d4",
        "cursor": {
          "ref": "584be4ea-5e7e-4adf-8b79-43276e6b7325",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "4c0f62d4-9b38-4a86-a8b7-c928af8eab25"
        },
        "item": {
          "id": "7203cdb7-b0e7-419b-85e3-056575e9a3d4",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "49ceed02-49e4-4072-a482-fc5089aeae64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "297b7976-bc62-4810-bad8-5398d0dc5b36",
        "cursor": {
          "ref": "b9eb23f7-abcb-4bb3-9b6a-f3337edaf768",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "3f8ddeed-e17b-4af8-b37b-cd04a5029015"
        },
        "item": {
          "id": "297b7976-bc62-4810-bad8-5398d0dc5b36",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "6da14ba7-10e8-447c-ad86-cbb749961a01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e926042e-276a-4ebf-b658-5b827208155b",
        "cursor": {
          "ref": "c2eeee4e-d3af-482f-9bf0-65ead53f8266",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "6e3fc32c-3c54-4202-aab0-38978d44de50"
        },
        "item": {
          "id": "e926042e-276a-4ebf-b658-5b827208155b",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "b3aecde9-15de-430f-99d3-8eeaf3bcf3a8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "142fe7de-4b50-454b-ab0b-a6b1fdb17413",
        "cursor": {
          "ref": "c68148f4-291b-454a-a4b3-462615490d2d",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "f23f5a6c-f428-4e14-8d07-ba67ce0c6057"
        },
        "item": {
          "id": "142fe7de-4b50-454b-ab0b-a6b1fdb17413",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "5ce69938-a9ca-4029-822f-50c49026aeb0",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "a99bc4dd-aeee-47d3-9500-836732890519",
        "cursor": {
          "ref": "6646deea-ee65-404e-85e2-24d134d043f6",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "252937d2-4e93-404f-8479-9094e7411604"
        },
        "item": {
          "id": "a99bc4dd-aeee-47d3-9500-836732890519",
          "name": "credentials_verify"
        },
        "response": {
          "id": "97545767-9a5a-4239-9fb3-5786dcb22541",
          "status": "OK",
          "code": 200,
          "responseTime": 26,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "29732b69-8de3-412b-af67-229fbdb5593d",
        "cursor": {
          "ref": "0b82ba4a-eeb3-47d8-ab74-b9d5b2b38700",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "c134490f-d9c4-426d-b5a0-53c340e50148"
        },
        "item": {
          "id": "29732b69-8de3-412b-af67-229fbdb5593d",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "4940c66d-0313-4c65-8622-b56048551bf0",
          "status": "OK",
          "code": 200,
          "responseTime": 26,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "1613c68f-19fb-48d1-8f8a-efbe67d861eb",
        "cursor": {
          "ref": "8e670b1e-b6c3-47d6-b381-4f2f39d9e14f",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "40ff51d9-482f-4e98-a719-5f232243d7b1"
        },
        "item": {
          "id": "1613c68f-19fb-48d1-8f8a-efbe67d861eb",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "96945557-c821-4b62-8dd6-3754dc67ffc7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1613c68f-19fb-48d1-8f8a-efbe67d861eb",
        "cursor": {
          "ref": "8e670b1e-b6c3-47d6-b381-4f2f39d9e14f",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "40ff51d9-482f-4e98-a719-5f232243d7b1"
        },
        "item": {
          "id": "1613c68f-19fb-48d1-8f8a-efbe67d861eb",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "96945557-c821-4b62-8dd6-3754dc67ffc7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bd9574d-c526-4d4b-ae07-a83bb780b87f",
        "cursor": {
          "ref": "6276d68b-dff2-4031-9617-944a304031bc",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "60dc89bb-7000-46b1-888a-1f3830379687"
        },
        "item": {
          "id": "5bd9574d-c526-4d4b-ae07-a83bb780b87f",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "6c643dfb-809d-4357-b96d-01a01a7d55a5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07ac8d66-e04f-4457-9b82-d901539d84a8",
        "cursor": {
          "ref": "c021d254-5f2b-46e4-ac84-e62c4a1ad930",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "b49fbaa3-216b-4298-bb30-9da40bff93e2"
        },
        "item": {
          "id": "07ac8d66-e04f-4457-9b82-d901539d84a8",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "5ebab447-3cd9-4d98-a1ec-3def69a476b3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}