{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "793cb3c4-0748-4bd7-8297-d32d18d52b5f",
        "name": "Clear Cache",
        "item": [
          {
            "id": "0f247414-11b5-44af-9282-29c5b000d2be",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2858e17a-a6ee-4959-b435-389652f2765a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "76af956f-ab81-4cd7-b717-178bafdf9399"
                }
              }
            ]
          },
          {
            "id": "7c264978-e7da-4edf-bec6-44b8d571c122",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "35b6d64b-52f9-4d19-a5ab-320e7f66d3e4",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "1096f0f4-6291-4333-bb13-6a639b9ac1f2"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "45b38b9e-d556-4c0b-a073-5240e7daef5f",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "a07c8f22-5f8f-412d-bb06-744896846439",
            "name": "Positive Testing",
            "item": [
              {
                "id": "65904dbd-f87a-4c59-b06d-3906fb1f8dd8",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "137a746c-13e6-41f9-8038-1b73f29f98dc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d0264685-3c28-4395-8b77-6afb46662e9c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "47a3a1a0-87fd-404e-9fc0-f3869976565d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2b183638-eb55-4282-b43f-57bbc573d65a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c6d4f195-dde1-47ee-ad54-e949eb584843",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5789359b-2ef2-4520-8c09-36cc0d994898"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "eb514239-3751-4b2c-94fd-a220b522bc08",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "31ece10a-8ee8-41b1-b272-c69263c48bab"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f43bfc3b-2121-4d68-b697-538111875d1f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "00855ea5-7dda-46de-be24-c184e0817cc9"
            }
          }
        ]
      },
      {
        "id": "2be73bd7-073f-42f8-b4c3-cbfc2ea46b10",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "e0d431b3-1a25-4442-9706-6cec0d1ac181",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6cbe18b8-ecc1-4e8a-816e-36dd7b02f7f4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4335a8ad-8ea1-4ec0-bb89-556960c2db6a",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "900e36d4-cd45-4cc3-b3ed-df11b35913d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f61a882c-64d5-4618-b236-444a31055fa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "871862da-6f74-4dd3-a137-9bab4eeab976",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b77435d-9dc2-4f02-9944-97fb72ab41f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "21bac408-33bc-4f2e-89fc-fc3e65046285"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6f7d985-8c1b-4da5-86ec-f96299a6fdc8",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a661ed2f-1598-4602-8763-3c9f5cd72830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "45a45e43-513f-4658-8fd1-ae90a18ea932"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a744737f-2604-4497-8a06-5130feeb33fa",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1a8358f3-0762-4220-a544-ac4d48302b1f",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "662e9e14-e806-4592-ba3a-617684a49bc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "45571d9b-a10f-432d-9986-01308e028c78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e4c7a15-eb56-42e8-9fcc-e58285c7aea7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63ff7dd1-6120-4d20-b765-d3b447941411"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ac4d43f4-0044-418d-a95a-5e408876e8e5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b784ef9c-f04e-4ed1-a49e-bcd5e8fb3393",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1e48c0fd-1f5a-454e-8d86-0bac5ffe7666",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "75b61d4f-2405-4c49-a00f-1328aadddf2d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "245f4da2-43ac-46b0-9f1b-0dfc7f4d232e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "7cf29f07-ff54-4294-977a-92d3b202f5af"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "453aa0a9-1d6a-4921-ab4b-0b18b914de32",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8cca5e7b-d38e-45e1-9e0a-50bc8ffed206"
            }
          }
        ]
      },
      {
        "id": "63ec6bda-09c1-466f-afdd-b7896cc0f4e7",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "4d0f0861-7acd-4387-bb4d-c09760ff26ac",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9be9fd6f-4fdd-4cfc-8b4e-e05bfb80e4ee",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "596c752d-488c-49c9-9aea-e0d59675b12c",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bd0f54b-3d57-453b-ab03-d01da05a0a8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c28e037-695b-4236-8d1c-9c69fd91bfb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ee99b32-3358-47c4-9282-58e6842d5202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ae9b9560-42db-4fd9-ba5d-f0dba2e41aa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84a2fba1-f656-4547-ba9d-8b3c8c89416b",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aacc51fb-1814-4845-8738-5b3ec4619e60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92f021be-c8c5-4c43-81c0-63f3038a07ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8a99d4e-813d-4fbd-8872-af130aea0b15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cf46984a-b1d9-4ced-aef6-b01090a53534"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17191729-0e71-44df-8b84-f7b477048cfe",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63ef2fb5-33db-4220-b898-f26f4451dad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dd5e78f-b237-4ed6-8be2-8530d253739a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "780d1dde-82f2-4bf2-b596-966d8466a595",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a2dd8e39-e7a8-495e-8609-0166d0aa3893"
                        }
                      }
                    ]
                  },
                  {
                    "id": "927d9f27-d76c-4c78-855b-7eca56a0b582",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5903add-e92e-4c71-86ac-6e7f301a8e74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a17cf47-ccfa-48fc-8a0a-af6fbc32fe6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f44777b-b7c5-437e-b876-ea0f46c3c313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fc200205-2ab5-4710-8304-79cd9099a474"
                        }
                      }
                    ]
                  },
                  {
                    "id": "681d339b-339c-423e-a453-ac67975282c6",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b81ddcc-f1ae-4710-ac78-81364b51f0fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80162d72-7c53-49e3-8d6d-62ebd10d064e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbf88829-76ec-4991-95cc-be4c865f33b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "883c9f14-59bf-44ba-9d71-4e7fd30346dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79b70d9f-ed65-44e2-a64d-540b7cfede5d",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3092d06b-4f8b-43e3-894d-9d226624db3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58f08c5a-4585-4497-9d9b-a7d84729d420"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78d68ce2-6e1b-4101-98aa-74bc1becde7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "55c7d25e-7a00-4d34-b4b1-021a908bc3f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c552a7df-0293-4f83-9f2d-8f9cd7e1d9d3",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8239dc0e-4f99-4a42-acf2-0b6d7b23a92a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ec85c23-859b-42fb-8ac4-bdaddae725d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14877705-764b-4990-8800-621867ea41ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "adb1fd27-4e3d-435c-beb3-86c27458a155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fde19fa-0733-4a53-be10-6f53fa1a35af",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15a73978-0f1b-4558-b52f-ffeb61000b0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec4b8246-83e2-4fc1-8e36-cb53edbd8111"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36a51273-276a-435e-bae4-1cf1601b9a29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f235c2fc-a04b-4d25-bebe-680b3899e80c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "492447e6-f97b-4fc2-abd8-f5f507e4683a",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cb89542-eae5-4e13-b04e-67df9547475a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79241365-300a-492a-9fe8-d202f2804bcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c7a9c41-584c-4fed-975a-94cc6ce507d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3a458d12-2ffc-4bf9-a764-ca863a415c81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ed40537-f592-401e-b33a-8575554a743b",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f063b6c-3218-43da-9287-b54d24cbad64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91055fc6-d5d5-4aa7-b207-5c1ff9ca520f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee1be364-b62e-4360-8ed5-9e03ba1b91c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bb124959-98a5-495c-b1f3-c1820565cbcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f875654e-d4e7-424e-956a-19793c4df256",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5fc5bfc-3c5d-4491-875c-6f07a9772c4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92de7ebb-1161-4df1-b8eb-f8ded6d0a7f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d5571d6-16e3-4747-af90-28b71aaa40cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5fd0a40c-e0bf-429c-94d6-a919b706f043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f250bcf0-76d9-4b6c-9871-8dd48a68072d",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5df5a86-cdb2-47d9-a2bb-aae6ba567a75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1acbd50a-aebd-4201-9b20-349eabb9d302"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1db0e0ba-b78c-4cad-8830-e2dcb9167e7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4e8a7a71-edd9-4523-acb4-bf28657b661b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "911d92ed-2476-40f7-82d4-93229807b3be",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cce8f671-551a-48a7-9e5b-99d86bf5fb43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7a29307-668c-478b-960c-3e3cc15754b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "773a2b54-2d39-4e84-9a60-a8a130fb6d8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0fb4b83d-4d6a-4114-850f-c61de3aebf5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e708480b-6e45-47d4-a676-d890dbc2bf25",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fc59d0d-262b-4318-94c2-d32153c574e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b162c337-cc81-410c-ba1d-a0c1812bb16b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5280005-15fa-40c0-bbbf-59b3355e1923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2dda4699-e7ee-4afa-b789-66563fb842fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd1d70d2-ff46-42c2-b311-a065bffecb7c",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdf86e7c-9f22-439c-a185-ddbdd908753f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60f0eb01-d757-4339-b58d-30d0525b532e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5d3d1af-c6d8-4a8e-8522-cbc3700cf616",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7a76cfd1-c6ac-4413-84f7-7f1baf710d33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86620220-bcf9-4a19-8f08-0d7bcf5236ba",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5c9dac5-35b7-4bf4-a964-0e387097309d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f7ac863-47f0-4ea9-9546-20bd68fb568d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c585a4c2-8640-490e-96c5-8f8b3a899c33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4134ade2-310e-4211-bdc5-e60434f228cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dca86e77-5e79-4a7c-a9d1-682c5d7cf58f",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f26e8d06-81d4-491c-82f9-71aa53f35b28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26bdccc6-9aad-4223-a584-68e42f007546"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56680a3a-e870-44f7-840a-ffaa9b7fbe04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2c235695-0a31-419e-9592-142ee79a1994"
                        }
                      }
                    ]
                  },
                  {
                    "id": "800494ff-8033-4404-8a94-b933a2ba22d2",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59348ef8-fcf4-4c96-8d1c-cdc8ae777003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f721f65-ce8d-4ec8-ad87-0d6131233849"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6f33f42-6851-4760-9d7f-844cf5b32bac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ecf6ae6-e079-412b-8079-57eb9af4bfc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56fcb040-8da8-4b11-a923-9f4adafbc13b",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97e8e4ea-67c6-46cf-872b-10d58227557e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88acd379-b62e-4df9-ad27-2a27a124b7c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30717fab-8b2d-41dd-b8fc-ebd4d2f8c3d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "09d92512-461e-4b01-b962-83d76f04610f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4770b02-ae3c-4512-8def-e9c9245dd4b9",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66d54f50-c718-4367-855e-a3a2e965ee4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0556dd4a-a78e-4382-b1c0-7dcd8aa87d58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94c92a65-1139-457e-bc9d-e7e2a53752dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8adafc4-aad3-4fbe-b4ae-69dee41e8457"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16f7545c-b07d-48af-a4d2-40bc78510d49",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb385018-d2c6-4d44-9fc6-65219ef42866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de0c411b-64fc-418b-9466-6f20b498363d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b344bcd-9319-49bf-9d23-7831a50372cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a838f40a-57bf-4ddf-a52a-e275956ee0a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75cf863a-5d7b-4c87-9e79-60d75c4d765d",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50c1d616-33f2-4405-a7ec-6a8a279f4188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92f3a6c6-347b-4348-ae8c-1b03318bf394"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "635b094b-489c-4b5f-81ea-3708050d5456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "211e8b43-2992-4d63-822a-a3fcb822cd65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95364896-2ebe-43ae-98ef-2d523e103c67",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45961279-90a1-4ffc-88a3-1b3047d92a42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ca23174-47b4-49c8-83b1-f17e7deab35b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7362698-bb79-4c1c-85e3-f874685697d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4805c6b9-5cad-4e12-a90d-a6faee000cb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6fae3db-1b55-49ba-972d-6c99717e6101",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74f453c1-4858-4a8f-8ea1-73e8e7e0e3b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "748706f3-09ca-4ad3-aa23-c71908718209"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21c7974b-8151-47b7-87a3-064d830dfd9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5220d22-cf6e-45b2-8da6-7938dd7e5739"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40ab0f4b-dbf7-4ce3-90b9-7eb9f956c237",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9006f316-ee6e-4faf-8e20-a20b7468f551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "834e2390-c51a-442a-99cd-7cf6cbd7dd08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac546173-7564-4b9f-b867-232848d336e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b91ecbd-b16a-4f59-8778-1696e26b7378"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83e3c200-151a-4611-a8eb-725e0c20c5a4",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a06539c-0520-4115-8778-53570dc898a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "103e4869-8d72-4cf5-a69d-018f3a6a7fc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff925e6c-6eaa-4eb2-8735-f302359772ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d5d4aea-c032-4a38-8882-b99db0df8125"
                        }
                      }
                    ]
                  },
                  {
                    "id": "983e2e67-af3f-47cc-8f7d-77dedc105819",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "948fa47a-999e-40ab-994d-6e990a194b72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8775244-2883-4ea7-9391-de9287382a43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60a3e69d-67e1-417b-8957-8544b4a3499e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "31a6133d-e19e-4cd4-ad2f-ff794c670836"
                        }
                      }
                    ]
                  },
                  {
                    "id": "560fa6b3-ea26-403d-a6e3-b1249824ca59",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4853205-989c-4849-afba-4ba3f895b5b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edf1042c-e1e7-4baf-a8d0-048a10e32840"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3406aed-0d59-42cb-be53-337cdfc56720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b732a8c-e70e-4090-be9b-814f9722b127"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6d4ee07-9dd2-46ff-af79-bb8ba703e23d",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27c50a46-c83e-4f13-976f-a2e54344489d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec89b3c2-cdf3-40b6-8912-60827cfe30d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8f0063d-d663-4057-ae4b-d99c8b65424b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ba4bc30-e9aa-4eea-acea-f9e296e485e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a9aad8f-5118-412f-9579-3c133e7e33f1",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f967c89b-4c77-4b60-8e31-e9c8b05ad6e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b188fd1e-0926-46e3-a2f1-cce88fc5f2b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae16748a-a1aa-49db-90dd-845c1dd3dc3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "efd8b6af-d74a-4c0b-8763-72891f3d7973"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c04e5c6a-eb60-4f69-862a-01113c274b6d",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a102dbc-7aa6-4801-a8b7-8fa8d33e5197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9eef8f7b-6ffd-4984-9736-c2866c010932"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad6fc735-7966-4ef1-a5c6-48a90cf71611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fce24e8b-1dfe-49bf-9898-1bc6ac19b139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1bd2402-f4aa-45b4-8556-6ef2008b4519",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "347fa66d-9a5f-436c-a6ff-45c4ec12444d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6175cf51-c851-4ccc-a07a-066fa0f5afbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44df2074-6b82-4b95-856e-5363cf115f26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c85ed84-58fe-43e9-97c0-5b3792c60b9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f8ec577-ff15-4f01-ac7b-fe6eee83a8dc",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "913a1a63-fec5-4b2a-a34a-50dc4cd144be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96f6df32-7eaa-48f4-83fb-0fc2aac1aee0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4371038-9e3a-428c-b5bd-ae27238546e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "57271c4e-3e52-4f7c-924d-a42e5ba99d41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "761e1b14-3afb-49eb-8708-e2365c36e56f",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a0800b3-6ba4-4724-956b-616fb9a17709",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d59a5c0f-202f-4235-aaba-33971d6d4cd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07da4fe0-ceb8-48b1-9bc9-e09a125cf30d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d06c1f2b-9601-4014-b997-9f2ac4fea209"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43afcc38-18be-4da4-ae40-0b848f2110b6",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36a85219-439f-4d76-9eb2-81cff81c5514",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be54b746-209c-4ec4-95e6-9fd38b43019d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebfd95bd-5732-4633-be2d-7bc56d0531d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "3d1df19e-c86d-4bb1-9499-856953420d59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8cc8072-1a09-4372-bddb-b96857bed87a",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac39f1a9-e3b9-4344-a8f6-b15284afb312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dc8a9c78-6f1f-4d97-95f5-c3a28244dc0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5faf6b04-0736-4324-8764-7e159ec693c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2ec21bbf-54dd-440c-b47d-e2b8485627a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ffc7b9b-6f7d-4f8e-8010-5e3e36e8624f",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18901a2b-5dba-49e7-bad1-317f50fa6950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6d4c14f-abca-453e-903c-99f848defa2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "643fd904-4375-4a86-8ed0-da299fd3fe28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "70970247-d30d-43ae-9ffe-9de4d772ca4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bf75f6a-7f2f-4f21-b858-3be95d5a4eae",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87962b2d-c62f-43f2-b610-87f0a28d067e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a6fbffe-0fb3-456f-92ed-0c39c763a535"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85b0145f-490d-46b0-bb2d-68303b859718",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "94dc2f0e-eafe-4b84-a998-f9602c9a5b5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a399d77-b4d9-473a-8393-542739af25a8",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c5b32f4-e159-4bdb-b599-220eb8164ffe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87f8f720-63e0-4f45-ae0a-4892afdaeedb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3ef997d-c793-40b6-88e2-efc770db6493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ded20f04-870e-4662-991b-eb30f4091646"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c405e85b-533f-4208-9194-02e40f9376b2",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19743db2-29d7-45d3-805d-18e031a1fa3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a64d1d89-2cc4-4279-a7cd-81c98cfc15cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f893a0d-c05b-4d37-b7fb-ce09a7b8007d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6f9f6b1c-791d-48d8-ab89-53b45b79299a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ecb0946-2da9-4f3b-84d7-6b21a1afd237",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52e8252a-47a6-4008-abdf-33e878651376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36d286e3-a135-4bd6-9116-90a9bfb3d0de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffaff3cf-f5d8-4547-a371-87d76aa752c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5ac50382-ce96-48c1-a43a-177738872ce7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c84008ce-67b9-439f-b3ed-551c6aadd65f",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92a22b55-56f1-4b66-aec3-2ac64889df85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d828d414-baba-491b-a7e1-c9a248492277"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee015d77-2b2b-4647-9499-3680b84ec105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "0c5d4f1f-8627-4ff6-8565-2669a48cf2b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f35550db-570d-4c4e-bb16-f2781723c08f",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30e9bdd9-8694-4d2d-9e7a-ceb6c98ae8c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7363c132-fd73-415e-a80f-4a6a2f23f429"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94c6d26f-7bd4-41a2-b616-2cef604ec1c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ca77156c-05f2-4b39-a4a8-af205f0b0757"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b394883-55b1-4c9b-b8eb-7b4e93e461b6",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06461252-9370-4789-af0f-2f6ae1302fe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00b514e0-01a1-4f29-b225-7c5a954873a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3992eb69-b91a-4a36-911e-0d2521969e6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "7254dbd4-df97-43e4-849f-5e50afce0788"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72329c70-fae4-4271-9ebf-99e1ac4e877c",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52c6d69c-4a7a-4516-9144-7dc7e221538f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccfe51ba-af71-4e31-b26b-a92657c1dddf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8699bdbe-2384-43c9-ac24-f7804761fc3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "865caa2a-41a4-4036-98d4-1a9faa722018"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3f1975a-389e-4359-8724-9b93ed0de821",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a44d4194-a1c7-4aa1-9c43-2e0d0cff8e21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89521ef8-786e-48e7-b5ca-343090fc040d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "176d65b8-402e-4e48-a4bd-8fe3cb27d922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4c82f93-0a65-4b9f-91f3-d9e065ed796b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9a0c8d8-917e-4ae2-b3ba-fdb861ee5f62",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d66d51f-aca2-4b2b-9b87-8d1bdfae34af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95697ebc-6a3d-4319-84b7-0db999471dde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d34bc237-f46e-4597-adcd-2ec6d957ab3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a88e64d4-9e78-4cf5-8eda-d1434634bbee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd58cfb7-63d1-4063-a953-8bc01bb759fd",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eedff0ee-6061-4f67-83cf-c3f1071fcc60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "298eae7c-447e-4e78-a110-15ce7a84121d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "789f9132-cfff-409d-a869-88818a2f507a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a04f117-6942-4a5b-bce3-2d079eb78059"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d757513b-1599-4dbb-890d-24083bb788ea",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bf7faab-af38-4165-9594-0a4ffc741b84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f740a67-284d-4ed6-acc6-79a4823803ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33cafcee-ecae-44d6-a482-3634f995a4ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e2a23379-cde4-48f6-baeb-cb2544c90898"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2a6543a-31fb-4c55-a3f4-8b9ba32d7feb",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db8182bd-be42-44d5-829f-046c48d00dbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b4e4580-a33a-4bef-866f-995179e04959"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eda499a5-9b03-47b4-9671-42b267696eed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2a1d4a58-35f4-48e8-80b2-678f238ef0cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db21b027-f8c4-4e06-8b97-459a1ba4fdb9",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab9735a8-101e-44c6-ace4-3e9ba290f0ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05549eba-993e-4e0a-83d7-4ed265b9e013"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5343adba-afe3-4314-b287-eea33b4598a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "142f2572-6f64-4c1c-8667-d337380aadf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "325e54a5-5f4e-4017-af4b-3c524a61411d",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2d4ed45-f5c8-4a6b-8032-345a34a04bc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4002a6ca-de21-409d-8932-034d6c04d712"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1479c56-ba46-4c02-bfdf-342986f0b50a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ad16195-2d67-42d4-b584-dff43aee76fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20f40ec2-9f5a-4414-8266-c9d6e742e648",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "976445a9-e30d-401d-a026-73c3b5f435bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3fa71c4-77c5-4eb2-9db3-40eec0c8633e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79a98d72-112d-454f-9dcf-3e90253b17dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e13e063d-d5f4-418b-8e9f-b8472e926569"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f136e379-7af6-4048-88aa-d879fc2d2a67",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a3ced1c-d590-47b5-a4b5-8ae18b70ee88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8babe2e-5d76-4649-9276-a80c70cc4433"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46b2f9c7-2918-4d36-8581-3ed30e343340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a631545c-af5a-4a41-bac3-fa37ca9b2d3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcd92a28-6b6f-4da8-9a39-62b97f8bae68",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "055e94cd-e275-4686-80ee-7c45bc9b14cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96be89e6-5667-488d-9fca-b1c00b40b950"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eab72a7-9c39-484d-8f6d-d40ccffe53f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "95b07109-176f-445f-9b4d-2efc91de2ec5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "597026cb-9dea-4e9e-9b0f-df52f62ed2a3",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "134bef3f-9d59-4a77-a053-6d71f895a038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "393b6c3d-5ed5-4422-90eb-4cd612b2b2c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a155d2a-d9f8-4685-8477-f0428f0f0ef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "402470ca-23ec-45d0-b27b-97bf5aa13629"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c2c5616-cad1-4cb8-8cc4-623409212881",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d340854b-eb53-49e7-958c-17f067ddce02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5d09566-9a0f-4119-a5b8-ed5315c407ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fef8a06c-e86e-4384-beba-8b48ae5429d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4d4dccda-c44c-4b75-8927-36a679362520"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e2288b7-2358-4fb2-8a59-69275388dabd",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89f6e744-4e14-4682-8e3e-12948feef3fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "080b4e14-db4d-4b80-a937-d72fd84ba07e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1763120-f3b3-4ede-9678-1de2f1db0e14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4828511e-5718-4e0d-98bf-6cd37a0d4983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92ece2f0-64f0-4c04-9069-5eec8e9c2f3c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f33b39f-c746-4f96-816c-299d9f093fdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "256691a4-8cee-4dfb-a4a7-ffe54c75ee38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b58c154d-a54f-41e7-924c-e0a1727af7fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8ac947ec-d6b6-4c2a-8aab-9df97f45b6b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d9b5f25-a0c3-4ef2-81dd-a668a42489be",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0b0affc-a554-4c9f-827b-4e459ae6a0ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d462cfa3-88bd-47a7-b138-9ca4da24407d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ffcdc57-3f42-46c0-8b12-15d8744336b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b060723d-55bb-43ad-be28-ef369fd336ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86ebb9b2-d25e-4069-a865-3a9d5d8589f0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e1fd380-2246-4021-b1a2-fb1c1a9959e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d79a4fa8-48c5-49f4-9711-0aea81ecf863"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66c360b3-d812-42da-ad25-3f693b0b2cf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "32f8979a-5ec7-4235-bd98-024119c9f0d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed77de8d-c66a-48d7-aed7-f8571180f7eb",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70cec3ba-24a7-4b8f-bb67-5af13d05f87b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d665924c-01ee-4836-9e1e-5b3e13e5e4fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c768b7c7-8369-40dc-9881-d8e019c89d33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "c52b5ae1-e5e4-4c3d-a9d7-e8499a70c7d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e67e4475-fd2c-434f-9764-554b72975f6e",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2e60abc-1c6e-49d2-a57a-72515d5d2702",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a6fba1e-e7d0-4f83-8233-1a6d5db3248a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c7dc54d-efb4-4bcc-a21f-f654faeec134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "4efb479d-8c35-447e-a54d-0eae45a92e99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c8c200b-b256-4c58-b038-991b4b141188",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03861b1a-32ed-41f2-a604-73ce5bcd60c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9d3e760-12f7-421e-85af-ec0daab6f128"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a159730f-cebb-40e3-b0f4-4f57277687db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6ec4f5b-7094-42c6-8f83-049cef0cd4db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b16a194-3c81-4d5e-85f3-a25d67ce3872",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89cf818f-7a22-42b3-8be2-29617c13321b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "defe929d-c5e9-4517-82c3-ff2b165fa5b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86ce2316-8dae-410c-a143-753828bd8ad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa31c8be-58d0-4c5c-83d9-14ce17c668c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2828b2f-88d8-4f20-bfac-b7b0a0cdf930",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ea3d64b-ddc7-428d-bda9-82f3bbafe0bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6c282b2-b6a8-4831-bb65-fb96dedc4215"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "859bca4f-ffd8-473b-bf29-5a98fc91f393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "30f54b28-66e1-49fb-a2fb-cb3e4eb1c55c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c83779f5-397c-4f7b-a4c4-1fb9e2f44dcb",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4a12bb5-9977-4aab-845a-825da76b68a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d2a44bf-5071-4dcd-8ea8-13fc5d4caf69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e4d009d-c38b-4a81-8f09-55a0b8ee3c4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "179c6b60-10a9-414d-a417-0b933b19a6b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45575468-c5e7-47a7-ac39-6161c0e358eb",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f546e3dd-5307-402c-b9fb-37bfdbe6e9a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3478544e-0f0f-4728-9980-c4f476065bb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1b1bbc2-edb9-49f0-8d9d-6684ba64edc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4155f24-2197-4e06-a030-893e16fc0828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c08390d-e4ac-42bf-94a2-f92788abd578",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cbe513e-91a5-44fb-9761-77d74542b4da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3f68b78-07f5-446a-a687-bc62e4943d51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82b72533-ff08-4a9f-a5e4-98ab7ed5b172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4027d052-339f-47fc-afa7-eaa8d1978024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96da2a9c-1fea-43f6-bea9-9e675f241b33",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d512c01-e597-4923-8cde-6615d7258d4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2308e558-dd96-401d-a2a6-f7b0ff5b9a16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4af8babb-30f6-4614-aa15-8c19b1219dc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "329493fe-d01b-404a-a6d8-bad0d7e533a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9b398df-507e-4d71-bbf5-32748c9c4f13",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09935c9c-22b0-4da9-8bf8-190c7111df56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db3d3bcf-72ec-4ec3-8b71-e3e7bce6d08a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "777e89cd-a355-4566-a543-1754d90c3446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "70e9a417-9cd1-4fc1-8a7a-a42a13eb5482"
                        }
                      }
                    ]
                  },
                  {
                    "id": "521df796-9382-44f3-88f6-c45156b3e318",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ccdfeba-1e28-40f1-8f46-bec07a9e0494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07611707-69c5-43cd-b2e4-2ccacd521b7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a522fdb0-225e-488e-92a7-e16aefe6b6e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "56e59aba-5823-4261-b2cb-587144433f02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cbd9d48-33d2-41d7-aac7-d5eedb628ac0",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb10677e-fedc-4c46-97a5-ac64d5343950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fe6b8ab-c373-4738-bda6-52103629d9ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7542d74f-610f-4aac-8de1-51e28b66be8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d9818c54-182e-4c18-b701-e865b31f839b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33f553cf-7cfa-4644-ac6c-9b01a3a701ee",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f30a7ab-8d3c-4f62-bbd7-acb7e8062526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "167e4987-9455-461d-b193-422b2c873081"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4772dce8-efb7-4e74-b85b-867cda2b23c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b5c50384-31a3-4baf-92b7-dba71bcac6a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36e7887e-71db-47ec-9f9b-66aa6e308b09",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bfc0ebf-9a99-42cc-981b-dfda07777635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "407143e6-3fa3-410e-b04c-20e2aa1b2f54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52d24757-ad38-42b5-ae67-248471027578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2076b6b4-b1f4-40c3-8c11-c07407bdbc0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81e268aa-40f5-4c99-82a5-2377c61b97bd",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d67f39dc-790d-4295-a5f3-f5b184bb5723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5111295b-f739-4375-b580-d345cc5c8221"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "482f42c8-37ad-4b73-a60f-ca9daad8f41b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c28a2b9-5b8e-4f0f-a155-558391ff648f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "828bb427-9794-440c-93d8-ab0ae8fe2734",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57b424c2-df54-47b1-a02d-6b1e61369258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5358b6bb-9cfd-4230-a007-fb169d0db038"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c911c38f-5b99-4f15-9da3-c62445222d1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1125046-cecd-436e-b0a9-7aead50e3249"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2ef7670-7838-485c-af5b-78b6f9c905dc",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06d10d09-62e0-4efa-b7d0-3bf26430b085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88929fbf-fe5b-4447-b470-b9f3303cd801"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8442937a-d7cd-4837-8427-dbb0596ef7ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "26bad62b-1ce8-44c5-9e1b-835051decb41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "999ac7e7-662c-4e43-9efa-07722e74f476",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11805670-8cdf-40c1-8f67-bb40fe52b0b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36f7768b-9150-494c-98ed-e3f289d3e5e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0866b07a-c0e7-473e-b9df-00263d320c96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1bc38f21-215c-4cad-b490-6631894352ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49db3bf2-cc74-4f95-8761-1a6cd54641c3",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb6df009-4718-4ea9-ba2b-b221fd1ea5f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80b1baee-d71d-46df-b255-32d3775a5d47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd192ba8-49c9-466e-a1ea-507c5610a68b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "11f8dc07-b978-4356-82b2-ff0235690b61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f707adac-44af-4330-951b-780afa4f9858",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f782215f-6edd-4609-8483-97a7277f11ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9b5788e-d569-4b78-a804-de9c797d080c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f060c3f-124e-40db-b0fc-f55b10d2cbb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7db9dde7-90f9-4dbf-a2fd-2fd4614896bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b418bb17-decd-4a90-9d8e-157d74d930ad",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b9f6841-6a9e-44df-9b27-a845998ebed3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9935c9b9-e349-4232-b999-0e27362d248a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5a75a81-0dc5-47bd-968a-80397f41f4ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb00886f-9f25-40d7-806e-b73d6dd50901"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f65df870-318b-4602-8a5b-cdb9103b1566",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae597735-e0f7-4346-82d8-a913f698ae13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45d68afd-40f5-4b7d-a20c-1a0416969e1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26cf2a10-3461-4b36-afba-cb834287ce41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "82a96571-83d0-4815-9856-46ee696155fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7123660-41fc-43f8-8f39-f4edb3c13c72",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7083bae3-5292-4a5b-b838-d877e54f40b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6281262f-6e57-4e6c-9771-265ac576a1c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21165a89-ba5b-481c-8cc9-25299bc4f91a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "54ff95dc-11ee-4d0f-85f4-c39ce70985e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20e87222-66b8-45f5-9599-71a5977d7e1b",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abf72781-8142-43ab-961b-8d03a392b452",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02c63120-a02c-4bd2-bf08-8c01193e1554"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e802a953-be86-4ee9-bac9-19a677a90c87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8891e9fb-6d64-4f7a-a0ed-02e0a44e584f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "488f0833-75f1-49a9-8f70-c4d765b099ef",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81e477ed-9f18-434a-8d32-600518922957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15403bbd-f2b7-49da-81da-637a06ad8efc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "434373e7-eff1-4201-bef7-0b46a593d54f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "329470d3-7fe5-4095-87e3-5b83dce01aa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0de559a-43a5-475f-b2df-338885a8b66e",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1743a1a6-c696-4851-9dd7-28cc7953ada1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fac2bde4-819f-4fee-979a-70933a7913a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c77c89ed-b261-4549-a7d6-4160947c953a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "eb053471-d49a-4690-ac57-d2ab4b4c5d16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99a7ac92-bc28-4607-9629-d2cc84952790",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5f4a61e-372a-4558-b1ef-330b424587ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9524da3a-0e41-49aa-94c8-dd69b8b324c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f99a7865-145c-419c-bfc0-46d7cebb7d69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "048d7429-20e2-4a0e-9a43-b0d74838d26a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1a0f44b-7ddd-4902-90d9-bf480be6f7c8",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "747dbe46-1383-460c-a49c-c83925e5f588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d08d375a-9815-447f-8e18-0b020d82db14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bcc4839-38c5-447e-87a8-df7b28241002",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ec698217-e4e7-498a-93fa-026d34e17cd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f580518-285a-46cb-9cd6-280237bba3fb",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfc5c15f-5124-4473-aadb-72c6b3b60a93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4c93d8d-7e91-451c-bb48-03bb2e296a6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7975dc53-02bb-40a8-9d6a-47bfb1c4d213",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "60e15f3d-6240-49f9-9aea-cc0b23db59e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fa4219a-be92-4eac-9227-bc319eb2eb1b",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9980e3ce-526c-4581-9a58-17338b18b558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c93130a-88b3-4bac-ba48-6804514a9578"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14f319d2-63b1-4515-bf84-ae463464905a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d0d9e01e-d5ef-426e-b33b-8671b8612a27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6649b2a9-db6c-4c23-ab27-6faf99c0474f",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6d17313-bf51-4d24-a6a6-1ede7277d96c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "f9cb27fa-c344-4bb8-9b58-863e6eb367a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7332cbb6-33e8-43a8-8fdc-010dcb113fc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "97f2e2b1-1645-482f-8836-d1fbbcaaf5e0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "61515a7c-11cd-4382-bb18-0c2416e300cd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f944521d-0872-4f15-803b-17658b018746",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be4a0ad7-3c94-4cf0-a1cc-6b89f9b4cdcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1defb8ce-d682-446f-bdb9-d982d193dcf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ea6135a-0169-48e7-a5a5-45799ebdded8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "affa12b3-8141-41b4-81e1-16493afeeeeb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ae5ca6fb-a124-488f-8cd4-9833ea47a3dd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d7e56b4c-de70-470a-9d80-c748b8ebf4d5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3e3d0dec-5575-4b7c-aa61-923181e4aced",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6b7b254e-1ffa-496a-b6e2-3e315655ee84"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a51b89ba-d532-44fd-9cbd-3fb3b91be56a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c18c1cd6-827c-42e8-a1a3-078ad3ae632f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0117eae5-e55e-4de0-8cbc-42e8577df069",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "81966d80-d9e4-4042-9aae-92e5e4a33dde"
                }
              }
            ]
          },
          {
            "id": "af7e02bc-7f84-48e0-a21a-e17dd0b844da",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c695b154-7e5e-4bed-8f12-47f4f678c7f5",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "aafbd363-a0b3-4535-837b-4355511d09ce",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89938e7b-d2eb-4953-b9ec-df7f484ba42e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "96404e2c-8faa-45e8-b40f-8a8c8fd819ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "617f16ce-eb00-4918-989f-a2146ea26195",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e20a435-98f5-4066-b2ff-5c1829524f9b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ef1773e3-0861-4bee-a202-af741b9d1812",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "549f3bdd-23d8-4d6d-a8cf-81ea7fcd6097",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d77c4f7a-54d6-49dd-a48a-92e320a321d6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8aed9b31-651d-4952-b821-2190b94b6bf9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9873db6d-4af0-489e-962a-aca2f294bac4"
                    }
                  }
                ]
              },
              {
                "id": "592a5b49-6bfe-44e8-ad6f-13123a231c1d",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7be1086b-b5fc-4b95-8100-beafca3145fd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "99250067-2242-41c2-ad9d-572fe402e306"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b3519842-e89f-44ba-86f7-816d84bcb3f9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a81cd370-e618-492e-bee3-a1e5a47eae31"
                    }
                  }
                ]
              },
              {
                "id": "2d6fae52-c187-4f8c-9da3-b011510a043d",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a9c39260-c9de-4463-9bf0-c31c820a3217",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ecbcbe79-f4c4-4b33-b662-49e5cc64dd21"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "185832c4-bcf8-451e-afef-240ff78c1b87",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4d44e658-df0e-4254-965f-146530b3d93e"
                    }
                  }
                ]
              },
              {
                "id": "a1f5d1fd-648d-4cd8-abcb-663579f8c819",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fa0cd660-d448-4236-bda8-2293ecb4da79",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "022aad86-998d-4336-88f8-59633e28c3f7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b3bf774c-245d-429f-a66c-b1fa1c6f9127",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "cdfa24a0-6d5b-4279-ab4f-491856ead6a6"
                    }
                  }
                ]
              },
              {
                "id": "839e17bb-9f84-4f63-bb1d-e847184a0337",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4e5a69a8-d821-4192-b4a9-9f8cf67f4649",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6026542b-2f93-45bc-b55c-ac2581393287"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "70556ae5-512f-4a54-b0e3-e5c3fda4f6d9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "ade73d4b-c1f4-4da6-a83a-70a1d29b2787"
                    }
                  }
                ]
              },
              {
                "id": "e5923c6c-8849-4de1-b8c2-87dc690c0d57",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6eee7b34-53bd-43d3-8ad3-5ccf5f0b1b06",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9b525cd6-2d46-4354-beb2-f53a6ec16503"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1b87b79c-70f2-4aaa-b555-75ae6728c7ab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d8141afb-b748-4d03-b31d-66b0ce83a4cf"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ee2b72fd-2d6b-4fe2-838c-80da02d68b54",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "207845b9-1c52-453a-9aba-82f1cf9a022e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "daed5b5e-c6d4-4940-9379-2ef0c22f1373",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cf00d84d-c9c8-43a3-870e-1b838428151c"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2a7b7a9a-7337-4fac-808f-51904ef6343f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "37228cd6-e9be-4fb9-96f5-fee52798106a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "89ddfc37-ad4e-4273-874a-af1a5de3324a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "786cf012-0487-455f-a3ab-d347472deca4"
            }
          }
        ]
      },
      {
        "id": "c738a8bf-5a49-4db9-93fc-e074adb2bd5a",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "2158e5ab-007e-4842-b654-d30fc7cb03db",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3d8bedc3-91ee-44ae-b095-2c41d24cbe78",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "65f498a3-b2e2-4426-99a1-9b2b93f5786c",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3968d2ea-00c6-46ef-a26c-5a1b49a6de1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e5c492f-86b4-40d3-96e9-5ba0759acd90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b51e0f4d-5875-47f2-83aa-423fc31ef1d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "137e7f12-a0bc-4fbe-9070-cc60a08f97a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "467900ae-5893-4c7c-a4be-0ef72ac3a82d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bfebb4f-98cb-40f1-8a9a-e3c8c9c6481a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6efd35fd-4cda-4064-a5e3-8ebe1ee3e029"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d3ab42b-708c-4ed3-9843-58dfea574983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c605a8fc-4204-4e2a-b25d-ae47d7cffe99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67ea0169-43d2-452a-b641-7c4dafc3d606",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25df4a2c-9efb-4038-b046-c00ac1675973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "930994f9-f82b-4062-ba3d-98b7874c6876"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a44abd5-53be-4e71-bf78-71974735c6a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3cbb327b-4521-4a18-a5bc-caa5f05c0e09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bca3efe-7192-4258-8f81-8b06801b5fb5",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2e7f281-a448-4c64-8bc0-5fc32c04556f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "102ed123-4497-4c1c-b030-2e2592fb7e8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74dfe3aa-a471-43d8-8935-7566614bb146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f524ba05-7d5b-4597-a281-535603bbed05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e5a9b75-2098-4a72-abc5-091b48d2e2b3",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c69aa63a-7076-4ce1-b648-50f0e63557d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b173117-9601-4b48-8400-b4040d5be766"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07febb92-7c8e-4b40-b264-17c0d333310b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "25f2b8a2-a4c6-4aaf-9592-bf9f942c4357"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8973515e-5d86-45e3-b284-a8481d472177",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44b217b4-bdbe-4b89-b99d-22c2ab275acf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9493fe09-e92f-4063-a9e2-8945f69b1c12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfbe3c66-8e71-4307-9cad-05d6c0632711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9da056c6-88fd-402e-a02c-39e6d24b6986"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8943e2a3-0d70-4072-8c42-efc5df5fa947",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9591a88f-ec11-492a-b868-492bde83852b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56eca8ab-aed5-477d-9634-5b8e8c434354"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6d21403-9911-41bd-96d3-be58e03542b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "490bdf50-0c8d-41fa-961f-65b44f165e0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a3f425f-6a53-43d0-9059-503be90d5b48",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e1aa069-8881-4800-b0f5-34407e4f4b5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d8bd107-7d9d-45b7-8da3-95e7733022f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55487708-1d49-48a8-a8b8-a607d23bc8fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc2c66a0-6239-405d-a7ed-45eadea83760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03037fc5-2383-430c-bf62-057101c07fe7",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0eccccf-e170-4dbe-9976-81e18a63e1c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0defbb50-25aa-41b5-9d30-9f593c2c5b8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6533f41-710d-4988-b457-99aef58391aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f75dd9d-9210-489f-a669-92d6213fa817"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aff0bc0a-e13a-41c8-872a-88f7511085dc",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "796dbf25-069f-4747-a832-259e72914807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6577064-d5b1-4a4f-a538-751904c1ca34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "690e7603-fee7-447c-bd5e-46f3842e0150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "56b42121-56ee-4fdf-8e55-091cebb76406"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7da36898-6f34-428a-9ecd-97774ba6bbdc",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "489a8f38-aa36-4dca-b82f-41f645aa2597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35d09102-33b1-40c8-ab04-e2cfe95be019"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52fdb7ed-9896-42bc-ad64-a86e37b56077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "b8bfabb0-bd1b-49d9-861d-629ebb05a428"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cecfb5a5-f1f1-4c47-90b3-eb86233986a7",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "454d8904-fb22-4dff-9b8f-5caa13e59301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bd32316-101f-42d9-95e0-029babeabd01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5944ecbe-71ca-4ffc-9b07-4f6676a69e8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2fea29d5-d8c6-4018-b1b4-9700ea9fa062"
                        }
                      }
                    ]
                  },
                  {
                    "id": "999d490b-700f-48e5-b3a4-adad970d51c0",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "345d918b-1021-4a6e-96ac-1e4684510ac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b0bd081-c30b-47bb-b46c-ca104508d924"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41288277-aebd-4e96-a41e-d0ce7105ef4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2827f166-a62e-40e7-9303-2fbb436ca764"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79e2d978-a95c-4743-b4be-b8ced6beec02",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "859f06bc-6e61-450b-983f-55e31a101fce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6bb7c28-f83e-47c7-a210-8f37194e748f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0c6afeb-7e07-4e43-9e43-887d71f0147a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "396c1922-9351-4f46-af2c-33ffd63dca51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be3648de-53f3-458b-a9d6-ddc1e81fe55f",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c759b678-cbee-4761-8383-49a45a3bbcdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38a6cf49-acd7-4c93-bb9d-b95feff7d896"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3da2cb8-8f2e-40ca-839a-18312d59e624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "9deb98cb-a7df-4ad3-8007-625391765758"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7abb375-1355-443d-a624-83c3e76b0093",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18ac5110-2d25-4b21-8acc-bc9d4fc76021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79e5974b-2977-44aa-aac4-32caa26bca68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bd614b9-909a-4d03-9e0f-e0abb17f3aec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "344d3688-085c-425f-923d-6430ccc7447f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be6ca395-1bcb-423c-94ce-6eccb1109c92",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a29f218-c535-4aab-98cc-ceaae62bfa82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b0ebe55-402c-42a0-b5e6-17d3842d4410"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41bdc728-3f76-499c-a479-3d18597d6fcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "7de292fe-1fe0-46c5-b772-e8a02b9db134"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12b5224d-3e8d-4ce2-8db1-99cb41c24121",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b4c32d8-177c-4a15-b4b1-db7d37c2f7e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bbe5ed3-f542-41bc-904f-170f2c63085d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad55f7ab-2dc9-4614-a75a-b0bd0836eea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3705828-cf97-4fe3-a811-00f82b8e44ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aadf646-9e7b-43bb-b242-5055423060ac",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b8eeeab-b5e7-41a8-811b-3878394f3e3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf3fc25d-7ff7-498d-b753-89409e2025b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c605af2-4b7d-4f7f-a147-5ff2ca6dd732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b066466a-8c65-49e8-b834-010b8e6423c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32467cb9-1218-4d89-a33b-221bfcf4c5f6",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea481f8c-2bf4-4b58-9e88-8bc2d2103aee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b57712b2-c6a8-4009-ac92-7ef0417ecc12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e290f05c-85cd-4e94-befd-aa97f510278e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a39db8a-11be-43a8-bbd6-78fc554e5606"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a47495cf-f143-464b-a32c-712b73f5ed16",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f60623c9-2096-4c45-b731-80c9e492ea30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "181a5d8d-61d4-4055-a70c-8cc5d3639ee2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "854e16c4-5d72-4585-a8c1-4187975c0856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "33ab8d0c-1088-4e04-b191-f6463194dc91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd8fa843-a0e2-4f92-9218-cbf47d6783df",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "687c8529-a1d8-4f8d-93db-6ea2e54ad333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "832021e9-7ac8-4b41-9841-b7937a33617b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83d415db-302d-49db-b244-3d950cf281a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7299f4dd-747f-4426-beb8-057c0cf4b154"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5658e2dd-fbf1-49dd-b512-46059281e9d8",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7b3d765-0bfc-463a-bf9f-a8e8bed55a96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84ab56c3-f000-45e6-82d3-8da3c1e50b3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2819e96-9b7e-40af-b67e-1aa43dc84bff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c2307fa-0d9a-4fb6-ba55-49a5cb335e73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3ae269d-7503-4751-a8e6-3e0ab8a34541",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bda2f6c-5a46-454d-9115-ee2dcc98b851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19397a35-3185-429d-8984-badf00198020"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36fa55c7-aaac-4dd5-bdaa-2aed478ac56a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e6d443f-636f-4d78-800c-fc072ce6f3d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "599ebf29-1b10-4f04-89bc-85e2cfc55a3e",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a06a5f0-e122-499b-941d-0f98b5852d9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31320703-4450-4b42-9d1f-34f6c0b3af5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee11e75c-15d9-4ef1-ae9a-c0b9ddf51e7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "79b7917c-5804-4615-870b-b8efe16e6822"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fc64f3b-cfac-4e30-9d03-e3d5c5b55234",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b9b48f3-9965-4619-b9b2-569e0c9bee99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51b806ee-06c8-4a09-ad1a-4d95d651ef93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "325b0fff-5866-4f25-9c22-5ec83942e3fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "71fbb8f3-02ed-4703-a136-afa148464ffa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f701d1d6-931f-43c8-b39d-2432cab24810",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "274de71e-9e4d-4625-8518-5bb61ccdf8ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dd89f13-4532-40eb-a514-1ec3eaa2f9fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31dbf7d6-6736-4de7-be74-a992ac0b6db6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "53c63283-1081-421a-90ed-9198124d073c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08d675b7-3ab7-4f52-9eeb-e1f38109e43e",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a77f8eee-9421-46a9-aedb-e671366f2a5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aade8764-ea57-4cec-af1f-d782f03fc0ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e255bb73-76c0-4ac2-9081-1530c5f03619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "88cd5e9c-6f6a-4b2c-8f72-23a4c4ff1ad8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f73eb004-c3e0-4dfe-803c-1c39f97a0671",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c6de29b-7cb0-4dd7-8f24-8933c354cf46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "327a3619-731c-4157-bb99-86ceccc05915"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc5841a5-aa09-4e0f-9d94-28cfac06e123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5741a5b1-1ac9-4c6c-942f-96f7e52db7c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27c5432c-a3be-4070-be94-7c721fd28102",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01c1bb54-7dc3-418c-9307-5b0e59ec3f9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e588ed09-7eb2-4c10-8e81-339b0e711f32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1190c503-547a-4346-841a-22679085cd38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d1dc34a-0c8c-4def-b96d-fe168f4e014c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47845071-4232-405a-a81e-0e389f76dcd5",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f9abb43-6400-4e19-af41-fb0e456ddbce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e84dbe0a-79b8-46a7-bc64-009967f2e991"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce73f165-52ad-4652-9ac6-2ff905ad7407",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5af4341c-0fcf-41e9-b745-63ea09e57894"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86d6850e-104c-4fbe-a37d-07ffcebc5863",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "601df7fe-2d40-40b5-856b-dabb11717127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0d02489-fda3-4313-8709-fcf66800a34c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e796342e-5671-4b1b-a4bb-2eb64ff91722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "666b5ff8-0a78-4f0b-9cb2-0756f069352b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2763cc5-33aa-4fbd-9d9b-3574e0daf209",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa7ce6f3-f884-4f95-8f3a-caa31e5a3312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efcd90ec-eb29-4d84-8551-e127324fa22c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e69397b6-ea42-4d31-969b-998fee4abbbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9afeaba-1caf-4b0a-9a56-255183e469f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98dc4276-eb9b-4608-98ba-5af3e7ccb0ca",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc76eb62-1f4e-4dc9-98b5-1337c460ee0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8416ea06-66fc-41ad-aeb3-a6ef0dc2df15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d79331c-cef8-48f7-b005-552544995dfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0a0e7c4-bef0-464f-a559-8410ee63e345"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87ee8a9d-4c48-40e4-9be6-091f6a2baf2d",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f651a74-dcee-4cca-b51c-a628421a1e8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62a9d0d6-759d-4b7e-8465-dc0d90de65ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c86617f-39e9-4dc9-bab7-6f418e2f13d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec284864-0cf0-4195-8283-08bf79036b90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce6f325e-92e9-4b44-ad4c-5f8c6c505232",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "286423c6-2a7c-460e-9658-4b7e3fd1a803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f4f4437-c44d-45b0-852c-e667a1f08dfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "438bda5f-ffc7-462b-ade5-f392219cae9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "06ddb19d-6c01-4b1e-9f07-8e8b46ca7d42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffac48a6-f77c-4ae4-80ba-aed08fc49367",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9d13a7e-fbce-4910-9c3b-7e5f01241559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acdef166-00cd-497d-a133-cfae08231140"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74dc50a8-4919-474a-bc11-cb772a7d0a2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "acb4decd-77fd-4883-bd21-db4e44debaa8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "57b8f092-34bd-4d6e-93ff-e693c1d939c9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a6eec86c-2f85-45c3-b2ab-fe50cdb6d28a",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "387a2e30-c96e-44ed-a7c5-59abad00c0af",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ff28c2dd-664c-429b-ba04-a84e3f1296b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfd87b19-8753-4d97-89a9-5ae13e92c52a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9dd7c4bb-3e6d-4719-8d71-a835237d1715"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "56b32d35-cfe9-4cf7-bbaa-06981bf4191a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "97c16dae-b028-478a-b3ce-5b1f358086da"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c0ba2809-3fe9-4981-806f-dd8efb7a37f7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e1a00d5a-9464-45a4-97a7-e0481624a689"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a0ff7b39-c93a-4a1b-834d-3615a174e21c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "63fee38e-cd01-4553-8a90-22a6ca048818"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "80d7e285-bae4-4f87-afd0-356f9957ff2d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ca3fab98-3fb6-4a77-a34d-3afe3150f7fd"
            }
          }
        ]
      },
      {
        "id": "2a342675-edaf-4dfc-8318-95a76fd575df",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "eff4e2a0-9a01-4e79-8017-09cdb1831441",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4975fc91-d629-408b-8e3d-b6385ad0a351",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f405ad93-effb-4159-bad5-6a68878bf35c",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee3ad468-82c2-4a93-aa99-f5a36cd684a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c3bd146-5292-424d-9eac-15f4585c3e9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57a3a385-1d52-4689-9fa7-e4c7aaea6e32",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba4e1b37-8373-4f8b-a5b3-5de54493d700",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bad3fa5f-df7e-41cc-9d83-ab1f9808b6e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3f5ff6f-56f1-45dd-bd6e-e74c0dd9b132",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "150f783e-dd47-4a0f-a015-31643ded82da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b4fc408-32d9-4374-b5f6-fe5758bfb2db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57cece13-eb30-4992-ab6f-f37c0887f8dc",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "172ec726-6090-4bba-b884-03a5af842b47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6022f860-d529-4251-a32a-5814e6606b38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17decfa4-40be-4ebe-9e51-42492475632d",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "add92316-fec8-41f2-8d17-060ae9febd37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf3a017a-ffa8-42e4-9550-89fc6acdbe8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6b9f415-282d-4480-92e1-7594b200cbe9",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e526d42-e5b2-4e0c-a357-262423074db6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d889985-d337-434e-9d80-8637f2763d57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ea99ec5-788d-47f5-95bf-59e5ad1e934f",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9724dd6f-5249-46b2-bb5d-3a0009667b87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e4d3b81-9308-47c6-8c70-fac9e99ed934"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebe8c04f-8a28-4ac7-8c75-209ceff12e84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94e3eb10-4a67-4c6d-a506-fbb0bf3dcf10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6332d39b-04d8-4533-a8f7-603ceeda8eaa",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbcf0f3e-f816-4460-ba88-43a7152bda7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d249d5c7-ddad-4646-a6c1-ab5723baa730"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a04057fa-8181-4f45-8982-0ca0e40e4df4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efa14990-9111-43cb-a907-43c4ca8ad534"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e9d812a-a75a-4cda-8b16-d9a9602ef8f5",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee9fb273-d38e-4dd8-921a-ba8c6b2a7898",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5752739-3e66-482c-8eeb-56a52c19d759"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3ba8588-9054-4265-8c97-e07834bc96f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce8a8bc4-fd3b-4b80-81a5-9408278905bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c8eab6b-2b95-4cea-a085-bb9e1b76d2f8",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b381c8ce-20be-46a7-9ce2-db5daf95b28b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ded21619-7a96-4c37-a0e8-57d084b83330"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e7b251d-ed1d-489d-89f7-fc912bebb609",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bed75923-bdd9-445e-93ba-729156ec0dde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1309e9a6-b2ee-4a95-900e-e1f5265c0ad5",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76fd6b92-3519-4d5d-8330-3215bc7ec6d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e771b9b7-3b04-4a9f-be7c-b2958e2a09c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcafc8fe-a1b8-4e19-becb-06668624453a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97511ea8-100d-4328-b2b2-2cb5063e0a78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0139f9b-5d77-4326-b515-1ab617c9eb4a",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1d60c73-693c-434a-8192-59bb22ecf8db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f11739c-b4c1-4054-ac44-5ded1993c375"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc1d29c2-005e-4baf-bf47-73f3e7ebcfe2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8175262-0da6-4c03-84bb-b0843cc869db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1769bfaf-3c0b-4c61-9b6d-e44302db806a",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff60adbe-c2a5-494d-b763-1a9d1ab0dc41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95de91a0-7461-4471-907f-fc330b62256b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f1bfd96-5ecf-418c-b79d-4fe094d017ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a1e4996-1c49-4282-9d1a-df8988baaae6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "256daa3f-ad85-4fc1-aee4-bacaaba2b60e",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d22465a-8f79-4cd1-866a-3f5088881fa5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3955c1ed-7cce-47df-9228-78d4476d113e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c46228f-63f1-4fd4-827a-9f5761bbf19d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0a5be0f-cc93-4832-b56b-7ecdec2304b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8329729-cbac-41bb-87bd-a190e325d1c1",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d17c9de3-d4b9-4bc3-a346-1f54fe9b7169",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d93be88a-e53a-49e7-933d-975356db5fae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fb4d83d-e6a4-47e3-bfeb-81ed28cd01b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "527790ec-6d24-41ec-8e68-d1c328de4cae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83aa9af6-9750-4a20-a822-e28d4ecf1429",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f569957-b8c0-4247-9ff0-66691f949eac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c50b805f-d4dc-4616-979b-c7cc10fc4c51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a1a8ca2-cd06-4e1d-91a2-f356ef5fb2cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e060270-a4d6-4764-903c-bd013e3e0983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bedcbc87-3656-4941-b9ca-ae3d37908457",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f698fef-6ca0-4a45-9960-2c610e22bb45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf4c9881-3424-4f01-abe5-2cdd93d239c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3dff96b-2638-4ab4-b6b5-c802337d89b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ae17cd9-9f42-4120-a46b-82f552b606fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93be5c5e-ee6c-4527-ac55-8f583d5306b4",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b145b59e-46a0-4559-924b-e160b4c62414",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef209143-7d7f-4898-b1d5-39fb15518d1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ce1b98d-5465-4691-8549-768d0c8463ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f0aa6c3-d78f-47cd-80e2-f6d9e38cb649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64b38efe-8b74-4d12-9546-2b39d525dec8",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00993471-07c7-4aeb-8aee-e1dd3ace95b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72d8c6ea-033a-436e-a77c-4534a376bac2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d57d00f7-2d32-4816-8b1b-8a4038b00733",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdc83055-7d0d-4b75-aedc-b982f8408a3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdf611ff-1ab3-4c3f-8256-4159240214f9",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddc3bc18-a168-4bac-8562-cabd7eacc51a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7595f8ce-d891-444f-a049-ace198bd0b1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "086aa48d-e345-42c4-bf65-c613bcef0dde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d10f908a-2807-4601-92c7-6714601c8f1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a02f993a-b6e0-46de-8a03-704fd00ec423",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33d2f3df-ff97-4904-abf7-2b82bc454eae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26610e73-ec36-4bc3-adc1-5f06c9805654"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ca2dec8-9d18-4d29-a144-a2e4bd122a2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8102f7ee-34bd-4ac0-8d22-4ab2af893831"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17caaf04-d051-4fe5-9a9b-5cd879163655",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37d39b8e-c923-4b30-9d90-04cf989d8e09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f79d2308-c358-47e8-9f72-dfa465117fd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b14d8969-dbcb-4ef2-8708-d247170b10d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9930dcfd-7ed2-47c8-8478-34ef599b8683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8343f4fe-a4d3-4214-8c19-2adc4fa555ac",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cd506b0-237d-45a0-ac3d-2ab6d1742ee3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9713a203-9d35-476d-9761-38208c844573"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0d0b368-160d-4845-b4e9-8c0c2e4b4cd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f66979d1-f62d-4fab-ad0f-7ec5f4a40528"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d623e71a-2e85-4797-b1ab-81c930a1e2fd",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65965ee8-61bc-4724-8918-daf5abe00089",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0ebbbee-baac-47b9-b252-7ec36d1e449c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8613ea3b-1fc6-4c10-a61a-aa4762f072e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1613a4d8-d4f6-4afa-9da5-a27560710567"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f9e063e-e12a-4750-bdf4-a3915fe10805",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df0912c4-726a-462b-b9fc-0eb6d76ae455",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4e6fc9b-3b87-46c4-8f35-4bc3174f8237"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b247abc4-e312-42fe-9941-8dca7d90f509",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1747b4b-15d7-4c29-b6df-11da9f44985d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3eacf80-b231-4f99-9701-c51bf0174b2c",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af327f83-6bea-40fa-b352-ec5134fde8b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec940f15-4b27-46e4-9e1d-203593346960"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9bd2f79-ed04-40e4-aa36-fbf0d205c38a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c75da3d-0224-4df2-bb4f-7398713e1186"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aeec92e-7ebb-48de-9337-57694dc2892e",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72d11fad-206e-4587-b5da-9d2181c62fbd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f35400b7-94ad-4048-80af-1f866288edee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e375a3c2-e80f-46ed-8374-b0b25d3d5a85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f417f68e-d125-4dac-b067-bdf6d3b1eda6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1af02310-7268-46d8-922f-74b61c0cb000",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07536123-715c-4e07-b0e4-7af7e3216495",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bf196e4-d649-4a67-a8ff-fcfdebfc2c16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abd3ab5a-233a-4027-a316-e36a59b93a9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f9146df-f613-4d5c-9e0b-3aa013a36e9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23d69d91-e5d8-405e-a5f7-b16be48dd681",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6dbcbca-aec8-4734-b2fc-8ca2486a8e74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f6248a2-0af4-4f40-9733-a9bf3a1a3473"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66aa1731-8650-4877-bea2-45e5b5b7bbc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18d90e6f-b4ff-4cb1-98cf-cc753c61c063"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f92e1b8a-8929-412a-be5c-38aa9ec32511",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd73e7a8-bba3-4993-bf0d-00452fe86d36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8eff6b5b-256a-41f8-9818-4f2ac0e2bdbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3710cbe1-648a-4a63-a9da-4f5e08fdcd1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e37d6f2-fdf6-4df6-a5d8-14a8f1848f5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "845d9944-371a-4a6c-a01e-bf6c447aa163",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1691154d-637a-4a60-8699-7d54b4f4b4a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37a49e29-9f88-4100-a1f8-91fb35b3f597"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6b36edf-6f83-4075-b1b9-5a5a37a77a53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf7e34bc-5ba0-48c5-a59f-5bc785882edb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93669a4f-8bcd-4da4-b32f-52d89648b9a4",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f9a3bc6-bca6-449d-b484-a728675940ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "137db423-1630-4532-9ef7-4be8f4d6806e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f60fb89-057b-4e69-bf6e-3b407db93062",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f966bfa-96f9-4d48-83a9-dad8d925fc2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49c735db-8d63-46e8-b89a-04f2d5438df1",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f040238-9883-48a6-8939-11c8b88f5683",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2fac77f7-d6d4-48ab-9327-93ec9d580ee0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96accf05-2bf7-445c-be30-683657e16713",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df063b82-2b36-4386-8f13-d6e22b974717"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85fad85f-0cef-4d6f-87a5-1e4b55b5d387",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "638d2651-f00e-46a2-9df7-c6deb86db926",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0bd1dafa-e22a-42e7-ae5a-cf11407dca5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d3f01c2-14d3-42a4-a4bf-22adb49fa357",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a3c917b-aa92-4261-a376-038f38d7a4c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef071911-bdda-43bb-8772-7b9deaa1d75d",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "200a5cd2-76cf-4ad3-8833-6983f93c8a54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e18ac39c-e71b-4e65-8b33-602846f6e33a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41c33749-aa55-4adf-9f95-145844f5646e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78d505f7-b376-4508-acfc-353203c1942e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c45bd1a-a96d-41de-8089-85637e426133",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "992e2a99-4993-4da9-b394-bc38e275f07c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1470e3e-8770-4f06-8a73-d4ab58017a70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bc3cfd5-6e29-405f-b880-d922074028f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee7d8608-00f2-4897-822b-19004f40bab2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a060e9c-b780-4331-9b2f-341e6f09988f",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8b2d4c1-4628-41dc-8ada-fff03d16d201",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7f5f7fb-31f8-42d4-80af-76979ddc5bb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdb81233-2ca7-4403-af90-f8ee5fafad26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1404990c-4b59-4146-9275-1645365afbf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfd62d03-2ab5-4d15-a0ba-d251c52ee1d6",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbcf57e2-df32-4966-a651-2a537f8f6619",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4c2307b-6c21-4621-bfda-26881d1512be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3742c8ab-00d0-4a5c-bce7-b0f7a7af3a46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "813653dc-2d3c-47f2-b147-e186a396e1d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af3eea52-b1cf-462e-b507-80bc9321cd77",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "661ed869-6301-4a97-b0ac-b66cbc54e4e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a621297-9101-44d7-9e40-ed0dc3fee674"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "083911ef-32c2-4e95-83b9-c83d453c93bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "598a82e7-1515-4673-b21f-b48742d03048"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46564922-6e2e-455e-b22a-a8f6c9a14109",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0a7a155-282d-4ce7-b966-ca023ce1a8dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dade88c-3490-4837-8a88-d1195d599410"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f873079-2a4c-47b9-aea9-623fc383491a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b27043cf-0e2d-4957-983c-d582db9f622a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89a82ba4-fa08-4843-873a-48856de0f938",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dcc8562-b3bd-49f8-9617-738500383132",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a0067cd-7ca2-46f1-8f39-92b17f97a55f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3b8c3a1-3ff1-4ed5-8393-e401bf66f371",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f868438-2eb3-4cf9-8cc2-c0224e4d926b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0da8dee2-79d4-48ad-a1d3-3c5b92ebda48",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "309a8ab2-3b7c-49d7-8369-79c5c68297d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac20212c-a16b-4039-9571-7fe8cbf8285b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7d8efa5-9947-48d8-abbf-a88ee0eeca14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65463688-4001-4ec0-8675-ce3df3ce2463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfbb6f58-5d7c-4b02-8733-6a48e49229ec",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f9cf850-f0f6-4324-947c-6dc000a9669a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8d76e6f-2a60-4e8b-9d7c-5f6e4cf0d28f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ac4e953-db00-4252-92b1-1cf4daee5eec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e46df24e-5a6c-45bf-8498-d29e477977b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0dea206-0fa0-462b-841f-d44ae36bc4f6",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "380271c4-0671-4525-ab19-cc2af809ada5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb7698ab-5c46-49b6-8123-90fc17c4a5cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15122612-2d04-465c-9671-b5271f8a205d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34d4fa52-d557-484e-bb5c-ffe72fd735bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78bc5251-6fde-4b32-a7c9-854ef201d6b5",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3d5a314-3caf-40b5-8027-0674d701a6eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d85b189c-6c81-430e-97a3-eb79e830341f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81bf318b-a712-4968-a8fa-a1fafd0a1a32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb1a82c8-4497-491e-930e-be7e54f251bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "facee343-bf6a-4c82-ab3b-662d24cae4ec",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1857fd88-5b34-4956-85d4-934d315aaf69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c08e430-5f2f-480a-bad9-59e3a314c28b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b26087e9-979d-46a6-979c-ebb886c72576",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff0ec017-3258-4672-ba1b-47c54a55b511"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1777cb8-7df8-4f68-9db5-c3c4df06f1cb",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfa44791-d485-4f93-bebe-bc2e1a023045",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f3bfa58-d139-406b-87c6-69db227fd2cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac994605-fe13-4175-87e6-dede949d30be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41efc272-780e-4715-be07-d6549f1dcf71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "789b566f-d00b-4fba-b175-f883f9e9d538",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83f67f21-a283-4ba4-a5d1-2438fb11a95a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2ab06ec-57e4-475d-9d1a-0c7f5e69ec2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "faeeab5d-a074-40a9-ad26-f63c8c9e100a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a299eb13-e6fb-4d72-8302-1eb94f8c94eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7dc2ac5-4cd7-4d9a-ac4c-b172d56942ee",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "847c3f16-20ed-4a32-85a9-67175d3b5952",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90188079-60ff-449a-8a34-1842760c2fa8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4af98309-7b6c-4d12-8f57-0ed614b7c8a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf80225b-1da0-43d8-92f4-e77615a45428"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23925f17-923f-4d51-83db-0e279a96fb63",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d5b8a6b-4b1f-4658-a308-36840db02e2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df54fa5a-d48e-42c4-85f6-d3ba8b975291"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdba04cd-01d4-41c2-b9f2-182df419da89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62ad2e4e-7574-4151-8cb7-2bc6407cae8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab92f702-8758-4147-af51-70cb0d6ceee8",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c2caf17-8c8a-4567-9aac-18835ad2d4ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30b4ffef-9dce-4305-87bb-2ac4d7cd68e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abab0808-a9e6-4883-bfe2-c88a9d836fc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a549aec-426a-446e-8648-84dbf1c7b980"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71da7847-32d6-451a-abbf-19c5eb27dd2d",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9997ae0f-a588-487f-ac8b-082dbb9c6c76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93966f75-9f69-444b-95ad-09a6aa0818b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a2ec73e-e1f7-4693-bbaf-d2bfc25aa4a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26e4be5f-8c8d-45cf-af01-879c69b0652f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf20ab0c-00be-4e63-a26f-a70af3392065",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbb7dded-45a5-4048-b560-62242ad83440",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1924fa1e-dd02-4584-97c7-217c57f453bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13c25111-9d3e-4d03-8438-e77ba26252f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70e14c13-3d41-4f48-868b-875bc694dff2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be4b8584-261e-48bb-9e8d-232e3366a872",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6db32f7b-cc9e-42f7-a917-e1d71747879d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5751db74-6fa0-477e-97c1-0ac56d335001"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bb99a73-d99c-4745-afd0-3e5a735d906b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5e670ca-5fab-41cb-9f4f-f6e29fb140ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a0d915f-715f-4d51-9beb-388ca8ad7c33",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12c5251e-2d56-4c53-80d4-2d75b14a1e07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3017b2ba-fc49-41f9-b459-b84535444719"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fa35e46-fde1-4de9-bf5c-99503457d3e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00b3b5a3-08de-4a15-ae7d-e0389704b1cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a0aaf2f-4f92-47ac-8a21-65a5cdeb04a5",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6eca128-2919-4aaf-ad14-f9fe920b615f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bebea67c-723e-47c0-ac5e-f3830637e467"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9395fd17-b3ed-48ee-8482-611125841074",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "573fc522-bba5-4bb8-b114-60040ef5002a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f834b7f-db84-452a-a762-a093ac751587",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eddc1a0-9ff3-4e91-b8b6-fe0f3fffb946",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c0ca4dd-2c83-46a9-8223-c18f2cc38cd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6966827-f6b2-43a4-ba47-8a2eea50190f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddc08465-27a1-4ca3-8c13-604a63395a8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf644e50-ad25-4d9e-a429-7540d0a05941",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8418471-de3a-4051-b1ef-a6c0e2b7ca73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5b78087-6bfe-4a56-95de-48217b56cf98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "257e6623-3e3e-4f68-ba41-abf32795f4b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8ee5a97-7013-4b18-99dd-746608d05ade"
                        }
                      }
                    ]
                  },
                  {
                    "id": "250c509a-3fd5-4c27-b75f-476c86304ec1",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d3ade61-421d-4366-97eb-7afead3132ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4da712b8-c3fb-4e31-a8e6-c732cb622f12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7e7bfb9-a949-4497-b0d9-4100a2652a18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8aa74f8b-459b-41d8-a57f-6f830da95b4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8e98113-e9ab-4fc4-a7fd-3a6ae108bef1",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39973fea-2571-459b-9c57-8d7395d5585d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "201a8b53-7ca6-4b9f-b4e2-47f2bd1af6af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "083c1756-80c3-4b11-b7c0-c93f6a116158",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11a15c15-e4c2-47a3-bc4e-9511c32d4f9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d30678e1-8fce-46c8-8120-a73df8672bc1",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "087d6788-4718-4137-89e3-055db8c124af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab9c88bb-9b39-4283-8752-39522ccaf270"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd244aec-3f74-4b51-b8c7-f78ffe792008",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c5f74b9-945c-44e2-b647-3edeeefb13c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6557e00f-2934-499b-8907-643910fb4696",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "719fc05e-1186-468e-9915-965243c2948f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5699bb32-9a6d-4e96-9522-8daba4f8510a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf7d055d-2068-4d19-b3cd-5b489515b724",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca951192-b6c6-480f-9e1b-b0c9da5ab16a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1604b9a-1050-4ad2-a6f7-f465b995bb31",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87048569-ffdd-4332-9f38-2e4eb6d43f02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aeb834f4-9dbe-4ac4-9a33-85d1b0e0ce58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2b0155a-5167-4b93-adfb-501d05530c1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb21a1cc-c77e-4908-8161-26afde9b87fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bae5c219-b654-4743-a440-232f015d84cc",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd02feb4-5dcf-48fc-8653-351f700368c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34445caf-458f-4633-a6ea-acb561d2cbc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21e4c7a5-071e-410f-8302-fafa9f303346",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1681b63-356f-4f90-948c-1a1da6544b27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d021c7b-120b-413d-a038-e06f7be8ef02",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "873660c0-db7e-46cc-b073-05e28073e51c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5234d33c-650e-4c33-8e6a-51cdc35a155a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a74df13-c5a8-4253-b3f6-5f0b6e32f8e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed109a1f-2801-4997-8bf7-fc440f8d0211"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8036a443-906a-425d-a378-b68b3cdd0589",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27f8beab-0b42-4711-bf64-5093f368aae3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a6782fe-210d-4e26-8746-f652d4dadba0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64d4f621-1251-4abd-aa50-2c7404fab657",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95b6463c-fd55-414a-a3ad-d0ecf0b5596d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aff607d0-2c6e-4652-95f9-73dbeb1e917b",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fdd3bba-a514-446c-9c28-7baeb277a53c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aaa2c149-894b-43c2-afd7-7b6ce1f30aea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e30c1ba8-67bf-4739-8b53-658a91eb1d3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59a93b47-d793-4431-ba64-457d6ca6ad9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98fc8028-f6e1-4fa3-9cb8-436b0c72d5a4",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "960f9467-5ebe-42c3-81a1-cb48f2337061",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9fbd305-537c-43dc-9131-f2e788a79c03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95c2d8c9-81d7-49bb-a29a-c479bb5b1711",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5576315b-1616-4917-aacb-e3f6cadacc17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dec4de96-62b8-4c63-8c2d-c6a95ba2e0bb",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aef88cda-d0b0-4489-a810-755cce667410",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90001337-df01-47e4-9e6c-8545f481d520"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ea146f8-7ac3-4633-b97d-8ea1fe63ccff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8114e72-e4f3-4352-afe9-02a2db7e7984"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6346e0bf-0836-45e8-8add-caaacd49a5f6",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d5b1f1b-b722-4d63-a910-8654743ec1d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ec34fd0-1092-409b-a1d9-59d14b673a37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de5c5977-bddc-460a-b933-db075fcff502",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d49a7ceb-f664-4fce-a6b8-a43ac6f00c72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "117aad8a-bad0-4b50-9c56-90524fc3152b",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7c3d9e9-4838-4f99-a8d8-5889f878c59c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e708577f-adee-4f35-9e91-4ce68afd3666"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12898ad1-2525-4766-ae66-11884f3e9d3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0d74ba2-f8a5-4564-b2bc-09ca2eecb563"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5fff471-e4d1-4aab-83ec-35cc89b6e553",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c39b929a-e339-4830-8c81-92f0ffe71f1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9aad2f00-b6e2-49d0-9809-3fa0afd5fab7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1cf7d0a-866d-4d09-917a-062942053c51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a886102-9fb6-4dd0-8981-a127e2dae458"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e834fa15-174f-4c42-a0d3-9a17c3044c8a",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e80e886-d1e3-4116-9e9c-e4d524aecba8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "630287d9-6f04-4eca-914a-cc3e3c2bb185"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e79712b-2ac4-4f7e-b97e-c86345cc12b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df6ee432-d9d8-4ce7-8f35-778522f90a10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fbd3a51-6d46-445c-a1f1-73cff4bf68b5",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9ba5fb6-53ca-4761-943a-6cd6755b521f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da2f1412-7a3c-46fe-82d8-914f1cb7952b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db0e61d3-44f4-4285-a53c-c7ff8faaa054",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78d47513-b983-4945-887e-da8d67d9a95d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beac5f02-da8f-4535-9cc6-e8f4ec2f4c87",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a96622ca-eb76-4e01-81b1-35fbda26d457",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e444308-8a8b-490c-8907-b711a0c4a574"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95b7179c-324d-4767-b813-8a66d3582c71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1066c05a-11f1-438d-bf54-604e553c3d16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40264b2d-b0f7-4a84-8987-9e1c8d266202",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0205c06-df06-44ee-920f-22ab724c2954",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e014e29-c08c-41ec-b95a-d6da51531254"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29fcbb15-87d9-4259-be96-6a50a9276845",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a70ceaf-9fb6-4adb-a9ae-5619666c0f79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cffd386d-88b2-4e55-ab40-98874bebe8f8",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3911cab-665e-45ee-a178-c05d8eae099d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01c0b88b-883d-46bb-8c7b-0e1b7bb03690"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f6d63d3-aecb-403c-98a0-71c8925bcf81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42cf5e1b-32ea-409e-8a96-377b10c6d994"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a17f824-af16-49df-9649-0ecd48c57c84",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "576b8cf9-d201-4680-8b23-7807dcee89c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8a5609b-84ec-4f3e-b0c7-fc415d2ad971"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae0e0c1a-a688-4d04-85ff-613decc3d92c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c766d37-a490-4c8f-b16a-3da503978741"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0defc83-0a69-4d9f-a147-89215d5cb67f",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "680bac46-2ad2-4d3d-93f2-b2ec0edbb56c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "292dc406-0ec4-45cd-ae2f-c3cca03d618c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4b77abb-f61d-4aec-bbb4-9a71de535cf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04175c4d-73ba-48ec-a0b3-e9ce671b1571"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eecb8a25-7932-4b41-8581-b35f9b557b4d",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fe03bdd-fe02-4245-9997-af4071be802a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45cf1594-7c4e-4c05-a0f1-c4da73842828"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9425dc2b-0499-4eab-a92c-45a934cce6c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8217d333-4f63-48ce-822b-bddf9e03a8ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42a0dd95-e497-4403-a3f8-b99bb9cc89c3",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f22f9f69-6352-4750-8335-66cefe8da352",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c950888-b98f-4b2d-944a-d64a51a1c3d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "156529d8-98aa-4030-9499-3b48d39725f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cf7e8c3-2964-4b5a-a2e8-ca6c0378d0e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26428a89-c0be-4341-86e4-9ca8ebb920d7",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad797d71-c559-40ae-ba61-40b8742ba53a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea6fbd50-542d-4bf0-b717-f60b753d1998"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10dc4b12-50fa-43e8-a3f2-ff50bfd37c9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c0557bb-c122-4a81-94f1-f5bd94668531"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d08d5786-1c27-4314-8cae-336e1fa6d7a6",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea659267-afd2-4d4f-8139-a1f136451cf8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abd7bd7c-06f3-421c-b320-3f92907758e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46fc4aa9-c15b-4585-8014-36855234ebd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cec16e3-5cd6-42dc-afba-7c1008596cac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c28818f-2587-4245-89a4-11c8bb14d9cc",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deca53b5-f3fb-4178-8b24-93d3333cfde1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "368edc75-d044-443e-bc28-ff85ed3c5a8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccbbc950-2f0c-469a-8786-54de2be03d9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d07c52d-7087-42c2-b94e-096dadaf9bca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4382c30a-d36b-46f0-9641-02abb5491a80",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee3c4589-86f3-4975-b989-c01ff2ea752e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87cc7c0f-0ffa-44b7-a95b-d4dff4f4a1bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e3990c3-6dd3-4ca3-8c1e-5c1510c879ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "995c5218-1070-4e40-bd0e-7301c316e524"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a768e2a-982a-4b44-ac64-4185753992f6",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97008d33-af24-4a2d-a667-d76a4c6e7f4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ecc80341-f522-45cd-a452-68b220a8a97a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86869ddc-d520-449b-9277-7e7d0135a361",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42e1c8d9-ccb3-47ee-8c65-6bfef16a4bc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fde393d0-dbce-40bb-b874-3d533481fea9",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61aacc54-4a72-4ebe-8765-45843402c90c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a9e1811-23ee-47aa-9168-d5626b653deb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7a8b2d5-c806-4a6f-92a3-03e06d93b1ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a47ba03-0cbf-40f2-9afa-3206362f3408"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e01561f-b912-4f99-98f2-56fbb297f3de",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d557edf8-8dc5-46d3-9163-1a38cb692791",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f07ca1e-6ec6-4d72-8424-f2d78c48a36b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b7228cb-aa4f-4ddc-9d81-764bac026b97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f57b6c73-e31f-46de-8bfb-027859df4c24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "037d9662-f55e-49ed-a1fd-c0f808aec82b",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "467d3517-9c82-4607-b576-6d4d52d09463",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08ec7b9d-9aa1-47f7-adc1-7d60429233a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7d285d7-b045-4e7f-bfd9-7b28eba1fe67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47720844-7b5e-4930-a5a8-c9bcae8a3adb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95543d44-9682-4f4d-b807-14bee0a9a197",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08a214a0-61b9-4b8b-ae36-80f8acb46b68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "449f7598-6ccd-4e6a-8022-6b637440c874"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "273d2e4f-921e-4460-ba56-b1a7ab70e340",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2675a75-fa5f-4d48-995b-810a75d65f74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03075472-5b0d-4239-83ea-a79d369c88d1",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f4e9250-89c6-47df-876a-cd0328660793",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72264d43-cc8c-462f-ba8d-4932b8d8c3d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46ac68e0-f979-4ad0-a1b4-5f038ce28499",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97296d38-7c89-4f65-b66c-67da0d75c274"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb3ccbb1-ff5b-4247-9155-6ef51b73ae4d",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43bfc8f4-6d2f-4412-a49f-f54e83e66cb1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "268a3323-ef6f-48d4-af62-a1ff3f243815"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c42205a2-5f77-4c02-928a-4dbd1b519c5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a6eecea-6a30-4e26-a9ae-8ff890252e3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5730410c-9408-4880-bfb1-3620414356c0",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d9d9020-8331-4db9-8a91-69d3b6086fd9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ae58bcc-06fc-42ed-961f-3c2f4a45d726"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5978225-7148-4b63-a2c0-69ae0c90e7d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f86eb2fc-b012-4c03-bca4-eec4ffd40918"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d464637-a5a2-4132-9d6e-4fcfcca6678f",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "647e4cd0-f078-4530-a48d-7f5475fcf671",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d430fb25-b368-432a-aec1-0d6bc143cd8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b64054a3-793f-4b01-abd5-927a1e29a19e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49fa18e4-eeae-4cb4-98ed-9c3febe61dda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68241fe3-6bf3-47fe-819d-667a7eb2a1c9",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "706a7aee-fce2-4ba6-81a1-a265be12772e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e24856d5-0ab8-4d5c-97e1-29d2c0c1097d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd8ce7c2-a693-4031-880a-e1e46e9db936",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98f3f94a-e669-45ae-ba15-7c51f694ba74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f83d811e-f5c2-4479-81f5-07b88151993d",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "374658fb-0eee-4154-8c0a-d8e8feaa0972",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "edd8df1e-93f5-42e7-94bf-a0ff860f2d4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5589ea4-885e-47e3-95c0-5b12df008617",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da043418-11dc-4e8d-889c-19d33edc3cd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c25548d-2c32-4431-878a-9f2ce173c30e",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c33b2459-7b0e-4c1a-a038-7e2ec81a6626",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4a290c5-0a3a-4956-8b07-a273921348c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d095588d-3b73-4601-a47b-e0f20a1470f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b57a8620-610e-41a0-ba5f-151585b8fb6d"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6218389f-6b01-49db-b5ac-a98876f29a99",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d7844008-9b03-45b7-8bc6-7aff12035298"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a4870570-c50c-4a93-8367-40b23ba7d93a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5360871b-4ff0-481c-9f4f-4c5edbdefe5a"
                    }
                  }
                ]
              },
              {
                "id": "6a107621-6958-48d9-aafe-5ee50fd174ff",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6dc58693-50c4-4375-9fcf-0baf32bf4598",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5550791-f499-4112-aad3-a6f1b160b48a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "2d01563c-ec9b-47ca-bdb0-e0ea604bcdcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d6d764d-16a8-4b53-a715-0f5fba4e9d7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "53fa24fc-b86a-4048-a66a-e9784fee7fec"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c2628691-06ce-460d-8bc7-d686512a20f8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "41e8b3d6-1874-474d-8d8d-f81fb4d02df5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "97643e7f-7b77-4c7c-a1d1-1595ef0f5824",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1b4abb24-8eaf-4153-a203-8a6a72b6c7e1"
                    }
                  }
                ]
              },
              {
                "id": "cd2b091b-24de-4d3d-9d26-540d1b450b87",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "0eccfa62-218e-4e6d-89e4-7fa79db5f70e",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bcfd389-1eb8-408a-b490-7c7ee14e5486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "6cac484f-0a7d-4b02-9892-3c490d0a1b52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27b9e7bf-afad-4e45-9a58-cd9b4095ef4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bac4d2f-c925-4b46-87ec-ef0f1923b762"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "0034f994-2980-4e2d-83ef-7e77d30691d1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4a51997c-5dc2-4552-ae1c-ff3a8e6bef32",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9b927cc9-fabd-4b66-af90-8fa3146444fa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c0b51390-48af-4ceb-a03b-a34a822f1ae4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "32baf274-f5c6-4830-b829-1a94cf636daa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b6633038-e099-4f9b-ac92-d31de98df569"
                    }
                  }
                ]
              },
              {
                "id": "4e70305b-e9f8-4da6-82b5-8108d7881288",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "be777a6b-7933-426d-b931-b305c970824c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "47baf486-35b2-4679-8ead-a1f1ad76e1e7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3eecd2cb-5ea2-46a0-a98a-d42c92ef59ec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0b04e060-b36a-4560-92cc-955d8c30b475"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3bddda45-da41-4f47-97e6-48f110267caf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "7fd2fe16-c482-40cf-99d2-fdbb79b0d655"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7b556f1a-6745-4e7c-8851-d5eb8e663e86",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "eff73237-c573-4a2d-868a-fb8c3733e384"
            }
          }
        ]
      },
      {
        "id": "bc256992-f144-4d29-a881-1f1e40563f53",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "e5f9d0ff-b925-4a0d-aa57-c103722b51fc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7c2d5ca5-d0a8-40e5-9432-e8716064e188",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5447f68b-91b0-4924-a2a9-28bc432f1448",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c9ea5ce-adc4-46a2-aaff-907c8fa6260d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "32ae33a8-0cc8-4738-b861-737517a0ea1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4a0f611-e553-44e9-bec5-75bf05e54848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f58166d8-ff3b-4568-a92e-17f36726110c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b83d9213-fea8-49bb-9935-ff1032cb60a9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "db793b25-4ed9-444c-bc00-02f1400044be"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e45648b1-5af3-4d0e-8847-b523fea07437",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8dd51921-1905-4e65-96ae-3705a33c464b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4b0ae84d-0234-412c-8b5e-b111f71cde44",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "bfdcdec6-7f1d-4a6b-8617-edda29da0024"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "511b36af-ea06-4050-9ca7-23ba7a29bc9d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0769d13e-7a4a-4194-88e4-d60f041270cf"
            }
          }
        ]
      },
      {
        "id": "85dee414-f639-444f-bb41-f293f271b9cb",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "ef9b08fe-7ad9-4fa6-a69f-9c55cb2f927b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2d3f0dd2-7b79-4f1a-930f-f3f42a0b3e89",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6d56e666-94b0-4a47-9f06-e9fa2104392d",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4720b126-0077-4646-b3d3-242d981d8de3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "658229b1-22bd-4954-ac3c-1abf0a0dc27f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b687b09-cf4c-4431-a509-5249510c3e0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "73955a44-bcb1-4928-ae3b-19f53515fa01"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6b716e1a-6dec-4fe1-aa72-eb4b6fcd1ea0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b860423c-54a2-46b2-ab39-22833a3b093d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f87485de-df25-4131-921e-2ac9c35ac404",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8ba46992-490c-4b05-9f78-0fdc026a3edd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fb7f40a1-ddd5-45ab-af3a-58c2cadc949f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "92e01257-3bdd-45cf-b4f3-8abcd0c4a79f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e8cf51c2-a0e6-4856-b805-50aac125ac08",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "91fac05d-db2f-48a8-a128-dcabd7a0b3fc"
            }
          }
        ]
      },
      {
        "id": "94786deb-5003-4eb8-b48a-ea2cfa5a8573",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "63475d5a-2498-4710-96d4-eac7aa4dc348",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8a142cbc-943c-4057-ba7b-f65eeaf6f299",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "449700df-f46b-4188-bd7d-e48600420a71",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f65fa153-b455-4ede-82a1-82758fa23f71",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "56fc7f0a-5ac1-4238-9a41-2b8cc55d76ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72440539-8e6f-4145-a6e0-02e60729d517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "60fd35a4-8994-4c8a-a3a1-57e79289b490"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "626f54e5-b60f-4f8a-8531-7ea02b081b20",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "45e96326-3c6c-485e-987c-4adf93a0c5d2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a6a0c06d-273e-4a0d-8099-d0f9324fe615",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8e9c1827-4650-464d-ab5a-609354194cf2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f8925ac8-45ca-4318-943c-ff7d11bfe56a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a811c8e3-d4ab-4154-a6db-a809bf766185"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a2ebd909-1d74-492b-8e57-a98f838dffb3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "41251b12-a7ba-4c87-81e2-812674a5f488"
            }
          }
        ]
      },
      {
        "id": "4c9f1b8d-d40b-4709-9539-63c57b2f2281",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ef58e8db-8558-4c0b-9b9a-f382a1077376",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "73faf7ed-a6ba-4a8f-a08d-6b35ca7263fd",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "8bef4039-0256-4098-a17c-900a963ad2f7",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5f301cbf-9efc-46a5-b570-23a2bf796601",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "64a1258d-9241-4816-bcc1-575b8a35d714",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 86.69841269841272,
      "responseMin": 4,
      "responseMax": 8228,
      "responseSd": 594.1371530750686,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1712277315414,
      "completed": 1712277345464
    },
    "executions": [
      {
        "id": "0f247414-11b5-44af-9282-29c5b000d2be",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "202d38b4-01e8-49c5-8d25-2043807fc823",
          "httpRequestId": "13092de9-675f-4056-b9f8-7bfb5c7a558d"
        },
        "item": {
          "id": "0f247414-11b5-44af-9282-29c5b000d2be",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "6d23988c-94fa-48f3-b7dc-e8b8a4e14067",
          "status": "OK",
          "code": 200,
          "responseTime": 71,
          "responseSize": 0
        }
      },
      {
        "id": "7c264978-e7da-4edf-bec6-44b8d571c122",
        "cursor": {
          "ref": "754189f3-56da-45fc-8e8f-d89ca404bd7c",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "ba2522f3-4a39-4151-9245-a76ee53fd785"
        },
        "item": {
          "id": "7c264978-e7da-4edf-bec6-44b8d571c122",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "5952edac-79ad-417e-8416-1b088d96a844",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "65904dbd-f87a-4c59-b06d-3906fb1f8dd8",
        "cursor": {
          "ref": "f951a7e9-5710-4947-9636-6af848bbc930",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "6b0b517a-0a1f-4bf5-81c7-16ec6427dd23"
        },
        "item": {
          "id": "65904dbd-f87a-4c59-b06d-3906fb1f8dd8",
          "name": "did_json"
        },
        "response": {
          "id": "087f8e00-b2e9-4cb2-b825-115ffe399e87",
          "status": "OK",
          "code": 200,
          "responseTime": 83,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4335a8ad-8ea1-4ec0-bb89-556960c2db6a",
        "cursor": {
          "ref": "6f75c6ee-3f8c-45d7-becc-aa35bc4eaa26",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c821f4b8-5769-4460-8da6-c196c228c0a1"
        },
        "item": {
          "id": "4335a8ad-8ea1-4ec0-bb89-556960c2db6a",
          "name": "did:invalid"
        },
        "response": {
          "id": "ac04dc0b-86d8-4e99-bedc-7a0505b2f30c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 459,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4335a8ad-8ea1-4ec0-bb89-556960c2db6a",
        "cursor": {
          "ref": "6f75c6ee-3f8c-45d7-becc-aa35bc4eaa26",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c821f4b8-5769-4460-8da6-c196c228c0a1"
        },
        "item": {
          "id": "4335a8ad-8ea1-4ec0-bb89-556960c2db6a",
          "name": "did:invalid"
        },
        "response": {
          "id": "ac04dc0b-86d8-4e99-bedc-7a0505b2f30c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 459,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "871862da-6f74-4dd3-a137-9bab4eeab976",
        "cursor": {
          "ref": "d2e1b4a4-1f24-4886-90e4-f706e278e313",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "a001353f-2612-4c45-8274-8c74dc912034"
        },
        "item": {
          "id": "871862da-6f74-4dd3-a137-9bab4eeab976",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "518e31cc-77a7-4574-ad6d-3968f8d0aef2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 16,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6f7d985-8c1b-4da5-86ec-f96299a6fdc8",
        "cursor": {
          "ref": "ed43f700-3f4e-4f40-bd4f-9c33fb065a31",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "a7eb9604-987d-4734-8e72-7e7a541d264f"
        },
        "item": {
          "id": "b6f7d985-8c1b-4da5-86ec-f96299a6fdc8",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "3a37613a-e4e8-4c94-b4fd-af514e735279",
          "status": "Not Found",
          "code": 404,
          "responseTime": 16,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a8358f3-0762-4220-a544-ac4d48302b1f",
        "cursor": {
          "ref": "ff3d8593-accd-42d5-a6e0-3b72574654c6",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "28f7647e-c6eb-4c65-a23a-bd8219e8334f"
        },
        "item": {
          "id": "1a8358f3-0762-4220-a544-ac4d48302b1f",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "cd95f54c-55bc-4021-b7b9-f09795fe5534",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 7,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b784ef9c-f04e-4ed1-a49e-bcd5e8fb3393",
        "cursor": {
          "ref": "0d150094-1d27-43a2-b6ee-8db4de89fdd1",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "ff3e6bb1-10d5-46fa-8c8a-e6768b0a30ca"
        },
        "item": {
          "id": "b784ef9c-f04e-4ed1-a49e-bcd5e8fb3393",
          "name": "identifiers"
        },
        "response": {
          "id": "e965528f-4039-4350-a2e6-6c0006cef304",
          "status": "OK",
          "code": 200,
          "responseTime": 24,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "596c752d-488c-49c9-9aea-e0d59675b12c",
        "cursor": {
          "ref": "6e6c1a92-594b-4f71-952e-dcf75c2a3040",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "31fbdb46-f5b8-4987-94c8-24d36e3d0e39"
        },
        "item": {
          "id": "596c752d-488c-49c9-9aea-e0d59675b12c",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "a3ea6485-2507-4ba9-8640-c100010571ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84a2fba1-f656-4547-ba9d-8b3c8c89416b",
        "cursor": {
          "ref": "3b14847c-cc45-41a5-a6dd-a33dfa7b99df",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "71f23ee2-0907-48cb-85f6-41674a315c8d"
        },
        "item": {
          "id": "84a2fba1-f656-4547-ba9d-8b3c8c89416b",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "1f9b1f4f-5560-4702-9844-00a2c2e2e3be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17191729-0e71-44df-8b84-f7b477048cfe",
        "cursor": {
          "ref": "45e9028b-4948-42e2-bd4c-db5980816f82",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "e8c7002e-3395-4ab5-93e4-bde5ab296274"
        },
        "item": {
          "id": "17191729-0e71-44df-8b84-f7b477048cfe",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "83a8070b-14d1-49aa-a241-420cc3bb46fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "927d9f27-d76c-4c78-855b-7eca56a0b582",
        "cursor": {
          "ref": "224fa9c5-03f7-4be0-8ec4-f53fcd544855",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "cd1755c3-854b-4b4c-b271-d5cf3dd1974e"
        },
        "item": {
          "id": "927d9f27-d76c-4c78-855b-7eca56a0b582",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "4cdbf037-1ae5-4133-8921-b0a1ae6b63a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "681d339b-339c-423e-a453-ac67975282c6",
        "cursor": {
          "ref": "97a293f3-0fc1-4ec3-91fd-a080cee0ce97",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "21120702-cfb6-4035-b4d7-96fd4dad5f4f"
        },
        "item": {
          "id": "681d339b-339c-423e-a453-ac67975282c6",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "8dc97003-ffc7-4d2c-bf68-1cae67a178cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79b70d9f-ed65-44e2-a64d-540b7cfede5d",
        "cursor": {
          "ref": "68c267f5-8cd5-4907-a749-7d087dc42daa",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "6e7dbe7e-0e46-45c6-85d3-69f5fcf51436"
        },
        "item": {
          "id": "79b70d9f-ed65-44e2-a64d-540b7cfede5d",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "577d9cde-0b44-44f4-9fca-b863d6e358ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c552a7df-0293-4f83-9f2d-8f9cd7e1d9d3",
        "cursor": {
          "ref": "bfb437ad-84a0-4b5b-b11b-bc34a46c5543",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "19ee617f-0323-4db6-9c70-43b8453d8374"
        },
        "item": {
          "id": "c552a7df-0293-4f83-9f2d-8f9cd7e1d9d3",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "888b7828-17fd-4f8b-8b20-b77095d431f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fde19fa-0733-4a53-be10-6f53fa1a35af",
        "cursor": {
          "ref": "2fb4a1f8-289a-49a6-9b40-9bce85e4c596",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "524700eb-c2d8-4a2c-8156-a35e324eae32"
        },
        "item": {
          "id": "5fde19fa-0733-4a53-be10-6f53fa1a35af",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "aace3315-cfd9-4e92-80ce-03c1296716eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "492447e6-f97b-4fc2-abd8-f5f507e4683a",
        "cursor": {
          "ref": "e25b407b-497e-41b3-8a0b-f25b56341707",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "a9aee7dd-0351-4ed4-995f-d97b65f56999"
        },
        "item": {
          "id": "492447e6-f97b-4fc2-abd8-f5f507e4683a",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "583bcb25-cf92-4302-ace8-2af876899def",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ed40537-f592-401e-b33a-8575554a743b",
        "cursor": {
          "ref": "49746cf9-3d13-4d4d-a68d-30d6bebd5e2f",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "eb5e77b0-7b6a-4e67-9be2-e79883d385cb"
        },
        "item": {
          "id": "4ed40537-f592-401e-b33a-8575554a743b",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "eaf7496f-d245-4aab-bac8-58018e115f4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f875654e-d4e7-424e-956a-19793c4df256",
        "cursor": {
          "ref": "092e287d-75fd-444d-88a2-f333e380020c",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "41e206a7-71bd-4edd-95dd-822139b4eb79"
        },
        "item": {
          "id": "f875654e-d4e7-424e-956a-19793c4df256",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "bb79262c-3f35-4baf-ae95-cba00555c4a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f250bcf0-76d9-4b6c-9871-8dd48a68072d",
        "cursor": {
          "ref": "55812835-1f55-43f1-a690-143d8cb3eb1c",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "32b337da-398e-407d-bab4-d10c142cf91b"
        },
        "item": {
          "id": "f250bcf0-76d9-4b6c-9871-8dd48a68072d",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "3c589489-244e-47f4-b94b-33dc45183f9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "911d92ed-2476-40f7-82d4-93229807b3be",
        "cursor": {
          "ref": "8338701e-44cf-44e6-a9ad-adfc59b3ace3",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "7353b3c8-9e66-4398-87ce-f7155d8a1577"
        },
        "item": {
          "id": "911d92ed-2476-40f7-82d4-93229807b3be",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "1a0a09ea-509a-416a-95bc-5af7d102b53d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e708480b-6e45-47d4-a676-d890dbc2bf25",
        "cursor": {
          "ref": "f36c9067-bb1e-4a40-8462-f4ca7dfe05f6",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "b6a085b4-4def-4f15-b845-ce9ecd416654"
        },
        "item": {
          "id": "e708480b-6e45-47d4-a676-d890dbc2bf25",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "329ce645-a284-41a5-ba48-396ce5819a7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd1d70d2-ff46-42c2-b311-a065bffecb7c",
        "cursor": {
          "ref": "9fad76b9-5e3b-4933-9c57-b6e088a36554",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "c4754636-6ad4-45ce-8663-1d42e9146f72"
        },
        "item": {
          "id": "dd1d70d2-ff46-42c2-b311-a065bffecb7c",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "173b408f-a561-475d-bcdd-91eb42c31c3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86620220-bcf9-4a19-8f08-0d7bcf5236ba",
        "cursor": {
          "ref": "7b605948-4744-4f95-8954-469ac8e48bdf",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "19908dea-0ea5-495d-b0db-d7d9bf0f900f"
        },
        "item": {
          "id": "86620220-bcf9-4a19-8f08-0d7bcf5236ba",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "94db0ea0-c128-4f01-8e2c-33174a69fe4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dca86e77-5e79-4a7c-a9d1-682c5d7cf58f",
        "cursor": {
          "ref": "f4c87179-248f-4170-8639-160df95623fe",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "7c6c7fbe-7f5c-453d-9041-6a42e03bbd35"
        },
        "item": {
          "id": "dca86e77-5e79-4a7c-a9d1-682c5d7cf58f",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "72f14cb4-dd21-4b7b-9eff-081c9ee9577a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "800494ff-8033-4404-8a94-b933a2ba22d2",
        "cursor": {
          "ref": "865ab3a0-df34-46e8-8388-f4def3ee6b24",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "6661bb3f-6df9-40e9-9445-32f5cfa2cbd8"
        },
        "item": {
          "id": "800494ff-8033-4404-8a94-b933a2ba22d2",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "f1740419-b2b5-4ccd-a3f9-e3b13ed72b68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56fcb040-8da8-4b11-a923-9f4adafbc13b",
        "cursor": {
          "ref": "8908c6c7-d1dd-412d-a06d-dcfbf206a6cd",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "e20f50a7-7ae7-4a80-bf95-46048ce71323"
        },
        "item": {
          "id": "56fcb040-8da8-4b11-a923-9f4adafbc13b",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "c41786e3-167a-4da0-ad65-48700a1fcbab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4770b02-ae3c-4512-8def-e9c9245dd4b9",
        "cursor": {
          "ref": "376fb583-d1d3-475b-acd7-facc77b6407b",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "e788513c-b6b2-4eb2-a9d5-da238ec0197c"
        },
        "item": {
          "id": "f4770b02-ae3c-4512-8def-e9c9245dd4b9",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "0ad890e6-ce3d-482c-9112-baa141afe441",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16f7545c-b07d-48af-a4d2-40bc78510d49",
        "cursor": {
          "ref": "e98e5551-1581-4606-ad63-b373a0a4343c",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "c22a6fcf-123d-4798-a488-f3ca8d97fee5"
        },
        "item": {
          "id": "16f7545c-b07d-48af-a4d2-40bc78510d49",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "0be1bad6-19ba-46cc-a9ec-2c824b685476",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75cf863a-5d7b-4c87-9e79-60d75c4d765d",
        "cursor": {
          "ref": "6fdced7d-07c9-44c4-b444-2b6851b02da9",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "dd6f76ca-3659-4fba-b9fc-14e3d792a1e2"
        },
        "item": {
          "id": "75cf863a-5d7b-4c87-9e79-60d75c4d765d",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "d0da30f6-eda8-41a1-a392-6507b3e69451",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95364896-2ebe-43ae-98ef-2d523e103c67",
        "cursor": {
          "ref": "28e1b076-79c3-46ad-9950-c66df843fc15",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "45b28a57-ce8c-447c-b427-b7945e84ce53"
        },
        "item": {
          "id": "95364896-2ebe-43ae-98ef-2d523e103c67",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "f55f6391-4331-4911-b1de-05fcdb8c7404",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6fae3db-1b55-49ba-972d-6c99717e6101",
        "cursor": {
          "ref": "abc89aae-316f-4e07-90cd-77e375d53591",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "8207f1f1-f2cd-423a-98c8-a35b3a70aa7e"
        },
        "item": {
          "id": "f6fae3db-1b55-49ba-972d-6c99717e6101",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "bcbf9519-21e3-4552-85aa-aefbb21d6ce9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40ab0f4b-dbf7-4ce3-90b9-7eb9f956c237",
        "cursor": {
          "ref": "95697cd0-5aaa-4823-a3d6-11b68b7e1f16",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "0f25580b-5a33-4dff-8c14-8c4c08bb888a"
        },
        "item": {
          "id": "40ab0f4b-dbf7-4ce3-90b9-7eb9f956c237",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "d2329e89-e8cd-4e71-a678-9cbd803a3c72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83e3c200-151a-4611-a8eb-725e0c20c5a4",
        "cursor": {
          "ref": "ed4b9b14-031a-465c-8c9c-e100028ad648",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "0ea61023-7ee6-4ee9-85f0-b947731450d9"
        },
        "item": {
          "id": "83e3c200-151a-4611-a8eb-725e0c20c5a4",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "cd6757c3-43b6-4bac-b8c8-bd783440154e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "983e2e67-af3f-47cc-8f7d-77dedc105819",
        "cursor": {
          "ref": "57987046-aea7-48e9-bfa0-c77585805f57",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "b0758917-a6a3-4878-9657-085a2e9a5995"
        },
        "item": {
          "id": "983e2e67-af3f-47cc-8f7d-77dedc105819",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "fc09eef2-1741-4644-8351-f3840e4dbe0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "560fa6b3-ea26-403d-a6e3-b1249824ca59",
        "cursor": {
          "ref": "9ba7383a-2071-4d84-83cf-a1b3ddbca068",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "ed3eaada-4235-4268-9ec0-a5639e27540f"
        },
        "item": {
          "id": "560fa6b3-ea26-403d-a6e3-b1249824ca59",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "9a209310-0474-4772-90e2-4e1a5b9eb7fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6d4ee07-9dd2-46ff-af79-bb8ba703e23d",
        "cursor": {
          "ref": "1093e21e-d425-4d01-987c-50f2a9dbc45f",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "9d48b8e9-7fb3-48bc-9228-3fac8ef543da"
        },
        "item": {
          "id": "a6d4ee07-9dd2-46ff-af79-bb8ba703e23d",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "16b4d3f5-34e9-438c-bbc3-fd3f5002bd30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a9aad8f-5118-412f-9579-3c133e7e33f1",
        "cursor": {
          "ref": "f358fa87-6422-4e11-9f97-607a305cc18b",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "575dc684-a32b-43bb-aee2-58e886f8cb0f"
        },
        "item": {
          "id": "3a9aad8f-5118-412f-9579-3c133e7e33f1",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "a8cd5690-9568-4a7d-9a4c-8b0830960538",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c04e5c6a-eb60-4f69-862a-01113c274b6d",
        "cursor": {
          "ref": "c11056f1-1754-462d-a631-5b43a60068bd",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "74bb0212-be5c-4419-aeaf-04d6fc81a250"
        },
        "item": {
          "id": "c04e5c6a-eb60-4f69-862a-01113c274b6d",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "5240e41d-607c-4d3e-bd84-96588d55d48b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1bd2402-f4aa-45b4-8556-6ef2008b4519",
        "cursor": {
          "ref": "d2f8b983-7f48-41fe-8d89-c92632aec5f1",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "18bc9a14-c193-4974-91ce-de42563b0011"
        },
        "item": {
          "id": "f1bd2402-f4aa-45b4-8556-6ef2008b4519",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "f95fc7c6-fb61-4570-b6ea-5ef536283f17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f8ec577-ff15-4f01-ac7b-fe6eee83a8dc",
        "cursor": {
          "ref": "f91a9503-92ec-4f31-8ff4-8aa5a4b499d2",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "27dcdf8f-d5c7-4975-9e89-e0d81bf98d14"
        },
        "item": {
          "id": "9f8ec577-ff15-4f01-ac7b-fe6eee83a8dc",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "0e6d33ea-c6b3-4489-ae76-aca80940f087",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "761e1b14-3afb-49eb-8708-e2365c36e56f",
        "cursor": {
          "ref": "7f2d28c4-8036-4d48-8eb7-952ad90c8cc8",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "14ef73f6-58d3-4767-b005-8bbc5ce9e6fc"
        },
        "item": {
          "id": "761e1b14-3afb-49eb-8708-e2365c36e56f",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "e28933c6-6fff-4dba-974c-8aa819920bbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43afcc38-18be-4da4-ae40-0b848f2110b6",
        "cursor": {
          "ref": "5ae00c76-52a4-48f3-a3d3-713e92db6cc5",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "5f6f38f9-1f06-4956-839c-955b4cea5b98"
        },
        "item": {
          "id": "43afcc38-18be-4da4-ae40-0b848f2110b6",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "6ac2e136-e3d6-4a41-9276-385b8688bbb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8cc8072-1a09-4372-bddb-b96857bed87a",
        "cursor": {
          "ref": "2800fb59-7c65-4c09-896d-68cddf584e77",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "b3a7c167-0fbc-4958-9099-cb62bb06eca2"
        },
        "item": {
          "id": "a8cc8072-1a09-4372-bddb-b96857bed87a",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "edfca7b6-3bf2-4844-9e1f-b234bfb242e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ffc7b9b-6f7d-4f8e-8010-5e3e36e8624f",
        "cursor": {
          "ref": "05413be0-0b68-4f31-804d-95751ee8a82f",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "04294705-363d-4cec-9283-86d5dc8e99b0"
        },
        "item": {
          "id": "3ffc7b9b-6f7d-4f8e-8010-5e3e36e8624f",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "01d4f6eb-89f9-426e-b3f5-a5f1e9cdb096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bf75f6a-7f2f-4f21-b858-3be95d5a4eae",
        "cursor": {
          "ref": "69023463-442d-4705-9ac3-16cced3e291f",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "bc713440-7d4f-4f3b-a1e5-c261db2058e3"
        },
        "item": {
          "id": "4bf75f6a-7f2f-4f21-b858-3be95d5a4eae",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "42881874-89bb-4429-9b52-f09afb76c19d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a399d77-b4d9-473a-8393-542739af25a8",
        "cursor": {
          "ref": "4e0f3f4c-776b-4c4e-8474-ea194e2465ff",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "3de6766b-2a44-446d-adbc-2c3ab50fe676"
        },
        "item": {
          "id": "5a399d77-b4d9-473a-8393-542739af25a8",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "6036aa08-fa35-451c-88c3-b80062e80529",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c405e85b-533f-4208-9194-02e40f9376b2",
        "cursor": {
          "ref": "2c72542b-19a3-40f4-a063-584f4cf68399",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "59b4c745-b35a-4cfc-9eb2-d0ecbdc56393"
        },
        "item": {
          "id": "c405e85b-533f-4208-9194-02e40f9376b2",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "ac953ebb-965e-43ee-9bdc-d96500b0f77d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ecb0946-2da9-4f3b-84d7-6b21a1afd237",
        "cursor": {
          "ref": "9ee5c2a0-d890-4bd6-8af6-70d418df021c",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "87a1772d-ba5d-43c3-a418-1419f8a7f49d"
        },
        "item": {
          "id": "0ecb0946-2da9-4f3b-84d7-6b21a1afd237",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "2b7ed332-453b-4fee-bdd5-cbdb2b8378aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c84008ce-67b9-439f-b3ed-551c6aadd65f",
        "cursor": {
          "ref": "58ae0a57-aaf1-4d0f-b4f3-e0714eabc51e",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "b8014d1d-fef3-4251-a1bd-6b447e969304"
        },
        "item": {
          "id": "c84008ce-67b9-439f-b3ed-551c6aadd65f",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "ba86f205-c4db-4f1a-bfb2-9c59a2df60e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f35550db-570d-4c4e-bb16-f2781723c08f",
        "cursor": {
          "ref": "4ff06ee3-b8ad-4c08-8bc6-e259daaf6c3b",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "e2de1def-cb63-42a2-aad3-2014e56a648e"
        },
        "item": {
          "id": "f35550db-570d-4c4e-bb16-f2781723c08f",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "ee3c0fb7-db64-4db9-accf-5017eb309d57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b394883-55b1-4c9b-b8eb-7b4e93e461b6",
        "cursor": {
          "ref": "98f78c92-d7af-4422-986a-959868f25861",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "711ceef9-78a8-4d47-ae0e-322099ed589f"
        },
        "item": {
          "id": "4b394883-55b1-4c9b-b8eb-7b4e93e461b6",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "43250c20-5a50-49aa-9155-c24abd3a4652",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72329c70-fae4-4271-9ebf-99e1ac4e877c",
        "cursor": {
          "ref": "ef9fd72a-4266-401c-99c1-c4255633dc4f",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "108c4522-6391-4de9-9a24-e5560867b2a3"
        },
        "item": {
          "id": "72329c70-fae4-4271-9ebf-99e1ac4e877c",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "0fa2b5c4-9718-4b8b-b9bb-aa21a8ca16e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3f1975a-389e-4359-8724-9b93ed0de821",
        "cursor": {
          "ref": "aac46336-0919-4ef4-8fc1-5692acf60ae0",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "113fbb3f-57cc-43a4-b07b-903cd72c8041"
        },
        "item": {
          "id": "a3f1975a-389e-4359-8724-9b93ed0de821",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "d1079ce8-cadf-431c-b9b7-8a079a404d5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9a0c8d8-917e-4ae2-b3ba-fdb861ee5f62",
        "cursor": {
          "ref": "133ab3e3-c067-48f2-a2c6-60fe16bbe258",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "f637d82b-2c6f-4704-925f-a5b2fcce9c15"
        },
        "item": {
          "id": "b9a0c8d8-917e-4ae2-b3ba-fdb861ee5f62",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "cf71d43e-2c7d-4703-9ef5-10731abaa3f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd58cfb7-63d1-4063-a953-8bc01bb759fd",
        "cursor": {
          "ref": "c10baee7-a846-4fa6-8eed-795a82250a83",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "bd366aae-cb65-4ece-bd67-5d374ec3d094"
        },
        "item": {
          "id": "cd58cfb7-63d1-4063-a953-8bc01bb759fd",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "959965e4-e3f4-4bcf-8a03-794c7ac459c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d757513b-1599-4dbb-890d-24083bb788ea",
        "cursor": {
          "ref": "627efbf3-e1f5-41dd-a2cd-cf3e5fa6e4d7",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "7d66ef5e-14e2-4895-bc91-747d7100e33c"
        },
        "item": {
          "id": "d757513b-1599-4dbb-890d-24083bb788ea",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "a10a49de-c42d-4b93-a002-e5030a52c55f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2a6543a-31fb-4c55-a3f4-8b9ba32d7feb",
        "cursor": {
          "ref": "1ad748d5-2443-460d-a9e4-173e02e23d1d",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "3dbbb0eb-8b70-443b-8524-5f95342057ba"
        },
        "item": {
          "id": "b2a6543a-31fb-4c55-a3f4-8b9ba32d7feb",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "04e82bd5-dd44-4e80-9c6c-d569f7c16839",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db21b027-f8c4-4e06-8b97-459a1ba4fdb9",
        "cursor": {
          "ref": "3287addd-7c56-4bf9-92ef-5e04dba21be5",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "1cdaf7ae-9dc3-4c17-b90e-d120b504464d"
        },
        "item": {
          "id": "db21b027-f8c4-4e06-8b97-459a1ba4fdb9",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "d673f6e8-2bdd-4160-8cc8-4ca8d2280a2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "325e54a5-5f4e-4017-af4b-3c524a61411d",
        "cursor": {
          "ref": "b3d41849-2a04-4b9c-90d1-7111ed5f7b53",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "24e61e1d-1d3e-4199-ba20-bd1a5322019f"
        },
        "item": {
          "id": "325e54a5-5f4e-4017-af4b-3c524a61411d",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "776c0ae6-78dd-440a-b277-83191c4c9fb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20f40ec2-9f5a-4414-8266-c9d6e742e648",
        "cursor": {
          "ref": "b360a3ff-272f-43a0-911f-29206ac7650f",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "bef1ca07-43d8-41c5-a7d5-58efeba42d19"
        },
        "item": {
          "id": "20f40ec2-9f5a-4414-8266-c9d6e742e648",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "f0f7520a-93ba-468d-8e24-218a5f508b8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f136e379-7af6-4048-88aa-d879fc2d2a67",
        "cursor": {
          "ref": "19ebc828-6050-46d0-9cc8-f29769b323ad",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "cb0616cd-2aa1-452e-9d02-c1911af6fef7"
        },
        "item": {
          "id": "f136e379-7af6-4048-88aa-d879fc2d2a67",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "5bc6d967-75c9-4f91-9379-a401a2dd6982",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcd92a28-6b6f-4da8-9a39-62b97f8bae68",
        "cursor": {
          "ref": "a3cb4e40-673b-4c47-aab8-61b6a103fa5e",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "c67d1ba3-44ae-4a4b-b606-4e4a3b88b0c2"
        },
        "item": {
          "id": "dcd92a28-6b6f-4da8-9a39-62b97f8bae68",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "a1a1fb10-2b7c-4ca2-ad17-b178a9266734",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "597026cb-9dea-4e9e-9b0f-df52f62ed2a3",
        "cursor": {
          "ref": "2c76875a-d2f8-4b22-985a-d53fac34034c",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "e8beeb3c-a122-4cde-8deb-2c1c6a134181"
        },
        "item": {
          "id": "597026cb-9dea-4e9e-9b0f-df52f62ed2a3",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "bd4cda1d-5b49-4797-8e28-386eb216f0da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c2c5616-cad1-4cb8-8cc4-623409212881",
        "cursor": {
          "ref": "86cdc0b8-cc26-46f3-ac7f-bff3edca8716",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "87ece89b-9fc2-448e-af28-c89910381412"
        },
        "item": {
          "id": "3c2c5616-cad1-4cb8-8cc4-623409212881",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "5412b37c-30ba-42f1-b760-d772922f34cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e2288b7-2358-4fb2-8a59-69275388dabd",
        "cursor": {
          "ref": "f301ed57-3e44-4f72-86a6-b29effa5e84e",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "765e46f9-1b0a-471c-94cc-5237556c956a"
        },
        "item": {
          "id": "1e2288b7-2358-4fb2-8a59-69275388dabd",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "671bad59-81fe-48bc-b5b1-9eb01b0b7edf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92ece2f0-64f0-4c04-9069-5eec8e9c2f3c",
        "cursor": {
          "ref": "12c5953f-3792-4952-b47b-c1b1ca023bd4",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "cc358273-dd83-4ddd-8e25-edd7fd2407b7"
        },
        "item": {
          "id": "92ece2f0-64f0-4c04-9069-5eec8e9c2f3c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "dcb08fef-fd73-4ffd-87e3-fa23c655348b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d9b5f25-a0c3-4ef2-81dd-a668a42489be",
        "cursor": {
          "ref": "889464ed-9a07-40dc-940b-569f42c9d340",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "e0511484-03ef-4498-9c86-f1008cacfe77"
        },
        "item": {
          "id": "4d9b5f25-a0c3-4ef2-81dd-a668a42489be",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "6037c945-637e-44b5-bd07-63382c0fb77e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86ebb9b2-d25e-4069-a865-3a9d5d8589f0",
        "cursor": {
          "ref": "1b4166dc-1919-4f2c-9f2a-9685a8de42cc",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "9f8bd8a8-5ca0-4d5e-9f8a-d0bbddcb0d07"
        },
        "item": {
          "id": "86ebb9b2-d25e-4069-a865-3a9d5d8589f0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "470bd441-76c5-4b74-8323-a3cc0bf9433e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed77de8d-c66a-48d7-aed7-f8571180f7eb",
        "cursor": {
          "ref": "1ff741e3-0186-4190-8b6f-332fefa7e735",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "324780e8-0f3e-45cd-b730-a9e0e3cc05e1"
        },
        "item": {
          "id": "ed77de8d-c66a-48d7-aed7-f8571180f7eb",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "6d4aa4d1-cdff-4baa-9c7c-59c140e4d309",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e67e4475-fd2c-434f-9764-554b72975f6e",
        "cursor": {
          "ref": "787d7f96-9d87-4934-9ced-6bc989c43b84",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "c5fb852d-5eb3-453f-94e4-3b8957950547"
        },
        "item": {
          "id": "e67e4475-fd2c-434f-9764-554b72975f6e",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "a6d79e96-5dd0-4280-9d45-12b706cc2379",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c8c200b-b256-4c58-b038-991b4b141188",
        "cursor": {
          "ref": "833fd70e-f1dd-42ac-914c-9101c80d8f11",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "b2c68bc9-7c69-494a-81fe-eaa5796aa1f0"
        },
        "item": {
          "id": "9c8c200b-b256-4c58-b038-991b4b141188",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "6e6a1725-d8dd-4086-9148-a453b869c99d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b16a194-3c81-4d5e-85f3-a25d67ce3872",
        "cursor": {
          "ref": "e00d3cb8-0871-4493-bc61-a84933cc6686",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "99c2af72-a9b2-4e57-95bc-c4f99434c52c"
        },
        "item": {
          "id": "0b16a194-3c81-4d5e-85f3-a25d67ce3872",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "a7ab3681-a1fa-44e6-98f4-04a82c864a08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2828b2f-88d8-4f20-bfac-b7b0a0cdf930",
        "cursor": {
          "ref": "e3536d9e-de61-4977-995a-8a92899c1086",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "0ed39f98-55d6-40b3-a743-8aee3acfe56c"
        },
        "item": {
          "id": "e2828b2f-88d8-4f20-bfac-b7b0a0cdf930",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "1b354c81-0535-4b53-bb56-49cdecd07c37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c83779f5-397c-4f7b-a4c4-1fb9e2f44dcb",
        "cursor": {
          "ref": "13565383-30eb-4f9b-9ce4-161ebc434ea4",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "31196bb8-cbed-4e01-8767-387e12fb943a"
        },
        "item": {
          "id": "c83779f5-397c-4f7b-a4c4-1fb9e2f44dcb",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "7b9008b2-3d59-4b3f-968e-dd97e4423cb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45575468-c5e7-47a7-ac39-6161c0e358eb",
        "cursor": {
          "ref": "dc2eb8a9-d50f-42a0-b3d6-b37a024288ae",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "0576768c-0e09-4bd3-80d1-95cbf08e326f"
        },
        "item": {
          "id": "45575468-c5e7-47a7-ac39-6161c0e358eb",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "8ad88fd7-f731-4e67-9355-53071313db55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c08390d-e4ac-42bf-94a2-f92788abd578",
        "cursor": {
          "ref": "0ab4d75f-0ace-4f8e-9668-41c0890afa8d",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "c8f453a4-871e-479e-b4b9-0057557ef11e"
        },
        "item": {
          "id": "4c08390d-e4ac-42bf-94a2-f92788abd578",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "af6486f0-a701-4ab0-94d4-96fc7a51e0f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96da2a9c-1fea-43f6-bea9-9e675f241b33",
        "cursor": {
          "ref": "d39b16b3-cbbf-4f44-9b77-aae18a1fdbd9",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "98a1f3e0-42dc-4ac3-b5ac-1486b4cd8b15"
        },
        "item": {
          "id": "96da2a9c-1fea-43f6-bea9-9e675f241b33",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "a5901b1e-c567-4b5a-9845-255495558911",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9b398df-507e-4d71-bbf5-32748c9c4f13",
        "cursor": {
          "ref": "17c82f6f-c855-4ffc-b9e9-eb4ea1f3d98f",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "981ce799-9468-4849-901b-d1c1eb2502e8"
        },
        "item": {
          "id": "b9b398df-507e-4d71-bbf5-32748c9c4f13",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "775ce014-9d0a-423e-80f2-e2964e08bbbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "521df796-9382-44f3-88f6-c45156b3e318",
        "cursor": {
          "ref": "3399528c-e26f-4e84-8853-daef52eacc6c",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "a7b93915-9353-4e15-af34-47124b997d56"
        },
        "item": {
          "id": "521df796-9382-44f3-88f6-c45156b3e318",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "10172547-3bf2-4784-b755-72fc3ef94528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cbd9d48-33d2-41d7-aac7-d5eedb628ac0",
        "cursor": {
          "ref": "e9cf92ff-b278-4ebe-9b63-dc8daf87e25c",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "b1de8c2b-ff3e-469d-b692-e881b450ad4e"
        },
        "item": {
          "id": "9cbd9d48-33d2-41d7-aac7-d5eedb628ac0",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "b5f8a2ed-d93f-4908-8501-bfcb5af07305",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33f553cf-7cfa-4644-ac6c-9b01a3a701ee",
        "cursor": {
          "ref": "c197c144-8d0f-4d83-bbfa-5c1b702e1dad",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "4c6179c4-3aa2-405f-bed7-09f33b2cd018"
        },
        "item": {
          "id": "33f553cf-7cfa-4644-ac6c-9b01a3a701ee",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "3ae5f7bb-0713-4aad-8d9d-892470ead742",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36e7887e-71db-47ec-9f9b-66aa6e308b09",
        "cursor": {
          "ref": "ca70628f-1a3e-4fc3-b540-ddb030f420cb",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "0e9c99e5-f31d-48f7-96b3-dacf446fdd2f"
        },
        "item": {
          "id": "36e7887e-71db-47ec-9f9b-66aa6e308b09",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "a65e6b2d-6136-4288-aa4e-df5c9fe158e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81e268aa-40f5-4c99-82a5-2377c61b97bd",
        "cursor": {
          "ref": "73347a69-f8f6-48ce-b981-7140a24e5ec1",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "46159d0d-8584-466d-85a7-3cd749cee2f1"
        },
        "item": {
          "id": "81e268aa-40f5-4c99-82a5-2377c61b97bd",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "db104b35-0a9e-4064-93d9-bd18f2c9c432",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "828bb427-9794-440c-93d8-ab0ae8fe2734",
        "cursor": {
          "ref": "581ca4cf-9b1c-4a4b-874b-b41c2c99a26f",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "cef884e0-3518-44f2-802b-3d7a33f9aa07"
        },
        "item": {
          "id": "828bb427-9794-440c-93d8-ab0ae8fe2734",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "1e7e7d42-aa5e-43b2-a3b1-14dcff2ba28e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2ef7670-7838-485c-af5b-78b6f9c905dc",
        "cursor": {
          "ref": "a9db1ea2-8237-4ef5-9cba-5644550f3eb2",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "54fa6d6f-84fb-436d-b982-507ad33db952"
        },
        "item": {
          "id": "c2ef7670-7838-485c-af5b-78b6f9c905dc",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "acef6e48-72fe-494d-950b-4bd01ca98f85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "999ac7e7-662c-4e43-9efa-07722e74f476",
        "cursor": {
          "ref": "034e2c57-a3dd-4879-aeae-42d58b425660",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "28b33980-75d1-4c12-a1bb-98ab98267ba5"
        },
        "item": {
          "id": "999ac7e7-662c-4e43-9efa-07722e74f476",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "eabbe3a9-574e-42ee-9bf8-8c9e9e136795",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49db3bf2-cc74-4f95-8761-1a6cd54641c3",
        "cursor": {
          "ref": "0084c486-d294-407e-a11b-8ccc3f864e4c",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "827f4a95-c6bd-4c65-b57a-2e8ee4f8fef8"
        },
        "item": {
          "id": "49db3bf2-cc74-4f95-8761-1a6cd54641c3",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "773013b9-51ae-4007-9590-1a2207b050b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f707adac-44af-4330-951b-780afa4f9858",
        "cursor": {
          "ref": "6be97ddc-429a-48a3-9209-e6e05b6eea38",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "09065512-4a7a-4064-aa2e-ddbe39da8bdc"
        },
        "item": {
          "id": "f707adac-44af-4330-951b-780afa4f9858",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "a98c5fb8-2dcf-4e33-bd60-b36ed2861a2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b418bb17-decd-4a90-9d8e-157d74d930ad",
        "cursor": {
          "ref": "aa805ccd-2993-48b3-895f-c31541e651e6",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "2cfbf22b-0186-49cb-b0ef-635623d28f89"
        },
        "item": {
          "id": "b418bb17-decd-4a90-9d8e-157d74d930ad",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "081ed865-7874-49f8-b108-22124dfcf6aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f65df870-318b-4602-8a5b-cdb9103b1566",
        "cursor": {
          "ref": "b731f983-20eb-42f3-96c1-cc90aa132784",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "5dfe3cab-4536-4e92-9683-a9d574739a3c"
        },
        "item": {
          "id": "f65df870-318b-4602-8a5b-cdb9103b1566",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "4efb3813-5b4f-495d-b581-505ba388c0f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7123660-41fc-43f8-8f39-f4edb3c13c72",
        "cursor": {
          "ref": "a94863ab-ba67-4cb6-9d97-4302618ee37e",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "8d23aa04-b69a-4798-acd0-628183b7c329"
        },
        "item": {
          "id": "a7123660-41fc-43f8-8f39-f4edb3c13c72",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "353da74e-9329-49a9-85f1-925c7c994cf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20e87222-66b8-45f5-9599-71a5977d7e1b",
        "cursor": {
          "ref": "38c62114-1653-435c-888d-a8b66efcefbc",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "2369529a-d538-421e-8866-4e522011c28a"
        },
        "item": {
          "id": "20e87222-66b8-45f5-9599-71a5977d7e1b",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "293d5011-72bf-4ba1-93fe-06ba0ad2d6dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "488f0833-75f1-49a9-8f70-c4d765b099ef",
        "cursor": {
          "ref": "7914a38d-5758-4501-80b4-22357c07e445",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "b2256190-f37a-428b-8b4e-a92bc0ecd78f"
        },
        "item": {
          "id": "488f0833-75f1-49a9-8f70-c4d765b099ef",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "209d0369-d8b2-4611-b27c-d4fac5c4417e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0de559a-43a5-475f-b2df-338885a8b66e",
        "cursor": {
          "ref": "2c012716-ffaa-4176-9ca6-ca8d47f707e2",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "8313110e-7356-48ea-b1c8-0691e0e786e9"
        },
        "item": {
          "id": "f0de559a-43a5-475f-b2df-338885a8b66e",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "d9c9001e-3f2d-4514-9142-84f641bfffe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99a7ac92-bc28-4607-9629-d2cc84952790",
        "cursor": {
          "ref": "a5adb4f1-4602-48b2-ad5f-41b3346538c9",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "cead729a-e899-4e79-808a-2d02229a28b8"
        },
        "item": {
          "id": "99a7ac92-bc28-4607-9629-d2cc84952790",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "51aacbb2-5676-4eca-be1a-43dc0dbedafa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1a0f44b-7ddd-4902-90d9-bf480be6f7c8",
        "cursor": {
          "ref": "0254ed70-dade-48f4-94f6-2ad9d326f4a7",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "fd0b7915-198b-4ae9-96fa-56c478e5d6d3"
        },
        "item": {
          "id": "b1a0f44b-7ddd-4902-90d9-bf480be6f7c8",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "4905083c-4a69-4b18-a29f-127b7a6c8c17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f580518-285a-46cb-9cd6-280237bba3fb",
        "cursor": {
          "ref": "fd73b4db-1623-4c7e-939d-2fbacaebc6b8",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "4506fee4-3098-4d4b-a3e9-e24c70f28626"
        },
        "item": {
          "id": "2f580518-285a-46cb-9cd6-280237bba3fb",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "7db71ac1-fceb-4148-8e53-a7a1e5d77770",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fa4219a-be92-4eac-9227-bc319eb2eb1b",
        "cursor": {
          "ref": "ec208e37-906d-48ad-8a61-169f55f9dac4",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "b48cf7aa-c1b9-4a26-9acb-5578acc6269e"
        },
        "item": {
          "id": "4fa4219a-be92-4eac-9227-bc319eb2eb1b",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "2a69e44a-d113-485a-bcb3-2e716e9017bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6649b2a9-db6c-4c23-ab27-6faf99c0474f",
        "cursor": {
          "ref": "2bcf88fc-da72-45a1-b3ad-fd5be8e3353d",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "2b584ad3-9b23-48e2-b6f5-701b760b94b2"
        },
        "item": {
          "id": "6649b2a9-db6c-4c23-ab27-6faf99c0474f",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "68273097-244c-41c2-9443-b05b17a9f098",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f944521d-0872-4f15-803b-17658b018746",
        "cursor": {
          "ref": "e675c7a9-e980-4a8a-8067-edb0a55607c5",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "407837c5-fcfc-43b7-a1c5-144802d24791"
        },
        "item": {
          "id": "f944521d-0872-4f15-803b-17658b018746",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "1fd8ef80-f3cc-4946-af1d-b6e2e01eef04",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aafbd363-a0b3-4535-837b-4355511d09ce",
        "cursor": {
          "ref": "05af02c8-aa83-4958-8628-d5230b086adb",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "37fda85e-deb6-44c3-b987-ee9a109a249c"
        },
        "item": {
          "id": "aafbd363-a0b3-4535-837b-4355511d09ce",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "ac725079-542c-49d5-9d2a-895e494e02a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "ef1773e3-0861-4bee-a202-af741b9d1812",
        "cursor": {
          "ref": "71284d80-dfbe-48fe-ae7d-342f5b477515",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "a39f3ec7-4a3f-4b1f-87d0-6bf124338315"
        },
        "item": {
          "id": "ef1773e3-0861-4bee-a202-af741b9d1812",
          "name": "credentials_issue"
        },
        "response": {
          "id": "22296b96-e4ce-4787-acd5-336724542747",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "592a5b49-6bfe-44e8-ad6f-13123a231c1d",
        "cursor": {
          "ref": "f40a5067-3dd8-405d-b54c-7fa4f7a9e26f",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "da330dd5-4ccb-4ffc-9677-58d6708d5fe3"
        },
        "item": {
          "id": "592a5b49-6bfe-44e8-ad6f-13123a231c1d",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "e6d4eea3-12c4-439a-b052-a44e7b199f77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "2d6fae52-c187-4f8c-9da3-b011510a043d",
        "cursor": {
          "ref": "ad0316f5-a70d-4341-adce-d388b9d2215a",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "90e3be0b-a1d2-486d-a0b1-a28b9eae9576"
        },
        "item": {
          "id": "2d6fae52-c187-4f8c-9da3-b011510a043d",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "fc0973b5-0b47-4cd6-9323-c20e6d8194a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "a1f5d1fd-648d-4cd8-abcb-663579f8c819",
        "cursor": {
          "ref": "c1ad7701-6bed-436b-87be-5f49651e3e60",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "aeb85824-26fd-4044-9483-ccf2b70d2c17"
        },
        "item": {
          "id": "a1f5d1fd-648d-4cd8-abcb-663579f8c819",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "bd87cf55-13ff-4af2-a179-3678e13cec7f",
          "status": "Created",
          "code": 201,
          "responseTime": 8228,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "839e17bb-9f84-4f63-bb1d-e847184a0337",
        "cursor": {
          "ref": "c2b42201-c1dc-44a3-9a2d-8cd4547af967",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "8c30e15b-4af1-4972-a397-bc81c249404d"
        },
        "item": {
          "id": "839e17bb-9f84-4f63-bb1d-e847184a0337",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "72061ed0-4ad6-46d5-b17f-15d52c0532df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "e5923c6c-8849-4de1-b8c2-87dc690c0d57",
        "cursor": {
          "ref": "d94caf90-1d9e-48a6-96fd-fba9b047ba77",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "6b872ad4-76a7-4851-87da-0577e3431efb"
        },
        "item": {
          "id": "e5923c6c-8849-4de1-b8c2-87dc690c0d57",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "dc9121db-75e5-4bca-a2c1-155f17835dbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "65f498a3-b2e2-4426-99a1-9b2b93f5786c",
        "cursor": {
          "ref": "fd6046ba-944c-466c-8a19-d54d6c3c4e76",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "3764f451-f5ae-49ef-bf99-fb102f6a3470"
        },
        "item": {
          "id": "65f498a3-b2e2-4426-99a1-9b2b93f5786c",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7aedf3c2-2dc6-48ad-be0a-901dc84f39a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "467900ae-5893-4c7c-a4be-0ef72ac3a82d",
        "cursor": {
          "ref": "760d9581-83cd-44ba-9f90-63d95eb2b64a",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "77f33f95-2a36-4344-b2b8-58d0f9295d22"
        },
        "item": {
          "id": "467900ae-5893-4c7c-a4be-0ef72ac3a82d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "4d169677-48f2-43b0-b347-202d293134cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67ea0169-43d2-452a-b641-7c4dafc3d606",
        "cursor": {
          "ref": "26625745-c4c6-4f7a-9ccd-bd8a3e25654d",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "faf049f9-b4e3-414b-b113-6301b6e3e010"
        },
        "item": {
          "id": "67ea0169-43d2-452a-b641-7c4dafc3d606",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "c813835b-4f58-45ef-a4a5-500f339ee99f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bca3efe-7192-4258-8f81-8b06801b5fb5",
        "cursor": {
          "ref": "c5444dd0-56c2-4dea-91c8-0cf49692dc38",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "d1a5a355-5b58-41f8-8380-449d51c754c1"
        },
        "item": {
          "id": "5bca3efe-7192-4258-8f81-8b06801b5fb5",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "cb70fc81-af57-456c-b94d-d6776a5cb386",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e5a9b75-2098-4a72-abc5-091b48d2e2b3",
        "cursor": {
          "ref": "3de00e64-af1c-4fdf-bc7c-0be9fa896345",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "425b68e1-3c44-4c3c-88f1-94b54207b032"
        },
        "item": {
          "id": "5e5a9b75-2098-4a72-abc5-091b48d2e2b3",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "3111607e-85ee-4683-96d6-ebd7be97173b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8973515e-5d86-45e3-b284-a8481d472177",
        "cursor": {
          "ref": "9328f0b7-786e-44a2-88f0-e2323c41781c",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "ffd925ce-9ef4-48af-b983-f03e1029e88f"
        },
        "item": {
          "id": "8973515e-5d86-45e3-b284-a8481d472177",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "0652e542-2634-4591-9d3c-5e4e960ee68e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8943e2a3-0d70-4072-8c42-efc5df5fa947",
        "cursor": {
          "ref": "c428f678-2249-433c-bfad-064512d15711",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "1b611e5a-5f27-422d-bba9-8c23eac5718c"
        },
        "item": {
          "id": "8943e2a3-0d70-4072-8c42-efc5df5fa947",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "6d26e685-0d8e-46ae-9898-748329e7f83d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a3f425f-6a53-43d0-9059-503be90d5b48",
        "cursor": {
          "ref": "2e79029e-223e-4b1c-8bdf-9e69f242efb2",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "710e6fd8-266c-4cfb-bc96-cc2ce353de46"
        },
        "item": {
          "id": "4a3f425f-6a53-43d0-9059-503be90d5b48",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "dca60148-351a-4d62-8ba7-2452354097dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03037fc5-2383-430c-bf62-057101c07fe7",
        "cursor": {
          "ref": "12e9bde5-fa54-45b6-be3a-00aeb7a59c49",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "1b9cb225-a17c-4af2-a865-1112d335b91d"
        },
        "item": {
          "id": "03037fc5-2383-430c-bf62-057101c07fe7",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "cbec741e-7c3f-4f26-a0f1-7fe54c8cd5e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aff0bc0a-e13a-41c8-872a-88f7511085dc",
        "cursor": {
          "ref": "a0372a5b-eb30-4fa5-b672-d02d0b2578aa",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "2a7d4caf-c776-41d0-92c7-3a9dc53750b5"
        },
        "item": {
          "id": "aff0bc0a-e13a-41c8-872a-88f7511085dc",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "1c03de74-181d-4602-b535-00f35531e8d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7da36898-6f34-428a-9ecd-97774ba6bbdc",
        "cursor": {
          "ref": "7feb274c-5784-41e5-9a0d-cdf91ce20994",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "29fa0216-0208-4968-9131-ce259f59a2f2"
        },
        "item": {
          "id": "7da36898-6f34-428a-9ecd-97774ba6bbdc",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "d953ba7d-d6fa-46cb-8ab7-019cc26c99c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cecfb5a5-f1f1-4c47-90b3-eb86233986a7",
        "cursor": {
          "ref": "5d14540a-bad4-4672-a209-44af78c38cb4",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "1f4b98a8-824d-427b-b9b4-474ab8beb57e"
        },
        "item": {
          "id": "cecfb5a5-f1f1-4c47-90b3-eb86233986a7",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "117e80ba-bea5-4ea5-bc87-1b5c2d230b4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "999d490b-700f-48e5-b3a4-adad970d51c0",
        "cursor": {
          "ref": "af3b27d3-ac9f-45cb-b01c-6a4ee1ea9e96",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "b79adce4-6f28-4583-9fb3-897a115e8b4b"
        },
        "item": {
          "id": "999d490b-700f-48e5-b3a4-adad970d51c0",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "3ddafe8a-f0ed-4c05-8ca5-224512fb0bd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79e2d978-a95c-4743-b4be-b8ced6beec02",
        "cursor": {
          "ref": "68f98c84-7bc0-4335-9ae3-a5bcc940c1f2",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "fab385ea-fda0-43a3-89b2-f10bd885482d"
        },
        "item": {
          "id": "79e2d978-a95c-4743-b4be-b8ced6beec02",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "863e3642-9464-4549-a3a6-9e19b6debb51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be3648de-53f3-458b-a9d6-ddc1e81fe55f",
        "cursor": {
          "ref": "896e6769-8f30-4a50-b1a0-6d498d2e0f61",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "d251e510-4bb3-4991-b902-ea590cb9debd"
        },
        "item": {
          "id": "be3648de-53f3-458b-a9d6-ddc1e81fe55f",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "d73879f6-bdf9-4a29-8115-9cb32b54d23c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7abb375-1355-443d-a624-83c3e76b0093",
        "cursor": {
          "ref": "aada9e93-39c4-4362-91eb-eaa668d7af84",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "997d8a20-4166-4f21-8d95-b80239aafac4"
        },
        "item": {
          "id": "d7abb375-1355-443d-a624-83c3e76b0093",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "b204ff41-b9bc-4549-98ba-c407b00c9fe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be6ca395-1bcb-423c-94ce-6eccb1109c92",
        "cursor": {
          "ref": "dd03239a-9d9a-4ded-a600-066d0911bddd",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "3733e9c8-9c71-44e7-801f-e33271c11ea1"
        },
        "item": {
          "id": "be6ca395-1bcb-423c-94ce-6eccb1109c92",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "acb03579-4ea5-46da-a678-d06083288a60",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 21,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "12b5224d-3e8d-4ce2-8db1-99cb41c24121",
        "cursor": {
          "ref": "d46ca86d-569a-4285-965e-0d35d01307d6",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "59c6685a-ffab-4644-b910-c28428376bad"
        },
        "item": {
          "id": "12b5224d-3e8d-4ce2-8db1-99cb41c24121",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "b631567a-11cf-4071-8220-2fa679dcbab4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aadf646-9e7b-43bb-b242-5055423060ac",
        "cursor": {
          "ref": "124a8d90-fc78-4327-890d-44af2fa967d3",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "96e8aeef-0af9-4af1-939b-84ea2732edf6"
        },
        "item": {
          "id": "5aadf646-9e7b-43bb-b242-5055423060ac",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "4bb85ef7-acba-456f-92aa-444a5d50ac9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32467cb9-1218-4d89-a33b-221bfcf4c5f6",
        "cursor": {
          "ref": "942da9b8-df00-4b0c-a4e4-660b6e2f42db",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "9a5684b3-1128-42c3-9b9a-d58a94f40c68"
        },
        "item": {
          "id": "32467cb9-1218-4d89-a33b-221bfcf4c5f6",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "04fef4d2-5973-41c4-8d07-64a038f3c7d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a47495cf-f143-464b-a32c-712b73f5ed16",
        "cursor": {
          "ref": "96312c4e-4401-4ae3-9c0e-cfba8ba92b52",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "95e077b1-0162-446d-9407-e6216d8eef16"
        },
        "item": {
          "id": "a47495cf-f143-464b-a32c-712b73f5ed16",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "c6dec3e6-79d1-4e6f-b298-a3f973b11ae0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd8fa843-a0e2-4f92-9218-cbf47d6783df",
        "cursor": {
          "ref": "0a03991c-826d-46a5-aa50-5a1a9668535e",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "bcb68caa-058a-433b-bf93-3360c740210b"
        },
        "item": {
          "id": "bd8fa843-a0e2-4f92-9218-cbf47d6783df",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "86f1fa89-78a5-40fe-872d-49027da6dc76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5658e2dd-fbf1-49dd-b512-46059281e9d8",
        "cursor": {
          "ref": "e574dc8a-34de-4825-9e6f-a8ee2e46f45d",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "6d1a7c01-a41b-4694-9220-1f6186c34d48"
        },
        "item": {
          "id": "5658e2dd-fbf1-49dd-b512-46059281e9d8",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "2fd985bc-063e-4cc7-851e-abb5f1388a0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3ae269d-7503-4751-a8e6-3e0ab8a34541",
        "cursor": {
          "ref": "50bfe4d3-4383-412c-b1bb-6bc694bf885f",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "c320cc12-dfb3-4428-a991-50164623e30b"
        },
        "item": {
          "id": "c3ae269d-7503-4751-a8e6-3e0ab8a34541",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "0132284a-2fca-47d8-9677-4973aafd8f13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "599ebf29-1b10-4f04-89bc-85e2cfc55a3e",
        "cursor": {
          "ref": "3c93d179-80e0-410d-9e62-90cc5d798204",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "48297790-9554-446a-b670-d39df0b48bbd"
        },
        "item": {
          "id": "599ebf29-1b10-4f04-89bc-85e2cfc55a3e",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "d483023b-1636-4ac2-8147-e856e13f3873",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 16,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "9fc64f3b-cfac-4e30-9d03-e3d5c5b55234",
        "cursor": {
          "ref": "7b21b3bc-fcb0-402f-aa3f-6fc8d209a383",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "73465115-2f89-48de-9655-10314517a871"
        },
        "item": {
          "id": "9fc64f3b-cfac-4e30-9d03-e3d5c5b55234",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "60adebe1-b47e-445d-be49-5f0ecf4bc7ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f701d1d6-931f-43c8-b39d-2432cab24810",
        "cursor": {
          "ref": "81f3aae6-d7e9-4053-bae0-55689c3cc31f",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "ea640284-ab7e-4b1a-81f7-f6250103439c"
        },
        "item": {
          "id": "f701d1d6-931f-43c8-b39d-2432cab24810",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "df960ede-05c9-459e-b515-d30f50f16d83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08d675b7-3ab7-4f52-9eeb-e1f38109e43e",
        "cursor": {
          "ref": "645efe37-1d6e-48ed-8d7e-cb930632d34c",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "9bab0cc4-2d41-4902-99c5-e1e0d2028bcd"
        },
        "item": {
          "id": "08d675b7-3ab7-4f52-9eeb-e1f38109e43e",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "7fd4f271-5919-43cd-9ac2-ce878b9365fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f73eb004-c3e0-4dfe-803c-1c39f97a0671",
        "cursor": {
          "ref": "f26890b9-0025-4028-acb5-d0241d2d6ea0",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "d59f7767-0f1e-488b-b719-25e36ce95c16"
        },
        "item": {
          "id": "f73eb004-c3e0-4dfe-803c-1c39f97a0671",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "abc1199f-e8e1-4d49-a041-bf67e3b353d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27c5432c-a3be-4070-be94-7c721fd28102",
        "cursor": {
          "ref": "7c174e82-6054-47b8-9083-1914cf93f408",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "9b57f3bf-e52a-4a12-ba15-36c871bb9513"
        },
        "item": {
          "id": "27c5432c-a3be-4070-be94-7c721fd28102",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "6d269b67-37e1-4437-adbb-baf09073e025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47845071-4232-405a-a81e-0e389f76dcd5",
        "cursor": {
          "ref": "7df86c4f-7bd6-49eb-a694-715e3e8a4b35",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "50586141-a310-456b-bdb3-1d1a02cb6c1f"
        },
        "item": {
          "id": "47845071-4232-405a-a81e-0e389f76dcd5",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "f0d18a74-b1b1-4b4d-98b2-5d81074178be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86d6850e-104c-4fbe-a37d-07ffcebc5863",
        "cursor": {
          "ref": "084a63d8-29fe-44a0-a5e7-f2a4adf9a00f",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "919f768a-ecb8-461b-b377-561a9768a171"
        },
        "item": {
          "id": "86d6850e-104c-4fbe-a37d-07ffcebc5863",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "f65527f4-a7a6-4ea3-8ee5-a04ab6a95ba9",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 34,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "c2763cc5-33aa-4fbd-9d9b-3574e0daf209",
        "cursor": {
          "ref": "0318e71c-52b7-4814-92e7-5e75b48ccf9a",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "59c81b31-3df0-44fb-91c4-6bc280ab6c80"
        },
        "item": {
          "id": "c2763cc5-33aa-4fbd-9d9b-3574e0daf209",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "f1228919-ed4b-42ae-b5c0-88892092718a",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 16,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "98dc4276-eb9b-4608-98ba-5af3e7ccb0ca",
        "cursor": {
          "ref": "44e36292-6ad1-474e-a561-0db405ab97d2",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "7074dfcf-d580-4491-b5c3-8c755dce4451"
        },
        "item": {
          "id": "98dc4276-eb9b-4608-98ba-5af3e7ccb0ca",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "d6f13cfd-b095-4e6b-b96f-0f24828ca921",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 18,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "87ee8a9d-4c48-40e4-9be6-091f6a2baf2d",
        "cursor": {
          "ref": "a8989e2d-1c48-4959-afbe-0887e0a93c1c",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "f2be0e8d-72fc-405a-b364-235ad00a0059"
        },
        "item": {
          "id": "87ee8a9d-4c48-40e4-9be6-091f6a2baf2d",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "bc1f68b4-6b0c-4268-a7d2-f938f68d2d90",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 24,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "ce6f325e-92e9-4b44-ad4c-5f8c6c505232",
        "cursor": {
          "ref": "eac212d9-8de9-4602-ad6b-6a6f550757c1",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "bea61e17-a2c5-4ff9-b07c-1dc5b5f2090c"
        },
        "item": {
          "id": "ce6f325e-92e9-4b44-ad4c-5f8c6c505232",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "d41c0a37-82b6-48b4-a555-8c55a66d4e7c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 19,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "ffac48a6-f77c-4ae4-80ba-aed08fc49367",
        "cursor": {
          "ref": "f507e2c3-2981-4474-866d-69b422dd6223",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "577616fa-abd1-4e33-a54e-45fb91f8b27b"
        },
        "item": {
          "id": "ffac48a6-f77c-4ae4-80ba-aed08fc49367",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "7ee104b1-4430-4ed2-b0d3-fff6eef39213",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 19,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "a6eec86c-2f85-45c3-b2ab-fe50cdb6d28a",
        "cursor": {
          "ref": "7c33054e-876f-4279-9075-3199c58a8e4a",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "5ac6cc06-7f12-404a-b39e-24abdfc97bed"
        },
        "item": {
          "id": "a6eec86c-2f85-45c3-b2ab-fe50cdb6d28a",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "c0c7c7ed-07f3-4239-95e7-89ac47fb863b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f405ad93-effb-4159-bad5-6a68878bf35c",
        "cursor": {
          "ref": "69feceb9-975d-4e82-accf-5002c5fbb4c2",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "12eb7585-431f-4107-afd3-3cc57d7767e2"
        },
        "item": {
          "id": "f405ad93-effb-4159-bad5-6a68878bf35c",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "05a801ca-6392-458b-b750-8a70af0abde4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57a3a385-1d52-4689-9fa7-e4c7aaea6e32",
        "cursor": {
          "ref": "999c40ad-3ad2-4f89-a6c1-9e3342a85664",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "a02db448-6732-40c3-848d-f526cf870e81"
        },
        "item": {
          "id": "57a3a385-1d52-4689-9fa7-e4c7aaea6e32",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "134c9cd6-31c0-4c3f-913a-133eaeebd856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3f5ff6f-56f1-45dd-bd6e-e74c0dd9b132",
        "cursor": {
          "ref": "d4bc5ce9-a00e-4623-84cd-8165dbb6dd98",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "49dc2046-c0fe-4468-b37a-138ba42cdbf0"
        },
        "item": {
          "id": "f3f5ff6f-56f1-45dd-bd6e-e74c0dd9b132",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "6a06865f-a509-4900-89fa-483bbda2915f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57cece13-eb30-4992-ab6f-f37c0887f8dc",
        "cursor": {
          "ref": "677062bf-abb2-4132-a8ce-b07126d41079",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "35e8903a-70f2-4cb4-bf9e-18b411960a27"
        },
        "item": {
          "id": "57cece13-eb30-4992-ab6f-f37c0887f8dc",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "9c818af7-dc61-49cb-a178-b99f5d50b0a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17decfa4-40be-4ebe-9e51-42492475632d",
        "cursor": {
          "ref": "ae7ae0e9-fc1e-491f-b28e-647a92bf253c",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "867fac82-3997-4c1c-9c1a-73b615b8f5b6"
        },
        "item": {
          "id": "17decfa4-40be-4ebe-9e51-42492475632d",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "56495ef3-de26-463d-b211-cdc88e540f5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6b9f415-282d-4480-92e1-7594b200cbe9",
        "cursor": {
          "ref": "5c6ef7da-026c-404b-a319-ead17f470237",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "5556fe0b-6919-4c55-b25b-5d9cf631ecb7"
        },
        "item": {
          "id": "e6b9f415-282d-4480-92e1-7594b200cbe9",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "55e2d644-3a4d-4cc5-b0a3-70578a0458b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ea99ec5-788d-47f5-95bf-59e5ad1e934f",
        "cursor": {
          "ref": "1ed9821e-cd2a-4915-b181-e4f298351c0e",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "7c8e3098-508f-4b81-8562-6f5d7993160a"
        },
        "item": {
          "id": "8ea99ec5-788d-47f5-95bf-59e5ad1e934f",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "4d317de4-3db2-4064-88f5-ac51442ac229",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6332d39b-04d8-4533-a8f7-603ceeda8eaa",
        "cursor": {
          "ref": "251f1f80-d374-4289-9f2e-f044de52a223",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "6b55a738-c44f-44c5-90ae-624c79f4e44b"
        },
        "item": {
          "id": "6332d39b-04d8-4533-a8f7-603ceeda8eaa",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "57a4747c-8705-45e1-9b89-fa3a20d9fb54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e9d812a-a75a-4cda-8b16-d9a9602ef8f5",
        "cursor": {
          "ref": "611d693d-d5ca-4d76-9ffa-2cbc1e924156",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "9a0e8e58-9270-4918-8cdf-d309a2fac4a4"
        },
        "item": {
          "id": "3e9d812a-a75a-4cda-8b16-d9a9602ef8f5",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "d4f88588-3136-4445-92fd-0bce31e65c71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c8eab6b-2b95-4cea-a085-bb9e1b76d2f8",
        "cursor": {
          "ref": "59e53465-4d62-45a1-9178-42f56bdc977d",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "870de594-9bd5-4e3a-8c30-cb245195aba1"
        },
        "item": {
          "id": "2c8eab6b-2b95-4cea-a085-bb9e1b76d2f8",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "a061d025-201e-477f-9b80-8452bbaeff10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1309e9a6-b2ee-4a95-900e-e1f5265c0ad5",
        "cursor": {
          "ref": "a12b1ee1-f59f-4ff9-aca8-24a55010c77a",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "8f10fb0e-a54e-42b6-9175-fb1c0f702281"
        },
        "item": {
          "id": "1309e9a6-b2ee-4a95-900e-e1f5265c0ad5",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "b34376b5-b7a5-41a0-91b8-763913a786fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0139f9b-5d77-4326-b515-1ab617c9eb4a",
        "cursor": {
          "ref": "909ff2b3-c8cc-432d-97fc-f7c90d94a017",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "14597835-2c7e-4e4b-8b28-7162a13c01da"
        },
        "item": {
          "id": "f0139f9b-5d77-4326-b515-1ab617c9eb4a",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "2e36982c-5208-4923-b893-d6e3790e85a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1769bfaf-3c0b-4c61-9b6d-e44302db806a",
        "cursor": {
          "ref": "8b6ced7c-de43-4b3c-bd04-244ed3cdec02",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "0886c030-d228-4ed9-8305-783d14088869"
        },
        "item": {
          "id": "1769bfaf-3c0b-4c61-9b6d-e44302db806a",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "2f46a3a0-9980-48ab-a0f1-2072f321868f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "256daa3f-ad85-4fc1-aee4-bacaaba2b60e",
        "cursor": {
          "ref": "90b1200f-57d8-4357-ae69-d9eb3f4182ad",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "e568c560-4600-4a2b-bc54-4ca3509668a0"
        },
        "item": {
          "id": "256daa3f-ad85-4fc1-aee4-bacaaba2b60e",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "b9f0c10c-9c8f-41fe-8aba-0f6ff5cf81cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8329729-cbac-41bb-87bd-a190e325d1c1",
        "cursor": {
          "ref": "b0521b1e-4da2-47ad-bee9-e61388a2856f",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "1177e3d8-e168-4df2-9df8-d8944b12abd8"
        },
        "item": {
          "id": "d8329729-cbac-41bb-87bd-a190e325d1c1",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "58a20b99-8298-459f-afdf-c27eb43a2731",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83aa9af6-9750-4a20-a822-e28d4ecf1429",
        "cursor": {
          "ref": "0e46fc96-0441-4af2-8a05-11b47ad2bbf1",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "9fbea956-55d6-4a1a-abcf-6774eb28b839"
        },
        "item": {
          "id": "83aa9af6-9750-4a20-a822-e28d4ecf1429",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "82c6079c-bfb3-4e81-8abf-6cc6bc5ef21b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bedcbc87-3656-4941-b9ca-ae3d37908457",
        "cursor": {
          "ref": "40d4a58e-256c-40c2-b6c1-bddf8a9e7984",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "a7afb534-903e-4448-a779-6348939bc2ab"
        },
        "item": {
          "id": "bedcbc87-3656-4941-b9ca-ae3d37908457",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "bfb75986-6c11-4fdb-9e3e-b5c4fac27ff0",
          "status": "OK",
          "code": 200,
          "responseTime": 62,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "93be5c5e-ee6c-4527-ac55-8f583d5306b4",
        "cursor": {
          "ref": "f0406f81-7626-4ff7-ba77-14953fbdb2c5",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "df6e33b5-1f64-492e-a576-f75eb328ad37"
        },
        "item": {
          "id": "93be5c5e-ee6c-4527-ac55-8f583d5306b4",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "2ba7bbf9-8e5a-46e2-864b-568811bb2caa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64b38efe-8b74-4d12-9546-2b39d525dec8",
        "cursor": {
          "ref": "89a747ee-b90d-45aa-90c0-9cf3d7476b58",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "b58f5fc3-fddf-4d75-bf59-93cbc2d7449f"
        },
        "item": {
          "id": "64b38efe-8b74-4d12-9546-2b39d525dec8",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "1034129c-33e4-4339-adb9-f7973d4c47d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdf611ff-1ab3-4c3f-8256-4159240214f9",
        "cursor": {
          "ref": "1b586610-0010-4df8-bc17-b82d5bb5e6d7",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "c9dfaa07-ad5b-48fe-9a30-a77a56947e0f"
        },
        "item": {
          "id": "cdf611ff-1ab3-4c3f-8256-4159240214f9",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "58777b70-9c6d-4030-a991-57f92b348d0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a02f993a-b6e0-46de-8a03-704fd00ec423",
        "cursor": {
          "ref": "e3800d74-721a-41b8-b211-2cd711ed13b6",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "9d657a72-97a0-4d58-87ae-14a5e2e34327"
        },
        "item": {
          "id": "a02f993a-b6e0-46de-8a03-704fd00ec423",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "ce1a44e4-9a50-4486-a61f-8d2d966fb9e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17caaf04-d051-4fe5-9a9b-5cd879163655",
        "cursor": {
          "ref": "a9a33418-4f67-4585-8976-053739b58b38",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "726bab63-e58c-4b0a-ade3-71262f1c314c"
        },
        "item": {
          "id": "17caaf04-d051-4fe5-9a9b-5cd879163655",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "de30148f-e40d-4402-b89d-563449d899ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8343f4fe-a4d3-4214-8c19-2adc4fa555ac",
        "cursor": {
          "ref": "feac64b5-965b-4fb1-8966-ee570a15bf02",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "e05b06a1-b561-46d0-9de9-888f19e72f50"
        },
        "item": {
          "id": "8343f4fe-a4d3-4214-8c19-2adc4fa555ac",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "adba5877-0389-400c-8da5-9a8eca9c666a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d623e71a-2e85-4797-b1ab-81c930a1e2fd",
        "cursor": {
          "ref": "b31ba43e-74a6-4e86-bd08-c0ec1a5dfcd3",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "ee949c6f-f1b5-4362-986e-5f931e653da9"
        },
        "item": {
          "id": "d623e71a-2e85-4797-b1ab-81c930a1e2fd",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "9b59b7c0-4f2d-4e2c-a7f1-034c8ef3be5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f9e063e-e12a-4750-bdf4-a3915fe10805",
        "cursor": {
          "ref": "36c09c04-06d1-42a1-b98b-ba2a3b13acf7",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "6e2e2c0e-aa94-4cee-a9f4-cb9eb9bbae50"
        },
        "item": {
          "id": "8f9e063e-e12a-4750-bdf4-a3915fe10805",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "032c2986-9d2b-48a5-bd70-632b7f04eb57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3eacf80-b231-4f99-9701-c51bf0174b2c",
        "cursor": {
          "ref": "f37dd3e2-7ed5-44a6-976a-4043aa579deb",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "f119290a-ed19-4ca7-b529-55bf25863a91"
        },
        "item": {
          "id": "b3eacf80-b231-4f99-9701-c51bf0174b2c",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "dbeff876-bc7d-409a-bfec-4e424aa109d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aeec92e-7ebb-48de-9337-57694dc2892e",
        "cursor": {
          "ref": "0f75899a-458f-496d-b53d-38853aaa96c6",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "131ade94-70e9-4860-adaa-7c0004b573de"
        },
        "item": {
          "id": "7aeec92e-7ebb-48de-9337-57694dc2892e",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "83e55491-262c-452d-aa3f-2f8ce759443b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1af02310-7268-46d8-922f-74b61c0cb000",
        "cursor": {
          "ref": "f37553f4-bf3d-42db-bee7-84b14384e8b9",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "0498f66c-12c4-4421-903d-d73d4081ca44"
        },
        "item": {
          "id": "1af02310-7268-46d8-922f-74b61c0cb000",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "23fa3ad6-6183-4902-a48f-1c9f17d3d932",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23d69d91-e5d8-405e-a5f7-b16be48dd681",
        "cursor": {
          "ref": "2c12edbb-db16-4c99-b8d8-264a3ae76a87",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "41715480-e3f6-43c4-a732-5a325d32e8cd"
        },
        "item": {
          "id": "23d69d91-e5d8-405e-a5f7-b16be48dd681",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "84f3baf4-ce1c-4971-abb8-20821ec85747",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f92e1b8a-8929-412a-be5c-38aa9ec32511",
        "cursor": {
          "ref": "449e9b1f-664b-4f72-bb87-efc10df91149",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "ec74b600-e5c0-498c-a432-6a16c9e24e23"
        },
        "item": {
          "id": "f92e1b8a-8929-412a-be5c-38aa9ec32511",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "1c8d05ca-cc3e-4698-9e45-cf5d906ca8e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "845d9944-371a-4a6c-a01e-bf6c447aa163",
        "cursor": {
          "ref": "f73bd403-177a-4ddf-85ea-141f0a5b65e9",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "d70af66b-d223-476e-ba05-575c27499394"
        },
        "item": {
          "id": "845d9944-371a-4a6c-a01e-bf6c447aa163",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "550a0dc8-ae7e-49e8-be89-ac925b8d28a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93669a4f-8bcd-4da4-b32f-52d89648b9a4",
        "cursor": {
          "ref": "1970f50d-0139-47ee-8c2f-d01cb9b10028",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "6f045603-b961-4b7d-aa49-2109a3d82524"
        },
        "item": {
          "id": "93669a4f-8bcd-4da4-b32f-52d89648b9a4",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "413e631f-c213-4d44-bbc8-4b5ad92b0635",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49c735db-8d63-46e8-b89a-04f2d5438df1",
        "cursor": {
          "ref": "d78edf0f-9748-4930-a9e5-c05c4bae8e9a",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "72e4323b-9502-4444-972a-af102bdeacb4"
        },
        "item": {
          "id": "49c735db-8d63-46e8-b89a-04f2d5438df1",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "06356954-00b9-4a9f-b6d4-e8e63d5ee772",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85fad85f-0cef-4d6f-87a5-1e4b55b5d387",
        "cursor": {
          "ref": "994ccce0-581e-47c6-814c-4ab81ac485aa",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "174dbb3e-d988-449c-89b0-bc54a13d2485"
        },
        "item": {
          "id": "85fad85f-0cef-4d6f-87a5-1e4b55b5d387",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "6c84eb75-f727-4441-8148-832fa2777777",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef071911-bdda-43bb-8772-7b9deaa1d75d",
        "cursor": {
          "ref": "4bb5e634-6f74-4431-8dc0-04b927064887",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "15bf357c-567e-46a6-9c6b-f1bc43acfba1"
        },
        "item": {
          "id": "ef071911-bdda-43bb-8772-7b9deaa1d75d",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "87481375-0420-4967-b0db-631112cfad55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c45bd1a-a96d-41de-8089-85637e426133",
        "cursor": {
          "ref": "8b356660-ab41-4c03-8210-b18001771c4b",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "1413a1dd-bc04-4eef-b754-0efc0c146d43"
        },
        "item": {
          "id": "2c45bd1a-a96d-41de-8089-85637e426133",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "e800e060-38da-44ee-a7f2-60bfd00dd6b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a060e9c-b780-4331-9b2f-341e6f09988f",
        "cursor": {
          "ref": "68ccc8e9-e0b3-4747-8712-53db694829fd",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "0735e0eb-4b89-4617-a5e0-8743089538c1"
        },
        "item": {
          "id": "7a060e9c-b780-4331-9b2f-341e6f09988f",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "9fe37416-256c-42f3-81a1-470d8949c75b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfd62d03-2ab5-4d15-a0ba-d251c52ee1d6",
        "cursor": {
          "ref": "e83ab8f9-00f7-4194-a04a-22bc5680226a",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "7cbbca77-3245-41e3-9a6b-a17906d0150e"
        },
        "item": {
          "id": "cfd62d03-2ab5-4d15-a0ba-d251c52ee1d6",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "7052fe5d-0167-4f82-8e01-1e1ee18ee6d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af3eea52-b1cf-462e-b507-80bc9321cd77",
        "cursor": {
          "ref": "7b189bd3-12f6-42f3-bae9-456d0554ba8f",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "06fec256-1d7f-404a-b212-34eccc4045ef"
        },
        "item": {
          "id": "af3eea52-b1cf-462e-b507-80bc9321cd77",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "404293a5-2938-45a5-8691-8e96d8f366d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46564922-6e2e-455e-b22a-a8f6c9a14109",
        "cursor": {
          "ref": "add1b750-4cac-4554-bd2a-21965451a508",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "bce419df-9c7e-4143-bf07-01486bed133c"
        },
        "item": {
          "id": "46564922-6e2e-455e-b22a-a8f6c9a14109",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "563d577c-5ace-4775-9e50-349c8c50d532",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89a82ba4-fa08-4843-873a-48856de0f938",
        "cursor": {
          "ref": "b9e6adf8-02ce-4b89-975f-ee2d107a2c0f",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "e81d11fb-6fa0-4e61-83b0-762e7cfa40ac"
        },
        "item": {
          "id": "89a82ba4-fa08-4843-873a-48856de0f938",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "3677353f-ac3b-4182-8446-17cd6b0ff642",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0da8dee2-79d4-48ad-a1d3-3c5b92ebda48",
        "cursor": {
          "ref": "5ad9fb63-9f8a-4e59-a32e-705ebd75f6a4",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "a5e58ad7-f2cd-42e4-ae92-c628964b100f"
        },
        "item": {
          "id": "0da8dee2-79d4-48ad-a1d3-3c5b92ebda48",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "e465b514-3bfe-474a-9830-73abb91138d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfbb6f58-5d7c-4b02-8733-6a48e49229ec",
        "cursor": {
          "ref": "885fa53a-206f-469b-ade1-56eecef5761f",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "a097c30f-64b5-46d6-b82d-44feb5e8e26c"
        },
        "item": {
          "id": "dfbb6f58-5d7c-4b02-8733-6a48e49229ec",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "76b83d32-6dcc-4ce7-9c27-f591d804f39b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0dea206-0fa0-462b-841f-d44ae36bc4f6",
        "cursor": {
          "ref": "482b258d-3075-4088-8a06-d94225c84a87",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "9b5ec8e5-3cb5-4072-9ad4-5385eecc9db7"
        },
        "item": {
          "id": "e0dea206-0fa0-462b-841f-d44ae36bc4f6",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "2cba7dc0-422d-42cb-919b-1f936df80aad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78bc5251-6fde-4b32-a7c9-854ef201d6b5",
        "cursor": {
          "ref": "8d69db73-fdf5-4029-8dab-eb1ca7163c8c",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "17337982-de21-49d6-92c4-dd1e58ef3993"
        },
        "item": {
          "id": "78bc5251-6fde-4b32-a7c9-854ef201d6b5",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "1a8f9907-a76b-4875-879e-76e492ca1a6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "facee343-bf6a-4c82-ab3b-662d24cae4ec",
        "cursor": {
          "ref": "186d9108-0bc1-4ab8-9198-12b3f0248d81",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "3b7d0af8-7109-4840-80b9-38d488ede645"
        },
        "item": {
          "id": "facee343-bf6a-4c82-ab3b-662d24cae4ec",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "86a59dcb-26b8-4391-8283-587f00eb524e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1777cb8-7df8-4f68-9db5-c3c4df06f1cb",
        "cursor": {
          "ref": "bc22ebc1-339c-491f-bba7-196055ba8b03",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "028102c9-d573-4f8d-97c9-8a36a25e7329"
        },
        "item": {
          "id": "d1777cb8-7df8-4f68-9db5-c3c4df06f1cb",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "f1101c95-59fc-494b-8fbd-9fd61bc0b330",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "789b566f-d00b-4fba-b175-f883f9e9d538",
        "cursor": {
          "ref": "08575df8-261f-4708-b4c6-7bb46f562a6f",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "2c88b442-1229-4705-9b57-d7836935cc66"
        },
        "item": {
          "id": "789b566f-d00b-4fba-b175-f883f9e9d538",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "3e08efc7-d07d-41b4-8542-f53945b2b6c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7dc2ac5-4cd7-4d9a-ac4c-b172d56942ee",
        "cursor": {
          "ref": "127bf184-06c0-4e6b-9388-989022047383",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "661a61f6-c691-4d93-b0b9-8effd2dd1992"
        },
        "item": {
          "id": "c7dc2ac5-4cd7-4d9a-ac4c-b172d56942ee",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "0ba51072-eac3-45f6-bc2b-0a874cbf7eb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23925f17-923f-4d51-83db-0e279a96fb63",
        "cursor": {
          "ref": "2a9c5e91-1af2-42fc-9cba-9ec434ef9aee",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "3c579e64-b1c5-45f2-9f94-ed7fdbe88cd2"
        },
        "item": {
          "id": "23925f17-923f-4d51-83db-0e279a96fb63",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "24f11788-c333-4f52-8de2-5908cf8aacb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab92f702-8758-4147-af51-70cb0d6ceee8",
        "cursor": {
          "ref": "b2d26152-8699-4ed6-b189-df77df04817c",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "0d6d9665-2a82-4a60-9aad-9768b5a4993e"
        },
        "item": {
          "id": "ab92f702-8758-4147-af51-70cb0d6ceee8",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "9d0ce604-576f-4ed2-85d0-428b2dffbf3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71da7847-32d6-451a-abbf-19c5eb27dd2d",
        "cursor": {
          "ref": "8c81a84b-8d77-4476-9026-bcde15f86942",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "0d4784af-37a0-4854-92cb-c75f0216bd39"
        },
        "item": {
          "id": "71da7847-32d6-451a-abbf-19c5eb27dd2d",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "87e390eb-01ca-4f3f-ab89-d8e00f07083e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf20ab0c-00be-4e63-a26f-a70af3392065",
        "cursor": {
          "ref": "6be210fa-ed19-4718-b8d7-472dabdefc06",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "ccf2e4a0-aed2-4895-90d6-43088de657ab"
        },
        "item": {
          "id": "cf20ab0c-00be-4e63-a26f-a70af3392065",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "25456f98-25cf-4b97-8d03-1e7a1404916d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be4b8584-261e-48bb-9e8d-232e3366a872",
        "cursor": {
          "ref": "b7b9e78f-ac97-48f4-bf18-cd5988a870d1",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "94b98e20-382f-4c6f-89d9-b25bc5ad8a00"
        },
        "item": {
          "id": "be4b8584-261e-48bb-9e8d-232e3366a872",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "69760864-337b-4cfe-845e-a9c8d2654ab0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a0d915f-715f-4d51-9beb-388ca8ad7c33",
        "cursor": {
          "ref": "5662069d-881c-431a-a72f-ba8491405e05",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "80da6346-76be-46d3-9d45-1ac36c0b7532"
        },
        "item": {
          "id": "0a0d915f-715f-4d51-9beb-388ca8ad7c33",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "c6aab653-a125-4d90-8600-7966fd0dcdbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a0aaf2f-4f92-47ac-8a21-65a5cdeb04a5",
        "cursor": {
          "ref": "79586d36-ea87-4795-8e80-32a43a255837",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "ba88815d-5884-4963-80b3-b56d4e9316ad"
        },
        "item": {
          "id": "8a0aaf2f-4f92-47ac-8a21-65a5cdeb04a5",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "79782d2d-d9cf-4e4e-b470-db0e2b6296ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f834b7f-db84-452a-a762-a093ac751587",
        "cursor": {
          "ref": "0d8f1869-34da-4e7d-9ab8-ca73171e2514",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "b9eef55d-d19f-46d5-8274-502f0f6ee6f7"
        },
        "item": {
          "id": "2f834b7f-db84-452a-a762-a093ac751587",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "27b58773-ff10-4a36-99ff-7f73d36d4a90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf644e50-ad25-4d9e-a429-7540d0a05941",
        "cursor": {
          "ref": "98735038-e8c6-44c7-aa68-e9dac5e1a811",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "1f7d1712-a148-45c6-94bd-ab8b64d5fb01"
        },
        "item": {
          "id": "cf644e50-ad25-4d9e-a429-7540d0a05941",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "8e90aa74-a3be-4057-acd2-19f295600ec8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "250c509a-3fd5-4c27-b75f-476c86304ec1",
        "cursor": {
          "ref": "73bb68cd-ae7d-4d6b-ac3d-0747c3c6fc79",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "add6d1b4-068d-4710-a378-d76b39180969"
        },
        "item": {
          "id": "250c509a-3fd5-4c27-b75f-476c86304ec1",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "5f4fb420-196f-4fcb-94b5-6f0f59792e38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8e98113-e9ab-4fc4-a7fd-3a6ae108bef1",
        "cursor": {
          "ref": "f824cfa1-b00f-4772-8bc4-c2825e80d6ab",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "4a956872-42d0-460c-999d-23c2c3eb6cc7"
        },
        "item": {
          "id": "d8e98113-e9ab-4fc4-a7fd-3a6ae108bef1",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "df02ca59-d623-481d-9486-592fa17c5c0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d30678e1-8fce-46c8-8120-a73df8672bc1",
        "cursor": {
          "ref": "aef86ff3-b03c-445a-a8c2-a50d5cd29598",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "abf122e6-c752-437d-95c6-5a1cc252d2c7"
        },
        "item": {
          "id": "d30678e1-8fce-46c8-8120-a73df8672bc1",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "49775434-8424-49ef-83b5-5cb175cd575c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6557e00f-2934-499b-8907-643910fb4696",
        "cursor": {
          "ref": "02f500d6-a7a3-44c4-83e6-6bf657d4ac79",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "312f7573-086c-4639-8cc2-0b5380cea7f4"
        },
        "item": {
          "id": "6557e00f-2934-499b-8907-643910fb4696",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "983c093f-f5a3-41c5-9e71-e6b507540207",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1604b9a-1050-4ad2-a6f7-f465b995bb31",
        "cursor": {
          "ref": "274b693c-fda2-463c-8d07-e695ddc0cd6e",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "c868e7bd-0257-4331-990d-a217d798ebdc"
        },
        "item": {
          "id": "f1604b9a-1050-4ad2-a6f7-f465b995bb31",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "b0a4e03b-2047-424b-bc07-5095871225e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bae5c219-b654-4743-a440-232f015d84cc",
        "cursor": {
          "ref": "3db14589-a630-4433-b23a-929894dc4d64",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "98bdd21e-8913-4efe-a821-2ea3ff6d416f"
        },
        "item": {
          "id": "bae5c219-b654-4743-a440-232f015d84cc",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "b6fbf31f-26e5-4873-a7ed-e6963974a1ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d021c7b-120b-413d-a038-e06f7be8ef02",
        "cursor": {
          "ref": "a0192954-4b23-40c4-9d05-3c7caa462174",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "fbf936ce-b6d7-492f-8100-e38a16bf91e6"
        },
        "item": {
          "id": "3d021c7b-120b-413d-a038-e06f7be8ef02",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "69fed4ce-992e-4601-a54e-b6c1ae6d96b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8036a443-906a-425d-a378-b68b3cdd0589",
        "cursor": {
          "ref": "38ccb7d7-cfea-4e7d-be7f-e850f6929b67",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "a55c2d4b-00c7-42c3-a929-adc4e0d7ceaa"
        },
        "item": {
          "id": "8036a443-906a-425d-a378-b68b3cdd0589",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "a0ceecdd-ce74-44fb-9b92-7493f28c89da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aff607d0-2c6e-4652-95f9-73dbeb1e917b",
        "cursor": {
          "ref": "55fe49bf-355d-4585-bfa9-f973bd975fc1",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "c1d6da90-c6fd-4237-84a8-a46025b1e8fe"
        },
        "item": {
          "id": "aff607d0-2c6e-4652-95f9-73dbeb1e917b",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "8cd13894-3962-403a-866b-4286d15f5454",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98fc8028-f6e1-4fa3-9cb8-436b0c72d5a4",
        "cursor": {
          "ref": "876042b2-80d6-43cf-acba-2d6d15456949",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "e3ddda25-7df7-4073-b571-d39e5c2e09d1"
        },
        "item": {
          "id": "98fc8028-f6e1-4fa3-9cb8-436b0c72d5a4",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "2237d987-bc87-459c-b442-eeb1250b8775",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dec4de96-62b8-4c63-8c2d-c6a95ba2e0bb",
        "cursor": {
          "ref": "c363636e-9d40-4f0d-bb4d-d0a361885066",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "fa79d643-433c-4d74-a9af-1d69dfd4aae7"
        },
        "item": {
          "id": "dec4de96-62b8-4c63-8c2d-c6a95ba2e0bb",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "62adf2c5-1559-4f29-8037-6837b8bf26fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6346e0bf-0836-45e8-8add-caaacd49a5f6",
        "cursor": {
          "ref": "7229b5c5-cbd3-48d0-bd1c-448b3c13c2a0",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "86bf256a-27f1-4d4f-aaa8-bae93c7ab67d"
        },
        "item": {
          "id": "6346e0bf-0836-45e8-8add-caaacd49a5f6",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "2e936641-d11d-4887-a11a-f2d2d39b90ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "117aad8a-bad0-4b50-9c56-90524fc3152b",
        "cursor": {
          "ref": "34023521-b11c-4179-9682-637317587339",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "821ea2d2-edac-46fb-83cf-183967b81e5e"
        },
        "item": {
          "id": "117aad8a-bad0-4b50-9c56-90524fc3152b",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "bc22cca7-dd99-4ed4-9560-a41f5f5bc6f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5fff471-e4d1-4aab-83ec-35cc89b6e553",
        "cursor": {
          "ref": "5a43d900-7c4e-414a-9d7e-5a3390060467",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "d09de175-3d69-4580-a3de-78387d9a8387"
        },
        "item": {
          "id": "e5fff471-e4d1-4aab-83ec-35cc89b6e553",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "bb13ae9c-2efb-4814-90b5-80fbeef0f9e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 765,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e834fa15-174f-4c42-a0d3-9a17c3044c8a",
        "cursor": {
          "ref": "e4078191-c351-44c4-9813-f4aba5f6381d",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "55c8d435-4096-4a26-820e-1c843ec140ab"
        },
        "item": {
          "id": "e834fa15-174f-4c42-a0d3-9a17c3044c8a",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "1175c5e3-637f-4711-90ed-5511df30763e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fbd3a51-6d46-445c-a1f1-73cff4bf68b5",
        "cursor": {
          "ref": "08f11121-a2b7-472a-9f07-38198bb922f1",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "0e03fa54-8a6c-4849-a392-cdf1ba56f4d5"
        },
        "item": {
          "id": "0fbd3a51-6d46-445c-a1f1-73cff4bf68b5",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "34e95e50-447b-45d0-9a1a-f99af61d0259",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beac5f02-da8f-4535-9cc6-e8f4ec2f4c87",
        "cursor": {
          "ref": "94212917-1a0c-4975-bc8e-2ffefa2e78bd",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "258a3119-e797-4a55-9a3c-89484d85b318"
        },
        "item": {
          "id": "beac5f02-da8f-4535-9cc6-e8f4ec2f4c87",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "df17e2fc-b1ac-4560-9c08-aa2bd091f170",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40264b2d-b0f7-4a84-8987-9e1c8d266202",
        "cursor": {
          "ref": "f064bd82-1ef0-4f2a-a8e1-409b663f6c09",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "f562dd64-456f-46d1-8dfa-7088c17ba13a"
        },
        "item": {
          "id": "40264b2d-b0f7-4a84-8987-9e1c8d266202",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "94f0db3c-9dcf-4b62-b2e1-3f72c502cd34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cffd386d-88b2-4e55-ab40-98874bebe8f8",
        "cursor": {
          "ref": "892bd0a9-ef62-45a7-80f7-dbaac7f30f52",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "09322d20-2955-4658-b0ce-389335821c01"
        },
        "item": {
          "id": "cffd386d-88b2-4e55-ab40-98874bebe8f8",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "46246d73-6861-4253-b086-6eba3372eb8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a17f824-af16-49df-9649-0ecd48c57c84",
        "cursor": {
          "ref": "b75a5ecf-3a95-4cb7-82c9-9126111a07d3",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "fa0a5e6b-e73d-466c-bc38-46f37088bd25"
        },
        "item": {
          "id": "1a17f824-af16-49df-9649-0ecd48c57c84",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "1fdf6041-1e00-4116-827e-96a6f8035654",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0defc83-0a69-4d9f-a147-89215d5cb67f",
        "cursor": {
          "ref": "207f6b0d-b9ca-4915-b9c2-a68d3e567134",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "379ec27b-6123-4518-b57f-2247f45f6672"
        },
        "item": {
          "id": "f0defc83-0a69-4d9f-a147-89215d5cb67f",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "94b5ee97-c2bb-4b5b-8712-cbb593d326f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eecb8a25-7932-4b41-8581-b35f9b557b4d",
        "cursor": {
          "ref": "6ae7a74f-22e6-4d3a-b659-195960b8fb29",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "06bd120b-35bb-44b1-b1eb-a262507bb2ac"
        },
        "item": {
          "id": "eecb8a25-7932-4b41-8581-b35f9b557b4d",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "1016e995-eacb-41e6-b562-b468cdc58e34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42a0dd95-e497-4403-a3f8-b99bb9cc89c3",
        "cursor": {
          "ref": "25f48c5b-16d0-4217-9651-27ae295df35f",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "1869bb50-08bb-4271-9fba-7c1d768ffeb9"
        },
        "item": {
          "id": "42a0dd95-e497-4403-a3f8-b99bb9cc89c3",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "11d194a1-19bf-4d21-9a67-4bfdd8b1fabf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26428a89-c0be-4341-86e4-9ca8ebb920d7",
        "cursor": {
          "ref": "b1cc1e8c-b374-49d9-8ab8-f9efc1995fb9",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "5ffb0e5c-b251-4418-ba3a-76150eb3ced9"
        },
        "item": {
          "id": "26428a89-c0be-4341-86e4-9ca8ebb920d7",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "100a50d6-b5da-4010-a4b7-10290c6d6294",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d08d5786-1c27-4314-8cae-336e1fa6d7a6",
        "cursor": {
          "ref": "f29dd398-6570-4929-8da8-16589a2c339c",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "3a58eda4-816e-4f6e-8f7a-efa09073820d"
        },
        "item": {
          "id": "d08d5786-1c27-4314-8cae-336e1fa6d7a6",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "5f9bb727-d0aa-4d55-8591-62aefb59266a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c28818f-2587-4245-89a4-11c8bb14d9cc",
        "cursor": {
          "ref": "1c91c0ad-f5ba-43bf-85da-6226f92d1f38",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "533f4571-a3fa-43ae-aaa3-5bf014a7476d"
        },
        "item": {
          "id": "7c28818f-2587-4245-89a4-11c8bb14d9cc",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "bb74a23c-f905-4547-9a0d-230cf621bc4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4382c30a-d36b-46f0-9641-02abb5491a80",
        "cursor": {
          "ref": "ddd8af20-7090-475c-a602-01d798e143a6",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "fbb9129e-0362-43a5-9a7d-7fa1474e354e"
        },
        "item": {
          "id": "4382c30a-d36b-46f0-9641-02abb5491a80",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "d28657fb-6390-4c63-91b1-74b045fce38f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a768e2a-982a-4b44-ac64-4185753992f6",
        "cursor": {
          "ref": "55cccb52-7dc5-42a8-a3a6-4bf5de947600",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "7a2272d0-9e8e-4ca5-ac8b-88ba014a75d6"
        },
        "item": {
          "id": "5a768e2a-982a-4b44-ac64-4185753992f6",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "84ca116e-5d2a-4c0b-af08-4ea3b3be415c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fde393d0-dbce-40bb-b874-3d533481fea9",
        "cursor": {
          "ref": "a8ddf3e7-3d6f-4dce-9c18-32c840e1ddb3",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "1c51da5c-7f6b-4eee-8732-8dec1ec01db9"
        },
        "item": {
          "id": "fde393d0-dbce-40bb-b874-3d533481fea9",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "03875867-e80f-4855-b1b4-87a5aa1a8d04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e01561f-b912-4f99-98f2-56fbb297f3de",
        "cursor": {
          "ref": "9f37b0b7-04fd-407f-b51b-d7ef614a0b05",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "f8ddcfad-690b-49d4-8d39-71316657f633"
        },
        "item": {
          "id": "2e01561f-b912-4f99-98f2-56fbb297f3de",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "01a80e1d-910f-49f8-bd87-7ebdc66d6754",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "037d9662-f55e-49ed-a1fd-c0f808aec82b",
        "cursor": {
          "ref": "0c14283c-41f4-4ea5-b871-ada3c7cb75fa",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "d520fbc2-fec0-4f75-90bc-8d710c6290a8"
        },
        "item": {
          "id": "037d9662-f55e-49ed-a1fd-c0f808aec82b",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "38c31c4e-5638-4c71-85e4-8efeca6ea8d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95543d44-9682-4f4d-b807-14bee0a9a197",
        "cursor": {
          "ref": "09b31885-ebe8-486b-a62a-0dcab00a1239",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "9aa19d50-9162-4c6e-a040-b47bd42555e7"
        },
        "item": {
          "id": "95543d44-9682-4f4d-b807-14bee0a9a197",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "f779b9cb-0f5e-4739-83b4-40d2441055fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03075472-5b0d-4239-83ea-a79d369c88d1",
        "cursor": {
          "ref": "ce832ee2-83a9-4280-b19a-d139e7e4a6fe",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "6aeb5b91-d28b-4cfa-81fd-d641fb25c95d"
        },
        "item": {
          "id": "03075472-5b0d-4239-83ea-a79d369c88d1",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "c83b8e45-256c-478b-8cbd-00a50ca9ccda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb3ccbb1-ff5b-4247-9155-6ef51b73ae4d",
        "cursor": {
          "ref": "4b7f6a8b-1211-4ddc-96eb-c2f3923f7bb8",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "6d55bf7d-398d-41ab-8cb9-c09ffad794ad"
        },
        "item": {
          "id": "cb3ccbb1-ff5b-4247-9155-6ef51b73ae4d",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "4ccfa05f-43b6-4666-b9fa-3882fd2005fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5730410c-9408-4880-bfb1-3620414356c0",
        "cursor": {
          "ref": "baf206c3-7dea-49f2-bbfd-a73df96291cd",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "19d9c018-a0e9-4632-afb2-c53ddde6002f"
        },
        "item": {
          "id": "5730410c-9408-4880-bfb1-3620414356c0",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "54a747a7-0ce3-427e-bf26-89bfef5765a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d464637-a5a2-4132-9d6e-4fcfcca6678f",
        "cursor": {
          "ref": "74e47f58-7649-4474-b75a-d204db986427",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "98fd3381-df0d-4373-8bc5-c69c6bbe608b"
        },
        "item": {
          "id": "2d464637-a5a2-4132-9d6e-4fcfcca6678f",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "d38684fe-e86d-4919-b6d9-27face8cd488",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68241fe3-6bf3-47fe-819d-667a7eb2a1c9",
        "cursor": {
          "ref": "327fdbcd-15d4-4823-a387-43fd1470ea73",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "81fa1d93-63ec-4dae-9d45-532ce786ecbc"
        },
        "item": {
          "id": "68241fe3-6bf3-47fe-819d-667a7eb2a1c9",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "9490a48c-595e-447e-8da1-f07bbfcebf90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f83d811e-f5c2-4479-81f5-07b88151993d",
        "cursor": {
          "ref": "fda438d7-0f6a-478d-a325-3790c9f48abd",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "e4b3168b-325c-4073-9fc5-11a000551df5"
        },
        "item": {
          "id": "f83d811e-f5c2-4479-81f5-07b88151993d",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "0a642c5a-1f8f-407f-9e3f-a5de393a11bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c25548d-2c32-4431-878a-9f2ce173c30e",
        "cursor": {
          "ref": "23a270c0-e92e-4d28-bfaa-2837cdad875f",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "257b1ae4-caa6-481d-b2f5-77dd8b650fa2"
        },
        "item": {
          "id": "6c25548d-2c32-4431-878a-9f2ce173c30e",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "a739fce1-0fcd-49e5-a8b7-8d7e7551a6a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dc58693-50c4-4375-9fcf-0baf32bf4598",
        "cursor": {
          "ref": "15296b4d-3270-4437-ba16-4dd0a7ed248d",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "2c6c2d5b-03d4-44f9-80f2-717a7979362e"
        },
        "item": {
          "id": "6dc58693-50c4-4375-9fcf-0baf32bf4598",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "ee927c0f-e0c9-499c-a55b-e98516dd054c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 6,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eccfa62-218e-4e6d-89e4-7fa79db5f70e",
        "cursor": {
          "ref": "0e67e66b-fba3-4a3f-9233-4b13f6d0fbab",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "3c18739f-3dbf-4fd9-8a38-8ef5a176ebc9"
        },
        "item": {
          "id": "0eccfa62-218e-4e6d-89e4-7fa79db5f70e",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "9db3d7dd-a492-43c4-bcdb-3ecc25280d64",
          "status": "OK",
          "code": 200,
          "responseTime": 32,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a51997c-5dc2-4552-ae1c-ff3a8e6bef32",
        "cursor": {
          "ref": "9c13e8ad-7ddd-438a-82b1-0b7b863e44e2",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "1f3bb905-285d-4d66-9cb4-2b217f39b5fc"
        },
        "item": {
          "id": "4a51997c-5dc2-4552-ae1c-ff3a8e6bef32",
          "name": "credentials_verify"
        },
        "response": {
          "id": "31e9cb01-a8be-4d86-8c1e-4902231142da",
          "status": "OK",
          "code": 200,
          "responseTime": 3316,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e70305b-e9f8-4da6-82b5-8108d7881288",
        "cursor": {
          "ref": "a96318d3-70e2-4957-a0da-3b62589cdf89",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "8dc03230-a5a6-46b9-b532-42290a61c2db"
        },
        "item": {
          "id": "4e70305b-e9f8-4da6-82b5-8108d7881288",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "11284e3a-b84f-4baf-b6a6-fd02d2b27031",
          "status": "OK",
          "code": 200,
          "responseTime": 3252,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "5447f68b-91b0-4924-a2a9-28bc432f1448",
        "cursor": {
          "ref": "afda0dd4-1f5d-4b6f-9db4-c088e93c9601",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "7ea2b475-c937-4c4b-944c-fb21ab71d429"
        },
        "item": {
          "id": "5447f68b-91b0-4924-a2a9-28bc432f1448",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c12c68bb-dc10-4a44-8e11-2ee723a9aacf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5447f68b-91b0-4924-a2a9-28bc432f1448",
        "cursor": {
          "ref": "afda0dd4-1f5d-4b6f-9db4-c088e93c9601",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "7ea2b475-c937-4c4b-944c-fb21ab71d429"
        },
        "item": {
          "id": "5447f68b-91b0-4924-a2a9-28bc432f1448",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c12c68bb-dc10-4a44-8e11-2ee723a9aacf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d56e666-94b0-4a47-9f06-e9fa2104392d",
        "cursor": {
          "ref": "9767df7f-1359-4f8f-abaf-e255ed3a5987",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "72da1495-0660-4bd9-b38c-aa21902992db"
        },
        "item": {
          "id": "6d56e666-94b0-4a47-9f06-e9fa2104392d",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "2994569d-bef5-4e10-8d49-0de033b568e7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "449700df-f46b-4188-bd7d-e48600420a71",
        "cursor": {
          "ref": "a614d21a-cd43-4b89-85c0-e90d4da27c25",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "4de8d278-3e6f-4a32-8dc1-76ee13e0dbf4"
        },
        "item": {
          "id": "449700df-f46b-4188-bd7d-e48600420a71",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "b9d05c26-bce6-44c7-af21-4ad7d9ec2945",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 11,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}