{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "df9c688e-0517-41f5-8676-60284445fdfe",
        "name": "Clear Cache",
        "item": [
          {
            "id": "7beef8c3-a37d-400e-88aa-0b2ef86f50a9",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d29fc5a4-7675-4e49-a9bc-869ed4528aad",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "2af3019b-836f-472e-bb86-ca85fe0fca10"
                }
              }
            ]
          },
          {
            "id": "a1a3240c-d9cc-45e2-aa45-553d27c039eb",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "38bd6945-00ba-446f-b793-6297d09cbb5e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "efd13319-1f96-4a8f-b310-a1d139c5d2b9"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "36d9ea15-2c49-4935-9467-ee8840f901ea",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "878740a6-9e30-46b6-a8ec-54401c992b79",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6d63a8a9-56d0-416b-8603-923acdfc0eb1",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0671a70b-1371-40ce-a38c-0ace32a6210e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "06db98e4-45a9-4100-815d-e39dc158fa93"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1b814903-e0f8-4934-956f-ae9862273fc7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2d891c70-7d9f-4bf1-8a5a-50edb851ffc1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "08f698ba-9772-4b7b-8677-54031a524b2d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7ca1c927-e895-4e55-93bc-c63906262efa"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e9230a1c-02e7-4a63-ad24-2e0ddc3f8a59",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "cc698fe4-ad10-4e2b-b147-87c9d5c09e01"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b2626a7c-c8be-490f-afe3-4db3727fe4e4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0de458c5-dada-4996-ba1e-877eacdca450"
            }
          }
        ]
      },
      {
        "id": "cdfc2d08-f409-407e-9554-cc60599588be",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "714ecf69-1aa1-4130-9948-335b0c30ccbc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "784903c6-575b-4e3b-8478-3a85e8cbb5b2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3b5c5ae3-1e0c-427c-bdc0-45eb51e10cc9",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc80347c-ae3e-4365-8806-8c79864bb068",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1575b17d-e079-4f38-8d6e-12e1cb5e40af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5960e860-4f08-4634-9eed-34663f10fbd2",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71001a40-86de-4383-8763-40f15e347363",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fce6008b-5b89-4ba5-9a55-982bf8379ba5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4b30e11-a494-4c0e-8312-0631b46ef604",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d3738b3-b647-4070-be71-a5cbfd2b7020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a99764e0-1fca-428b-aaeb-787c75e3ff60"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "af325c75-5cc5-4034-a32e-f3495e8d6674",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4ad895b8-4876-4d7e-8c8d-040ac9a6fc06",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67b62d3b-954c-47c0-b7af-dada36e869f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d4949961-527e-4394-9b8a-24e9d0d0ec8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ff5b984-1425-4e0f-b992-2e9a6124ef2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bfcc99f-f14b-46d5-9828-ef7ef15d11d7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "8aff0f37-8a6f-4191-aeea-7b7039e35592",
            "name": "Positive Testing",
            "item": [
              {
                "id": "98fa5999-bc70-428e-b399-371f7a26b2cf",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6a3213f4-7b78-4daf-b9d6-8206ed063c03",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "83fc9171-f4fe-4afc-a81b-e6885fa5d93a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "31f713d7-ade9-450f-8cba-70d7b4332f53",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "1406cecb-ed9f-48c9-a072-947245084468"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "acdc83a5-f3eb-4aad-b364-691ccda3f0b6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "77164080-4e04-4807-b2c9-da5a2a813345"
            }
          }
        ]
      },
      {
        "id": "424eea73-0dd2-4882-b6ec-f95ae1826a9c",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "9df4fe8a-b1af-489e-9a79-71851004bd56",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0165fb6e-c3b8-425f-b988-c296162a7d81",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "cb048494-3f0c-4d7e-88d2-e7330689bc1e",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c294d221-a97d-47cc-abf1-532222ecd194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d18ef76-730c-46c7-82b9-458f70bc1935"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15969056-1010-4691-b99d-00951d78107b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2ad173ee-ef72-43c3-b708-2aa7dd27e4d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e126d648-4601-41a5-be07-333328093a06",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b6120be-bf87-4400-8c6b-af710330dcc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8961839-af1d-4c38-8351-36cb3e8f9233"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f47236ac-8a49-4493-bf0f-c6b548fdefbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fd3ecc2e-231e-46d0-aa87-bd8efb29d027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38f7006b-011a-4208-8855-df0f93d3c245",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb73d96c-6ba7-4f89-8270-3321d089afa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71bb0425-2ce0-43aa-9f22-c308b42c9139"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8807e331-1e77-4f53-912e-39795f156380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "20277542-94da-4770-8e73-ac248ab4674e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95dc0925-027f-4f7d-9c20-83df0684819b",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f22ebcf2-ea8e-4103-b6e5-f6522b227506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "921a38ce-0274-489a-a092-37fa54b66b3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f109be04-6215-4fec-a05d-7d2db0d4d924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "00670fda-7d2e-44ed-a79b-34b1e409bfa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08fd99a3-036d-495b-a078-68367789cac2",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46e81194-8713-4f1d-b527-e62fd1f974ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdbaebd9-11eb-4383-b8eb-0de15e927e24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed89265a-0bbc-472c-b7c6-b2eabcf44150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c8711f27-e9ab-416f-a701-bf0cf19437a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "915c33a7-d356-4091-a069-ea567546d044",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faf6d50e-f480-4469-be32-a01d2dde7324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22ef963c-2cfd-4a34-a582-5d6786849c91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "596c50f4-3ae0-45e3-ac9e-e3ca12d46b3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "08b9a6e7-b393-4e53-8e1d-dad64613d50a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faa52327-ea90-4b3d-ba5d-348d4ebff400",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24e3d971-8079-4bc1-b4c6-ed1df2438256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3075de56-5e15-4c34-b5f2-ffa763af3d58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f420a10-d7be-439f-b243-e9455ebe7c7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "943c2aea-bcc3-4b3e-8bc3-e477b39decb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "044de9eb-1f0a-4674-b24d-1d4733db9e21",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7499252-854a-4785-9e6e-08e2aaaf91b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62755212-a1b4-41aa-917a-046ed757376f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15874e5d-28cc-4afb-b937-882a02439b16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "43c9b026-5bb5-4db5-b6df-b9e2a99f1cab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c56635b0-b6ae-4700-a0b0-926a29030398",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbe899a7-b800-429d-abc0-7112558ddc64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cc3b14e-eec5-4cc8-a04e-395aa0e9f86b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76c62fce-7bf9-4fcf-91d9-4e90e2c984a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c7130ec9-f49c-414b-9e56-aa0b1654143c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f85d0d1-d94f-4705-b024-a96917d9329e",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a6bde04-6a44-43a1-9c24-db6570b3dfdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "278963c6-58d0-4e0a-83bf-4f04943f68da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8a44c48-f9d9-4185-919f-39bb4d40413f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "425375e0-8dda-44b5-a2e6-c9fb7c764389"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50b2cb55-3f7a-4cd2-8ff2-4e98f97cc306",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d94f1548-0c94-4e42-aef6-6941b41e4ff1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f039d6ef-b29f-4a6d-a625-151cd7c301b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01b2e52c-a565-421a-9150-103f84a99a07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "49049559-fa81-4411-a4cc-a4e025c30018"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f69a2a6-ccc1-4e64-9877-0198bc724b3a",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eaf9bba-434c-46ea-8a05-f66be850da54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10390588-96c7-4d12-b3e3-8bfb66d9f0ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9772448-5a71-4f66-9a38-2ab0baabee2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6ee28b76-85d1-4142-829a-4bb2541453c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96130659-b865-4509-9b7a-cb73959c4f88",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5804b61d-5444-4190-b7f2-9e468893db3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "508b33a5-5534-42b3-99e8-c01758f9181a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9854d22-b141-4325-a857-2a7ab5fe43d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3b4dd768-cbd0-45b5-a6d2-5b89a1ec0ce3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "573fe4a9-cb0d-4f8c-be5a-d06274526e95",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9972a4b4-21a4-4439-921d-d3954ddc4f58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ee7a47e-4f1f-4627-94e7-4591b3d72529"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c86f35ee-923c-4398-9310-88f3467f36cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "407d0fc9-f6c0-4577-9120-ecf66d659944"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20a71cf9-3f13-4cdc-8d5a-28312a7d2ca5",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f447b85a-4c10-415a-8ada-8089aa1992ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d93fcad7-a9aa-4ac5-984f-cba02a09e4cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05b2de37-6bdd-4b0a-b665-1bd0033a1f54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8e6983b5-0e09-4573-97eb-137c628b843b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33eda747-dd04-4879-afe2-8a2f9abcd638",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "573ddb22-22c2-4c03-91ef-1e345850ea73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e01a1b84-9d92-4288-bfcf-4ec819687ec3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c588d7c-b45d-4aa6-b5c8-f46da1fd91c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3bf8cf37-0631-4b9a-88a9-53336b6ea1af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9063055c-a708-4a5a-9b79-8e0c06059d14",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "882f2ce4-b328-4255-b363-accda3e9030a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "431a3df4-8758-4bd5-a71a-dbf5fbac88ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "989be88c-de42-4f44-95ed-b7e359fe1578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "14fc6d76-bb81-42c9-9500-3bfcf330a135"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73345e74-2c0f-41e0-9c22-951f520d7467",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "580ca20b-29cb-44c3-bbeb-1642198cb341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa579f84-2c8c-4c73-bfd3-b1b43c78c73d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25f730ae-9e93-42a9-971c-6bc85b3ac62b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b98abd1f-e940-4495-8686-48df25415aaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "778b6c67-e457-484a-9e2b-d93c2d699d7a",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4588cdb-6613-495a-b124-74ccc7989abb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a12924c-7a37-4018-80b8-640306c5b5b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3f655b7-1073-494a-80f8-c269a4497aaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef56063f-9908-4f92-8251-8732ecc6f49f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e01f737e-0330-47b6-addc-acaf6c4b19c4",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bea453f9-dfde-49b6-8618-80f2c6bd343b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e167b330-e327-440f-8686-733a927646c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "011e3fab-3e44-40e8-96bd-7d78992ac201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "424dd57d-c75e-4c1d-abb2-977b42305148"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33e01775-ba0e-4aaa-b2fc-c6ee241d5d9a",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2e02b7f-e129-4bc7-99dd-26598ecfc3c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab21e222-6410-462e-b70f-5757efd1d8cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19ab3cbb-33a8-458e-b91a-052d7c12c84f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "971ddd21-968f-4611-8d10-cd439619f002"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8151fc2f-fe26-4351-832e-051a0a927c40",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e6e274c-b526-4d6c-b54b-594c1d23bbe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8856d41-5fda-4152-abf4-ebc4dffa3441"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65ffd0d6-da52-424b-a8fd-607b0f308bcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7b38866f-0bbf-4126-bb4e-16ebbaab8834"
                        }
                      }
                    ]
                  },
                  {
                    "id": "898a2a60-64a2-4d01-b8e1-b1b8c536abba",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "899a78d9-62ca-4d66-aafc-aec4a5748aa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ac23fb2-ff69-4bb1-830b-0667f405ff9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d4c2862-a5cb-44b4-b67e-5368ec516418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "246b308c-b067-4217-a7db-fc73157ae965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3955de3-bd97-4d88-b858-bc8ddfffbc2f",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7baec4d-58ef-4e9f-a2f5-4259b3f72abb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e376ab8-2df2-448a-b884-6604de769d77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "660f1797-ed4f-4a6b-ae27-efcc58ead1bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e512c97-6196-4ab7-8f2c-ec696cc8719c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bab490c-c8dc-4c36-9a41-4851e6314866",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c29d97e4-6a6f-4f03-9e56-2598a3bf9fa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2e83c22-1ed8-4019-a300-2e2f3044fc33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57b4c2e0-f608-4190-a559-0b39c08b2fb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b23f18ee-bdf8-40fb-9ac9-13f0df78aed0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff54f20b-8dde-4804-92f1-621fee18bd60",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f05bd048-d599-4414-9384-0522ebcf919b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7adcc0a-1144-4c8a-9e7f-30c5a42776dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f3a35fc-d7f3-4f2d-b0e7-ed970d49bc00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "154f9c14-8842-47f1-96ea-e800e961b56f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3047b43-8a4e-48ea-8422-bb88e4ee10ee",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d634f85-6296-44fd-9775-5c132f099697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af8ad5c4-f305-4105-99ed-29ad22c84647"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96a2478d-79bf-421d-9966-d0cae45dade0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8f02e98-cbb5-4cf5-b958-c1eeb81bbac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51675f0d-aa9c-44f8-9543-d2e14def768c",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ca6906d-2abc-483f-aa2c-dcde0d83c49c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1e2e0c2-f36e-456e-b37f-8ddc3a72deec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d70c8426-06cd-40da-bf11-02316a8a46b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "811e1e54-45e3-4bfc-bb27-abfb44a9182f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e48a38e9-753f-4dbe-bcd9-d9db0d78add7",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "004dbd0b-d100-40ef-adc0-2e3d6ad8851e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dafbf03-c90b-4da5-8941-fa5614ed483f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "372d0432-4695-494f-9127-5106c9cf9038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3c970c7-c809-4f3b-9cda-3ca1efd218b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4141f03d-d4a9-473a-ac7b-410003fb4da7",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa3d7ef9-66b9-4c9e-9704-bf1816292dd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f0d92c6-2e1f-4189-941c-85b1b46d0a19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6834e5b-2718-4abf-a64b-3f6efa1d5fbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e66422a-8256-4675-a082-5095d6e0b541"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bd37133-6867-452c-a708-fae92c1ab0e1",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "badee979-9080-48c2-afe4-abafc785641f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "773350fe-2d3b-4819-bf03-ba0188f8ce15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4281650-1407-4cd7-bd0e-fb151611dd7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "745ef25e-b356-4b12-83f9-ee98605a833f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ef273c5-2c13-49cf-af01-32a4eae75ede",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50748d03-4608-4ccd-837b-28760fcf34f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32778450-83e1-4598-909d-56fec37b3a75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bc10ae7-4b31-456d-be25-4b560c0db894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a82eb453-fb69-4b4c-bd81-02e3c30d0654"
                        }
                      }
                    ]
                  },
                  {
                    "id": "158d1a71-75e9-4c34-bd2b-21c526758701",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6354ae39-f959-4202-a4b5-739b2ca91039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "466b601c-01eb-4a06-8aac-aa58bed86f56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e11e3bf7-f04c-4a5d-8be8-2172257051c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ace3699a-61bd-4b2c-a4e4-ad1bfa2905ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f35a21ac-31bc-4315-9433-9e3164740bb6",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2d6bb3c-6538-4c9b-99c2-5c1b550f66e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3632473c-ee4f-4cbe-8e4f-ed1c2eeacfb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f82c141-786b-4b32-b4bd-2d9acde1f1a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "28ec4d66-2fee-4089-b1d7-95433790c562"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e3f9355-d59d-4719-a23e-941726bdeadc",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c06150f7-b531-4666-94d0-08f47a5a42be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36671dbf-0ac0-4a19-9782-b57af94e4290"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f228f10-011e-48fb-af92-736878fc9554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "fc413d15-b801-4cfe-8122-189f2a444812"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b787aadf-fc65-4eba-8c7a-544a2910a370",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dce19c0-853b-4a23-8a27-fe58e5c49894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fab6f7b5-2ec0-49a0-9bc0-25fed5318980"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78f2c5ce-22e7-4e4b-9298-7134a3fc560c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "87e4131e-eb58-4212-885d-098bac493563"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4be53aca-172a-489d-8dcc-6fddb9cceaa9",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8bea829-621e-42d1-8f8b-51071506ce62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab62aa79-d86f-446b-9a57-922cb5fa3c93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aa9b46a-d8b4-43f4-974b-d68ad0d5b775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3b0bc5c7-09e4-42d1-b687-a9419247a7ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8254e94d-5b37-4ae7-8757-2e624d2e80c7",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43da042f-c0e8-4f0c-ba39-5cbf104115dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6efc52b1-87af-4210-a858-71d41e0e2b9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce4c3f49-20f8-4243-ab89-108366c12563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b9f97a98-806d-4321-8224-1facac2855d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10c6a4bf-3308-488e-9752-7a08ebe4eb47",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7a96b1a-627c-4050-95c3-2940d9f97233",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f3cd495-ce9b-42ab-8d70-b03b8491be7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21b5c03b-802c-40a7-9147-941c615d9f7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b8fdf5e2-b45d-4507-9a26-f1d387c1d981"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f888fe8-a8d1-41e8-8be1-ee8df1133c3a",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ffce925-d477-4066-832f-3be8b51dc152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eba46cd5-0ea2-47bc-aa6e-af8b4927cbd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca61f5cc-ff9a-479f-b3f8-a5f32912efa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8a994048-8192-4f05-93bf-1b7fcd9b0c5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b7a3f51-66d0-4daf-906a-7b1c56d23586",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4975bfb9-d85d-4f60-90e4-ce02b31d74d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdd2b6b5-4d6e-409e-b392-e8e9c1850697"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de03a512-ab31-4cd4-998b-48ee2bc7b2f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8a7d2be3-d397-44ac-9c16-eb28d48d7cf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d34702a-c4b3-43c5-94cb-aa07a0f3059b",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee88acb1-477a-4da4-8516-2a2615b3dda3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7b14bb4-688e-437f-9871-04366014f9db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3639277-d293-4323-b648-43bab48768a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "027a4c55-6016-47aa-9517-52ccdf0132fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dd5fe69-dd5a-44ca-a442-f2608b69607c",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2179de7-4d5a-4c0a-b4fd-196e741aea9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0ddaca2-f1af-42bc-9b1e-0bc63aa9a558"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "428d718e-1381-41c7-b97a-2b3b8cd91946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "3e05c68b-6088-4647-b9e0-6d218114da30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd9fecee-80f0-4780-b3b9-86b9c7e0c3f0",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d36ad4cc-7e98-4249-93be-fd4c2a434553",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb38098a-fb74-48c8-8f78-a693e40dccae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90a0233c-5167-4790-b3e8-a79e30ef5654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f13ccc0-e59e-4cf8-b50f-fee173befb28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55172609-515c-4cc3-ab0b-e000cc365f87",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b3f5458-600b-4b72-9b69-133381391877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb1ce478-6e34-4698-ad17-1e39dc48b7c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9f6799e-02cd-4c2f-ba5b-7953277c0b71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "42e80f0c-c2f1-48fc-b51a-37fe3c6b5237"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd2c57cb-c9c7-409b-bcfa-f91766802a79",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb2ed0a4-254a-4953-8ead-5676396b4e9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44977afa-1aca-4eac-84d2-db91e8a4b74f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40e638aa-7e2b-4894-9850-9b876e3dcc31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1bc58664-68ff-450d-9130-5ab12f14cc74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8371c4c7-ebf4-4503-9d26-7685c031dbe0",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecb0a046-706d-4f8a-9619-3cf7175896b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82a14c73-c6d4-4527-9138-e7fb83cdddd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9ec75f5-1ec9-4808-9dd6-add43b34b047",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "060b25b0-16f8-4ff5-83a3-5760b509e56f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ffba5ed-7e52-4831-9370-b4d2d96c2892",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16d84dc8-8c43-4fff-80ca-e7a094b90e20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bda065e-f672-410e-b51f-0810a5cfdb7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3712f68a-f028-4a0e-8a47-e71d683bc23f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d17b418-d1b0-4628-956e-2a0ef05ba986"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e362f61a-527e-43bf-9319-842a69564546",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3409b99f-d2b5-4352-bcfa-fe9a72b7bfff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84c0dd21-0ce7-4e48-b24e-134cd89551e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92d20e98-a147-4213-8326-cf94404ea847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "61ea5866-dac0-4edc-ad65-3b55b54b2211"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc8aab17-9e28-4a3d-aa94-6ced111a1780",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe95559f-e8d2-4e6e-88c6-a20aa3100597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b366117c-1deb-47d6-b7f9-575ea3ad1164"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d20dfac7-eceb-4e2e-ac54-9427c3fa2846",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1ab02caf-c5b8-4f08-b109-3aed951db506"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e676ee8-fa42-4a25-8350-1321b449b585",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "165481c7-0e41-462e-9804-5e8575456177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b72e39b-13c6-4c31-a5cb-6bd7fe57221c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf28a3a6-1d8b-4690-b42e-ea70e821b21a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f2d20b9-06c2-43a9-b438-bbc2fc8b3192"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b7a770d-b4cb-4e1f-af12-5f3cd35a41de",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45d82d7b-bd69-4b49-8999-24084ddc514b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3aa9a95-38a0-489c-bcfd-7cc96cb2064c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e030926-2684-4fb7-912f-7e49b29dbe79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a8f7524-cfab-4be7-bbf5-5d2c73fcc6be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e35093d2-90b6-4830-8235-cff1df1b530b",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0501c34b-4ece-48b7-967e-b71d794b7ed4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4e94aca-deb4-4e76-82f9-60de136681cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7e3cd0f-19b5-4e39-842e-21dadca78163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ec6d4f0-d9dd-4bd2-9e63-b42c0c935809"
                        }
                      }
                    ]
                  },
                  {
                    "id": "174167b8-65e0-4421-88ab-143a9fae3b49",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6342f73-8e1d-475d-b029-8fbcf7ace240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ea7ffe9-8685-4a01-ba80-e6048c28f23a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9270735-3c67-458a-9615-ce267eade5a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d2b3e58-f53e-48f7-b06f-ba803eef1c6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fa5ac5a-1015-48a4-8371-f1d5c0d9eb83",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10598864-ae04-4d5a-b086-31b8b81e4776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ab61db3-b7a7-4fee-af3d-3e50077fce19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2bb685c-9c90-4934-bb3e-34bbc86235f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "54b5e99a-79cf-4a64-8356-9023165864ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41f5d8d5-457a-45ea-b5e7-623d8c9d25ba",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "973afe0e-f7ca-4618-b549-a4f331c4c317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cbb442f-fe72-46f4-ad93-956fcdfc5a72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e450b7e-ae89-4d02-9ab3-a9822ee54a30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "fbc18635-56d3-45ad-8918-b25492fc22c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e317e71-8c80-43f1-ba88-08cc701b2587",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2559373-1947-42b3-bb13-23d283fb4e7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d223026e-c9ed-4d7e-8cb3-0f3a0f2aeff1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98d9c189-73b7-4cbf-a422-5b559b6cced2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "282bfdea-03fb-4b66-a8a9-79fdf6193c8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3797d893-0639-4c08-9154-f90d997cb1f9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e8073ea-33b7-41ed-a2b7-87f2e8ceea0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d28309f-b4e8-4582-8258-441fc06258a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c63be290-2809-4286-beb9-553b1acbc59f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7c10d168-c283-4c3d-a23d-54a156a0989f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "088d74b4-c2ff-4691-b849-287998f6e87d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1190513-64f7-49c1-939d-70ce48beee29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b30c8623-28af-4ddb-9a01-7bb8ab8374df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d409988-2fb3-4d06-a045-13e367729fe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1df17c41-e9a1-4f39-bc0c-684524b260b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9772db56-5cbf-41af-b235-a004fdb1db90",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49a0a645-cbc8-4682-9bbb-4d5d9c11a196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83948e3e-d95c-49f3-aa9e-bd7e6cb5aa49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f204e8bd-fa83-4907-acb0-97f43d51ae31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "cce5fcaf-2677-4c08-aa1d-527d1dccdbf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1377f485-c6e3-4dd8-93a3-6249ee8b7143",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2320846c-31d2-46d6-9b57-fb1fc4e8b3d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "014a9b5a-9f4b-48e0-aadd-a94fe479f91b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8f9d86c-6207-4f18-b843-03b34373258c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "597ff53f-a06a-458d-9eb5-fc67a17074e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48d69ec9-95c0-4b93-ac22-3324d715528a",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c55f27f-ccec-4dd3-98f0-c9bd0a67b159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72cc6de0-8e86-44c2-8f37-e638166a5998"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af14712d-d89d-4100-83de-10f67f4b5e67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "3076b288-44ba-46ab-8233-49ad273432d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "967a58c7-e54f-4f75-ba10-721299a8ee9a",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c560e41-55b5-4270-8760-b02ee922e026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18b5c49a-94f0-4ad8-b91f-424c3d59c57f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed84c318-ef28-4ff0-85c5-208d848e983b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "5fa2e9c8-4263-4065-8681-0e7cc142bc47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6456598d-1a7c-4f07-9b38-dc7656a72968",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20d54178-ff0f-43b5-9a13-37edd309f743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73c77d58-497b-40da-83d4-f5ffee9aab70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9196f86-e6de-452c-bf1f-d59f0b0ac7b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e554b137-c9bb-4a9f-b2cb-3d6c63e55ec8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24b850f8-a7e7-47f0-a191-8740ce8d5d4e",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2ab4dc1-1ddc-4d18-aeab-c7ce63c2795f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db468b4c-1529-4401-b8fe-b87b57b853d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51999a9d-606b-42f4-bbca-0ecb2b5487d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "71d0bc73-7caa-4828-9370-5d1fb0da5b38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d80d653-ed34-4ff2-b44f-18dde204ac91",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66bd4df0-d7d9-4695-be53-7b3ba2718b7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a78c945f-4ea7-47c8-b962-082bd3283eea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07ce6457-3e49-4e43-a3d5-ed15deb5e9bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "db85cc56-8d69-40ba-80ae-4bd236bff405"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c3da646-5c96-4424-97cf-93a86abc7b11",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e38fca71-5c57-49ae-8802-0c224f9e9d8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eaf07a93-7bcb-49d9-a14e-39e157aa44a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b2a876e-3251-4d6a-9f2c-6af7d7ceb4e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5c42639d-cc9d-483f-950d-1c74545e5bd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2889232-a5a2-4fba-a210-76fed8346567",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ad60a29-9d33-4be8-955a-3537bde32a66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68df112e-22eb-4292-9eaa-fc1b1710794d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17d005ae-92ed-43cf-b818-840534af2241",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "13d2aecb-e490-4c7b-84b0-cb44dc380811"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0abdb9f2-395f-4fed-b8f2-5d7d0c2c5bcf",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "730a7d58-6fc4-40ed-9804-550c6664f2bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fdae27b-80dd-48c3-856e-6ba63e16f85b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b32e9680-4e09-44a6-8c64-b1104a79e8fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f4b4452-2e60-4c51-ab72-985b8d6259b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4772f34b-7bc3-4a2d-96c8-1d62f21fb655",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcc71006-2cbe-48aa-828d-5eb343c4ba98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aca14bae-8122-45ad-a14a-f53441ead756"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6dbc6f7-e98f-4a2e-9510-5406cbf437ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "62e9c0c5-a1d2-4feb-b02d-503e5b1ca303"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1413172-5710-4135-bb67-81d330ca576c",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd198d85-c8e4-4d43-a4bd-44ea31952f87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fd3c548-c5af-4615-9568-e8c2e22dfd88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b52400a6-df62-4a59-9688-93a7cdf0088a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "69a2a1f9-1a88-47b0-9af1-29fa730549a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efc0143a-a220-4f76-9a14-2ac30611bd48",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b2ac213-fd3f-46fe-a126-afb04b78df8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f303d43-df6e-4c89-bf66-ad166cc1ed4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29a1d4cd-86de-45f7-8271-c46b1d00e3a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "095c6417-3e56-4cf0-8779-faba39f9978d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63bf065b-dcdd-4743-a13c-2f0b68194e34",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80718429-e2b0-4485-b444-85f7b1bc42fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6beea0ac-f2b5-437f-a47b-e8633adbdfca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e851d87-0afc-40b0-9b71-4c95d102d82c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "69b87585-bbe7-40a5-87f1-52719d045905"
                        }
                      }
                    ]
                  },
                  {
                    "id": "163eb00a-fdda-4fd3-8231-4a8544f80ea6",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "205e9509-71f1-4b32-af6d-047458131e51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66caf602-96ac-4395-bc73-434a35aa972c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ca8ef35-81de-47c6-ac09-afdec89b0a06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b575b0fd-0699-4042-9414-8d8e3f4282cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca68b8e3-5313-4b8b-91bc-80c68f260a84",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eddd316e-cb30-4155-babe-1c1952f7c9f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "545953fa-3805-46e3-ad24-6e33ea7a5351"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b52b4093-ba57-49fc-9821-a7829f573e52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d8de63a-8e6c-4e45-84fb-1806d8cca038"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e87d3ec-6a57-482b-a295-c16a54db087e",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "419a32eb-d78e-4fed-91e9-f623bb2ab7b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0253c8a0-14a0-48cb-8b76-322572dd9a8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "182c71e7-3bf9-4e20-9134-25831bd79987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bad53cba-4be3-463e-ab22-7d088c4ce95f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec873648-7916-4c60-95de-bc06ea9833cf",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "762d131f-291f-4ab9-93a4-bf013fef760b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c997c91b-a5a3-4253-b915-b23d3ed8d3f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "994b94fc-c797-4573-8cdb-d7ba887bf901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b4f4d57-7a54-4644-94b7-fbde5b8f0988"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06526778-3f9b-431c-9ec5-361164478822",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d68a45f6-75c7-49fe-a1bb-002f894ef50e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b5b4b01-3544-4494-ba22-6144f56c1b80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "304dce07-f928-4460-aaf2-cbf000c74c09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "285eb914-df9c-4e0f-bf97-d03e5c75e22c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a4ad67b-fd75-4d32-a654-9e5465d7a778",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe3cc5eb-884c-4562-ad3e-284afd00efb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45e80579-9f73-490f-a549-f3036b76dc24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d65466fd-00dd-4be1-b7d4-326f71572206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "127b86a9-cd19-4571-b430-f491c26f6321"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26e85822-3741-4038-97dc-2cd67b58886e",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ec8b3bc-861d-4ffc-83a2-7cc3776be20d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19e47f10-f11a-4c19-813f-092e3b190cce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a2e8096-ae3e-4d16-b017-ce2de2b7d26d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4bd115ce-9056-4e30-8a42-72c3292560ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e06d580-398d-4a03-9dac-464403a9f523",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d81c8b65-f9e3-48de-ba91-8f0cb565fe97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6b82b52-e7e2-42f5-a57d-0fbe447f33bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "578e6b24-40d4-4ee4-89cd-fb8f30fa7164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "86fa322b-3332-4b7d-b929-2d321f704008"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e62be6e-1811-4a55-9063-7e834f807d7d",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f416243-dfcb-4474-92b4-1d8fa2a668a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "724dd273-a261-4f16-b592-034b5705165d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30efc9bc-99ab-47c9-ad8d-8fb75cb7df5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec38e3c2-d84a-4589-aaee-81616159509b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8c9d439-b509-47ab-a0c4-69defbee5b36",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51be7b0d-0496-4cf4-961e-3796ae1146af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40612da8-e71b-4a42-81c8-832db0f64f51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ade34f3-abee-4f97-b9ea-8e744356427a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e956dca-e095-4c7f-99f4-25d0c3ee0460"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d852f8b9-1cba-4056-9255-f66305e673db",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7335463-80d3-4336-a5ce-5cb16e39139a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01f23d55-0cd7-431d-827d-f9d73fe1ac9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c0d3d80-1981-4303-b9d4-2b944aeea2bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "62e72470-1fe7-47cc-91d9-234bf6ca0cf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9929b56-5a0c-46b7-9ad7-074e51b349aa",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf7f7d40-67c7-4001-a87b-73fa18da6df8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3838fec-e2cb-4cbe-b7e2-587aea1617be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4956ee1e-3d93-4371-9d64-7553c52201a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8323786b-58f1-4d1d-a078-6ba3c5d5cf5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af3026e8-b53f-42b3-9e9c-1bb98d43b745",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "561f6266-657d-4940-b332-ee879a4dfd61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85daede7-31eb-4a45-9656-1f40fb99ca2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "456494b6-5e77-464f-85b7-6660cf52e9c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2261fe02-8fdb-49e3-befc-39f1c5232b2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2068c417-9009-4056-a6fc-583218fbb80e",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dd5d14f-bfca-4943-85c9-cbe06c071322",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2d6bbc4-dc19-4cd3-a2e2-71843ce96200"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7402ce26-1278-42e0-a389-3b414db2a821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6be4769e-1cb8-4cc4-b3a9-44ab6343802b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58598980-a735-4bfc-aaef-34f07c5dc57b",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98ab0310-21b7-4c55-b357-be664f830aee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12a27fdc-b08d-4048-a6c3-3ca2a915ac6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ff53334-33a2-4d9c-a2a8-871d82c79e15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "663f01e9-aca0-456b-90ab-e501de87a4b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74d856d9-c722-4b1b-904e-4344a9175867",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b7855b2-6e28-4acc-85ec-8ba7a86505d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10cb30f7-d073-4f4e-839d-f5f56bcb09c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f30b261-334c-4b11-8aa9-80f9077a37df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "962f53ea-bd77-409d-bdc6-727f6b444114"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6a50a5c-b39c-428b-b757-6948e64395ce",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8745df15-dd0e-4ffd-93fd-666e8d3756ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27c88425-dd27-41b8-b6c4-3b30ba34dc98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a34c1794-6587-4fb5-a878-5829fca08329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ecfb6868-d4cd-444d-835b-18711f1ea73f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "042f6091-2278-4385-b607-a118f28d008b",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90b8398d-7071-4328-bd75-7a1032a19ac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23a05524-2ad5-4fe9-81f4-155b1a67a573"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76741b22-b5ed-4efa-aa35-ca636e161159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "82d7be97-be17-41dc-9e50-5a719bed05cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "001a401e-5964-485e-bd81-43247d134ce8",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be0632f6-3ec1-4d82-8463-62bfd484f5e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "46657449-8e07-4733-8dca-405fa060b5f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f8abdcb-c3a5-49d6-ac49-571b73a0a4c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "0163a50d-20dc-4d02-9c7c-6831a2f40afc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b9591405-cf95-4e1c-a560-ee252a8a9e17",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b29d09da-fd1d-453f-adf1-6e9edfd47250",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b7d7cd5-8fe2-4c14-8863-799f599c9fd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1f886f10-d0d5-4512-950d-023fd7dee61e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84e5d1b5-c9f7-4689-9ada-608618c82e4f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b2686336-3b7c-4c78-9e47-073273ce2002"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c8208903-b214-4e3a-9b6d-b8261a72cb31",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "908c2a35-8fb8-410b-9892-73c3c7c28bcf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "03c64b75-912e-436a-a53b-9722a94f0fee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "60de9c47-b1de-4c49-aa37-96692b71d9cf"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5462fadc-2169-4ed2-b618-3e49df82f2ca",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "215882ae-cde2-40c2-8f8b-8ccb39281cb8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2b17c648-d0c2-4b9b-a201-130ce1eb3519",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d811fb36-3a7f-4fb8-80e6-f8273423523f"
                }
              }
            ]
          },
          {
            "id": "4b9b8dda-a66c-4296-adec-75150235c03b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f7a2f2f7-0e68-4ed9-a286-6d4805cc9db3",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "0c2c9d9c-3f52-4453-b1a8-1313e58111b5",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "546e97d7-2066-44fa-8a46-bd37bd7f0e96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "716df6e2-65e3-43a2-b5d8-972046049328"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10f01b7a-3fb8-44f2-a488-6d5086c6ba30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "511ece39-74d4-4219-abae-63e3d003920a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fabcf19c-28df-4dec-afa9-901e2329bd1e",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "53fa4e2d-7bb4-453f-998c-008ebc2aa71e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f122d2d5-9f78-4f74-8bbe-feed28b78834"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cfa6a193-ee65-4ab6-9fcc-b9fef50afebe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a5cf8bc9-5359-4f6c-965b-83e4db89a215"
                    }
                  }
                ]
              },
              {
                "id": "9b8aaf0a-b4c2-433b-bd5b-1e223e50e9bc",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "93c4c7a5-730b-42ab-854a-a20202522dc3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c9f159b1-0019-4819-af9b-011485f75e90"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "951456bd-e84e-4db2-b1cf-4f320b281953",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "62d71e43-a17d-4448-b460-1c67aa014ec1"
                    }
                  }
                ]
              },
              {
                "id": "66876bc7-abd5-488e-bfb5-423a3622c085",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a6664692-6ea2-4752-b7e4-675db2bbef7c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "68f346ae-a60d-414a-97c5-cb158cacd552"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7b76cfa6-682f-494c-8a87-ce09e91b29a9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "120803fd-4685-4939-a377-4b7afc65faa0"
                    }
                  }
                ]
              },
              {
                "id": "9577b629-286c-405c-b7f8-65f622694532",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8ac175db-d179-431f-9749-5135460fc010",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2fe0340f-bafe-4435-a394-06a04cf88a60"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8e9a0fbd-43da-42b7-8587-f83e558a4c47",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "5d181cbc-ed86-4cce-ad4b-282c137fe124"
                    }
                  }
                ]
              },
              {
                "id": "cae51574-4ad2-49f6-8778-ddada7ddc4d1",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b584c17c-0fbc-4772-b475-5704c0ca1604",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f957e2f9-8e7a-43ca-ba11-818189a11855"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ba290f33-5cf0-4142-a8d6-0d327f5c1d9f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "1ad9da74-b52d-45d4-9d48-72476efba12b"
                    }
                  }
                ]
              },
              {
                "id": "c3b99709-de6c-4e61-8e1c-e39cf5c2dfb4",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6bb3582e-ed24-4f4f-bece-f6e6161219e6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d4b70086-af8a-4d60-a8f8-39bff02829ef"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "21431ef1-5bfd-4926-af87-1e0e702b8f86",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e60ef075-8030-4b10-a02f-653bd771efd2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "625a6855-f159-41f0-841b-dbb5e49e5b45",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "44d86447-0926-4b3b-8269-19f65d2853ec"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "bdaa9159-62b1-4e6a-b278-a8a633c6c477",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "29eb56d8-d8b9-4d98-9e0d-3cd6ddd5aad0"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d6d69f3c-c467-47a1-acb6-0415b241ba13",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "5a75f9e3-e8fb-4e27-a579-819dbf63ea85"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2b90a3d1-076f-4cf5-a997-7d02083da80c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8ec8502a-5bc5-4981-86cc-3bde9569f3c9"
            }
          }
        ]
      },
      {
        "id": "a9b2f13a-f6f8-425d-a08c-e55a1ca10118",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "7bc63236-22e9-44ba-9cb5-cbc2fc84edf5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7d3103c3-3e30-4a7f-a54e-4bc0ae12aaf5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d42eb327-e131-4e38-8168-c364130ff1a5",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d16638e-1e8d-4c9c-879b-5d41b475b12e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "243f4469-9875-4ba6-98f3-ea0ff2bc9ae6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cc3a9e2-7c74-420a-bbfd-68b1221b9b4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "be0b4fc2-1f50-4195-a4a2-fb7d8d3036ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdfecec2-0e31-4a14-8b3c-a1ee6353a18f",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "469a3f68-fc03-42e9-9a9c-31a53806b62d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d553879-dbb0-42ab-b1b5-7e071c5e4193"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0af7d23-2a34-4351-8e4d-5099667df637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d3c7e26-869b-4ee0-b5f8-3df1aee996cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79b4125f-683f-492d-8d5f-396a40bef7ad",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb2e056a-ca4b-4a83-80b7-bc45c5671ead",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad32b582-cafd-4217-9d13-39308d04e7d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64d5dfae-79ab-46c9-9445-0d3be690fa05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef27effa-725d-4e07-82b9-abd11b2752a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "399527bd-74cb-4f7b-a125-0c53de8d3ed7",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c89f333d-8f5d-4d62-a16a-2982de0dc9d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23d45c08-ab97-444e-a283-b21075aa6cc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdddc987-baa2-4a5a-a29a-2d1f1326ff1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca619678-6f95-42aa-9648-73beec7a900e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a658268-6889-4751-9be5-3ade79be41f0",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa09874c-42de-4344-8878-56348a71aad9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ba91487-f6a8-4eff-8bef-f885118ee75c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7494d976-b53e-45ad-8937-4c36bbd1f31f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f1afdf3-9d96-46be-9958-ebfd14cc27ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95b8faa5-ecf7-499f-a84d-e7375dfb4945",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d202ff84-2534-4279-9a4d-0a1d84fde5cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9731dcb-2095-4c57-a5b9-ad03ca70c25f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63ee1594-7945-406d-8e35-01481dc1e306",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8f39252c-06e1-4e9a-98b2-384600f7abf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "745380ef-22c0-481a-9aac-d0b44c37a1df",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cf7ff67-7321-4103-b6a8-7a17f7aa8c8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c92cb229-cb1d-4fe2-93c2-8c72170f147b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c639d396-497d-40c4-bf2f-985d270ff384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "f05a343b-6192-42e4-9b64-d796991207d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c08fd2b-f800-44a0-9fd4-1192cb746570",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69ac8c72-6323-4920-839b-e6f9b8114752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04ee157f-6dd2-45f8-97ea-b9b019486c35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "647a3909-ec26-4caa-91b6-a7e2ff71660a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "92906cb0-52a4-4202-892d-538093f02c3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1a4de5e-adb5-45a2-a944-7e110c3aea00",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bd08fb7-87bf-4e85-bac1-2ab8f2ab8441",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffdb18d9-11ea-42c4-b4a3-24887932e046"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "444868cd-47cc-4373-987b-741045ec08f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "af9d416d-8628-4874-865e-e3653a83449a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f9364f7-bece-403b-bb97-84920edc9cda",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5339571-f0eb-46ae-adf7-cd1c8edbd433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d567a23-5b8f-4b43-b108-2fac74611fa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77678535-19d1-4616-966d-f60b7cb52b51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e614a883-6597-4282-80fd-da6a979e78ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7284e2f4-246f-4302-b54d-ea3784f59f10",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cef989a-34f6-43d1-949b-60d3a54a6420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24f495dd-6dc6-415a-b028-d75beb831bbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ef660d3-c759-4125-b64f-bdd3b2335891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "fd79e300-6acb-4213-9dff-543cf205a5e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e34c342-c012-439f-80a9-8ef656afcbcb",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74a3a880-6e4a-4359-b0f1-0efd19218d09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b362e62-fa67-4c71-b249-e4e3382078aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ad59b29-f738-439a-ad71-c47b55b192e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "571cd6ac-1b8f-46f1-aa00-a70803688bd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47ace8c8-a21e-414f-85b5-6c56bded1ad8",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1c782c1-25ec-49f1-8265-3a7d151079c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "364a7a04-50b2-48ef-8ff0-aaf59970bb43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3fcb227-6faa-432d-94f2-957deac07a30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8347fd37-0768-423e-8db0-a3aac42f6d3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaa59340-9c76-407c-b357-39286a9a9912",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9ec33d8-18dc-4964-8ff7-3f3023d3a3b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "587b6c4d-b761-453f-aa33-8f7ef2ade3dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d2ae9d4-6a9d-48f2-b9ed-8cc3bb37720d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "20dfc39d-407c-4366-b039-e0fb89be7ef7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "898d947f-9cca-4a02-afa5-76c16e4ad171",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7235256-de87-427d-a457-e2337299f7c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ac73c16-3300-44c5-b0ee-6cdbce2e775c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa885135-982b-45a1-a64f-209cd5784b30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "2917ff9d-e7d0-4d76-a830-298b1fa752ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0921d971-c7c4-43ce-8464-ee5a3f6a782e",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2593f194-e6eb-48b4-8b3f-d15ff54644bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd7858a2-f276-429c-ab45-a55b61159f46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "254b6498-146b-4434-ac83-13d4078fba9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "12948cc3-c5b7-4239-a092-2c0b5f10ba85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e227fe65-c194-4b31-89e4-8c4489e275a0",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c856d0f1-cb43-4410-8ea2-eedcfa24fa67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83dd2683-7026-4b87-b6cb-6e17a0d7cb44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b11b0f89-bf30-4655-aee4-3060c8013780",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9b3b799-eb06-4880-a834-a97680a8da7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "496a99ac-fe90-4aac-a132-ce18ca46338d",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bbbccd2-1aac-46d5-ad75-0d8c571a1adb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b2ed022-317e-4882-8ca1-ba8e93695526"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09ded17a-013a-4ab7-ae6e-e09f5f7bc12b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e1e7b73-d76f-4322-b0ad-62e5b5920b61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2f9e199-9741-4820-bd1f-20282229b7aa",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a8037d7-ec93-4e66-8a75-aecb3404f1c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34719759-3fa4-4b41-848e-be23ac8a0ca9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59d88881-cfad-43e9-95f4-e1c5014e0857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1192021-0424-4f47-b9be-c5e1b4f7ddc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9604e40a-8599-4480-89dd-3146bf4fcc54",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69211b0c-7bff-4865-a702-b89d03109648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec250350-6717-4567-9c36-eea27c68be8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0221541-a601-4ef2-b196-f8f54cf41447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6dc4b779-eb54-426c-b674-1a3a394ff9b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15c909ee-a32b-478e-b353-2092f1a28294",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a603858f-ea38-485c-b5d1-cbdfaa3f1c26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe0208a6-f7c9-434b-bd3a-2d6dbe96d59c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c62bf80-fccf-4943-aec7-ff42fea66c54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6fbc0e3e-b108-4c3c-93ef-bc7771462a7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7045d63-175e-408b-8853-67f0b9fe694a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b63fa44-3dd9-4213-8345-e1c0257e9dc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ad7b3f9-ccc5-4bb4-8c10-a23cfd83037a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d04543ab-1707-4c88-822d-d9a4b4626263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b212c37-378a-4e51-821d-66dc8f0b9ead"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2257f2e3-4d3a-43b8-9bfa-3d0a7d38e483",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "238bbe58-5618-4466-86f4-0ae005db8e50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e967e02b-2777-4d85-baeb-1d9a93c726ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc8abf7f-eff1-4692-a57c-61fceeb5536b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a34c663-f463-4139-ba91-17d641ddfc2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66d9b0ee-136a-4fe9-82ee-4f7257c57da9",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a510886a-227c-4142-a22d-62f30b38e8e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e669f24a-d3b5-4dc7-a591-c91080b0e40e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1be13c74-0d72-4d78-9237-6304534c3926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "10f542a5-3e06-4b5b-b11a-1b32a376769f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "619cfc7d-f88e-4ec3-9a4f-a6da84ed3311",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33e6ac54-a1df-4e7b-9ac3-8363d56dc8e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bf0d9cc-c9b8-4426-bec2-b6d709ce8f80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "985c26b3-433a-469d-8a61-ea200a4af3f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d380391-4843-4544-bea7-9ff82bdd01a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5c11f54-eabf-4382-aa51-026acc98ffd1",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7b95734-2a47-4723-af72-5c820c38cda3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8177b449-3c83-4eb8-b79e-ef1461c7e5a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98452cf8-64d5-4759-bc01-eb120c986e4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5dd62355-c060-46ca-8024-9aa155e4077c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7813380-47b3-4671-a8db-a760752e94cd",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ad0b37a-7695-41fa-9e87-253a17d2d5c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba5d76de-e288-4825-8cea-2d677226e931"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "820df316-9b0d-4884-9041-0bb13bf30ff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c9e80ff-104c-4ed7-91d2-d37ecd9e6ba9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8b98ce6-ec86-40e2-ad04-a6ff89c0d173",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a38d26d2-f065-43d6-9f4c-06d785df90ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a59de384-eabd-4195-a127-dc24d83a5cc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d91b9379-6879-4895-8144-a610c1d41175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "92aab29d-5463-4daf-8f3e-9357dc7fd643"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef85505f-9047-425c-bde9-817e02a3bac2",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45186d3f-e079-47e6-a749-b977851b789a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b44808e-4bed-49d4-ae14-fdc787071918"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a2e737f-ad80-4658-a242-19c964cfa4af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a124e89-44d8-474d-9905-1fb8c4e533b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c2f6898-96de-412b-ab71-6f1df9690e06",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28461507-c180-4d80-8b99-4559c14bc164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a709cce-0caa-40a5-a864-ec94882662ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99ee30c5-d22e-43d2-92dd-f049ad7468c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f168baa-8833-4ed7-9a4f-79254eb1c737"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dfebdbe-51c5-437c-800e-57a8f832886a",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c05e69e4-9b43-49cb-8b2a-23cb745d6a71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ffc7627-c147-43d7-8272-59b65c0590b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce98c3eb-2a01-46a2-b0a8-e6874cc40a9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "72d46021-8098-4116-b11d-d0eb27daf70f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a08ce74-e688-4bcc-864c-4644a9856995",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ddf24d2-c842-47cf-a713-54386b9b2c1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d873efc-c944-45d8-8dc2-7e231181a1aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3805f5b-cc33-4c66-97fc-301e29796e0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "00ccc50c-cfac-4eec-a1cc-7be420f9930f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a526f72-e32b-4867-8562-140a4f78a9a0",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfa5c961-f750-428c-8e26-df31391cc601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87bd127f-3e39-4e36-8dad-ad0f4366b622"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23c5e37b-a8fd-4a23-9cc1-382c777c4479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "533155ce-e466-4101-aa2c-fec7e946a505"
                        }
                      }
                    ]
                  },
                  {
                    "id": "222e5c5d-c851-4a91-9564-d5aa7084d6e6",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "471b9933-debc-463f-842e-1b289bbd73b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf0fbb84-5fa2-4334-8c1a-bf12d8a4b097"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8decc238-cf80-424d-877a-43fb80050344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7c20037-15d0-4918-b591-467a046327ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b99519ef-f59c-4bbc-87d9-2741d8b4be7b",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86ebcca1-408c-46d2-b634-a859a68cae17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85d0fbc0-254d-4c02-9895-e4d4ddc97a68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0b73a39-b22e-4357-aecc-7dbf48207a26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "de12b93e-89e9-4643-bef1-ef462d4f752d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8116b0a1-6226-4eda-b39a-e5c0d8f841e9",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07426d27-aa13-475a-b8f3-9c4bf38b0da0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bda92759-0731-429f-827b-045ffbe0205c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa783b30-32d7-49ff-8a9b-8bcd6088442f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fed6e10d-05b2-4b14-a10d-4da45872bd5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7b67977-c785-4f1b-8d98-10abcbae33a9",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bb447c6-5943-47ea-87bc-dbb048a2efcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fda09901-7bd3-4f5b-9f1c-5c3d2d855f39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5094c057-bb74-4cb3-b001-dfa06a139fd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4077c1f-87f9-4cce-9fd3-36458e536964"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "40bead17-815b-440d-bdee-ac8f8b3b9055",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5e46d217-b6b8-4c2d-8dbb-22bea99742e5",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad82137c-5816-4419-9113-9b515c5a78be",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "046d0e1f-d8d3-4e8b-971d-de9a11b10ded"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9bf688e-9079-4436-b035-1cfcddd7653a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "af0c2ff3-2a8d-4d84-8c8f-810cb17efb27"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0835f199-43e8-47aa-861b-6ce2974fda71",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fde1309c-5cbd-425a-b438-f0a9ddc2dfd1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6a201fdc-1a03-4242-bdfd-ffd2f8b7727e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f5ccecd0-e323-4205-aa44-890bb1c9c0a9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6730eff1-577f-4bf4-8c92-c35b32b9117e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "82759909-4a13-47f3-a1c3-38920a0b263f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "716d1405-7256-42b4-9694-62af922be80b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "66fc5a8a-3a2d-4bf1-b8e0-c49743604453"
            }
          }
        ]
      },
      {
        "id": "dae6d121-e0c7-4617-8db3-12bf15b87c62",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "53495a15-9781-4e4e-9cd6-ed6898788011",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6a01eba6-bec5-4220-937a-35c2c1ab9986",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e6a5277f-1e06-416f-aa5f-ff0e9dc26bb1",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51a7c4ac-2f12-45f8-acbe-ad92d739734b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "073ccbe9-94e6-4161-a403-1295d2bc9172"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f24f92d-bbad-4f66-9d01-2d8229bab0c5",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbfc0d8d-5744-4734-a384-d16f80b5e773",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b92ae80-8ac1-40d2-aa7c-2bfa79afde68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f36d6d3-cb3d-4312-a5db-aaa02bc00f7d",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1238217-e2f2-4414-989b-248a630568af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53134282-2a8c-4261-980d-69f6f656d323"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0c2141c-acc2-4f71-bc7e-f1c2e2b93a7b",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "075e4f4a-8ccd-4361-97fe-0e73eed32d06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74037513-1abc-4055-a0fb-f6b3260103ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "084f4a8d-304e-4589-a2ac-add963e0c7a2",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f685b640-ac28-4616-9f25-cd92365d59a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4acd534d-802e-46f9-870a-f650064aeb00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85132a71-9610-4f1d-97b7-eca66b7a37f4",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "425e9bb0-628b-4083-a910-0b789efa303a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78b0f2c5-58e6-4f13-a25a-ae0345f381b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da03905e-58a1-4f14-b7ee-bc62ba8e3fe7",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3868fec-4d89-4baf-aadb-4da65241a731",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd990e71-bdb6-4fbf-a5f8-332f4f83b425"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90e6a2b9-f59e-4186-ba1b-649f2c0f494a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8c68433-add6-42c4-a614-6c3db2d9e1ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8efb054-7003-41bc-996e-8afa36861fda",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41b7b4d4-a823-45d3-aa5e-b6ff24700297",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d57be3b2-2bdb-4483-b2a2-ab822eea5637"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69db9220-a6a3-4455-a799-f3d7bcdcce4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75c7d1ae-aaf5-41b2-84fb-d8723fafc4e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1579cadf-3afb-49ef-abe9-28487738ccdc",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c1242d8-0a34-41e9-9aad-2a23c515d3e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7fc03aac-8409-4f88-a0e5-6fb01f5eaf5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c84863ec-75e8-4a06-b2c0-5cbcfbbee96f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "645daea7-f073-4fe1-8518-6b2e7d94eff0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecdc687f-3673-44f0-8f10-663d33ea7aa6",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ceff293-f2dc-473c-a1f8-d7adfea8260c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21f1f1db-9505-44b7-b70c-3dc36c2dc346"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d80eadf-ac3f-4466-87c4-6fbb9298e251",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7a031c7-e3f0-44b3-897e-53f3bf8064c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "924718a8-d0ae-40da-8fc7-d3dc65e122bf",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba142c0a-a2d5-4398-ba49-30978689c67a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07726b72-0390-4ae0-acf5-ef3a10c0c7f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8881ec4-5b23-40ab-93e0-ace68236d67e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fe1ca9e-e261-4bfa-8c95-d254ba0b2a51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a12a209b-82cc-49b0-b73c-ffaa43d52b55",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5233d06d-b6ce-4430-af10-6a946e00b730",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb98bff8-dd48-43fb-ad61-d2c9c4f07db6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b78ab3ca-cce3-4b25-a965-257281813e45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7acc144-de4a-44ad-afd8-69b3d521be92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9566586d-64aa-4fdd-9067-f652eb293de0",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c40808a-5933-47c2-ac48-0ab9c459bdab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2f1cc15-3c76-43ca-b194-5fe52c266de4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0155c1dd-abf4-4f1e-b64b-f85ec839f180",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc4b3775-e565-43f1-ab8b-981760927a6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a87d8c47-c03c-4fc8-bb4c-3d2803f406f4",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17b2e535-53e4-442d-8f36-63753a944462",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "871efdf4-6dac-43ca-b05e-7cce93186380"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c1f6d2a-1459-4586-b625-9be3216246d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19d494fc-76c9-4695-9b9b-fc405d15e9f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b82304a-ec8e-4001-af7f-3ab919f120aa",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbf08625-2858-40d6-a6d4-220d387d8410",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80ccf3f0-6d9a-4635-9146-a2883113b730"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52f2b32e-633b-47c3-8b62-ede44f08bf5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6321abe-e901-4f40-8922-dac0c0eafba0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "517238cf-f1c7-4359-87ca-0ad02c711d2d",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a01d625-2977-4bac-9f5c-c5f9e4835cb0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ad80d11-ffe7-431b-ab8a-88a79cd5ad4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ff1bfe6-1814-485c-8ee9-abdebaf00535",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b60a63c-5db4-44a1-8a1f-85c3fed96fca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ef85d38-02c3-42ae-9176-2331a3662ee8",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e599e47a-ebec-47fc-8b3e-d80a912895b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a2b8acc-6b28-48e4-8311-43c3d5b9f2c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84c8fa32-344a-4c70-aa52-ee74bfdb7fa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "902d2f20-bc63-4063-bc95-e4377c78b13d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4232386-b27d-41b3-be69-b6a45b2d495c",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a87baf1-62e3-412e-8aab-6faae05fce26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30d6a6c2-aac1-4989-997a-fa2727a99ec5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46d8de84-d65c-4f45-afd0-e21e2616f531",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac496484-c6b1-4531-a9ef-3d705b698364"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9041681e-2dcb-493a-8757-2d8f88a62ba9",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdbc834b-cde5-4d22-8454-12b352658abe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49f03bc0-6137-4ed1-b486-75231cc277db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ce5f1b9-3f7e-4b4b-9655-3612c2fc0566",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b2540b8-faf7-40b7-a3c4-ac6fd718dfc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1fafa0a-26b5-4cb6-bdd7-6ba080976a9d",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ef2bab3-2b59-41fe-909e-6d540b9d2d3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5996a3d4-9309-4ca7-b61d-973eda669d3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "880919a6-3284-46e2-9d5b-b0089bd18133",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90e8e3b5-2d74-45bb-999a-584d790f1082"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20734da6-c783-43c6-8ba1-c0536e4a8caf",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3692388-57c5-4fc0-b8bc-55c7b586e893",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70695326-c29f-4e24-b4e9-e340f7f0a277"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36cf48d7-fdc1-4802-9afd-9f85320432bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "074032fe-84ef-408d-b3ce-043124f337f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78d807e1-b704-4168-80fb-96fd2435cc66",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3c1b6e7-124c-4f22-844c-d39327eb6226",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02be8413-3f86-4113-aee2-7440a03e4354"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92d27b43-59fc-4459-a375-fc48e686cd08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67ea496e-7cf5-4b1a-9683-f4eadc1f757d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba0987b8-5277-4719-9447-1ff978937ac7",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87c4533e-7f7a-4944-953c-cee93a0a189e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "921c4ab6-d889-4761-ac21-ea025fa1b1bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18ff6075-b352-4600-92fe-aa48041ecb93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38eece96-c71a-46be-8101-bb5362ff61f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9011eb46-6a2a-45f2-9d40-383ae26de038",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0e2d061-b5b8-452b-985f-b5648ac0fd25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7fdaaff3-a31e-44db-881b-7560255be29f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98de8132-dc79-4f12-89ae-b9f7363c7a6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f2ec703-1e55-4c94-bfe0-ca03813be820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "007479cf-b7d3-4628-aa7a-6333fa44c298",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e44215a-8852-4057-b085-972efa4af73b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6345bf76-7df9-4537-94aa-c60c5540f160"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0e254ac-1608-42b8-95b1-62acf112545e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7736cf4f-1386-453c-b2fc-80358f20dc45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50f6e9d0-87fc-4026-aab2-28e5b2fae5c1",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fe30abf-f979-47eb-b2de-22d12851a655",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d465964-6ba1-4c8d-8f24-1be0ac2aef62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3011bb0-d96b-46dc-9a67-4c72a2374ab9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2524a107-c0c2-4cfb-aa81-8476fc72c8f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f42606bf-42f1-4e44-bf82-6735ce7f270a",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0af52692-32b8-47eb-b117-b6191b0da5d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8009d735-52d5-42ad-a389-e5b19c541ec1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df35d0ba-3f8d-41be-913b-a312adc7784e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1571c26-a482-4c23-999f-c4a35908fd8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f6e4d06-92a7-401c-8b46-a1ac888b1bcf",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aea7ba3-6c59-4223-b9f3-49820295a569",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44332f8e-b39f-4381-9216-0a68bf350477"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7ed34b3-a0ef-4eb8-bfad-f362978d0158",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eea8e3e0-ce5c-44fb-bcc5-8d220959cc5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcd20474-bf33-4856-b838-2bdec145c647",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6c1417e-acb4-40a9-802d-a8046c5f2f1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2cfb0f3b-c5a0-4e51-a480-8f644c0dfb25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02f51c04-6767-423e-a0c2-ca12422f6dfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d5318a7-f841-437b-ad80-604ade4475f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e56a29d-a658-4264-b685-9dbb57845f43",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf17e31e-a7af-46af-a422-d1c1ff10fb34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02d496bf-0428-4155-ad0a-240196bed807"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7ff0814-4ab6-4e0e-acee-55511a8596f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcb90175-e8ed-42dd-a646-d566303cab94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6c19ec8-0cf6-4389-8f47-f6728e6062cf",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eecb710-b438-4db3-a988-118cef4cb924",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "577c06f1-0dcc-4bdb-ad68-01a6f9c403fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e52a3c1-3248-431c-ba3f-d71976706bd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91e9dcc5-d1ee-4abd-bb35-c9b83d515d5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50fa6623-76c7-48f3-90e3-0813dea78c87",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dba1c116-b134-4830-aac7-5a4adba01841",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f462d76-1c8c-4966-9492-270b4daaf47c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "487e636d-6f8e-4c2f-9cf5-d17521c88d16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "172edf6e-974a-44dd-919a-3cb17d017010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fac23205-2998-4528-ab2b-5613da08b427",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83349bc0-cac6-4950-95fb-dd9ffe308518",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9fcd39b2-962f-4625-b6be-ec22dd4ef73b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d20de58d-db86-481d-a3dc-422f4067ff94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03e81539-08c6-4e57-af18-6425e2867785"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc0d229e-8814-4330-8fb6-9afff34f8271",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1fc2c50-8f1b-4f74-8225-253cd77ae937",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac64c7cf-d520-4f95-b1d6-6c712f4b52e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e833adcb-2eee-4b75-be1d-9688bd9d3c4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edcb873f-3375-4bc9-9016-16c53cc265f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbb8be2e-6edb-480e-9002-a23b38c7ae0e",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5990a370-87e6-4969-acad-ba8029c36a44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec38f27d-3fdc-4905-b006-0804c9eeaae1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "404f1ab5-126a-41a4-a4e9-ebbdbc4d80e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71c9b820-7604-4db8-b803-de22141b8e8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3399d085-369a-4bdc-95bd-8e3c1f22b113",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67284690-40ef-443d-9d60-054484f58b4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb2f0d19-dae5-4f9b-aaaf-2e8ff3c405a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31bccab2-83a2-40e6-ab98-608da2c0e91f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38f9f935-9087-4e58-a45f-f45ee0f18465"
                        }
                      }
                    ]
                  },
                  {
                    "id": "301a9284-d672-46e9-b1c2-c6772ac89cdd",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b219472-5ff4-487e-9813-61b2bd1f2a6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0ad3d99-674b-4c7c-93fc-7c61d276e77c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2f823cc-c123-4e48-a643-5fc66a7b1737",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1bead68-ddc0-469c-ae0c-5dcf46e41430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e39638e3-891e-4cf7-9c65-c9db6964b7c4",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5ed6dd2-ca6a-4f31-90bc-00c174ec99bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90146279-43f7-45a5-87ab-ddcde0ef1503"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1050b354-55be-4d32-a68e-8e8227ec80f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a9bbc90-ad67-41b6-b457-b93e2235cbf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3216e8e-b920-456d-9c05-b1c70f6ddbde",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "add3ca5b-f38e-402b-bc1e-ae7303b05d12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f660875f-fbfd-45bf-b8c5-9619834ea70f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "693eb253-3c5b-4ffe-abab-5a267a946c38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34943a23-f5b5-4977-8bf2-99f047608a7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61f55892-f2bc-4275-a6c2-821ec8911cda",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "335a843b-87cd-4a39-ac4e-a348ce3f4f41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85640e26-9580-440f-89a2-243b660cb6dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4784a9fb-08ac-47f5-9f35-6dc62ba8922a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69ebda85-a687-482c-b00a-ce28b3d5f238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acd872ce-957f-4cdb-b959-dc3f7ff1344f",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8973cee5-283f-46da-bbf5-70e52a16c0c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8551a66-8653-4449-b53b-3b07bc35ae88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27b85806-029d-4413-ae98-3b3cea584385",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a3e1c02-4ebb-4b6b-bc6a-80508937b141"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6535e95c-25b2-4fe4-a996-5923bae25143",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "effb396d-ac12-45cc-a599-27c8f0ae6b54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b139c03b-0f43-4f3c-ac85-d600ba66cd03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86ee796f-071b-4443-913a-13dc4712bfca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f40e1d4-e086-45b5-a3df-fb9e5d2924cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68d7810c-74b4-46bf-9364-d845112885fd",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abe0f64f-d7cb-4726-b73a-e6e014f9f931",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d01c4a0c-ffdd-423c-a906-cb519483152f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ded6c551-657e-49fc-922d-813b21cf538e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51cffa06-d35f-4b2d-abfe-6805568367b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42ee6092-b978-4ac8-ac63-acb9aefc2e3b",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8d9777b-5746-45aa-9f75-67d383f135a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d6217fc-d32a-4055-91fc-ec84cfed4979"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "500c2ff0-581a-42b9-967b-a0ed8f72f55b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9eb87f95-4918-4144-9e29-58db2eb34488"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e276c92-a1f3-42fb-abb0-2c001bfa0bd5",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4befd57f-8351-4f44-bca2-30fcabf211d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74f0aa30-aaec-46d4-b67c-ea2ce4f87900"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79df2c3c-0cc3-4c72-9c9a-8bdcba0fac97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c0fd38f-56c4-4026-9b5e-344313fb59b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afbc7959-6b2c-4f7b-b3ab-e8e20b2c868d",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "629b6daa-8265-4ccc-8272-d4b05f13a4e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15a7bff1-bdb4-4418-b7fe-392cc7f87e72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cd88779-f45b-4466-86a4-6a35a05716c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "549177bb-5a84-4dd2-8212-4f395510b261"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e05473f-dfde-4031-9e9b-0a6956f004b2",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4008114c-ffaa-45d4-973c-42b9ac74e011",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1800deb7-7054-4093-badb-149a57969555"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36954ec6-4d4f-4b90-bc79-7e71b05f2925",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "271acd0f-fcb0-4bb3-9561-89c057eefadf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "516ba545-336d-4843-b33e-3e9079ecd146",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "909d02ca-f4be-4931-a19e-2de443b52ec5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22dc4aa0-470a-4aaa-b36c-f2a7234efae4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca0be7da-aeb2-403e-8302-9b176a7d5e18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf1739c0-9587-4ad2-9e45-7e53e17296ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7c4216b-68db-4716-aee7-5d5363ac1a2e",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ca6e213-82ba-487e-af54-31b7ed5dd411",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8472f3b7-a1f2-4eec-9cd6-47aee3f5de8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd6988af-4263-4ade-b0f8-259bc5b61894",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcfc7f38-a235-4cd2-8014-25e83c4fc2f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2846d88-cabf-42cf-91ed-0b3a33ea46b6",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bed7ffb-5f39-47d2-8481-842cacc3f565",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5278bdf0-aaec-4498-abdf-92701b00f4fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4a76429-0e48-4cd5-8038-c9de90f4b9f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cc09b13-110e-4ce8-9d12-13512d7a9fb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "878005d0-5ff9-40e1-a9b1-870f4ba578da",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8417409-509f-4784-9c39-86a7b7b0d13a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe48f882-aeb2-4fbd-b001-d8d77fa1566a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "349ee8e8-acdd-47d5-92c6-040fdf5492e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14f4d350-0d7e-45f0-9df1-500ae4e2346f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d9ec6b6-d03d-4b66-b976-a1f8a9ee3bf0",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8033318a-37db-4c2f-8628-66141fe2b670",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e53e085-6f85-4d19-8852-a899705c8e58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "574cb55c-b7e6-48f1-832d-ae119bf23c9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3a78bc0-4855-4854-80eb-0a9133cd0d59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac321b20-1d2b-4b71-a9cb-2438220b2a75",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b9951f8-e062-4843-8128-f3437a51d874",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d6b7d9b-2ab0-484a-abe4-01f8d994e227"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6ad6287-b4db-4152-aa98-fa7f9d696110",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b3bc646-a10b-4c2b-a15f-ce4330e15ba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e35f806-795b-48c5-8b86-5cb6d0ca996e",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4abb8776-fe6a-4dbf-bf44-621dcfe5ee7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c9a2430-f1d8-4a47-98a2-a340078679c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf76400c-7d20-4d83-80a0-16799123e485",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d838fdb-3780-4542-ae4e-43e04e7702f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c647011-1ae3-4666-a067-ca6f6e749c2c",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fde2021-c350-4067-b306-a9bb1c128865",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61562b69-0fa0-4bcc-888c-d4dbf77b2135"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e30a981c-0cc0-4e53-9dcb-2738bb2a0b6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aacc15e8-c970-404e-9975-abe74446cd81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "429d3fbb-bc78-4478-906a-0ce92743ceda",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0100ab30-8624-45e3-8a7d-0c953e817500",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae2bc291-1551-4a3a-91df-7861f3f80ab2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76c9c7cd-a7df-411e-8631-1fed6b573bb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "635ba5b4-3ddb-4b7d-a96b-782dc8c3a805"
                        }
                      }
                    ]
                  },
                  {
                    "id": "831dcef7-a528-4b58-987a-e4db973b2bb8",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ba97cb3-1299-410e-aecf-d36351a09b18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "685a9ef6-bd92-4bbe-a234-368264a30b3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dd518e3-80c8-4cb3-9d50-ff74c860bb46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28583931-ec95-4876-a006-6d681dfd224a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b41f9360-31cf-40e5-a841-86bab27ee667",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f14fe489-4b4a-4f23-b9cd-5220da4f069f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4346ec41-6daf-4bc7-9e89-5c9346eef4e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61a571e2-6844-4934-ab58-23a63d81855b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46b51b26-ed09-4226-a76d-9c58dd80d853"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9650ec88-a5f1-4bb6-8d12-ac8020265d23",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7c4c5a8-d51c-4b36-bd06-beddb27fac3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4105e65-293c-4ff0-919a-ebc6129b990f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d51566f2-b9ca-4c10-9e1f-776ce0b97c42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae4eb463-71ef-4cb0-a09e-c2b626bc2cee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5daa5a87-14a3-40d3-9c1b-ae24bb70f0d8",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "417bcf27-50c6-438c-8e6b-a400db4a7c8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "880edc02-153a-4f69-8daf-8a2a765fb149"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d39a0f63-48b5-47a0-84c8-ea0933ddb92f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b0b1850-05fe-4898-baea-38e3d503b3aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff8aee7d-2b87-46e4-8a34-b5a7ce378bca",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3c8e839-38cd-4090-91fb-9f86778afdb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e677e221-7e1f-4d1a-8582-b2c0d5cf7dfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f713f09-096d-4e21-8d5d-f40850fe2d2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2196e4db-97b0-43da-bc1b-db03279a814f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5981f467-2c8c-48a7-970d-7f89b2bfe3a2",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e42214c4-3f80-4e1d-b5e6-d7cb4d770c68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8686c541-bc5a-4a25-b33c-eff88c56c68c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17f97241-d4ad-4c76-85fd-c8293cf39a6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b238119c-e7fc-42bd-84b8-40f83b2eb942"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aabd861d-35b9-49e9-bfbb-549ccfcbc949",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "910adc29-9b87-4fcf-b7e9-a35ae6b267c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "195b5472-91ff-40c9-bfb3-e4702472c8d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6efc371d-066f-43e0-8643-9f6c78d66ebe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea446f9f-ce82-4ab8-b109-a03ffebc396b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "046c5faa-7148-4586-bf02-12c9545e06e4",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59f9dd8a-a163-4369-9f4c-1019fb9bbf60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be188890-d368-48d4-9c0e-8544d820004e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d0b4126-8cc0-4d58-9db8-c4fca1af8d48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86d9b1ea-eeed-4d2b-9291-784775adf774"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14bc9a7c-d2b0-401f-802e-aa017703b3e5",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d44ffe0-2196-4531-b3bb-63f7b99f3b5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "edf6ae33-b423-44cb-8f3f-d6f16ab9593b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6e7b27b-bf9e-4051-b10e-e23787db4fd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "925ab0cb-4b24-482c-9d15-6b23ce5d595e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d917705-de7e-46e8-a249-f2b9b3214033",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec368327-0a3e-4355-8289-f35cc4313dfd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00430ee6-78bc-4fd1-ae8f-562c7edf51c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e91da8b8-6507-4b54-9c38-7f8d17923601",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c82ec9d-5f90-4be9-b738-aacfc5c415b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43d4df99-6a1c-4cb7-b9ed-66f9e8df72fe",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3acf39a-b293-4407-aa34-72d72e0f0454",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df54b23a-1fef-4b9b-88d3-605b36fe66fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98a0d028-1344-42ee-aea4-2ba5f870796c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1d5ce85-919d-49d1-9c82-fce83f3e27a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "867c9964-2ecf-4e5d-b15d-41dd3ca828f5",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3796a87d-ef86-4fd1-b44c-861f1166e086",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "323c02ea-c723-48ca-8bb1-6c042d7f59f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bf90713-6a0c-4dbb-ac15-7a5d5299d0a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "305cce97-5fea-4197-b378-f2ca3ba54c07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c88fdc7e-301a-4a2c-8b38-c13bd46f97d6",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d592432-8922-4316-8a37-66ba382e8741",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e7ceb1f-5b18-4757-b11f-7e1c13627d6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f234c1b-8ed3-46f5-9044-683639c29944",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7160979a-e277-488f-902d-c8faa57f9599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de4f3e7e-6441-4b37-87cf-bd021d595fff",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb4a4060-4e93-4869-8bb8-2993e55f308c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1b734bf-c2d3-4a62-a446-2b79738ab905"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a0fe1f3-fb8d-4671-84d2-dc28a139d4b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7a292dd-cd1c-405c-a93b-931ba30387b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f529bb3-f14c-4d62-8fb5-64883169b5e9",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d713444-7ac3-47af-8829-3bf13e6bd3d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "828dce84-eede-43e1-b8ee-2fa048186ddb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d76c148f-10ca-4568-aea9-8fd7ed7cb34b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a185a1e-4cbc-4b58-a325-b733e5b1535c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e574ff66-0ec0-44f9-bacb-6fd705530822",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7b30c87-30b9-45b1-bfbe-0964a1a23027",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35061034-2b92-45c5-846b-cba19f3799de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd8d3cb5-99d1-4ed0-80bc-172414265c77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff1e33b2-9b77-4fc7-a0d3-4952dcd7538c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13f0a13a-2ac0-4ee5-8abc-9bd6ab590516",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30555c75-1d22-43d8-b260-c8eddf7ecb7c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce122b09-2ad8-46f3-9e14-610acc567160"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7e39f53-c50f-42a7-8406-d0de9a1e9839",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdae795f-7a37-4a37-8400-a8954f3bfa14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "862aa02a-8f3a-4998-b07c-b80f0e7b1fab",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0698e8c9-a526-4d1b-a33c-8ddc9c229ce7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2cfc3772-dc81-455a-9921-4c1565225b8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4026804c-0a52-47c5-a8ec-aaacd1632832",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2645e1c9-86b0-4f2c-aa25-44d17f969272"
                        }
                      }
                    ]
                  },
                  {
                    "id": "988f9229-8b17-4558-8a72-255f744d1073",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d795f912-680a-4dbd-92d1-18f8afeb63fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87dabc83-e3bb-4f0e-837d-13d77ffe1ae4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "602d5439-be2e-4219-a869-c536aae03b3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2341aa17-bfb5-4b6f-82f0-cb4147fa7750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33e9014b-fb33-4068-9d3e-ab1310e28225",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78151a95-ed2a-4123-881a-fb7d503fba25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93e9b8a8-444e-4828-859c-d25ff78ed6c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0013df0-3dde-4b64-8664-831d42fee366",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1d1de94-2643-4d31-8c2f-8b5643c62a89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66187de9-c7e3-4db6-81e1-70e14fd1a774",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f916711-c37e-42fb-8419-eae2ee020d7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7e8dc9e-b87d-44e0-b7f1-2c5e29333631"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41cf39f3-6d2b-42c3-80ca-72dc2f4b3d05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2eed3dae-5366-4fcb-b21d-8f8ca35a922c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76a91e85-4bf2-49c9-9ac8-d264d2f21d41",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "738a7a23-40e5-40e2-9f3a-7aebdd76bb42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "883280b0-a010-46dd-98e3-f5ec3138fcda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4fdc0ff-15f4-4500-86ed-a327ab0f528f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14611dca-cf28-47fd-9873-0d1adb9128ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce465a99-0e13-4787-9771-9f53041c9ece",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9b18472-e32b-4704-8d30-27fc717b874e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eecc6f2d-29f5-4031-a758-a1da618a3345"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3b4c0d4-3b79-4f3c-9c32-3d3799c6b543",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66d584db-89c6-4c2e-a3fa-44d8698e87f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14dc7e2e-e6c4-4291-9271-8b467316b216",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85139104-80a1-4a02-91eb-7cfcfe890c0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1115ef7-32d0-40cc-a1aa-94601548665e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a417153-6284-4134-aa41-52fdec16eea6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2fd62ed-8f1b-41b2-96fb-6e6747a2664a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "712e1741-d270-4ddd-a297-380de873f9aa",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0a22bfa-891e-4fc8-ac91-6faf86612ce2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c72b2cf-a83f-4e68-a9bb-34cf64c44f47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4d03e25-0a60-4480-92c8-ca66af864aa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dea8956-69d9-4206-a002-19ec8e09a1e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83f1717e-0a48-4c72-a58e-23ce26aad8ef",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5160a318-023c-4350-8681-34577a5e1c7c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5bf8c574-3862-427c-8c24-ee740cef9212"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "908a4f68-cb52-4f30-bb73-2da6e7413ee3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efb73160-49c5-4eec-b887-b66b2f0eda8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "387b2cf8-2c14-4adf-ab1e-8e7fbd8d5c69",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e269ae8-77cc-4605-b739-06844583d629",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3dc2131f-6881-44fd-a850-9cfecc886383"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06202ee5-18a1-4edb-9ba7-9d332c49bb3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03b74c60-dca4-4018-a27d-0652a403dd70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79d68a02-8de7-4898-9633-67a49707c5b7",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e7be5df-7190-43f7-ae46-4a953f32d12a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "091a5c55-63ed-42c6-b3c3-fdb6a5e86a0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97a21f6c-eb9f-45c3-a84b-486fc9f49d15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "660b1e4e-282d-4139-bcf2-2db4bcb3d094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfcc3fea-7fa8-45ac-a77d-39b9a714db19",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8c9f56d-06ab-4f52-a8d0-016cbcda28ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d38634a6-5b45-4c3a-93c2-8c627ed6bea0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f760ecf-3d38-428f-b64c-450343ed4bc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b03b287c-2c3a-4752-afbc-0c418124cfb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f231a77-e490-496d-8c9d-da50556e432d",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21b41dbd-1352-4dbe-9f07-be85f939ec53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0cddf1e-1aaa-442b-9807-149ac571c5ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26e518ea-ff17-42c7-abd4-1a1f47e15f40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bad3a9b-b70f-4fbf-9f25-433a49845834"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f447dd2e-3ee2-4e34-a5b6-cf7bc8eb762f",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10332feb-735f-4d03-a908-c5c6abf64297",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e87e2414-075f-4828-973b-412af526a445"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5bd5867-76aa-43c4-bec0-bb43fc5680b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11720771-dc5a-48e5-a66d-b2c28f86fc4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fceaa660-6fa7-45e4-923a-4feea38fb08b",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18489f68-9b6f-4e9a-aa05-a54b76e3b64d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3ff114a-13e0-4f1a-a7a1-5318ef349252"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7328e59e-387b-4641-8fc8-970be4d6d7c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24db3ebc-3a62-49fa-a095-2e77d573cc3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "431ae760-e3a5-4431-b116-808000493aa4",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0902df37-6fbf-4aae-9e5c-3723ccf38eac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3183182-f039-4f9a-9cc4-c22997032484"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39ad095e-8cee-4a4f-81cf-fd7d9be38c90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c670483-e779-4d01-9096-d081ab30ddc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "000608c4-3ff4-43df-874f-8897fb1072aa",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07ec4594-88ee-4b53-8dc6-5164bb90ef76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a0e2545-9557-4e8e-8944-b4fb0ac89357"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55e34b3f-53ba-45b3-a960-492add3b4b5e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e858604-80d1-423a-8d34-9687389ddba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb09de77-2ca5-4f23-825c-98c8ce1868df",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e6ba8e5-b639-4322-8c39-4ac394a8931d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a99fd1e9-49c2-4802-b96a-d0aff2e759d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93844bb1-08a2-467b-86e1-4a595332451d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c0d31ae-caca-43b9-b6f8-b2cfbcd517ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cde6fd1a-6e39-4734-82d8-a1de50d9fa46",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf9061f9-c01c-426b-a2b9-534bcd062534",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dafa8159-af18-456d-a079-db38c4876d62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "970ce052-c7d3-40e0-964e-817509a88c3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27e616e7-9d7a-4207-a014-c99a88074c8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1afb4120-5030-4173-8fa0-93a1e4698874",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b1a19b2-2796-47a5-a4cd-d9037e0e33f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f47a8ca-1125-4fb4-b2ae-9abad7ec77d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23719549-df6c-49ff-a121-19d8c20b443b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3aed0982-d10a-4584-9de0-552ccfe21a09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdd88ea2-cdbd-4ade-ab73-6fcb138dc131",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcabeba2-4c61-422b-b752-856c253aaf60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e91e751-a48f-40e9-903d-dcebade80f8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f09302b1-9a8d-4e96-84f1-77c43b3fad70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b45e0c3-8b16-4806-ab02-730c5fc6471e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b9b255d-bb54-4857-a7b5-66b28979fae0",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f377a8e7-34e5-4e8a-9b77-95e11ae4786e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e4e8382-d45c-418a-85a6-06eb919bff9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "accc8ef7-e250-4362-ae0b-8f2cc3f6c142",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b3047b6-93a1-4c03-bf00-08a36cd6e9a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b6c3923-2013-4bac-a668-a2a2aec6ecfb",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e247a0a1-81ae-42da-89c1-2b554116c52d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "036e22ee-24e5-48e2-9a07-c02f4534332a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c42ec76-54ae-49ab-9fe0-0162d89890b1",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b57bd64-ef94-4c4c-a75b-9f9a3ed52da9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8de1dbd4-d30d-4b7a-9de4-441b6d4543ba",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edfc0cf2-4389-4046-80b8-c8824407a730",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7133731c-3c35-4368-af56-e204e17af7cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f2200f7-88d1-45cc-8ed7-7a3d575b00b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64862cc1-a8bd-4c12-90e6-d917e09b2b13"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "15abc32f-2ae4-4fa4-ab79-7bcadcfc53fc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5920a768-496a-4ece-b8c2-9166fe0570e2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2a11b7bd-f1b8-4685-beb0-f65099bbc050",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fbf89450-d2ff-4f65-8851-998aae427561"
                    }
                  }
                ]
              },
              {
                "id": "4b972385-4691-4001-8e13-14aa8b87ec38",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7782eacc-c231-4dbf-833c-dae18fa30585",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f348960c-cce2-4281-b38c-80d52295b2ef",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "cb71fc7f-a4c1-4892-823d-ab734983eb4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a07bcaf8-89c5-4e23-bac6-7eebf169782d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "54d039c5-bd81-4287-810e-581678a1af32"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dd0f7137-81fa-49fa-a6c1-6725aad90490",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a02c1d4c-87a6-4911-a7f7-655fe368a95d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "28ed9c2d-93d3-499f-9601-5c77290fabca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bb363296-79e6-4e78-8753-73c7bbd2e32f"
                    }
                  }
                ]
              },
              {
                "id": "8a727b15-d60e-424f-bbe7-f203fbaba073",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "88b443d5-ba65-447b-badf-4dc50a69aa2a",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "239d15d0-370c-4af7-894a-76f09719d36e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "7e753402-a47e-493c-a5af-4efe5800b143"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33c90466-56ca-4a5f-8a2b-43a0aaab0c49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b47c56dd-4303-4d64-97b0-e32a43e60d3b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "035dbb47-47b5-4ae9-88d2-23cc6efdeae9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "eb4fe851-3011-4f48-9ef1-e98e60756f11",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1ee7f7a4-092b-4710-aedb-203d2b915ef3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "be39e006-1af4-48f6-ac3a-a4de14465d46"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "483282d5-ce3d-452d-99fa-0b315aeca0cb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4554b258-6893-4fa8-b93c-67d1394fb5f6"
                    }
                  }
                ]
              },
              {
                "id": "46ab1e32-59b7-4e1e-b51e-eeebeab0b294",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e9b16b3a-fee7-4429-a0cf-025f96fba318",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "379a37a4-81dc-4237-8881-664c53ad121f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4af3c276-3472-49b0-888b-5b32321dc3ef",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6e2d979f-67cb-487f-be9c-90d6df0006ac"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "69201f1a-0781-410a-85ff-56d614eca883",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "90d7254d-9463-4b61-bf8f-c1e8ae6c2870"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c1b416f4-fbba-41de-931e-fdf2447ad2e0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2eaf5465-4e13-4701-a492-8fdc4cf2cf21"
            }
          }
        ]
      },
      {
        "id": "6d64599f-745e-49f8-b7f8-58c960f4e355",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "193fc97e-b22b-4ce9-8391-b8a49cf0f5d0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f79da054-6880-40ba-aa38-2f1b39f388ff",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4d193d0e-5198-43f4-a67f-e82b1fb74da8",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93302e54-1055-44a9-8f31-f8207bc0dac6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "2da84f3f-c11f-45ce-bb8e-0d69aa163749"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73fc5a6e-47b1-4362-a07c-a64a09cd4dc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "00bc81d1-3914-49aa-9caf-289383f51d53"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e3bf1812-3d4c-4317-82cd-d325ee978cde",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c1282fd2-b8e2-4a7c-8fe4-52de36af3528"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "837669be-af83-48be-9f10-14cc48f56ad3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3bbd575c-bab6-4170-b6a6-ec7b1cb09838"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "95f62cde-6b9d-4813-9451-618fa91cac31",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "8009d8e8-0fa4-4afc-84b1-22ee3b8e4a9b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e00f35b7-ddcd-45f0-846b-370bedb0ccfb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "64af5811-47e2-4cf9-9dc5-89e9e5ab47d8"
            }
          }
        ]
      },
      {
        "id": "a6b47f99-d293-44c0-a3a9-ea4dad1db1b9",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "7271066a-6de5-4a4b-aa17-e9459b7b014b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "406766ff-d522-4b0b-bb86-3021654744da",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9dab52f1-d7c5-413c-a27c-ee4094396d2f",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa6a4945-94b0-40dc-bcaa-408c1be854d3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eb1eccd9-6be3-44b9-9426-2786712c77c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1ec14d1-d29d-41dd-962c-f4e5e5626b31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "49f4b524-722a-42d3-ace6-622f58e74e95"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "91bbbd86-ea0d-424c-b390-307dea90ae89",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "72404d30-5ebc-41b5-b4ca-2769518cc685"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0fd88479-7ce9-4876-9bcf-a32787acb272",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3623519c-bdb6-4c42-9aec-f5e5ecd5cf67"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4f5510be-9881-4c3b-962f-da06b21f4db6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3df28047-0a71-4ec7-b8cb-0c14e45f724c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9d278d3a-2c96-4c0d-b73a-f62ba9a32b06",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e29dc284-ddd0-4520-af5d-c19e7dde2f90"
            }
          }
        ]
      },
      {
        "id": "9814aa86-2dad-474d-a609-80844d7d92f7",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "7690f17f-734c-4e5b-accf-39afbd3abb71",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4737f9cf-f28d-4ec5-b970-bb418acf936a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9e9bdeef-e0cc-4486-aba6-1b980344d1d5",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c8bf199-e4c5-414a-8437-6c8ad77874c5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4981af36-77c8-447e-adfa-843e3290a393"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f07309ef-f898-4b93-ae4e-54484465de76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f93a88aa-cee1-4008-a1cb-84cc50afd84f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "028defe1-5d50-4ea1-85c9-a719fe2fb34d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c5f1e533-a58c-494a-92ab-9f9c747a792a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5e355d7f-404a-4936-8beb-c13f00537b38",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b521ead9-4dcb-4f71-8ae9-7a87dc6c28ca"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "48d68708-d232-4fdd-82b7-d0fe17cf9bb4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0e7a1b61-cfd6-448a-8e5e-46604d1dc14d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "71b93e5e-95a1-4c43-bee0-851f5a3d3200",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9536ce76-ffb2-433c-a9f9-579138f80a2f"
            }
          }
        ]
      },
      {
        "id": "6dfdafd3-a27f-4f23-a05f-e966d71aa31b",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c4e1e6dc-4faa-47f3-9c4b-35123212fd39",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2edb2f87-6bce-42bf-8f80-45a937735da2",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "5a11d1f2-51db-4ec4-ab64-4f686cc9613f",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f2cc2ad5-6b97-4367-8343-a04f6e1b2b0c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2a3d52e5-40b4-448c-bd4f-11d4e7adf4b0",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 91.39682539682539,
      "responseMin": 4,
      "responseMax": 7406,
      "responseSd": 577.4107651715142,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1712363640661,
      "completed": 1712363672348
    },
    "executions": [
      {
        "id": "7beef8c3-a37d-400e-88aa-0b2ef86f50a9",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "a2df956b-521d-44a7-b8f4-a532ee638799",
          "httpRequestId": "11aad112-72e4-4fa7-8778-accb5ca25810"
        },
        "item": {
          "id": "7beef8c3-a37d-400e-88aa-0b2ef86f50a9",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "234b15ba-06c0-4005-846a-02698d9394c4",
          "status": "OK",
          "code": 200,
          "responseTime": 74,
          "responseSize": 0
        }
      },
      {
        "id": "a1a3240c-d9cc-45e2-aa45-553d27c039eb",
        "cursor": {
          "ref": "06a4deb2-a213-4109-a019-896ba9af4b1d",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "f4e66f27-1f6c-4f63-94e3-10b4696f0c72"
        },
        "item": {
          "id": "a1a3240c-d9cc-45e2-aa45-553d27c039eb",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "33cabf5a-0bb5-4724-92f9-ec0bbd0b6b23",
          "status": "OK",
          "code": 200,
          "responseTime": 17,
          "responseSize": 0
        }
      },
      {
        "id": "6d63a8a9-56d0-416b-8603-923acdfc0eb1",
        "cursor": {
          "ref": "bb308040-ce30-40a6-8d3c-b108e11c1bf9",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "e925bff4-711e-4005-b230-976a5fceaf48"
        },
        "item": {
          "id": "6d63a8a9-56d0-416b-8603-923acdfc0eb1",
          "name": "did_json"
        },
        "response": {
          "id": "b233652b-7b15-467b-b7e2-7f23027d45a6",
          "status": "OK",
          "code": 200,
          "responseTime": 189,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b5c5ae3-1e0c-427c-bdc0-45eb51e10cc9",
        "cursor": {
          "ref": "681383dd-0fb0-4742-beb2-b625548b9ac9",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b7c41b3c-b13e-4e60-9e92-4709fffe0580"
        },
        "item": {
          "id": "3b5c5ae3-1e0c-427c-bdc0-45eb51e10cc9",
          "name": "did:invalid"
        },
        "response": {
          "id": "5983a365-de86-444c-a386-b53bf9783a44",
          "status": "Not Found",
          "code": 404,
          "responseTime": 367,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b5c5ae3-1e0c-427c-bdc0-45eb51e10cc9",
        "cursor": {
          "ref": "681383dd-0fb0-4742-beb2-b625548b9ac9",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b7c41b3c-b13e-4e60-9e92-4709fffe0580"
        },
        "item": {
          "id": "3b5c5ae3-1e0c-427c-bdc0-45eb51e10cc9",
          "name": "did:invalid"
        },
        "response": {
          "id": "5983a365-de86-444c-a386-b53bf9783a44",
          "status": "Not Found",
          "code": 404,
          "responseTime": 367,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5960e860-4f08-4634-9eed-34663f10fbd2",
        "cursor": {
          "ref": "4c69f0a1-ae1a-4186-ab79-7157309dd9ba",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "c0878aef-8742-4777-805c-92e0731ed602"
        },
        "item": {
          "id": "5960e860-4f08-4634-9eed-34663f10fbd2",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "aff4df37-1a7b-4a9a-9d85-3583fd67d8e5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 13,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4b30e11-a494-4c0e-8312-0631b46ef604",
        "cursor": {
          "ref": "61b59f9c-31f4-4025-bade-4a7ab5a5ce16",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "45cc32d4-70de-4374-874e-06138d53a5fd"
        },
        "item": {
          "id": "a4b30e11-a494-4c0e-8312-0631b46ef604",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "cb7b31bf-87ae-48df-8317-ad03c4c10ee6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 13,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ad895b8-4876-4d7e-8c8d-040ac9a6fc06",
        "cursor": {
          "ref": "8204914f-a00b-471a-8f9d-5ff2e72664a1",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "6a64a3b0-96f4-4fad-93da-f7b4b2ed5f3d"
        },
        "item": {
          "id": "4ad895b8-4876-4d7e-8c8d-040ac9a6fc06",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "43225302-611b-49ef-b171-dc5f2da1ec5b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 6,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98fa5999-bc70-428e-b399-371f7a26b2cf",
        "cursor": {
          "ref": "6df9782e-b193-4845-85b5-09585511ff8d",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "581564e4-a317-451e-b69d-4484f26fc63b"
        },
        "item": {
          "id": "98fa5999-bc70-428e-b399-371f7a26b2cf",
          "name": "identifiers"
        },
        "response": {
          "id": "616c82cf-e776-4d6e-a44b-0b0836c39243",
          "status": "OK",
          "code": 200,
          "responseTime": 27,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb048494-3f0c-4d7e-88d2-e7330689bc1e",
        "cursor": {
          "ref": "53936881-5218-49f6-a346-5b69d537d069",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "ff756371-18c0-460a-a659-4ab3eb8a1f9b"
        },
        "item": {
          "id": "cb048494-3f0c-4d7e-88d2-e7330689bc1e",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "96b6713a-5984-4499-bf0e-cbb795370a24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e126d648-4601-41a5-be07-333328093a06",
        "cursor": {
          "ref": "b76a157d-58ee-4b83-aaf7-18646efc2d50",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "6112927e-043c-441b-9da4-2f2cfcd48863"
        },
        "item": {
          "id": "e126d648-4601-41a5-be07-333328093a06",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "5106ae22-289a-487e-80b0-3c0df84c2d95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38f7006b-011a-4208-8855-df0f93d3c245",
        "cursor": {
          "ref": "3803b135-5d92-4da6-b9fa-658f4b607c48",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "58fbf67b-bbd6-4be2-8c52-0f9c48597c2b"
        },
        "item": {
          "id": "38f7006b-011a-4208-8855-df0f93d3c245",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "70c703bd-f951-4327-8f02-25f22954aecb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95dc0925-027f-4f7d-9c20-83df0684819b",
        "cursor": {
          "ref": "1e95d046-18fd-43ae-8e60-fd76fd326a05",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "2240e0cd-cad0-419d-b5a6-97f07acdfcf6"
        },
        "item": {
          "id": "95dc0925-027f-4f7d-9c20-83df0684819b",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "f23114a8-8983-4af5-b32d-29eab709d09e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08fd99a3-036d-495b-a078-68367789cac2",
        "cursor": {
          "ref": "a152b0d1-a338-45ad-9db7-1ee2d2c3c6c2",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "09bf248a-5827-48f4-9bf3-dda716267967"
        },
        "item": {
          "id": "08fd99a3-036d-495b-a078-68367789cac2",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "c5ace243-622a-4f50-b744-d1a457d89a0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "915c33a7-d356-4091-a069-ea567546d044",
        "cursor": {
          "ref": "b15f46c0-b42a-4444-9bf2-47e9ece83c9a",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "c1a2799e-6924-49fa-9e16-b7b41115ca6d"
        },
        "item": {
          "id": "915c33a7-d356-4091-a069-ea567546d044",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "c96f2e39-6f27-4ecb-9c1e-c96a54bafe19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faa52327-ea90-4b3d-ba5d-348d4ebff400",
        "cursor": {
          "ref": "b1ccada1-38e9-4692-8c40-1a76691701a4",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "c6ac181b-869d-44e1-9a54-d493bf587c2c"
        },
        "item": {
          "id": "faa52327-ea90-4b3d-ba5d-348d4ebff400",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "a9725ae6-da04-43fd-9045-163e3b05e1c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "044de9eb-1f0a-4674-b24d-1d4733db9e21",
        "cursor": {
          "ref": "e4386a03-fc28-4470-9f02-0f400dc0b120",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "ae3baeaf-1ab2-4c02-8912-ee619613b3c3"
        },
        "item": {
          "id": "044de9eb-1f0a-4674-b24d-1d4733db9e21",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "0374cd60-28ed-4ad5-a250-ad7a853d5a4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c56635b0-b6ae-4700-a0b0-926a29030398",
        "cursor": {
          "ref": "3d127a40-e63d-4fa7-b970-0a211e32b234",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "a5f00302-8384-4753-ad0d-dc91b9df8f44"
        },
        "item": {
          "id": "c56635b0-b6ae-4700-a0b0-926a29030398",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "e44a75df-d4fb-459d-a98a-4c77203b5ffa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f85d0d1-d94f-4705-b024-a96917d9329e",
        "cursor": {
          "ref": "3c41a762-cbb4-4b48-9186-3cccf3012f6a",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "60ed8c31-54b2-4c7a-ab15-84a769cca53a"
        },
        "item": {
          "id": "5f85d0d1-d94f-4705-b024-a96917d9329e",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "d3ac1977-f624-44cc-91cb-8a31fe450da6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50b2cb55-3f7a-4cd2-8ff2-4e98f97cc306",
        "cursor": {
          "ref": "267287b7-90ce-429f-ab54-8bec73bbfbe4",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "4f6a863d-7be4-487b-ae7f-a5d00c960a50"
        },
        "item": {
          "id": "50b2cb55-3f7a-4cd2-8ff2-4e98f97cc306",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "02d3f7de-d955-4a65-b6cf-8d1c61b7b861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f69a2a6-ccc1-4e64-9877-0198bc724b3a",
        "cursor": {
          "ref": "909f6653-34b9-4f91-a954-0c3d49149274",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "fc6e9f2a-49eb-446f-84ad-1b1f2a8432a0"
        },
        "item": {
          "id": "2f69a2a6-ccc1-4e64-9877-0198bc724b3a",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "1ab51fdb-20ca-4f8f-98ce-3739689c7d00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96130659-b865-4509-9b7a-cb73959c4f88",
        "cursor": {
          "ref": "484fcfca-5de0-4ce9-8f34-01f587da6cbe",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "c96ed320-d187-406a-b7fc-77281d9bc606"
        },
        "item": {
          "id": "96130659-b865-4509-9b7a-cb73959c4f88",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "833dee4a-0396-4318-8889-78f71c8c54c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "573fe4a9-cb0d-4f8c-be5a-d06274526e95",
        "cursor": {
          "ref": "9c42b0e3-5151-4a05-9344-48d55c4fdb43",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "36f2fcf3-9b3f-4449-89f8-b160a40cce12"
        },
        "item": {
          "id": "573fe4a9-cb0d-4f8c-be5a-d06274526e95",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "1e76b9b7-a517-4d7e-899b-40b92139c7e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20a71cf9-3f13-4cdc-8d5a-28312a7d2ca5",
        "cursor": {
          "ref": "af3d76e1-352e-4743-91ba-f3e39c3fea16",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "191475c3-7ff8-49e5-b284-055e43a53cf7"
        },
        "item": {
          "id": "20a71cf9-3f13-4cdc-8d5a-28312a7d2ca5",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "61840b57-af34-4caa-8e48-5d309b6eff75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33eda747-dd04-4879-afe2-8a2f9abcd638",
        "cursor": {
          "ref": "e0834f3c-deab-4688-8c9a-036ffdb6e9bd",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "73ba002d-51db-4c06-a576-2157a89f863e"
        },
        "item": {
          "id": "33eda747-dd04-4879-afe2-8a2f9abcd638",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "fd28cc8e-00cd-4243-97ac-5081df38dc9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9063055c-a708-4a5a-9b79-8e0c06059d14",
        "cursor": {
          "ref": "91e6886a-42d0-497c-9770-1ff3147fb561",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "2e438b17-15aa-482d-b605-ca6b46c379e4"
        },
        "item": {
          "id": "9063055c-a708-4a5a-9b79-8e0c06059d14",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "c1c94875-0d00-4471-9a09-878a47d535e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73345e74-2c0f-41e0-9c22-951f520d7467",
        "cursor": {
          "ref": "89721fe3-3e48-4980-b9ed-ecc9578505e0",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "74dce2dd-776f-46a0-abf5-3d9f929438b8"
        },
        "item": {
          "id": "73345e74-2c0f-41e0-9c22-951f520d7467",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "8ae3e3f0-0174-4ab8-94dc-8daca9a40bf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "778b6c67-e457-484a-9e2b-d93c2d699d7a",
        "cursor": {
          "ref": "ed03cce2-d15b-4b23-a8ef-3dde85ada612",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "d402e633-31e2-4e86-8f26-ec9120e4a76b"
        },
        "item": {
          "id": "778b6c67-e457-484a-9e2b-d93c2d699d7a",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "7e301e99-2960-4877-955e-e6ee3d383559",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 156,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e01f737e-0330-47b6-addc-acaf6c4b19c4",
        "cursor": {
          "ref": "99ee3c81-5e09-43d0-97e4-36d33470b72c",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "e855c24f-de0f-45a3-999c-90f6dc5e983c"
        },
        "item": {
          "id": "e01f737e-0330-47b6-addc-acaf6c4b19c4",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "5fd5130c-2c9c-4cff-a680-90ce010485ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33e01775-ba0e-4aaa-b2fc-c6ee241d5d9a",
        "cursor": {
          "ref": "a988bf34-f4f4-41ed-91a7-f6132db36170",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "f1353bf5-953e-4dc0-98b9-b49713affd08"
        },
        "item": {
          "id": "33e01775-ba0e-4aaa-b2fc-c6ee241d5d9a",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "9724af13-b757-4856-842b-071fd2bcd566",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8151fc2f-fe26-4351-832e-051a0a927c40",
        "cursor": {
          "ref": "c0af4311-a025-4d9a-b25e-d92bf0d2c114",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "3666e80c-140c-4815-a633-4dd15dc449a5"
        },
        "item": {
          "id": "8151fc2f-fe26-4351-832e-051a0a927c40",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "814db594-429e-4ddc-a0fd-90d7c7981ceb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "898a2a60-64a2-4d01-b8e1-b1b8c536abba",
        "cursor": {
          "ref": "2d0f7293-49ae-4250-a145-2943d8203680",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "f6f045d3-93d8-4df5-a7d3-92080a88195b"
        },
        "item": {
          "id": "898a2a60-64a2-4d01-b8e1-b1b8c536abba",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "bbb62488-1fcb-400f-9129-4270b073a3f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3955de3-bd97-4d88-b858-bc8ddfffbc2f",
        "cursor": {
          "ref": "52bb630a-1aed-48cd-9556-f251a4f9cb03",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "5a6b8e51-3b7b-4c11-b0fc-ac7b66147433"
        },
        "item": {
          "id": "e3955de3-bd97-4d88-b858-bc8ddfffbc2f",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "863a9d7e-4740-4bef-b966-e00b73e9ecd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bab490c-c8dc-4c36-9a41-4851e6314866",
        "cursor": {
          "ref": "9604ca45-e545-4c32-8cd0-a8e1f9a2d14d",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "4cdb3f46-99e7-434f-a69b-7a13c2022e10"
        },
        "item": {
          "id": "9bab490c-c8dc-4c36-9a41-4851e6314866",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "99a31d6d-50a2-4cc4-b620-a09fdc359fe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff54f20b-8dde-4804-92f1-621fee18bd60",
        "cursor": {
          "ref": "e8fb82d1-537d-4bfd-adea-1231e1492d2c",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "e4d67499-0e95-46a1-a9a7-b2595641ce85"
        },
        "item": {
          "id": "ff54f20b-8dde-4804-92f1-621fee18bd60",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "9ce988ca-4bec-4448-a959-c925cb4a87bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3047b43-8a4e-48ea-8422-bb88e4ee10ee",
        "cursor": {
          "ref": "c21f377a-bdf0-4871-b040-94b7db4a3e82",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "4a89dfe4-a45b-42db-bec7-03f6805fdcf5"
        },
        "item": {
          "id": "b3047b43-8a4e-48ea-8422-bb88e4ee10ee",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "ec7ed06d-c6f5-4ed1-a855-a945df414a9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51675f0d-aa9c-44f8-9543-d2e14def768c",
        "cursor": {
          "ref": "518e4fb0-e50a-457f-8ed4-8e9c58c028d0",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "3561b3dd-d4ba-4e8c-9a6e-817a009f84c1"
        },
        "item": {
          "id": "51675f0d-aa9c-44f8-9543-d2e14def768c",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "768b0294-25db-427b-b692-54b0a1b04485",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e48a38e9-753f-4dbe-bcd9-d9db0d78add7",
        "cursor": {
          "ref": "1cc333c8-6b27-44a2-8aa5-854959b801e1",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "7922187e-cf16-461a-b790-5bd8bb9de7f4"
        },
        "item": {
          "id": "e48a38e9-753f-4dbe-bcd9-d9db0d78add7",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "d4e849f0-18db-45f0-8665-953b5e8ff1d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4141f03d-d4a9-473a-ac7b-410003fb4da7",
        "cursor": {
          "ref": "0235d021-9797-4b93-acc9-917b947aad74",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "56684ad0-f3da-43fe-a9a3-8dce972255bd"
        },
        "item": {
          "id": "4141f03d-d4a9-473a-ac7b-410003fb4da7",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "ba41e031-c6ed-435d-a5d5-e61af4ef8bb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bd37133-6867-452c-a708-fae92c1ab0e1",
        "cursor": {
          "ref": "8424f5ab-21ab-40e8-96fe-fa79d0aea825",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "ca0681da-66bc-48bb-b893-35d2f88c32c7"
        },
        "item": {
          "id": "3bd37133-6867-452c-a708-fae92c1ab0e1",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "4a5c450d-5d4d-4e46-a81f-84838b2c3b0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ef273c5-2c13-49cf-af01-32a4eae75ede",
        "cursor": {
          "ref": "33a2f5ab-3019-4285-b7b8-490a8d8e344e",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "b87c2fc5-e7a8-4913-acd5-3f329696f78f"
        },
        "item": {
          "id": "3ef273c5-2c13-49cf-af01-32a4eae75ede",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "9dd4ffb1-d2d1-47c0-a38b-d5494aba6a17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "158d1a71-75e9-4c34-bd2b-21c526758701",
        "cursor": {
          "ref": "a0a29bfd-bb2d-4e26-8fba-d2aed4c37115",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "3880f214-6a07-4205-ad62-faff26bfb9f1"
        },
        "item": {
          "id": "158d1a71-75e9-4c34-bd2b-21c526758701",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "c706a6e7-7ccd-4c9f-87a3-8f7c6eb6315c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f35a21ac-31bc-4315-9433-9e3164740bb6",
        "cursor": {
          "ref": "ac453f33-99b0-405d-adb6-d4d1afaa73c7",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "745a3e5c-5cb6-4c78-878c-908a26e4872b"
        },
        "item": {
          "id": "f35a21ac-31bc-4315-9433-9e3164740bb6",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "adbf4c30-b9a8-47d0-be6f-10ec97e2acd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e3f9355-d59d-4719-a23e-941726bdeadc",
        "cursor": {
          "ref": "4a4d4d1b-76a9-4aa1-a7d3-b3a5f762277c",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "7a235e8b-fefa-48d9-b09b-5a96a50e60ff"
        },
        "item": {
          "id": "8e3f9355-d59d-4719-a23e-941726bdeadc",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "e88d103c-2622-4ae4-a524-e1d1639961a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b787aadf-fc65-4eba-8c7a-544a2910a370",
        "cursor": {
          "ref": "120ea1b3-39d2-4127-bb20-022b7bea8500",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "d6c40952-b9f5-47f7-94e7-ae887200785f"
        },
        "item": {
          "id": "b787aadf-fc65-4eba-8c7a-544a2910a370",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "dfc53b0d-b82f-4b24-90cb-3dccda3f26ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4be53aca-172a-489d-8dcc-6fddb9cceaa9",
        "cursor": {
          "ref": "d6e2024f-7d92-4096-9ec5-4fe8b46fd2aa",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "44a74e85-2916-418e-8d53-30433112ecec"
        },
        "item": {
          "id": "4be53aca-172a-489d-8dcc-6fddb9cceaa9",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "0d8de1f6-2f86-417b-abf1-1c993d83ab7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8254e94d-5b37-4ae7-8757-2e624d2e80c7",
        "cursor": {
          "ref": "0efc23dd-acf2-4bf2-b6c8-ad0657086831",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "ec6f5240-237e-4887-9e63-dcbd6b215365"
        },
        "item": {
          "id": "8254e94d-5b37-4ae7-8757-2e624d2e80c7",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "fdb4f9fb-2e9a-4d71-b4ad-3b39c7026e07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10c6a4bf-3308-488e-9752-7a08ebe4eb47",
        "cursor": {
          "ref": "766a00cb-267b-49e7-8abd-8ed33d4bb582",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "9f76c501-0665-4992-b615-8bd861410484"
        },
        "item": {
          "id": "10c6a4bf-3308-488e-9752-7a08ebe4eb47",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "e1137c8d-0555-416c-87fc-5eb20d14ea44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f888fe8-a8d1-41e8-8be1-ee8df1133c3a",
        "cursor": {
          "ref": "1b4f80d0-a13d-4e2c-82a5-e57296fa2e7e",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "1dd76ea1-8ff4-4c52-b255-4186c61ab222"
        },
        "item": {
          "id": "4f888fe8-a8d1-41e8-8be1-ee8df1133c3a",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "f1a152b5-77f9-4bcc-be19-f5c93dff80b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b7a3f51-66d0-4daf-906a-7b1c56d23586",
        "cursor": {
          "ref": "fd0104da-078e-4381-9ed2-0fbe250c40ad",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "4c88a0ad-0ba0-4dc5-a876-1dc6846c1ab5"
        },
        "item": {
          "id": "8b7a3f51-66d0-4daf-906a-7b1c56d23586",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "8cffb30c-907d-429c-a3c1-114ff72d901e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d34702a-c4b3-43c5-94cb-aa07a0f3059b",
        "cursor": {
          "ref": "0695bc99-bae2-4a22-9225-5818fe660422",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "cecba7ae-50c9-498b-993b-7df1b0b8c5e3"
        },
        "item": {
          "id": "4d34702a-c4b3-43c5-94cb-aa07a0f3059b",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "a4b69629-175a-4ed9-be06-5b3176e2a77a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dd5fe69-dd5a-44ca-a442-f2608b69607c",
        "cursor": {
          "ref": "681c220e-88a1-494d-b541-8320179ccabc",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "4adc8ed7-ff28-48b7-98ba-72eb7dae749b"
        },
        "item": {
          "id": "7dd5fe69-dd5a-44ca-a442-f2608b69607c",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "60af4690-aa67-4106-9e02-a7a2414c0e42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd9fecee-80f0-4780-b3b9-86b9c7e0c3f0",
        "cursor": {
          "ref": "f7b5b96c-b6c4-4c5d-b76e-c47d302170a3",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "ca2866ec-acd8-4afa-89b7-a4d803c25714"
        },
        "item": {
          "id": "bd9fecee-80f0-4780-b3b9-86b9c7e0c3f0",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "1c800d57-fbdf-44e7-8748-48512910cf66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55172609-515c-4cc3-ab0b-e000cc365f87",
        "cursor": {
          "ref": "d8b40fa2-3d85-4a39-91c0-7dff0aa84c96",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "f4af5f0d-b4ef-4a9e-b76c-d2d60811f3d5"
        },
        "item": {
          "id": "55172609-515c-4cc3-ab0b-e000cc365f87",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "a4a0583d-1476-4256-a5f3-9e903ce9e587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd2c57cb-c9c7-409b-bcfa-f91766802a79",
        "cursor": {
          "ref": "17946258-f592-4d4e-8165-8690535988e1",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "c805494b-1544-46d7-b4b1-6638a4978466"
        },
        "item": {
          "id": "cd2c57cb-c9c7-409b-bcfa-f91766802a79",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "bd4cd6d9-81de-4e77-8c2c-8db7d78d7a60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8371c4c7-ebf4-4503-9d26-7685c031dbe0",
        "cursor": {
          "ref": "d356b4cd-09a7-4dc4-a280-dceeaf94c076",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "4493533b-c5e9-440a-8963-c209f32672a4"
        },
        "item": {
          "id": "8371c4c7-ebf4-4503-9d26-7685c031dbe0",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "2fe47e6f-f6cb-419f-9c10-21b1d18e6ab8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ffba5ed-7e52-4831-9370-b4d2d96c2892",
        "cursor": {
          "ref": "9a5536bf-59d6-4809-81d2-5fd7c5b723b8",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "78987344-e4d3-451a-ac00-ebde9c7e0ac9"
        },
        "item": {
          "id": "4ffba5ed-7e52-4831-9370-b4d2d96c2892",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "a8d3514c-4d72-4e41-a739-64c07d89ee62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e362f61a-527e-43bf-9319-842a69564546",
        "cursor": {
          "ref": "aa343fdd-4c7a-44a1-a974-5ee36cadfc27",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "e530cedc-1c64-4939-9395-b7b8d9bb7cb8"
        },
        "item": {
          "id": "e362f61a-527e-43bf-9319-842a69564546",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "5b8e0d6f-ebd5-4993-ab9a-81c00972a089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc8aab17-9e28-4a3d-aa94-6ced111a1780",
        "cursor": {
          "ref": "7ea0789e-2cbc-4aae-8a8b-3bcd790a9e88",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "38b0da67-b6f7-41b2-98e0-c15e5d929221"
        },
        "item": {
          "id": "dc8aab17-9e28-4a3d-aa94-6ced111a1780",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "f364a112-74f8-4fe6-bb37-d0024c38eea8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e676ee8-fa42-4a25-8350-1321b449b585",
        "cursor": {
          "ref": "0c2f4b29-a868-4156-a098-a5fbdb488370",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "54f2b4c4-3853-47e5-8cd0-7c9f98e2a810"
        },
        "item": {
          "id": "1e676ee8-fa42-4a25-8350-1321b449b585",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "160e933b-5c4a-427e-85ff-8859c2042768",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b7a770d-b4cb-4e1f-af12-5f3cd35a41de",
        "cursor": {
          "ref": "9c690995-c725-4a99-8985-848f72485343",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "37d4eac7-f1d1-493b-8768-c3f929cddb89"
        },
        "item": {
          "id": "8b7a770d-b4cb-4e1f-af12-5f3cd35a41de",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "99973e23-e05f-429e-b852-66a9ad581fc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e35093d2-90b6-4830-8235-cff1df1b530b",
        "cursor": {
          "ref": "11934751-e88d-4aa6-a525-aff5e50ec324",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "3529d6fc-bf83-4567-a1fc-8101c2d001e0"
        },
        "item": {
          "id": "e35093d2-90b6-4830-8235-cff1df1b530b",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "68de2794-0ed4-4b5d-85e1-fe420e975a28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "174167b8-65e0-4421-88ab-143a9fae3b49",
        "cursor": {
          "ref": "f205c680-bc5c-4891-bbac-f27ff14423dd",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "1ee6b633-cd4a-4d56-8cb2-8af71811717d"
        },
        "item": {
          "id": "174167b8-65e0-4421-88ab-143a9fae3b49",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "89a74acc-412d-4ea7-8349-e20979f74409",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 854,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fa5ac5a-1015-48a4-8371-f1d5c0d9eb83",
        "cursor": {
          "ref": "46c1958c-adac-4a7b-8845-1ded10b67442",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "4c16367d-073c-4b19-9211-004dabb9637f"
        },
        "item": {
          "id": "0fa5ac5a-1015-48a4-8371-f1d5c0d9eb83",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "974a14df-fece-4f83-bb18-767c91646d17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41f5d8d5-457a-45ea-b5e7-623d8c9d25ba",
        "cursor": {
          "ref": "507a1387-4edb-47fd-a1c1-2ecbe9e0c7f5",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "dd46c0a5-90c9-4525-81c1-ce752667f234"
        },
        "item": {
          "id": "41f5d8d5-457a-45ea-b5e7-623d8c9d25ba",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "75cad058-b0fe-433e-8184-aa68bb9fac16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e317e71-8c80-43f1-ba88-08cc701b2587",
        "cursor": {
          "ref": "35c2b9c3-f666-433e-8540-bc443ef9c606",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "afcff247-b735-4368-970d-bd39c2931568"
        },
        "item": {
          "id": "2e317e71-8c80-43f1-ba88-08cc701b2587",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "90f5b6e9-4cd3-47b0-a665-1fd84d8494af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3797d893-0639-4c08-9154-f90d997cb1f9",
        "cursor": {
          "ref": "d1ababbc-0145-4bef-8610-863d9edbe762",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "3e1e9aa6-4d6f-4146-8c5c-8e034a8ad9fb"
        },
        "item": {
          "id": "3797d893-0639-4c08-9154-f90d997cb1f9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "014e51c2-9134-4d80-9dde-cd53cc928b31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "088d74b4-c2ff-4691-b849-287998f6e87d",
        "cursor": {
          "ref": "79c0dc50-eff0-4dad-8857-6fb8ad98f5bd",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "05472476-2eaf-463d-b0c2-13ce2445982d"
        },
        "item": {
          "id": "088d74b4-c2ff-4691-b849-287998f6e87d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "97e9a717-e41c-448f-8320-fc38bf924e29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9772db56-5cbf-41af-b235-a004fdb1db90",
        "cursor": {
          "ref": "4e6a3ea9-8500-44fb-b728-4711854afea4",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "6e8d6969-c610-4720-be24-ba15e30ae290"
        },
        "item": {
          "id": "9772db56-5cbf-41af-b235-a004fdb1db90",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "8315b8c0-5c5d-493e-b0e4-9a14eb7e699a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1377f485-c6e3-4dd8-93a3-6249ee8b7143",
        "cursor": {
          "ref": "da3bacfb-cedb-4d6f-80fa-c24a69260f33",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "d591eba3-53e2-477d-8a88-719b458765bd"
        },
        "item": {
          "id": "1377f485-c6e3-4dd8-93a3-6249ee8b7143",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "4d5a954b-d948-4c90-9386-4692bcb1b8fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48d69ec9-95c0-4b93-ac22-3324d715528a",
        "cursor": {
          "ref": "28082b49-c32d-485c-aae3-7370430b2827",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "3685eec2-c327-4c04-bcf4-84d31d240ef2"
        },
        "item": {
          "id": "48d69ec9-95c0-4b93-ac22-3324d715528a",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "849b447d-6e71-4ab9-b1d1-edd9087e7bd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "967a58c7-e54f-4f75-ba10-721299a8ee9a",
        "cursor": {
          "ref": "63d366b7-09bb-47ba-a36e-78d144e9bd96",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "67c4c53c-dcaa-4984-bdcb-68f81e0ace0f"
        },
        "item": {
          "id": "967a58c7-e54f-4f75-ba10-721299a8ee9a",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "0cb077f7-e199-43a5-9bdd-1079d660fe1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6456598d-1a7c-4f07-9b38-dc7656a72968",
        "cursor": {
          "ref": "3fcac48d-d36c-4183-96a3-5ea96e9e53ff",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "368eafbb-21d2-4fc1-a6c3-cc034712f946"
        },
        "item": {
          "id": "6456598d-1a7c-4f07-9b38-dc7656a72968",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "504b7dca-e6a2-43de-9f29-b42ab7622b7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24b850f8-a7e7-47f0-a191-8740ce8d5d4e",
        "cursor": {
          "ref": "de784c6e-4b7f-4787-8ed3-a11ea6b6025c",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "d62b9edd-9551-4791-aa19-04e7e1c2caa6"
        },
        "item": {
          "id": "24b850f8-a7e7-47f0-a191-8740ce8d5d4e",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "75b2f69e-492b-4d9d-b501-f2c8180d93c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d80d653-ed34-4ff2-b44f-18dde204ac91",
        "cursor": {
          "ref": "0c63116d-50ad-40f7-83e9-9709efa8c15d",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "c2d43d12-0dee-4a9a-9c2c-dfe1f5fe3f0f"
        },
        "item": {
          "id": "3d80d653-ed34-4ff2-b44f-18dde204ac91",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "17cc882d-9250-4db5-8aa8-2ac05a4ce3bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c3da646-5c96-4424-97cf-93a86abc7b11",
        "cursor": {
          "ref": "8935cfc3-d41c-4b51-baf2-5e9191f8a9cf",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "219b4562-eebf-45f2-a966-1ecbfcddfc2e"
        },
        "item": {
          "id": "7c3da646-5c96-4424-97cf-93a86abc7b11",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "b2ebdb77-4a81-47a0-ae87-b1451c542782",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2889232-a5a2-4fba-a210-76fed8346567",
        "cursor": {
          "ref": "505d0354-bb89-4a58-a263-32083b8ef3de",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "f23000bb-0f3d-49e8-8058-81064e011e0c"
        },
        "item": {
          "id": "b2889232-a5a2-4fba-a210-76fed8346567",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "4710ef1f-d398-449f-a56d-3a1e49424e53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0abdb9f2-395f-4fed-b8f2-5d7d0c2c5bcf",
        "cursor": {
          "ref": "8db5b95f-ad61-48be-9b7c-a5c499c05740",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "eea64b52-7bf3-4dff-99a7-410bf478ea68"
        },
        "item": {
          "id": "0abdb9f2-395f-4fed-b8f2-5d7d0c2c5bcf",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "69d6fc80-1a3a-4c4f-a5aa-6ec275e35e98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4772f34b-7bc3-4a2d-96c8-1d62f21fb655",
        "cursor": {
          "ref": "fcae2282-e652-448c-921d-18a0456f3321",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "b7dafcb2-821a-4f80-9716-869a7211891c"
        },
        "item": {
          "id": "4772f34b-7bc3-4a2d-96c8-1d62f21fb655",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "8947b2fc-5a6d-4f45-aa4b-03dfcd9be914",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1413172-5710-4135-bb67-81d330ca576c",
        "cursor": {
          "ref": "a8dad29f-c292-4415-8595-a3cacc44762b",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "1fc8128b-5b34-4e9d-8a91-6bb0e1845ea8"
        },
        "item": {
          "id": "f1413172-5710-4135-bb67-81d330ca576c",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "fc17a0d3-8876-4bb7-9891-60595a6b732f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efc0143a-a220-4f76-9a14-2ac30611bd48",
        "cursor": {
          "ref": "f558d816-8060-4620-8074-97b0c40fc785",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "5401c629-e5ac-4927-a5ad-432bf85680b8"
        },
        "item": {
          "id": "efc0143a-a220-4f76-9a14-2ac30611bd48",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "ae054432-14be-43dc-804d-a27722e37137",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63bf065b-dcdd-4743-a13c-2f0b68194e34",
        "cursor": {
          "ref": "b300d0cb-a4cb-4a79-ab1b-86d5ffbe5e7e",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "8c0400a2-a09b-4ad6-adfc-e4e404523549"
        },
        "item": {
          "id": "63bf065b-dcdd-4743-a13c-2f0b68194e34",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "2d74227a-20b2-45d2-9d65-cd26246c6107",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "163eb00a-fdda-4fd3-8231-4a8544f80ea6",
        "cursor": {
          "ref": "99679bd3-30b8-4a08-a07c-5b4955794a00",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "6a08511e-d2dc-4b0f-97fd-348d20085fa5"
        },
        "item": {
          "id": "163eb00a-fdda-4fd3-8231-4a8544f80ea6",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "87036c72-271e-468b-9fe5-ecdb2f1f3886",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca68b8e3-5313-4b8b-91bc-80c68f260a84",
        "cursor": {
          "ref": "5c7d08a4-30a1-4b71-b493-6c97e4cbf222",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "95cad653-88ca-4ef2-aeb3-04d2487e8d4f"
        },
        "item": {
          "id": "ca68b8e3-5313-4b8b-91bc-80c68f260a84",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "17d42822-674e-426b-8f04-024438827b68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e87d3ec-6a57-482b-a295-c16a54db087e",
        "cursor": {
          "ref": "83d7d7aa-bcce-402e-984d-10b73c850072",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "a0e04df6-f105-4d3e-9521-b377cab9b37e"
        },
        "item": {
          "id": "1e87d3ec-6a57-482b-a295-c16a54db087e",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "f54f1f09-e0fb-4aba-80ee-564710cb0a54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec873648-7916-4c60-95de-bc06ea9833cf",
        "cursor": {
          "ref": "b2872c29-10f0-4906-8c90-6c3cc20626f9",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "fa5f3f99-1c7f-4983-8a0e-03f257e7cd41"
        },
        "item": {
          "id": "ec873648-7916-4c60-95de-bc06ea9833cf",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "1e824dc6-12ad-41d2-98ef-94dd1bf0d497",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06526778-3f9b-431c-9ec5-361164478822",
        "cursor": {
          "ref": "e1dc61e2-534f-402d-ac07-70338a655d63",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "d3027e91-611f-4568-a9d9-611ac3fd6579"
        },
        "item": {
          "id": "06526778-3f9b-431c-9ec5-361164478822",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "cbb948d8-8107-47ae-8fd2-72f116da4a20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a4ad67b-fd75-4d32-a654-9e5465d7a778",
        "cursor": {
          "ref": "527086fd-ba91-40a5-b0c7-f439f36e0496",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "60cb2ea2-b591-44f0-936d-0a91e33e0806"
        },
        "item": {
          "id": "5a4ad67b-fd75-4d32-a654-9e5465d7a778",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "2d379df8-4e6b-466d-b3ee-3efa509dce7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26e85822-3741-4038-97dc-2cd67b58886e",
        "cursor": {
          "ref": "68785795-c86a-447a-b7d8-8d4f682b1e00",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "064e5bf2-484c-4348-9bf1-9dd706d3ff77"
        },
        "item": {
          "id": "26e85822-3741-4038-97dc-2cd67b58886e",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "f42039f2-106c-46c8-b86f-d739f18d5f5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e06d580-398d-4a03-9dac-464403a9f523",
        "cursor": {
          "ref": "60d7142a-f2c7-4691-aa5a-1673b24a0906",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "e1d771f7-5376-4213-99c7-924626883b66"
        },
        "item": {
          "id": "8e06d580-398d-4a03-9dac-464403a9f523",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "3a255601-c793-4d18-aca3-97848ae47ee3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e62be6e-1811-4a55-9063-7e834f807d7d",
        "cursor": {
          "ref": "3cabaef5-3c9b-4a04-818f-9b5b6babc39a",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "1807c42b-d681-4c5f-bb63-baf5dca9aada"
        },
        "item": {
          "id": "4e62be6e-1811-4a55-9063-7e834f807d7d",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "82fe1c78-888f-4eaf-a22d-9057788b2441",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8c9d439-b509-47ab-a0c4-69defbee5b36",
        "cursor": {
          "ref": "24870293-7936-46df-bd14-efd7c99a4d3f",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "1d4592a0-9546-4ba4-9bde-86b52e6348ca"
        },
        "item": {
          "id": "d8c9d439-b509-47ab-a0c4-69defbee5b36",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "d0c00d41-427b-4b15-9885-990c6cfd0139",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d852f8b9-1cba-4056-9255-f66305e673db",
        "cursor": {
          "ref": "36545eea-7cd7-4422-9d89-0fb07887af6f",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "d4f689ed-9d2c-440a-9772-49cc5d12ab6e"
        },
        "item": {
          "id": "d852f8b9-1cba-4056-9255-f66305e673db",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "e6c19d5f-5f37-4edd-b2eb-fc183d518426",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9929b56-5a0c-46b7-9ad7-074e51b349aa",
        "cursor": {
          "ref": "cc096ddd-a71b-467a-93a3-f35b8641bc86",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "5b0b7f32-23e8-4280-8c52-4884e3aa9382"
        },
        "item": {
          "id": "c9929b56-5a0c-46b7-9ad7-074e51b349aa",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "74868e70-a90e-490b-a251-cbe015fda380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af3026e8-b53f-42b3-9e9c-1bb98d43b745",
        "cursor": {
          "ref": "97a0232c-bea0-4cc8-8431-d84d3ee0c921",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "d1d620b3-39a9-4e18-bc15-e5d07e252fcb"
        },
        "item": {
          "id": "af3026e8-b53f-42b3-9e9c-1bb98d43b745",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "259de0af-7375-428e-803a-c562d4daf218",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2068c417-9009-4056-a6fc-583218fbb80e",
        "cursor": {
          "ref": "d043d8da-8c32-4636-a6c9-537b1faaf321",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "4521c5e0-d623-489c-9beb-80ea17073bc3"
        },
        "item": {
          "id": "2068c417-9009-4056-a6fc-583218fbb80e",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "d24d3575-6b44-4214-8cfd-547c5de63b3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58598980-a735-4bfc-aaef-34f07c5dc57b",
        "cursor": {
          "ref": "b3540e2a-5b8a-4f37-a2ad-785e14521574",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "a3830c7e-070b-4fe7-abd5-ac6135c3d9c0"
        },
        "item": {
          "id": "58598980-a735-4bfc-aaef-34f07c5dc57b",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "3d0abffa-b784-4028-ab22-bf37b6c8f907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74d856d9-c722-4b1b-904e-4344a9175867",
        "cursor": {
          "ref": "9cdda190-7ec1-410d-a738-7a4c5d09b506",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "32421297-98f3-4c5a-aa79-1740614047e6"
        },
        "item": {
          "id": "74d856d9-c722-4b1b-904e-4344a9175867",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "deb53809-3e52-46a6-a07a-cae634f95b42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6a50a5c-b39c-428b-b757-6948e64395ce",
        "cursor": {
          "ref": "312966f3-634e-4e4d-9ace-736ae3d061e2",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "c150a349-a355-46e5-80b1-c0e2b7a25e4a"
        },
        "item": {
          "id": "e6a50a5c-b39c-428b-b757-6948e64395ce",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "2dfd45cf-b997-42c3-b44e-647287514cf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "042f6091-2278-4385-b607-a118f28d008b",
        "cursor": {
          "ref": "ff2a9ca5-16a3-4e5b-b08e-d34a1246b7ba",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "632ed03a-b181-45e5-9869-a762311fbf92"
        },
        "item": {
          "id": "042f6091-2278-4385-b607-a118f28d008b",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "7e3345a3-10ef-437d-8396-bb0b9b30a621",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "001a401e-5964-485e-bd81-43247d134ce8",
        "cursor": {
          "ref": "4f3c11f2-a441-4934-ae2d-72e7daec2560",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "9ca564b9-1dad-47fc-9572-485117cb05e0"
        },
        "item": {
          "id": "001a401e-5964-485e-bd81-43247d134ce8",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "fc3b5de2-6a5a-48e8-833f-2252f8c30a17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b29d09da-fd1d-453f-adf1-6e9edfd47250",
        "cursor": {
          "ref": "3991c197-dac3-49ae-baab-43a1abbf9d63",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "f91e2253-736e-4563-a008-27b44fc42ba7"
        },
        "item": {
          "id": "b29d09da-fd1d-453f-adf1-6e9edfd47250",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "d32eac30-6b9c-4fb8-8cd9-25965aaf4b71",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c2c9d9c-3f52-4453-b1a8-1313e58111b5",
        "cursor": {
          "ref": "ea24506b-6361-44a3-9bda-17cfe3433275",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "ee79b978-ae3b-433d-9ee6-12a64aaf08f7"
        },
        "item": {
          "id": "0c2c9d9c-3f52-4453-b1a8-1313e58111b5",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "299244e7-a883-4c29-808d-4f291580e6cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "fabcf19c-28df-4dec-afa9-901e2329bd1e",
        "cursor": {
          "ref": "cdca191d-4c6d-4817-9dc4-245ae3d761b1",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "2a94e4df-5e2e-4fdf-8632-1bad096bc345"
        },
        "item": {
          "id": "fabcf19c-28df-4dec-afa9-901e2329bd1e",
          "name": "credentials_issue"
        },
        "response": {
          "id": "30cfbd71-02cc-4fc8-9f41-a683531ce872",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "9b8aaf0a-b4c2-433b-bd5b-1e223e50e9bc",
        "cursor": {
          "ref": "9b5ae554-4031-4ee8-ba6c-d72cec2d0f1f",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "42af41f8-d745-4f79-953b-a95d8153a208"
        },
        "item": {
          "id": "9b8aaf0a-b4c2-433b-bd5b-1e223e50e9bc",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "734ce8b3-1faf-483e-8ad2-8954d1dfb255",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "66876bc7-abd5-488e-bfb5-423a3622c085",
        "cursor": {
          "ref": "b67932e3-11e2-45cb-8ea1-ef1d24e78b53",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "12674ab4-35ee-40b4-9f7f-51a2140d8c7a"
        },
        "item": {
          "id": "66876bc7-abd5-488e-bfb5-423a3622c085",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "3f93f075-2c0b-492c-864a-1fbb3ac458c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "9577b629-286c-405c-b7f8-65f622694532",
        "cursor": {
          "ref": "d635b720-ad5e-4608-98f1-471a157bad12",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "4a5e5b6e-bece-41ed-b807-bb0dab61fa04"
        },
        "item": {
          "id": "9577b629-286c-405c-b7f8-65f622694532",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "bca1123b-d873-4639-b537-df6dca395896",
          "status": "Created",
          "code": 201,
          "responseTime": 7406,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "cae51574-4ad2-49f6-8778-ddada7ddc4d1",
        "cursor": {
          "ref": "2d2417ba-63f7-4acb-b4b5-1f8e2a6ef782",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "9ea5cf4f-8e7b-4e8f-ab83-1cf69a6bd8a7"
        },
        "item": {
          "id": "cae51574-4ad2-49f6-8778-ddada7ddc4d1",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "05f889bf-15c0-4758-84d1-15d6609b802d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "c3b99709-de6c-4e61-8e1c-e39cf5c2dfb4",
        "cursor": {
          "ref": "97361840-66a8-4e37-9351-2a51ccd5dfa2",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "7f2291eb-0f74-483f-b438-4a5488897a7b"
        },
        "item": {
          "id": "c3b99709-de6c-4e61-8e1c-e39cf5c2dfb4",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "421ec554-e347-4b8a-925e-0ffb8af5edec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "d42eb327-e131-4e38-8168-c364130ff1a5",
        "cursor": {
          "ref": "1e5e9cdf-f56b-40fa-b3d1-b5772a148a1d",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "e86c62dd-9a71-4012-9a61-84241305d9e2"
        },
        "item": {
          "id": "d42eb327-e131-4e38-8168-c364130ff1a5",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "12cd8337-2d01-4a7d-a2f2-4deaa04ad598",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdfecec2-0e31-4a14-8b3c-a1ee6353a18f",
        "cursor": {
          "ref": "8cd89971-0ba8-48af-8bad-2c2f123339dd",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "d3ad143c-9040-4030-8966-5c3a8f532542"
        },
        "item": {
          "id": "fdfecec2-0e31-4a14-8b3c-a1ee6353a18f",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "5d731f11-ed33-4001-90ab-a94348136da9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79b4125f-683f-492d-8d5f-396a40bef7ad",
        "cursor": {
          "ref": "4ef89811-0afa-4dd4-a229-22d6229211c5",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "697adae6-ab81-4627-bf70-49a93bdb28b3"
        },
        "item": {
          "id": "79b4125f-683f-492d-8d5f-396a40bef7ad",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "e45e0a08-4a87-42b5-933d-cf5f27b9be0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "399527bd-74cb-4f7b-a125-0c53de8d3ed7",
        "cursor": {
          "ref": "f6a49e39-f31f-41c6-90ad-d3e3be5203e0",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "72fc87bb-6471-46ea-bc33-2f061b70f88f"
        },
        "item": {
          "id": "399527bd-74cb-4f7b-a125-0c53de8d3ed7",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "e92d6234-de7b-4215-a908-6118c90d2abb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a658268-6889-4751-9be5-3ade79be41f0",
        "cursor": {
          "ref": "b3b6f156-a7ec-4f9b-a28c-14ede05bcfd9",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "ae075c5c-4cdf-4529-8861-1caecbc6c09f"
        },
        "item": {
          "id": "8a658268-6889-4751-9be5-3ade79be41f0",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "a716359c-a356-4a02-9da3-b64445552b74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95b8faa5-ecf7-499f-a84d-e7375dfb4945",
        "cursor": {
          "ref": "ac846c10-3810-43f0-99a8-ffa7fcdab7d3",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "f0127723-1a7f-4dd1-829e-c192d386d957"
        },
        "item": {
          "id": "95b8faa5-ecf7-499f-a84d-e7375dfb4945",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "442022b8-7914-4864-9696-368839371624",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "745380ef-22c0-481a-9aac-d0b44c37a1df",
        "cursor": {
          "ref": "2ddf4a44-6027-4759-bd73-8ff00c825dc3",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "aec427ba-cd56-4a48-93ec-eba20c28b98a"
        },
        "item": {
          "id": "745380ef-22c0-481a-9aac-d0b44c37a1df",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "f917a66f-b4f5-439e-af9a-8d9d5c65d57c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c08fd2b-f800-44a0-9fd4-1192cb746570",
        "cursor": {
          "ref": "03bdde59-c936-4f5d-8959-808a6d2fa137",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "2cf44840-f950-40d5-8b72-b8642c6d16fd"
        },
        "item": {
          "id": "6c08fd2b-f800-44a0-9fd4-1192cb746570",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "de31f597-60f1-49a8-852d-a81504b27615",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1a4de5e-adb5-45a2-a944-7e110c3aea00",
        "cursor": {
          "ref": "9e5cb15e-74b9-4382-8999-708ccb97950b",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "15a17d0e-6ebe-4a01-9816-6a02c39955c8"
        },
        "item": {
          "id": "f1a4de5e-adb5-45a2-a944-7e110c3aea00",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "b3e3506a-91c3-4247-a0be-e1d3fd72ef2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f9364f7-bece-403b-bb97-84920edc9cda",
        "cursor": {
          "ref": "fe7939d5-8cd7-4858-8d26-0864e587f862",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "7cd0489e-4800-4eec-b8e0-61dcc07ad63d"
        },
        "item": {
          "id": "6f9364f7-bece-403b-bb97-84920edc9cda",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "b352533a-88ba-44cc-af84-6389cfb0fdbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7284e2f4-246f-4302-b54d-ea3784f59f10",
        "cursor": {
          "ref": "9a525d1f-1f19-4bbd-9824-b8b84a6400d3",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "5dc0bdbe-6fc6-47d4-9dcf-5c4095b53962"
        },
        "item": {
          "id": "7284e2f4-246f-4302-b54d-ea3784f59f10",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "f581e3f4-79ea-440a-b914-3f177354722d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e34c342-c012-439f-80a9-8ef656afcbcb",
        "cursor": {
          "ref": "c52f1b7b-21ce-4fe5-9e18-9fc6044cdc8e",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "40079283-2127-4540-84d6-dfb9f8c0a7b0"
        },
        "item": {
          "id": "2e34c342-c012-439f-80a9-8ef656afcbcb",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "14fc58f4-1a16-4c11-af0a-3a5f71be4ffa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47ace8c8-a21e-414f-85b5-6c56bded1ad8",
        "cursor": {
          "ref": "2392a881-809a-4416-af6f-281dbabb2d03",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "8c19f906-35f1-4cd5-beb2-1337e01d9dfc"
        },
        "item": {
          "id": "47ace8c8-a21e-414f-85b5-6c56bded1ad8",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "62be10ed-3b69-42b7-8a6d-93e683505039",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaa59340-9c76-407c-b357-39286a9a9912",
        "cursor": {
          "ref": "674f6e84-2bc9-40ed-8880-6cd98cb67e8d",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "72f551ba-bb94-4538-ab3d-502717fc109f"
        },
        "item": {
          "id": "eaa59340-9c76-407c-b357-39286a9a9912",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "c3f17d9b-0c4a-4ac2-b7d9-3c6020cc01a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "898d947f-9cca-4a02-afa5-76c16e4ad171",
        "cursor": {
          "ref": "8a5a7dc6-6718-4ba7-863e-583fd6a84bd1",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "41529255-3336-4f53-ae35-c5952f8561c1"
        },
        "item": {
          "id": "898d947f-9cca-4a02-afa5-76c16e4ad171",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "7b64a33f-2ad4-4fc7-b085-86407be49200",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0921d971-c7c4-43ce-8464-ee5a3f6a782e",
        "cursor": {
          "ref": "5c947b15-9588-462e-956d-f22bd284421a",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "67fca8fd-71cf-465e-bfd2-689f3d629c70"
        },
        "item": {
          "id": "0921d971-c7c4-43ce-8464-ee5a3f6a782e",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "dd96280d-2011-46b4-9294-5ec5b3a06bee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e227fe65-c194-4b31-89e4-8c4489e275a0",
        "cursor": {
          "ref": "d06db3b0-c185-4970-ad54-2d69a29956f3",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "57100c83-e52a-4adf-ad0e-c5f237345aef"
        },
        "item": {
          "id": "e227fe65-c194-4b31-89e4-8c4489e275a0",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "60ff1b34-8fee-4434-b376-d3ed115c332d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 50,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "496a99ac-fe90-4aac-a132-ce18ca46338d",
        "cursor": {
          "ref": "ab5d4ae8-275b-466e-9377-ec52d4824ecf",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "7a965c78-a191-488d-bb38-ae6fe8daab7e"
        },
        "item": {
          "id": "496a99ac-fe90-4aac-a132-ce18ca46338d",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "773bf9a7-ac58-443c-bc5e-d30f543ee4ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2f9e199-9741-4820-bd1f-20282229b7aa",
        "cursor": {
          "ref": "e571bd4b-9a82-448d-9394-8e6aac36bdd7",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "72a96b37-8fdd-4831-9723-a2dc35564251"
        },
        "item": {
          "id": "b2f9e199-9741-4820-bd1f-20282229b7aa",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "056347ab-b9e1-4478-ad73-e3d71b9a9cca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9604e40a-8599-4480-89dd-3146bf4fcc54",
        "cursor": {
          "ref": "b881798e-3d79-4cad-8f1d-1973993a3006",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "35b83415-5b85-4a44-b4a4-bdd0b1fcd9ef"
        },
        "item": {
          "id": "9604e40a-8599-4480-89dd-3146bf4fcc54",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "f477dabd-d732-46a3-9b12-975f6d403f0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15c909ee-a32b-478e-b353-2092f1a28294",
        "cursor": {
          "ref": "6b308ca2-6203-4722-81ce-fffb4e4523a8",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "f651aa9a-0461-4ad9-824d-24b3deedc370"
        },
        "item": {
          "id": "15c909ee-a32b-478e-b353-2092f1a28294",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "42daad99-548b-4fee-813f-7f80cb6e91f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7045d63-175e-408b-8853-67f0b9fe694a",
        "cursor": {
          "ref": "b0b2a847-bee7-465c-b841-1dd88263ee4d",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "f91ef50c-bc27-4e7c-8a5d-283878b92dcf"
        },
        "item": {
          "id": "a7045d63-175e-408b-8853-67f0b9fe694a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "5394f5de-2597-4c73-9a3c-9d796a1c808a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2257f2e3-4d3a-43b8-9bfa-3d0a7d38e483",
        "cursor": {
          "ref": "0daa6fae-2a4e-490a-9bbd-afde6cd70090",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "4fa2afe7-9508-4232-867e-fded1ac6ef73"
        },
        "item": {
          "id": "2257f2e3-4d3a-43b8-9bfa-3d0a7d38e483",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "52d098e6-3680-4670-ad74-7f4164a2634a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66d9b0ee-136a-4fe9-82ee-4f7257c57da9",
        "cursor": {
          "ref": "accaa0a7-24bd-4f96-8954-6207f574f2ec",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "3ea51b00-806d-4e4d-b1cf-43232b76a535"
        },
        "item": {
          "id": "66d9b0ee-136a-4fe9-82ee-4f7257c57da9",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "3f311258-0015-489d-b7bc-8816403773d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "619cfc7d-f88e-4ec3-9a4f-a6da84ed3311",
        "cursor": {
          "ref": "3161af95-ac73-4853-a10c-6f2e2b5b048f",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "06b639f2-9ac3-42b4-875e-1db166977653"
        },
        "item": {
          "id": "619cfc7d-f88e-4ec3-9a4f-a6da84ed3311",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "b18a9acf-11c3-4ea2-9072-259c49d65e43",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 16,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "b5c11f54-eabf-4382-aa51-026acc98ffd1",
        "cursor": {
          "ref": "d893a5cf-a2a1-4e07-b186-c96b00201c3d",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "15eb7ef7-83f3-4584-bdbd-4fa276939230"
        },
        "item": {
          "id": "b5c11f54-eabf-4382-aa51-026acc98ffd1",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "ac0dc328-a682-4c95-87ea-5bba17adf3c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7813380-47b3-4671-a8db-a760752e94cd",
        "cursor": {
          "ref": "a0316059-4aa0-4794-bf67-3a9af7087e77",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "3f11d81a-cb78-4253-9fca-e02b99064890"
        },
        "item": {
          "id": "f7813380-47b3-4671-a8db-a760752e94cd",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "501a9cf8-5646-4d8f-9c09-22324424aede",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8b98ce6-ec86-40e2-ad04-a6ff89c0d173",
        "cursor": {
          "ref": "506d1283-ebf7-431e-9128-9b14c5a55ead",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "70e34b02-709c-4633-bfa3-c48a1e199be9"
        },
        "item": {
          "id": "c8b98ce6-ec86-40e2-ad04-a6ff89c0d173",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "3dd00829-518b-4b49-a5ab-1a8232d0fe2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef85505f-9047-425c-bde9-817e02a3bac2",
        "cursor": {
          "ref": "8ca5ef16-34a2-4b19-82e1-1da3c1dabeeb",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "0dafec17-370c-43cc-b158-735936d85bf3"
        },
        "item": {
          "id": "ef85505f-9047-425c-bde9-817e02a3bac2",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "48f71123-8904-4834-8f1e-f3ac6604595d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c2f6898-96de-412b-ab71-6f1df9690e06",
        "cursor": {
          "ref": "2ec0666e-5583-401c-b4fd-2c0822e94500",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "3f0e37a9-8022-4ca7-bad0-8ee5584e4ec9"
        },
        "item": {
          "id": "8c2f6898-96de-412b-ab71-6f1df9690e06",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "d271df46-a29f-4341-97cd-fe4abb76afb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dfebdbe-51c5-437c-800e-57a8f832886a",
        "cursor": {
          "ref": "1f1e5bd1-fbd6-4cc5-98b9-dcda5fa4e37e",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "181d750a-d638-44e8-b435-5770af7d6766"
        },
        "item": {
          "id": "5dfebdbe-51c5-437c-800e-57a8f832886a",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "fa528062-3f76-4686-a576-cb796eede5a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a08ce74-e688-4bcc-864c-4644a9856995",
        "cursor": {
          "ref": "8f25ad62-2722-4b36-87b7-783157269aa7",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "faccd620-029d-4ea3-800b-d0ccbceb9cbb"
        },
        "item": {
          "id": "6a08ce74-e688-4bcc-864c-4644a9856995",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "4b382c66-cffd-4aa4-8ab0-894864b382d7",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 34,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "4a526f72-e32b-4867-8562-140a4f78a9a0",
        "cursor": {
          "ref": "74284cee-3d5e-46e3-b32c-004a2ad57af8",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "db5faedc-ee12-410b-949e-cbc123a6e111"
        },
        "item": {
          "id": "4a526f72-e32b-4867-8562-140a4f78a9a0",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "1114c199-4bf3-4de2-84f6-7ff7d4514f5a",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 22,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "222e5c5d-c851-4a91-9564-d5aa7084d6e6",
        "cursor": {
          "ref": "1091f452-a351-4555-8374-1ff76d67d237",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "59a7d156-bb42-4ce3-820a-6aff9ce990dc"
        },
        "item": {
          "id": "222e5c5d-c851-4a91-9564-d5aa7084d6e6",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "e0ad0c0d-267f-4af7-8feb-0ce5d288c94f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 61,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "b99519ef-f59c-4bbc-87d9-2741d8b4be7b",
        "cursor": {
          "ref": "1f173c73-3dae-46de-a882-90183ef13811",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "a8aef6ec-9c35-40be-a1a0-eed756944c1f"
        },
        "item": {
          "id": "b99519ef-f59c-4bbc-87d9-2741d8b4be7b",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "d4d6659d-7077-4f81-9626-d293d75153e8",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 32,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "8116b0a1-6226-4eda-b39a-e5c0d8f841e9",
        "cursor": {
          "ref": "45e983d5-5986-4137-ae8a-9e8b1719e28d",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "ba3f5804-f500-4e7a-acb0-66766e310ff3"
        },
        "item": {
          "id": "8116b0a1-6226-4eda-b39a-e5c0d8f841e9",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "dce52eff-799b-4b58-af35-78b325f8e706",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 12,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "d7b67977-c785-4f1b-8d98-10abcbae33a9",
        "cursor": {
          "ref": "f535c9f1-cdb4-4ba3-be17-636e6f3a4d5b",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "8083ed2f-bc2c-43ba-bc88-48b40561ac99"
        },
        "item": {
          "id": "d7b67977-c785-4f1b-8d98-10abcbae33a9",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "6cb5cd63-41ba-440d-81e2-cbab4f0d6967",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 37,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "5e46d217-b6b8-4c2d-8dbb-22bea99742e5",
        "cursor": {
          "ref": "d5d20561-db94-43ed-a20c-3b52850f8573",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "88dcd7ea-8bf5-45f5-812c-6dbc4378333f"
        },
        "item": {
          "id": "5e46d217-b6b8-4c2d-8dbb-22bea99742e5",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "b03bddfa-8c9b-42d4-8fb7-1ba5fe8e2b92",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6a5277f-1e06-416f-aa5f-ff0e9dc26bb1",
        "cursor": {
          "ref": "23f29fdb-9e75-46f5-804d-8d45bb87eecb",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "5c1070ad-c971-4349-a363-2cf555a8c64d"
        },
        "item": {
          "id": "e6a5277f-1e06-416f-aa5f-ff0e9dc26bb1",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "d2d74311-4734-4b73-95db-7f9620e2da33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f24f92d-bbad-4f66-9d01-2d8229bab0c5",
        "cursor": {
          "ref": "aa573aa8-6e52-4ee0-81d3-cf97900be920",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "322fb84b-e863-469b-b39c-d901a25cabd3"
        },
        "item": {
          "id": "9f24f92d-bbad-4f66-9d01-2d8229bab0c5",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "bbfe2114-4c90-4eab-8ca5-f791cfae93d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f36d6d3-cb3d-4312-a5db-aaa02bc00f7d",
        "cursor": {
          "ref": "3e7b55cf-b160-4ab5-acf7-0014ebf9de48",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "7694643e-39c9-49a5-819e-8ff719f7f0ff"
        },
        "item": {
          "id": "9f36d6d3-cb3d-4312-a5db-aaa02bc00f7d",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "12805240-5c5d-4d06-8539-800b9a128f53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0c2141c-acc2-4f71-bc7e-f1c2e2b93a7b",
        "cursor": {
          "ref": "d5d54138-de7f-4615-801d-6ecb3adbb625",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "8455b509-0ea6-47b8-926f-d4fdbc9e7e95"
        },
        "item": {
          "id": "f0c2141c-acc2-4f71-bc7e-f1c2e2b93a7b",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "b3fd8a7b-6310-482b-8399-c28e023e70af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "084f4a8d-304e-4589-a2ac-add963e0c7a2",
        "cursor": {
          "ref": "645e06c0-6998-4f00-9614-bfc80bb92f09",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "133d2da9-5862-448c-8917-d04d354a2213"
        },
        "item": {
          "id": "084f4a8d-304e-4589-a2ac-add963e0c7a2",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "45b53a69-b27a-4c7f-8858-3b8f980bf504",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85132a71-9610-4f1d-97b7-eca66b7a37f4",
        "cursor": {
          "ref": "c9e4d881-adf6-4a90-bf79-06c81ddf4b87",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "1a84a453-c9e6-495c-9307-88c3e1157450"
        },
        "item": {
          "id": "85132a71-9610-4f1d-97b7-eca66b7a37f4",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "e88d7949-0cc5-4f78-8c6e-823c50c3b4cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da03905e-58a1-4f14-b7ee-bc62ba8e3fe7",
        "cursor": {
          "ref": "5788c963-83b4-4e81-8e3f-8ef19ed49236",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "eb9a0f8f-130e-48e7-bdfe-e480885187c1"
        },
        "item": {
          "id": "da03905e-58a1-4f14-b7ee-bc62ba8e3fe7",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "a39c4728-4bc4-4ee1-b7a1-ca1b5c4c0e76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8efb054-7003-41bc-996e-8afa36861fda",
        "cursor": {
          "ref": "f982a6d5-e48d-4d63-bb28-341fe243397a",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "331598e3-b90d-41f6-86b5-f59ab88039b1"
        },
        "item": {
          "id": "f8efb054-7003-41bc-996e-8afa36861fda",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "20010684-36c1-48cd-8532-295e29d47336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1579cadf-3afb-49ef-abe9-28487738ccdc",
        "cursor": {
          "ref": "509e45c1-5f8f-4bc5-b060-2ce1af6af360",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "bbb8f0cc-e0c4-4172-a1fb-d27b1eaf9576"
        },
        "item": {
          "id": "1579cadf-3afb-49ef-abe9-28487738ccdc",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "3587f5e8-d50e-4b00-aa7b-76348a280a67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecdc687f-3673-44f0-8f10-663d33ea7aa6",
        "cursor": {
          "ref": "314780c7-6972-4da8-a7fb-cd56dfce7293",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "ac50433d-2f35-40a9-bbef-5d8c41bf3901"
        },
        "item": {
          "id": "ecdc687f-3673-44f0-8f10-663d33ea7aa6",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "d9ee1428-91e9-49a7-b046-9b49b014fa5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "924718a8-d0ae-40da-8fc7-d3dc65e122bf",
        "cursor": {
          "ref": "0a6a6c1c-0267-402b-a79e-727a90a58c38",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "856228eb-0f17-4e72-8b10-1d6daffb15ba"
        },
        "item": {
          "id": "924718a8-d0ae-40da-8fc7-d3dc65e122bf",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "08fe2f11-6f0f-4c9a-90c2-671fcad53435",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a12a209b-82cc-49b0-b73c-ffaa43d52b55",
        "cursor": {
          "ref": "5a0ff9d9-33b0-4fa3-9aa1-de685b421046",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "f552fa4f-481f-4db6-b349-f871a51540c1"
        },
        "item": {
          "id": "a12a209b-82cc-49b0-b73c-ffaa43d52b55",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "bf5fec7e-9f53-48ca-8b06-fcde35780094",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9566586d-64aa-4fdd-9067-f652eb293de0",
        "cursor": {
          "ref": "a5f333e9-c9f4-4b97-8e74-ecab63fec341",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "d9cb8e99-f0db-4ebd-a373-63340a2f75fc"
        },
        "item": {
          "id": "9566586d-64aa-4fdd-9067-f652eb293de0",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "ef4e54d6-7ab2-41c0-aad8-cb7c9434677c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a87d8c47-c03c-4fc8-bb4c-3d2803f406f4",
        "cursor": {
          "ref": "fb215d1b-0734-4dc2-a86d-90bbabe1e469",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "66d2b0dc-7f91-4a56-ac0a-58bb2f79ce74"
        },
        "item": {
          "id": "a87d8c47-c03c-4fc8-bb4c-3d2803f406f4",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "419d3c1b-0140-4ab2-9556-8bc36591ad5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b82304a-ec8e-4001-af7f-3ab919f120aa",
        "cursor": {
          "ref": "50e445e5-b731-4544-9012-e832cd740a11",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "674a2319-0a15-4492-a930-33d9b9d4e936"
        },
        "item": {
          "id": "4b82304a-ec8e-4001-af7f-3ab919f120aa",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "6f0e539c-6690-4a6a-9fbb-50a2b20cddb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "517238cf-f1c7-4359-87ca-0ad02c711d2d",
        "cursor": {
          "ref": "e09f1820-3f82-4252-9492-c8d67b84a878",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "eda82ca8-5844-4211-940a-461d688c7803"
        },
        "item": {
          "id": "517238cf-f1c7-4359-87ca-0ad02c711d2d",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "378f471c-4375-4759-ab8f-6a4e331eee15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ef85d38-02c3-42ae-9176-2331a3662ee8",
        "cursor": {
          "ref": "16562368-21c8-4a60-8e96-1266b73c42bf",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "b4e00ffc-a504-4e24-8f45-7157c8dd8f89"
        },
        "item": {
          "id": "7ef85d38-02c3-42ae-9176-2331a3662ee8",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "1a1e49b4-a43a-4976-b404-59a2724bfd6e",
          "status": "OK",
          "code": 200,
          "responseTime": 60,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "b4232386-b27d-41b3-be69-b6a45b2d495c",
        "cursor": {
          "ref": "9f1dd73b-fb44-4f7e-91ff-1affea5aefff",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "adfaccbd-5ae8-4f75-b48a-8dbea426163a"
        },
        "item": {
          "id": "b4232386-b27d-41b3-be69-b6a45b2d495c",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "7b37bd2a-aa35-4750-8309-51b684d2d31b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9041681e-2dcb-493a-8757-2d8f88a62ba9",
        "cursor": {
          "ref": "35943e11-228d-4f04-b85f-a0594641ff26",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "6240b31b-8fa5-4da3-88e4-9e97f018766d"
        },
        "item": {
          "id": "9041681e-2dcb-493a-8757-2d8f88a62ba9",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "975c06ec-6cc5-4af7-ae51-7fb57707c81b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1fafa0a-26b5-4cb6-bdd7-6ba080976a9d",
        "cursor": {
          "ref": "a0364668-49a2-465d-a50b-26372b45fbae",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "f57ed1d8-2cc4-49b0-b982-1583ca02bb35"
        },
        "item": {
          "id": "b1fafa0a-26b5-4cb6-bdd7-6ba080976a9d",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "04028b21-0992-4648-8482-9281bee05ce4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20734da6-c783-43c6-8ba1-c0536e4a8caf",
        "cursor": {
          "ref": "1aa118d0-352d-4b4a-ba24-f6d71cb86103",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "678869d6-78d6-450e-8276-4f67655dfca0"
        },
        "item": {
          "id": "20734da6-c783-43c6-8ba1-c0536e4a8caf",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "6bfc4434-37f9-4938-8dbd-528d9613a62d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78d807e1-b704-4168-80fb-96fd2435cc66",
        "cursor": {
          "ref": "6506fdb1-3d56-4792-aa8b-62a07a4b0045",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "62c82da9-ba54-4a10-b20d-11d4e843a381"
        },
        "item": {
          "id": "78d807e1-b704-4168-80fb-96fd2435cc66",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "7bc9438d-aea2-4cb5-89ce-928884bc43dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba0987b8-5277-4719-9447-1ff978937ac7",
        "cursor": {
          "ref": "5278ce7d-00a9-4b78-a60f-1f39f3417f93",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "e8fea7af-50b9-4422-a859-d587ee59baa4"
        },
        "item": {
          "id": "ba0987b8-5277-4719-9447-1ff978937ac7",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "f9e3b6e4-98ae-460e-b8a0-6c3fe0c8ce7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9011eb46-6a2a-45f2-9d40-383ae26de038",
        "cursor": {
          "ref": "198e8fca-a1fb-471e-b44e-ee2db5b52059",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "0c060336-8305-4454-8334-6d1185a1046e"
        },
        "item": {
          "id": "9011eb46-6a2a-45f2-9d40-383ae26de038",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "9e8a631b-c39d-43fd-8167-4241cde74e8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "007479cf-b7d3-4628-aa7a-6333fa44c298",
        "cursor": {
          "ref": "eb3ae787-935e-4046-b6af-15766b8f0847",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "9ece4517-9d0c-4ff9-addb-6f68d42b4be3"
        },
        "item": {
          "id": "007479cf-b7d3-4628-aa7a-6333fa44c298",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "61882c45-a62c-4a18-9dbb-90a3a3b38f56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50f6e9d0-87fc-4026-aab2-28e5b2fae5c1",
        "cursor": {
          "ref": "588e5c99-b865-47f0-aabe-4fc8ed8156fa",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "c4745065-c284-417a-b4cd-947a185e4ad9"
        },
        "item": {
          "id": "50f6e9d0-87fc-4026-aab2-28e5b2fae5c1",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "847ee797-bd1a-4d3a-b3ad-e1027381a23a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f42606bf-42f1-4e44-bf82-6735ce7f270a",
        "cursor": {
          "ref": "37251221-7922-4c19-b43e-9ddcfd8ae359",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "4c50b12d-e902-4b6e-8af4-afe162e9d094"
        },
        "item": {
          "id": "f42606bf-42f1-4e44-bf82-6735ce7f270a",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "dac6a60a-69bf-415d-9a64-d9f2f45c22f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f6e4d06-92a7-401c-8b46-a1ac888b1bcf",
        "cursor": {
          "ref": "776f57c3-3899-4d37-9f87-d9b88cdf7f56",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "b48e240d-2657-4241-aaba-5540d12270f7"
        },
        "item": {
          "id": "1f6e4d06-92a7-401c-8b46-a1ac888b1bcf",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "8a414378-35f3-4e73-a97d-865d0d54f750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcd20474-bf33-4856-b838-2bdec145c647",
        "cursor": {
          "ref": "9d4418d5-8735-4577-9af5-1e9af6aedc89",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "0fa0c239-7186-4791-8f34-c998bffe7318"
        },
        "item": {
          "id": "dcd20474-bf33-4856-b838-2bdec145c647",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "ef9ae23d-3d5d-4021-a6e1-e006d39d9689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e56a29d-a658-4264-b685-9dbb57845f43",
        "cursor": {
          "ref": "8cd8b680-86ac-4d68-a1a1-3ef49d53a32d",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "e6f0a964-cb70-42d8-a759-85319a7e5077"
        },
        "item": {
          "id": "7e56a29d-a658-4264-b685-9dbb57845f43",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "d0db4f7a-b900-4198-9bbb-5e2b925190c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6c19ec8-0cf6-4389-8f47-f6728e6062cf",
        "cursor": {
          "ref": "f60d1814-9daf-4aeb-97e7-b19708da6a60",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "c2697537-bbd6-4f2a-b02b-3f5d7a162510"
        },
        "item": {
          "id": "d6c19ec8-0cf6-4389-8f47-f6728e6062cf",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "ff10959f-53b7-4cb8-8f98-682784161a05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50fa6623-76c7-48f3-90e3-0813dea78c87",
        "cursor": {
          "ref": "ff7593c4-3f46-4035-a6d0-ae54f7cc2924",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "496303c5-a6e0-4009-bb82-db36cc50beab"
        },
        "item": {
          "id": "50fa6623-76c7-48f3-90e3-0813dea78c87",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "b2547479-772e-4714-bf89-ab56cb6d66d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fac23205-2998-4528-ab2b-5613da08b427",
        "cursor": {
          "ref": "e713aecf-1333-456e-9de1-ddeaa7eba60c",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "b53885bb-77a2-482b-970a-d33521d2a873"
        },
        "item": {
          "id": "fac23205-2998-4528-ab2b-5613da08b427",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "4df13e96-9102-45d2-99d2-48ca1ed4f683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc0d229e-8814-4330-8fb6-9afff34f8271",
        "cursor": {
          "ref": "e95d551b-8193-43e6-951e-363aafebdddd",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "b10ddb47-6d06-46d4-8d2b-82204380aa6a"
        },
        "item": {
          "id": "bc0d229e-8814-4330-8fb6-9afff34f8271",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "a459dac9-fee1-438f-8865-0ebbc352ecbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbb8be2e-6edb-480e-9002-a23b38c7ae0e",
        "cursor": {
          "ref": "1fb7b59d-a637-4524-9888-192e1d9874e7",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "931a1566-9ea2-4a36-9b80-7529c7c238ab"
        },
        "item": {
          "id": "bbb8be2e-6edb-480e-9002-a23b38c7ae0e",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "d7cb1a1a-b6ab-4802-9738-3267c3a35727",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3399d085-369a-4bdc-95bd-8e3c1f22b113",
        "cursor": {
          "ref": "62a6732e-ecc7-4132-b059-d1e5d9d8db87",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "fdaf3bc8-edfe-443e-8c6d-6bb2f5e6ec88"
        },
        "item": {
          "id": "3399d085-369a-4bdc-95bd-8e3c1f22b113",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "4c1e5bee-6379-4558-b5a7-28a013867fd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "301a9284-d672-46e9-b1c2-c6772ac89cdd",
        "cursor": {
          "ref": "6a11e646-1bcf-47de-a906-48c5443cf1a2",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "97348642-cda0-4750-8941-67c4f2597641"
        },
        "item": {
          "id": "301a9284-d672-46e9-b1c2-c6772ac89cdd",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "3e885546-1aa5-4363-bccc-4fae35456511",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e39638e3-891e-4cf7-9c65-c9db6964b7c4",
        "cursor": {
          "ref": "ed579a0b-9654-45b7-be75-625179ed511f",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "68d5c014-ece6-401a-8974-ce57e14320b2"
        },
        "item": {
          "id": "e39638e3-891e-4cf7-9c65-c9db6964b7c4",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "e37c2d28-aa59-4991-ad56-5eb24bee75cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3216e8e-b920-456d-9c05-b1c70f6ddbde",
        "cursor": {
          "ref": "792dc5c5-b694-40da-a22c-86b637ec6427",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "058c09a1-bc04-4761-b08d-a6b930cee90e"
        },
        "item": {
          "id": "a3216e8e-b920-456d-9c05-b1c70f6ddbde",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "bab76f8f-88c6-4986-8931-5b20627eed55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61f55892-f2bc-4275-a6c2-821ec8911cda",
        "cursor": {
          "ref": "eaffc074-945f-4222-95f8-7d49bc358863",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "74e1c326-dab7-46ef-a53c-8f1570eac834"
        },
        "item": {
          "id": "61f55892-f2bc-4275-a6c2-821ec8911cda",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "d1cb53ad-efb5-489f-8faf-afbf7f6ec22e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acd872ce-957f-4cdb-b959-dc3f7ff1344f",
        "cursor": {
          "ref": "ca1200c7-7b53-477b-89f6-1761df0c258f",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "0081cfb6-9b3d-4bc4-8e9b-a60094f2dd7d"
        },
        "item": {
          "id": "acd872ce-957f-4cdb-b959-dc3f7ff1344f",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "ba61f5fe-f185-4161-b657-ef67b9d7870b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6535e95c-25b2-4fe4-a996-5923bae25143",
        "cursor": {
          "ref": "3fd15f36-0fc0-46ab-8c56-f549d4a9536e",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "1c01f4e0-08f0-431a-9fdc-0a5f957ccec2"
        },
        "item": {
          "id": "6535e95c-25b2-4fe4-a996-5923bae25143",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "0f17d633-69c7-4825-8bfd-f65770cc3b98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68d7810c-74b4-46bf-9364-d845112885fd",
        "cursor": {
          "ref": "d9e2f78f-88c0-411d-9d6e-1d1e6c7af21e",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "385f4c01-50ef-4fb4-83e8-70f8277f8203"
        },
        "item": {
          "id": "68d7810c-74b4-46bf-9364-d845112885fd",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "a1c572b2-59a7-419a-938b-9011ca708ece",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42ee6092-b978-4ac8-ac63-acb9aefc2e3b",
        "cursor": {
          "ref": "8c156b56-cabe-4f85-8301-92f9ba2d02fc",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "4994ff4d-111a-4a53-a9cd-edd52aa4e492"
        },
        "item": {
          "id": "42ee6092-b978-4ac8-ac63-acb9aefc2e3b",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "5234ab07-cc5a-4764-93d5-f9026caec6f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e276c92-a1f3-42fb-abb0-2c001bfa0bd5",
        "cursor": {
          "ref": "c4a1c8c3-a0c7-4d17-a933-6e0ae0401093",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "4ec6a686-a707-40c8-a893-63223f6a0b76"
        },
        "item": {
          "id": "9e276c92-a1f3-42fb-abb0-2c001bfa0bd5",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "fdee6b4a-63b2-41fb-b3cb-0d98aa73e9f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afbc7959-6b2c-4f7b-b3ab-e8e20b2c868d",
        "cursor": {
          "ref": "28156a61-8545-4a3b-9fd7-288ce70e6b70",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "93015340-d140-4b5d-99d0-e0ae3a962a52"
        },
        "item": {
          "id": "afbc7959-6b2c-4f7b-b3ab-e8e20b2c868d",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "4d4950a7-e64e-4510-a495-a2fa1739b632",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e05473f-dfde-4031-9e9b-0a6956f004b2",
        "cursor": {
          "ref": "b546db8b-daa7-47bc-b124-075d3345253d",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "79fc387b-a26c-4e88-8996-6dc2a75561c6"
        },
        "item": {
          "id": "4e05473f-dfde-4031-9e9b-0a6956f004b2",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "62373194-3149-4568-9e54-83e37e6bd375",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "516ba545-336d-4843-b33e-3e9079ecd146",
        "cursor": {
          "ref": "7dce0bba-449a-4192-b513-c172f995a866",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "96e130be-52c8-40fe-93c6-ac2cb38149f5"
        },
        "item": {
          "id": "516ba545-336d-4843-b33e-3e9079ecd146",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "89f247b6-c464-44f1-a372-3bc2766cef46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7c4216b-68db-4716-aee7-5d5363ac1a2e",
        "cursor": {
          "ref": "cb1535a6-60b3-4a74-939e-a9e123f7072f",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "289e2630-82d5-4ecb-8713-a24a804f28cf"
        },
        "item": {
          "id": "d7c4216b-68db-4716-aee7-5d5363ac1a2e",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "eec19966-8cc2-48bb-be02-90a82a11e9ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2846d88-cabf-42cf-91ed-0b3a33ea46b6",
        "cursor": {
          "ref": "5d7eea23-0c5a-4769-8469-3ce71a21c119",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "2d8a3245-717f-4c83-b8b9-bbc1f5d99d37"
        },
        "item": {
          "id": "b2846d88-cabf-42cf-91ed-0b3a33ea46b6",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "f5e52ea5-4688-4884-af91-ff55b36fd4da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "878005d0-5ff9-40e1-a9b1-870f4ba578da",
        "cursor": {
          "ref": "3f7a7698-91be-49c6-9a7b-2a61f0c16a2c",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "386f1efe-4cbd-4fb7-b3ed-a73ff09dd7f5"
        },
        "item": {
          "id": "878005d0-5ff9-40e1-a9b1-870f4ba578da",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "2c147e71-e5c8-46e0-845b-fe1b0b867e4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d9ec6b6-d03d-4b66-b976-a1f8a9ee3bf0",
        "cursor": {
          "ref": "0ec41cb0-cfb9-40be-9799-5a5aacf9d50a",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "d3363a8b-fab5-4a37-a581-fae27a34b53f"
        },
        "item": {
          "id": "0d9ec6b6-d03d-4b66-b976-a1f8a9ee3bf0",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "effbf740-a5d2-4ce7-b41f-91b69319ebd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac321b20-1d2b-4b71-a9cb-2438220b2a75",
        "cursor": {
          "ref": "5003345c-4f22-4ce4-88cc-5dfdc22416a2",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "60317586-aeea-410c-abe7-70188c6519d0"
        },
        "item": {
          "id": "ac321b20-1d2b-4b71-a9cb-2438220b2a75",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "645f03a3-3fc1-4b6e-bfbc-041a1d39411f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e35f806-795b-48c5-8b86-5cb6d0ca996e",
        "cursor": {
          "ref": "528bf3fd-2430-4bc7-a4ed-722ec08692bb",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "7a101fb8-e67e-4444-87ef-0e89527fb843"
        },
        "item": {
          "id": "0e35f806-795b-48c5-8b86-5cb6d0ca996e",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "4f35f6e2-6499-41b1-8cae-71bdae4aac18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c647011-1ae3-4666-a067-ca6f6e749c2c",
        "cursor": {
          "ref": "570df192-71f7-49bf-b6bf-156c0b25eec5",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "9b83940b-61f0-4016-b0b0-46dc7809e12c"
        },
        "item": {
          "id": "7c647011-1ae3-4666-a067-ca6f6e749c2c",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "40c7adc7-6e55-4103-8f63-bc80d2861911",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "429d3fbb-bc78-4478-906a-0ce92743ceda",
        "cursor": {
          "ref": "7378a37e-42f9-4e3d-9a38-f0cf870e9da4",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "97b5f197-57ee-4e55-96a2-38bb5d213233"
        },
        "item": {
          "id": "429d3fbb-bc78-4478-906a-0ce92743ceda",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "d07e7b10-82d6-4261-8b26-c8a9e34d3701",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "831dcef7-a528-4b58-987a-e4db973b2bb8",
        "cursor": {
          "ref": "8f2a3d28-648a-4d7d-99e6-6e5feb203de5",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "859209fa-ce66-4558-89eb-789c0ee739a7"
        },
        "item": {
          "id": "831dcef7-a528-4b58-987a-e4db973b2bb8",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "21c3843e-ebb6-4ce4-bb1a-9eba252546c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b41f9360-31cf-40e5-a841-86bab27ee667",
        "cursor": {
          "ref": "5ca5cecb-245d-4a9e-97a7-e43be09fc3e6",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "2ebcfe97-9326-4884-b2a1-9d3a8dcf8db4"
        },
        "item": {
          "id": "b41f9360-31cf-40e5-a841-86bab27ee667",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "418ba566-6210-4b83-bb3c-9c466a6853c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9650ec88-a5f1-4bb6-8d12-ac8020265d23",
        "cursor": {
          "ref": "1ed17935-9bbe-4d19-8c36-df2e20344a44",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "f1471cff-d7f9-4163-8c8a-952be9cdf15b"
        },
        "item": {
          "id": "9650ec88-a5f1-4bb6-8d12-ac8020265d23",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "1525e163-7e71-404d-b2fe-3c7b66ca494f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5daa5a87-14a3-40d3-9c1b-ae24bb70f0d8",
        "cursor": {
          "ref": "dd364f25-89c0-422f-9ecc-dd49004840e6",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "e38c0e4c-e068-4f5c-a9a6-aa00a06ab667"
        },
        "item": {
          "id": "5daa5a87-14a3-40d3-9c1b-ae24bb70f0d8",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "8a90f32a-193e-422a-a8ff-bdc8cc22ee87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff8aee7d-2b87-46e4-8a34-b5a7ce378bca",
        "cursor": {
          "ref": "d3ee2a1a-ab3d-4fb6-b2df-23c4294b9c15",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "4a56ba7e-1cbb-4d25-bb9c-09a6f868e934"
        },
        "item": {
          "id": "ff8aee7d-2b87-46e4-8a34-b5a7ce378bca",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "f15ccc99-26cc-4b3d-ab27-bd820c862ed4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5981f467-2c8c-48a7-970d-7f89b2bfe3a2",
        "cursor": {
          "ref": "b74120d4-f0cd-44aa-97f7-41a334131bed",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "b8a5ca37-62df-42cc-8a37-bb7ec870ca0a"
        },
        "item": {
          "id": "5981f467-2c8c-48a7-970d-7f89b2bfe3a2",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "ccf94657-ad40-46b2-9e93-9d8b7b8691f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aabd861d-35b9-49e9-bfbb-549ccfcbc949",
        "cursor": {
          "ref": "3172df6d-f9dc-42b2-a501-54f7fb3eeb46",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "8cf191b6-fee1-4b23-a80b-fd39df0f2768"
        },
        "item": {
          "id": "aabd861d-35b9-49e9-bfbb-549ccfcbc949",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "f2355392-787d-498d-9215-b5e7771aa8d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "046c5faa-7148-4586-bf02-12c9545e06e4",
        "cursor": {
          "ref": "c47e8c95-b318-4b38-b633-78097c8db4a9",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "d9af2c3a-37ac-433d-b11f-684f88f83b28"
        },
        "item": {
          "id": "046c5faa-7148-4586-bf02-12c9545e06e4",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "ec2382a6-abf5-4cab-8dcf-0ff73c19818b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14bc9a7c-d2b0-401f-802e-aa017703b3e5",
        "cursor": {
          "ref": "8f93d4c0-b271-45d1-b667-87d6caa019d6",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "a495b507-f48e-4d3e-bd8b-3aae646d4b83"
        },
        "item": {
          "id": "14bc9a7c-d2b0-401f-802e-aa017703b3e5",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "07a1568b-792f-45fb-a90e-a9704ce5a1b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d917705-de7e-46e8-a249-f2b9b3214033",
        "cursor": {
          "ref": "92266764-00b5-47d3-bce1-b170d2e37426",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "b123af38-9e44-4a5d-846b-7a132a4b75ce"
        },
        "item": {
          "id": "3d917705-de7e-46e8-a249-f2b9b3214033",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "e411abc1-6730-4aab-906f-db644c38d8ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43d4df99-6a1c-4cb7-b9ed-66f9e8df72fe",
        "cursor": {
          "ref": "7f0cbcc6-9726-4dd6-ab40-b54e671ec80c",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "ba1010cf-1da0-462a-a1c0-9befe1affefa"
        },
        "item": {
          "id": "43d4df99-6a1c-4cb7-b9ed-66f9e8df72fe",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "18cf8c69-7944-47ce-b08b-dd694dfc7145",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "867c9964-2ecf-4e5d-b15d-41dd3ca828f5",
        "cursor": {
          "ref": "b6fb0daf-8057-4f69-8e33-f9c3da6bd253",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "42ac5bf7-e1f1-4c35-b764-f84b989b4e56"
        },
        "item": {
          "id": "867c9964-2ecf-4e5d-b15d-41dd3ca828f5",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "ac875684-0ca3-4fab-873a-66c7907b8e24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c88fdc7e-301a-4a2c-8b38-c13bd46f97d6",
        "cursor": {
          "ref": "0a5e5967-ce28-43e8-bc82-252c1a1131dd",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "b4c86e54-8d66-4189-b17d-3ec569e7132d"
        },
        "item": {
          "id": "c88fdc7e-301a-4a2c-8b38-c13bd46f97d6",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "ec1b2c22-b243-466a-ba67-4117a2e5d11f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de4f3e7e-6441-4b37-87cf-bd021d595fff",
        "cursor": {
          "ref": "08c9074e-73cd-416d-ba50-5fe9b3fc05e8",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "92f9825d-f470-4807-a39f-b62c2f3b18f8"
        },
        "item": {
          "id": "de4f3e7e-6441-4b37-87cf-bd021d595fff",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "d6379ee3-2b62-4700-be90-de4af2c77350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f529bb3-f14c-4d62-8fb5-64883169b5e9",
        "cursor": {
          "ref": "c5ca3383-a675-41b0-9164-404ca880fbad",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "1dc72959-e387-4724-93a7-08e30ff2b3c9"
        },
        "item": {
          "id": "2f529bb3-f14c-4d62-8fb5-64883169b5e9",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "dc7d981a-1a73-4435-9b17-65b475c5e9cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e574ff66-0ec0-44f9-bacb-6fd705530822",
        "cursor": {
          "ref": "faa4ca9d-ba86-48c4-a9e4-dccd74585026",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "c7df9f55-fdad-4d54-9b28-c6244c884c32"
        },
        "item": {
          "id": "e574ff66-0ec0-44f9-bacb-6fd705530822",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "b5f91499-3738-46d4-9690-2f79439eb7d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13f0a13a-2ac0-4ee5-8abc-9bd6ab590516",
        "cursor": {
          "ref": "63738641-a731-4466-a298-b4af61c484ee",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "e5e014c5-8503-4f6e-b8e8-5f60106ab506"
        },
        "item": {
          "id": "13f0a13a-2ac0-4ee5-8abc-9bd6ab590516",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "0cbed9f5-5ad2-45b4-a977-8d3c158e9891",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "862aa02a-8f3a-4998-b07c-b80f0e7b1fab",
        "cursor": {
          "ref": "9c909305-ff0b-459d-ae1f-bba5f4899a20",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "92586aeb-dc2d-49c8-ad28-ba1012113065"
        },
        "item": {
          "id": "862aa02a-8f3a-4998-b07c-b80f0e7b1fab",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "7fba4ace-c574-4ddf-985b-eceb5e184ab2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "988f9229-8b17-4558-8a72-255f744d1073",
        "cursor": {
          "ref": "c6fc669f-aae8-424f-bd78-712a07838d37",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "dbd7260b-b852-44ee-89b3-50836fd2ce12"
        },
        "item": {
          "id": "988f9229-8b17-4558-8a72-255f744d1073",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "c5286dba-8d9f-4b0e-869d-a52a223b28ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33e9014b-fb33-4068-9d3e-ab1310e28225",
        "cursor": {
          "ref": "65009732-b651-4680-ae8d-4553fe2ae955",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "db8cb735-c1b8-4fcf-bd23-7574585144c6"
        },
        "item": {
          "id": "33e9014b-fb33-4068-9d3e-ab1310e28225",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "b5908ded-015c-4fa4-b542-f1cb7a263337",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66187de9-c7e3-4db6-81e1-70e14fd1a774",
        "cursor": {
          "ref": "6c3375f6-5bc5-4467-99e9-892a7ff08c51",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "2b1ee527-5636-47ee-9938-360ed4cd8243"
        },
        "item": {
          "id": "66187de9-c7e3-4db6-81e1-70e14fd1a774",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "05a94548-44b5-4c3e-888b-a3a8031adb34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76a91e85-4bf2-49c9-9ac8-d264d2f21d41",
        "cursor": {
          "ref": "50c47458-af6d-4351-8b9c-7f7d440a8fe0",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "04f44251-57c2-44ba-89ed-cb9e1530f07a"
        },
        "item": {
          "id": "76a91e85-4bf2-49c9-9ac8-d264d2f21d41",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "052bfbe0-8abe-493f-802e-04ac92817814",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce465a99-0e13-4787-9771-9f53041c9ece",
        "cursor": {
          "ref": "bb04afd7-5b4d-48f3-8b78-c23bf9b14459",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "344422c2-a47d-493d-8f39-78aaa52a9f17"
        },
        "item": {
          "id": "ce465a99-0e13-4787-9771-9f53041c9ece",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "08507dda-ceb1-4dd7-996d-406d9c7a1978",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14dc7e2e-e6c4-4291-9271-8b467316b216",
        "cursor": {
          "ref": "a8e87c1f-c1fa-4482-9959-50fdd3f44e06",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "d0ede9a1-325e-41f0-9401-619a9e81afe5"
        },
        "item": {
          "id": "14dc7e2e-e6c4-4291-9271-8b467316b216",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "93733a75-05a6-4627-924f-a89217d90a11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "712e1741-d270-4ddd-a297-380de873f9aa",
        "cursor": {
          "ref": "06db0eec-11c4-411d-bb4a-7f38f49445c9",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "dc8ef5b3-3ad1-4000-96b6-f77289a674cf"
        },
        "item": {
          "id": "712e1741-d270-4ddd-a297-380de873f9aa",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "358cde03-c620-4756-8751-730d2b274b5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83f1717e-0a48-4c72-a58e-23ce26aad8ef",
        "cursor": {
          "ref": "81d5f9d4-8e4f-4742-ba7a-d9dd7a057a47",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "a02ac7d0-51a4-4686-a6f0-5bfc0599697d"
        },
        "item": {
          "id": "83f1717e-0a48-4c72-a58e-23ce26aad8ef",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "6d4203d9-0631-4ec7-8e56-466c5e05df52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "387b2cf8-2c14-4adf-ab1e-8e7fbd8d5c69",
        "cursor": {
          "ref": "2b18b058-14b2-45ae-a955-5a1d010c8ec2",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "55446e1f-6a2f-4457-9877-63c7fde12e6d"
        },
        "item": {
          "id": "387b2cf8-2c14-4adf-ab1e-8e7fbd8d5c69",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "80cc6262-a9d6-467e-bf10-7b8655005153",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79d68a02-8de7-4898-9633-67a49707c5b7",
        "cursor": {
          "ref": "e87d1652-675c-4abc-ab5b-939f4ceeab71",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "c91bd719-6f46-41ac-ba96-868416542b8c"
        },
        "item": {
          "id": "79d68a02-8de7-4898-9633-67a49707c5b7",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "638f4d8e-efee-478f-be22-bf0e45dc55fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfcc3fea-7fa8-45ac-a77d-39b9a714db19",
        "cursor": {
          "ref": "be6df04a-831d-47bd-b543-71eedd71916a",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "d6a95749-a69b-46df-9f35-664dfbc8087a"
        },
        "item": {
          "id": "cfcc3fea-7fa8-45ac-a77d-39b9a714db19",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "a2992c7e-5919-4ce8-a90c-95ccdc363b51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f231a77-e490-496d-8c9d-da50556e432d",
        "cursor": {
          "ref": "4cd67527-3ccb-497f-a170-b7945d62fe4a",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "c67c5094-6141-477d-96a4-1e660d714392"
        },
        "item": {
          "id": "9f231a77-e490-496d-8c9d-da50556e432d",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "5f978a09-2846-48ad-873a-72c71e55a3ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f447dd2e-3ee2-4e34-a5b6-cf7bc8eb762f",
        "cursor": {
          "ref": "487c5515-c2ac-4e7a-85c9-3e2749485f8c",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "218d33d3-f043-4d1e-8cf7-298874179ebb"
        },
        "item": {
          "id": "f447dd2e-3ee2-4e34-a5b6-cf7bc8eb762f",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "1684b4ed-3829-4076-bb0d-82c6a92c7d94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fceaa660-6fa7-45e4-923a-4feea38fb08b",
        "cursor": {
          "ref": "3856238d-0398-463e-9a04-4abbd92fed2b",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "586321c2-e071-4c6e-910c-f2995f1ddc20"
        },
        "item": {
          "id": "fceaa660-6fa7-45e4-923a-4feea38fb08b",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "485c0567-91d1-4578-8a09-0d96b6cd7b2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "431ae760-e3a5-4431-b116-808000493aa4",
        "cursor": {
          "ref": "012598bc-ce97-49bc-b1da-9cf95f1f5a30",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "675a9375-8c88-4478-b294-d47c962e50a5"
        },
        "item": {
          "id": "431ae760-e3a5-4431-b116-808000493aa4",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "f976f654-67c2-46e5-aad9-64d12db66c06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "000608c4-3ff4-43df-874f-8897fb1072aa",
        "cursor": {
          "ref": "98bb8e5f-0a11-4182-a6f5-06e03d4a0965",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "7cae24f4-e27a-4998-bc18-5161119d65aa"
        },
        "item": {
          "id": "000608c4-3ff4-43df-874f-8897fb1072aa",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "53bf2b32-80a1-4331-b6a4-1a28d7ca7cdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 940,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb09de77-2ca5-4f23-825c-98c8ce1868df",
        "cursor": {
          "ref": "752325a8-6a0d-489b-92d3-d0645f323e32",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "1004171d-c54b-4532-a189-19d52a6c4c86"
        },
        "item": {
          "id": "bb09de77-2ca5-4f23-825c-98c8ce1868df",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "26890b7b-ea52-44f8-bdeb-872bd65c7d57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cde6fd1a-6e39-4734-82d8-a1de50d9fa46",
        "cursor": {
          "ref": "6312781d-527a-4896-b9b8-690085fb4460",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "86656b46-5d37-4000-8a09-08af47285cfb"
        },
        "item": {
          "id": "cde6fd1a-6e39-4734-82d8-a1de50d9fa46",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "9093544c-55d0-413c-8009-ad4978a272a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1afb4120-5030-4173-8fa0-93a1e4698874",
        "cursor": {
          "ref": "644ce365-1737-456c-82cd-50593bcdfcf5",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "79c8c8cf-db46-48da-b13b-45565033a452"
        },
        "item": {
          "id": "1afb4120-5030-4173-8fa0-93a1e4698874",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "cb67de3f-a4d1-4235-bbff-178565676166",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdd88ea2-cdbd-4ade-ab73-6fcb138dc131",
        "cursor": {
          "ref": "c9af1540-6350-49c5-a2d9-e9bdb1a05d59",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "760be2f2-4305-493a-936d-e9554b5cd7c3"
        },
        "item": {
          "id": "bdd88ea2-cdbd-4ade-ab73-6fcb138dc131",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "d8e0f368-0bce-4e6c-a1e2-31df148302bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b9b255d-bb54-4857-a7b5-66b28979fae0",
        "cursor": {
          "ref": "a388ef65-f046-43c1-8077-c7cb161eb2f0",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "35746348-298c-4201-a7ca-3467c0554cec"
        },
        "item": {
          "id": "2b9b255d-bb54-4857-a7b5-66b28979fae0",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "7ff1a6c3-d147-4a9e-aa49-ad9c1f2cd5c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b6c3923-2013-4bac-a668-a2a2aec6ecfb",
        "cursor": {
          "ref": "6084cfc2-be6e-4abb-9934-b2f02b20574b",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "47b2b6dc-9693-48a7-ac9b-c3f8e8042158"
        },
        "item": {
          "id": "2b6c3923-2013-4bac-a668-a2a2aec6ecfb",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "0029049c-73ad-4370-8ad5-8c60d4d334d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8de1dbd4-d30d-4b7a-9de4-441b6d4543ba",
        "cursor": {
          "ref": "ea3a5a73-c75a-4e97-b11e-69d56df5534e",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "0725cb37-8036-4cde-a35d-3d5cd2457563"
        },
        "item": {
          "id": "8de1dbd4-d30d-4b7a-9de4-441b6d4543ba",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "9a7f9785-5457-46a6-a16f-1a4c9285894b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7782eacc-c231-4dbf-833c-dae18fa30585",
        "cursor": {
          "ref": "336431c6-2a82-4b99-82c9-c0dd69bd37a0",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "0db5c844-7d0d-4d89-ad54-34c81b1b5097"
        },
        "item": {
          "id": "7782eacc-c231-4dbf-833c-dae18fa30585",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "eb01d12b-9bf0-4bcb-bd10-173f2edb1b92",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88b443d5-ba65-447b-badf-4dc50a69aa2a",
        "cursor": {
          "ref": "7014eb5d-4670-43ee-97fc-6932a110a8e0",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "ced9668f-ebc5-4023-8cd8-a7fb579d7dd3"
        },
        "item": {
          "id": "88b443d5-ba65-447b-badf-4dc50a69aa2a",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "777652a5-4718-4fe7-b596-33d77ada56d3",
          "status": "OK",
          "code": 200,
          "responseTime": 18,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb4fe851-3011-4f48-9ef1-e98e60756f11",
        "cursor": {
          "ref": "4c1fb068-ee98-44d8-b6b4-e5d80fbf5469",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "6f6c7d2b-7013-4b06-89b6-fa4899dd2d74"
        },
        "item": {
          "id": "eb4fe851-3011-4f48-9ef1-e98e60756f11",
          "name": "credentials_verify"
        },
        "response": {
          "id": "a02e9e84-1b5e-4acf-b60c-d4b4f8d6a98b",
          "status": "OK",
          "code": 200,
          "responseTime": 2695,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "46ab1e32-59b7-4e1e-b51e-eeebeab0b294",
        "cursor": {
          "ref": "de3c33cd-85d1-4f4f-be0b-692385467dd3",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "897c2a73-0e8a-4d3f-bce5-0435615b9057"
        },
        "item": {
          "id": "46ab1e32-59b7-4e1e-b51e-eeebeab0b294",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "9851371c-d109-47e5-bc09-b3ad26d4775c",
          "status": "OK",
          "code": 200,
          "responseTime": 4510,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d193d0e-5198-43f4-a67f-e82b1fb74da8",
        "cursor": {
          "ref": "ddf5822e-30a4-4c4f-abcf-6fc689f6b43c",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "36600d34-a174-4c77-8fd7-1b56b610e1c1"
        },
        "item": {
          "id": "4d193d0e-5198-43f4-a67f-e82b1fb74da8",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c127ecaf-c320-48e7-a2f5-ae4a661ac007",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d193d0e-5198-43f4-a67f-e82b1fb74da8",
        "cursor": {
          "ref": "ddf5822e-30a4-4c4f-abcf-6fc689f6b43c",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "36600d34-a174-4c77-8fd7-1b56b610e1c1"
        },
        "item": {
          "id": "4d193d0e-5198-43f4-a67f-e82b1fb74da8",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c127ecaf-c320-48e7-a2f5-ae4a661ac007",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dab52f1-d7c5-413c-a27c-ee4094396d2f",
        "cursor": {
          "ref": "173d8ab6-6305-43bd-867d-61e46462caa1",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "d6993537-8676-477f-8f7d-9e214cec20b6"
        },
        "item": {
          "id": "9dab52f1-d7c5-413c-a27c-ee4094396d2f",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "e26657a6-0539-4d2e-9b91-a2138af23aad",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e9bdeef-e0cc-4486-aba6-1b980344d1d5",
        "cursor": {
          "ref": "a4a4dabb-ecec-4ecb-994d-2abaa862bf70",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "fa9640d1-4210-4b3f-a11e-ec61f664985c"
        },
        "item": {
          "id": "9e9bdeef-e0cc-4486-aba6-1b980344d1d5",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "14007f1f-158e-4b06-a12a-3a6aba88eb8c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}