{
  "collection": {
    "info": {
      "_postman_id": "faa02ea8-9433-45af-b9a7-893a98130da9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "80e61d4f-9b0e-4ebb-8035-f3fe165d74de",
        "name": "Clear Cache",
        "item": [
          {
            "id": "cb97efc4-0a36-437b-836a-000e256d928e",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9cf74897-e036-41c4-a17d-c4ba0a7b6743",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "87477ec9-63b1-4a0e-ad1b-22e7bbbb1657"
                }
              }
            ]
          },
          {
            "id": "9b10d5f9-4288-46a5-bac9-03b8b8bd1aaf",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "660fd7e3-8a94-409d-b37e-fcf292914ca3",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "70674319-622d-47c1-8804-dfadc7e82418"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "466ba278-8a9c-4b0c-a5fe-9d2abfa4fd07",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "3a521d64-7b70-43f0-a968-47b0143fff8f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4a964046-b04c-4b23-93cb-63f42878f3f2",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2ef52b21-ec67-4991-af11-8e2e48271a19",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d21cfdb0-8399-416d-a7fd-f4b8f4669cf7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1c32e44e-acf8-4a41-8b41-94fad70607e3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "596c43c9-7333-43fd-8b9a-3ae480f9c881"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "bd7bd35e-4617-4ae7-86f5-391a1a216319",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3c26fc3d-9ebb-435f-afaa-967d60c4e388"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a1d9bf7f-5d51-4c39-9b96-75351fcf31c2",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "248b8948-7092-4eac-b484-4f9dba627af3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1db1c3c2-97cc-48dd-9324-8df32410db0a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2fdfb049-2849-4d15-a5ee-fc00886a1546"
            }
          }
        ]
      },
      {
        "id": "88b94b50-90e5-47ea-9b16-83974bb0a5e8",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "2f668c8b-2725-45bc-8c11-20fbb708cbe8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1901afbf-d0eb-45c9-885d-73673a905c57",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "fbc37da0-5ca0-426b-860e-ae76a2729b01",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f394ac42-136f-4694-b5db-701c31eb5925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2474a7bb-2d57-4bb8-b7a6-277411404376"
                        }
                      }
                    ]
                  },
                  {
                    "id": "415ee257-1c5c-4985-a46e-09384503e0ea",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ea80ebe-e08b-4271-afcb-1686b1b26802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6dbf6c8d-6f8b-48a2-891e-e7c0ff9a8d94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb68c96d-4c50-4377-9a31-dcda6e8680be",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ba8f6b7-58cf-4f8c-95cd-ce8ab5bca693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fa905a0e-3972-43df-8616-15dc4ddb3a0a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5c7110df-3b74-47a7-bfcc-56b83516c1cd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8428c51c-75f1-47be-8b28-bf6f47f0ff33",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1c0cf36-cdb2-436d-bb9a-8faa861e6238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "26f7f679-4c46-476c-860a-2e0e78f8cf5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eacf50c0-e42b-48e5-8290-3ce3161732d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd50ed85-e83f-40b6-b232-f751f8b742e9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "11cd7f2e-5f79-4443-aea9-c01125869245",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4f17bf75-e392-4ea5-a6dc-f4482d202a5a",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8d57082e-f102-4f98-a8ab-9f20214da45d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "bea81fd6-94d1-4bbe-b1ce-a7f7963983de"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "908738c9-40a9-47a9-afef-d1975b958f04",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "0607936f-4832-40df-b585-85f37974bf7b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b068e746-a415-49c4-bb89-82496d112a77",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bea2fb94-68cc-40bd-9dea-ef34174dd5d8"
            }
          }
        ]
      },
      {
        "id": "1d769c71-2743-4a2e-a326-ed151a235aed",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "3b6dfe50-3635-48bf-bd5d-da5f7ea2c8e5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "83365efa-1d43-4113-8f2b-647f0b571a8a",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "21355ee3-e396-4bbf-b55a-0ee6f07375c0",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c549da41-290c-4e59-8527-c27fffd3d0b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d45f981-cc1c-4f5c-9dd0-f23b6d0da4b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fef0b47-da82-479b-ad4e-47f15f194d18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bb7cfe88-4bbd-4178-b935-1e15d50c17f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35145d42-50d9-4d8a-a1c0-24aa309d741f",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26d1c470-0882-436c-929b-7339c0275e2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b29b437-b011-429c-97a2-c97cdf8e5f33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56a4e7bc-1c5b-463a-aaa3-bdf8594feceb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4df085e9-6ba4-43e9-9c02-5e089c301fca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac5cbbd0-2599-45ef-a2b3-751366f649e4",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cd68646-61cf-4e85-b6c8-716946e04328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba996eeb-7434-457b-8100-60365577bd03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d29857a3-7740-4b18-beee-be01ad7b7bbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2351606d-d234-452d-837f-b89f6037efbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7187ce5-d1c4-47bc-9d56-281e540c7069",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1ea7e20-1a1f-483e-bfa3-fa078b968a20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08bae5e6-71bd-4d7a-a2db-a36f86576b4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1deb6e08-c2b1-470e-bfb5-181fedf16e67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c89b1ba7-d9ad-4b94-9747-7a8eac69c121"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4c18d7c-99a7-4e95-9390-2ac7b357a625",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a83d723-d337-4d8e-98f2-257fcc927449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5c4390a-d2d0-4fda-ab41-603b3f680e3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16953d23-368f-4b65-8f81-7589c9a41f76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "306893b2-08f9-4d7b-b7f5-8aa8b120d686"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9574086-d371-4a5b-ae4c-4c061dc307ed",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b46c2cc6-5b2e-41f9-92a9-e81d86da69bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33d098cb-9c22-49d5-81f9-d2ef59bd94d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ff2d5f1-92ba-4de5-9854-5a50ffa8361d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7796ffb3-701f-4832-b062-7262f91888f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "435485dd-54dc-4db0-8f06-b515f03e2a88",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8508be5e-63b3-4894-8727-82e4110cee62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7481305e-7c19-45ac-a7dd-1f2b4c656916"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1242918-2dd5-4372-ab26-963e76d3bfd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "903f1be5-e83d-43bf-91fd-febd33c3d3ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d605bc2a-da8a-4a7f-a098-c788f2b11bf4",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c7467e3-b4d7-4def-b0a3-314e5a9d35b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a654db4-2396-4483-a899-b4730812bd82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18e823bc-f6e7-4bd5-a16e-9fe21c6b0e97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a1a289d8-b757-4424-a41b-0e064a393a62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "880723cd-ffae-48bf-b517-5fad86eaf7c3",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb021b0f-0a6d-49ec-a02b-132070aeed49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e477e26b-72d5-44b3-931b-59d7ec57a33a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99c8728b-2d2c-4f2e-8ddd-1d31a1e0652f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f35a404e-232f-4f47-aca8-0e58dbe38d73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cd3ae0e-e539-4554-8918-c06747966e7a",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e3e0eaa-dd29-4376-bb19-aa3f2acdab4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d40a0391-0f5f-434e-b206-10dbed5d367b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49d3c56e-6159-473c-89ba-0fa940a04231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "536ee4be-e327-4af0-b1f2-ade25319450b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76bae796-3acc-466b-ae68-1cfd9a52d540",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21720b0c-870c-475e-b8f4-e8e36e87a868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89960582-e5fc-4a11-a1c9-84419558c4ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f326b334-1fc7-4bf9-b3af-db3cc6365ccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8b506963-c38f-4891-b7f0-9a409e788e98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2339529c-806b-4924-9770-9c0979bb9f8c",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3825d36a-d058-4761-9637-c151abd9a78d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6419cab0-f39c-4874-9871-735103ca0fe2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e05b8f17-6652-483f-9e07-f036a6fa7ae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "720da311-1056-45fb-b52f-9a7639d86d0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36182ec1-20f6-40ea-830a-aac45f269c8e",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71eb59d1-0bf5-4ca7-afe4-ab0d2f7b0bf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f3aca8c-81fd-4cab-a84c-47180d274385"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aea525d-0628-43d8-8bed-745c521e776d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ae814338-2df4-41a6-8493-d4a36357729a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6593b760-16b9-46be-8a08-e5359e6c8dfb",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "868bcbf5-ee4b-45d7-859b-fd96f047ab45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75f57c99-aaee-4899-9bcd-234304dad493"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83a6bdc9-0d79-419c-8932-23df428b8527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e7f92771-d0e3-4b49-b82f-2c1619c4526c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd3b9c21-c4f3-4272-bff8-4377cb22bf19",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec018cba-8438-4a22-832b-39f1656fa2d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d11a7720-6070-47b6-93f1-1c3d606a2655"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46fe12bb-9c65-42f4-9012-15ebc9d9e0c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "73ccabd3-6127-43b3-b14d-cb72fbf6e97f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00298de1-db46-49e2-b197-f5ac2b36fb82",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "755d2e18-ecda-482c-bad5-cc34d76e9fe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcd1a336-b5d4-4841-9cf5-155cca9db4c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3b76a93-86fe-47e0-8a4f-4c5edb51d0b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "db8e28c7-28bb-4bfc-8ae8-300eef0bd75a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ddc2de2-88b5-4d1d-81b4-bf813a80ebac",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61a64bad-cab9-45d5-8adc-243efc66b6ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b52a0f4c-17a2-4840-bea5-d2e2bf4e6087"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb7fcdf1-3039-4e2d-90fb-d92fd78d509a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "66b8de64-cb8d-4f27-b876-edbad0fb8214"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c71cf56b-539e-486b-97a4-00145b5f984e",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adb92ea6-0d1f-4a21-9c8e-8fa93162938f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1580969-dc71-4e82-a1a6-d4abdbf26ee0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2ba0d4a-3861-43e9-8057-59033f85ecef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "1417c3bf-9b68-48f0-a90f-357c290bf9a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98e78dd8-5b3f-4238-8e94-4bb5590df0ee",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54054933-140a-47e1-8761-510187a21877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c5ef84a-6515-4134-979f-4dc69cc0c34a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b765b87a-c28b-4b7a-9e01-50ca2c0f5a1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9529a811-1f5e-4c46-adb0-f460b0f8a558"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06d445cc-6416-42a6-9567-dbb69e39b824",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "886f5273-7f9a-4476-853e-1da24d346ad6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b6902d9-742e-4efe-a646-fe44a1a873ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b09a5c1a-e50b-4bc7-9819-9c32d3a63d0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "083d13ba-aa1e-4eb4-b882-4401802e9fbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd02be1e-9e42-41a3-9f29-3bb44a01491d",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b206127a-866a-418c-94cb-f537c83c7809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f93ac718-e851-4db7-b8e6-0c61698cad5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b2a430a-ed77-4094-91f7-ab7edc759f52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "265e81d0-95b0-4727-867f-a649dd880d0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6cbeb36-faa1-4991-82dc-8787bc6fcd94",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2ca9369-e591-49be-9a55-843d9f9cabd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fb1244d-ee8b-47f5-9b29-ae901ed792e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b7aa895-239b-44d1-bacd-c138e1d8dce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "674e4685-e0da-455c-bf0c-253219b0f2c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fda7c48-3117-4ec0-ad72-0fa8fc978192",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97bc875b-fc95-4430-afe9-31eabf9d46d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c142c67-a51f-475b-b041-fb10a7cd88b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b9c92b4-b7ad-43e5-8309-44047629b414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "49ebe7c6-a746-4e7b-9351-4f904fe2d05f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c387ab73-cb0b-4cf2-83b0-17336289609b",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f1e378f-281b-4fe5-8c84-14abd04a5f82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "128c0c45-6687-4c10-b7d2-9a2a208583fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec1029ff-3160-4587-9518-2b611df835f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ac2b694-00f6-490f-b530-5e4bf3dd943b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4deb3499-946d-4a56-bef7-f8c408cf75da",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4af7955-1b5c-4da7-9cf9-686426fc72ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbe8b99b-23df-4a2c-95ee-0be864844d05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f37ef853-6ca5-4a56-ae72-46160d97e406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a6c8ca3-81a0-4d77-a2d6-822d219f8a20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c52a2341-ef93-4d5f-8472-f64575febe0c",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36ee231c-66e3-4940-a937-d145910c2720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c39b062-7930-4de6-ae1a-c6dde2d6a4d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1126c3ae-8069-46fd-b38a-27dfa43e9bcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6e7bab3-e61f-4673-87f5-4a828e8c21b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "157f6bb8-daff-4fb9-8dcb-b5c5204a8401",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67109f0b-018a-46f0-b0fc-ecf8f68af054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "402e09b9-6586-426c-bfc9-b5dbcdcdec84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6131f47f-8d8f-45ba-bfa8-cb9126b2f71e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "885f7035-f2ba-4857-a3b3-86e2eec9b3a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2d48521-782b-40da-b9fe-08073d96dd78",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58791fcd-03a2-4e1e-b09d-d16c1fec1aba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "900d7071-a80b-452f-9ed4-bac3b2c00ec5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74efb4e8-80bf-4a9e-87e1-4921bcc31787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b1fedcd-c3ee-41ce-b87f-96fddb86799d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dfa95a9-6308-4fcd-9538-a1bbf5c61f6b",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6693320d-0d43-4044-8a09-c010446ae5f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7d4b063-6586-4cd9-b818-fa0127026521"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "095c0aaa-f0fe-4ac4-b0b5-d84ffda2b8e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d7ce63e-1217-4a63-8d80-1c44fc8dc2cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa993885-226e-42af-a517-21e78f0ef57f",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3da6cef-3f37-4f5d-9536-cdbb3147a020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b93901d-aa73-42c4-9c74-d2628c40b23b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08025e6e-cd16-4b2b-aad6-ee64c1200323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "e158553d-5ea7-4fb0-a359-0c7345505d0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "814e1c53-cccf-49e4-80cb-a2ec7b743e2b",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d081079b-f89c-4262-a5bc-13cadf4b256a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b806bd25-a151-4d8f-8c29-cf3b307a46a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c631b19b-40f0-4a7c-b110-b1b0ce350fdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "df1420a9-ae3e-43ba-bcc0-e17f80b138a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fff53ac5-dd3d-41a5-93ee-6c20b08de68f",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1afabf4-94aa-4656-b686-b15b4fabdae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3ef24c6-5392-4e61-a759-8a8e9d43921e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f164e325-3bb8-45c6-babd-a454682c8d97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b06bfcc8-7df5-4a04-9e89-159df5c8674b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "074098ac-6d95-43f7-9fdf-77f750448614",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "094f0181-804e-4245-98cc-0a235d33366f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3aa5d8fe-d368-4023-b91f-934e967b31cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85481b68-09c1-40ac-8d76-b12bf5a676e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "18a021d8-426b-46b1-8c34-3948f424a169"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c081efa-3c8c-4fb9-9481-1f063f229252",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37cb98b0-6abd-4c90-86d7-9912e33804f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf5a259d-63a5-40df-9b5a-8448a6df2532"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "319091c1-b348-4c55-b4f0-c99f4372f9c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3205a00a-f64b-4671-86f1-705f4858c689"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d909e0e-c92a-4afd-938d-3a0d80173b86",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cdf9d80-9601-4841-a2ee-c4ef500aad00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3df5fa97-3c27-4b63-8dd8-13d0733339f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b060e742-0793-49ea-87d7-89bb4ac0497e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "99a91b95-14e0-40ae-b62c-380aecf7b43f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f40a90ac-4cb7-4c30-b3f4-e2817e750b6f",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b20905e-19d8-4920-995d-1ffb4a48e460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ac1e8d17-039b-4657-b897-dc8c7ed078e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "630a730e-e682-4abc-b319-8f5c2737f342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e5e9da31-3bfe-48a5-a49f-41475be246e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9144766-e8cd-49b7-b9b5-d82eea5dc125",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cfd942e-2884-4fb5-ab0f-39471b3b14a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ded0ecf0-d371-4d15-97d3-b862fceea72b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f4a1d87-b8e9-4539-9dd5-080ce39e7ee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f527e0f3-bd6e-4b64-ae4e-a3b81c1193cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "262a9879-30e4-4e98-bf6d-797c1ba8400b",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d93555e4-82ab-452f-a3cc-f2a8878f482e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5e50a43-cf05-41e1-80cb-946d0ce2f75e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9df10adb-ea28-4153-bac6-e81683545fca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "144cb115-15ed-472f-8f02-43c020a9d7f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de6e0876-f540-4cfc-9f41-464534ea8675",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44fbc90c-2871-4355-8023-426b82d07b71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69ca2d48-8351-4547-a065-c91ffdb8bb7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ee426c8-ce42-4b68-bf8c-c23c5e7b3b45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5d5af5be-7439-4883-ad3a-e2c5434da1a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef423570-23f4-41e5-8a7a-bf6405f8bae8",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c51bdc48-d404-46f1-a19c-9fdb8075f03f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2ff83a3-afaf-4abe-81b8-d6599a17cb4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3455e213-a2e9-470c-baa0-054f9be8f72e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b6f13db7-26bd-4411-8de0-1e7c71d5a671"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f92b735b-f64c-4b76-90e9-a79c1b2ae262",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa586092-1faa-4126-b3b7-c2afe49ed10e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac2bc82f-15a3-4d1c-bd46-3580226f125b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d981a686-5676-40da-bfbf-18bbdee02cd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "758cfe7e-caed-4e4b-aed8-33ad81b898fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6231e78-e471-4a56-bb4a-dd7a00566782",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67cbdf24-6eef-411b-8011-4f38e260194d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d5b809b-6718-4ddb-850e-d38d924486e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21b0dfa8-1fbb-4563-aa40-2e5060ff9600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "49568a38-ab76-4ef8-b96f-fc930fec704c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5358b71f-d32e-4aed-a16a-f692aee00231",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f32b54f-2fe2-4ea3-bb62-082c63f3563a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "970070fd-5100-4965-8e04-3f4f8d84723a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f875fef7-4e29-4df9-9477-1e2950c603c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a70b0e92-9790-49a4-9cc2-43570f7ee4a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff18deda-7583-46bb-b493-663bfac23b8b",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4698993f-f33d-49bc-9a3e-2f3bdc275be1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "292f7148-739c-44d2-b89e-7f157cac9a57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16ea3f6c-409b-49cf-954e-8895d0ec1607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ae2ec93-e155-4561-a23e-df123e4ab6b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fabc0fb5-4dd8-40be-9d06-ac3c747b8dca",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08f3b6ea-1d6d-4c9d-9fee-d13d6c592c27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34511029-d50e-4bda-970b-9db72dd3449f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4fecadf-17be-4ac4-953c-31b0e9d1d439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b17063c7-4592-4b2a-9b75-25cbc4ce2c1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f707c51-45bb-4b25-bac6-6ff86087ff12",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "441d76f1-aa4c-4bab-a5ec-153c947fdf1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e91ed61-f9fe-41ab-ad46-8dd1b390a8a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de6d9ebb-b38e-4239-aa79-b545b7d7b499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f013e16-817c-40c5-a886-d48e041e9a51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "410aa6a8-d12e-4872-832b-72c3958cc72d",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb58bc45-910b-4d76-a528-4e3365d79da5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bed846b7-d1e2-46cd-bd1f-cef56d206c79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e03870e7-64fa-469d-98c9-38266043435f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "443ef27d-71c3-4ad2-9956-0d36d5ffaab7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63431945-54f7-49c0-b076-1395a5fa440e",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "272fe994-1e3d-4538-b86c-3cc029177dff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76b5f0c8-a7c0-4217-8aed-c05722d6c27e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3baad907-3e68-48d7-97d1-9c08924b11e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7dfcd924-7852-4630-a40e-27c834c633f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c097209f-4e93-4d55-87dc-686e46d1264e",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf7667b5-d25c-4004-a223-e2e09b43fbf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9488b199-f1a6-4bc3-80ab-872daa7af7be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94c532f0-a5a3-4fa9-804e-9883e7ce4d21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "aa72fecf-c854-4c91-8f3d-d37c4631a94e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d0bc8f1-951c-4352-9ba2-d0ce6f078126",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94e084ae-cab3-4552-8ac1-92f6a73a9b01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88ee7676-db03-4b3c-8c60-e75a2493f5e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98a42222-f07d-42a3-9154-26252ce17938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "518c9cd2-5ead-4dfa-8910-ce7df3c996e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "436d69bd-ab05-4858-8c9e-8345c6bd9973",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a9727e6-7553-4977-935f-be25146776df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f9bea51-ba54-4e24-a80d-614672573cb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe8bb1eb-dd6c-4250-a9e9-e46d177952cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "bdbe5e83-3008-4e27-afd6-87d13f6241b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f02004c-53f2-40ea-9c1d-fc2437dd1c6f",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46b0cca2-8639-411f-9cdb-5f45adc112c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "609b32d1-28d7-43e3-9c86-50c1853ee0c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aa97f26-dd46-4e18-b1f9-1351645306e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "55359d78-903a-45bf-a2a8-73d02d508755"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eea4ffab-f169-463f-a6f4-0746b11dce2c",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c18ab55-831c-4891-aeb0-c82bbcb2096e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0bcc4aa-b6e5-4969-8cdb-4416ae67f9eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d46df82d-f804-491a-8c26-0e48289d5aed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "359e174a-4627-44f2-af97-86b2587c2b7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f28501aa-c00c-457f-ae13-68f8a7b5b41e",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a714e985-011b-4d96-8b15-40cc3b986b9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a3628f3-275e-49e1-b812-5c9dec176f04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c107f4a5-5686-459e-bc92-d815679a6fad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "46c80ae5-c890-47cb-8ed8-8ac14749677f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b5ca620-6b78-4672-9231-55054bb966b9",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d592d4bb-c6ee-446e-b3c0-ddf36aeb03c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51d4f8f5-3b61-496d-bdc6-1bef9331d608"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8668353-26ba-4ad1-bd16-4bd58b394237",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "39c6a78e-c731-4b13-8566-40198056a101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c1fe5ef-58b7-4fc1-9f60-5431c076a411",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e1a9e78-1f71-4a7b-a3ab-4e46a6b21f96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a761d8b-2bc4-4b1c-a248-bb0c006e6104"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b25a41c-7b86-4f93-9a5c-c304da677c9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "5c227dc4-789d-4b5c-86de-d036c3671efb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d7f1b84-0240-4ec4-9866-75c63720d157",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ce7699f-d57f-4ddb-9620-bfc40ccb508d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fb8e330-a93d-4534-b880-58699fb23077"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d44c9fa1-088d-476f-a2d8-7a62478efa7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2c83c699-e3bb-447c-bb17-3be620776d32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "124f4a60-843c-4bba-84b5-4b81f9c6e008",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa15b34a-c119-4758-a33e-2ca387e5e53c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b14733c-f35e-4fcf-81cf-14041adb92ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e4bcc90-8cf8-4fd3-85af-c65551520961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "40b378df-9b85-4263-9134-6ac177095647"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b53714f8-4d5b-49fc-aa4d-9385ceaa13b3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2b885d0-04c3-4ebc-a013-2377ac4a3830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cec602c-ef1f-4deb-be82-8cb6a029abe2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e6d40ca-d53c-41ed-926b-587830f431b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d6d388ab-c36b-43cb-abce-453b5339fc7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "500dc918-aec5-47f8-87aa-423315a2872b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b96dbdfb-3ab3-4cfa-ac9c-e4e7204f2ffb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af29900b-e340-4518-8b91-09df6590525c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e3c0dd8-24a5-4031-bda0-bac1f60dbd56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ce7ec3c8-59c2-4a21-84c3-150b5a7de737"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05c58b79-ce8e-4eca-b0e3-e21813926426",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c9242ad-f403-4ebe-8ceb-e9e779c5f897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3e3ec24-9a76-4127-beef-a85c38ae3d0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22f0a23d-4c03-4dac-b258-a197b6fe1539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3b82c9b0-a5f6-4f7d-a286-25e18c7659e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edcdedcb-5a84-46e1-8e0a-9611a021c561",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52e66524-a9c3-427a-a0a1-e07082fd6ad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a08eed1f-877e-4ab7-a3b8-640c4e278dd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b8ae848-a74e-40fe-9bf0-020bcb919a3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6ca6910-978d-4569-a82d-bfdcfc17faa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de203697-19cb-4bfa-ab6e-23f3be8d6e46",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f0bda56-fb7e-488e-8c25-f8b622b7a969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "720e7141-48c5-4f7e-a5de-c4b23d30504b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46f72789-d7f7-4483-a3b5-b7b89ae18cf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "de1c14ae-5091-4477-a3b2-11e629950898"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8db5a40e-ec73-4b42-8990-8967b5830ee3",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e35d9f9a-adf5-4f62-b618-1d4fc1b9aba9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdfc9bc0-6c83-41c8-a0b0-b8fe1e0c2b00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad590a5a-9cdd-4d6e-9c12-0af1a6044a6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e52cc2dc-25a5-4cb5-aeb1-da70b20685b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b61dbcfd-8cd6-4c9a-8771-73c3afc01945",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1121beda-b81b-45f8-8102-735ddba64fe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ef56502-abea-4b68-8a96-6e3acada11d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd429e3e-f5ec-42bd-90d8-505136ee2edd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "586c8354-e5ae-41a4-b2bf-554997e1fb64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1239930f-ede4-4e58-b212-4120e591fb88",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bb1db67-2c09-4c72-ba5c-c71c3c7e1fac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9ca7fb0-e80d-4477-845a-7c9bc3ff8247"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "115a863c-ebef-4063-9861-3bd6841d1d03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf5aea0f-5cab-48c4-98d5-a97b3ab42282"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4087b8ba-b863-40d7-8be4-79edad437fbe",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "525b0cfa-2ea2-4596-90a4-e454c0230c5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4655488-0542-4f1a-9d24-1278c9a8ba23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a03ee1cc-1d44-49d5-b696-8b91f5cc68e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "333513a9-93b6-4812-8084-623112818d11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17498b52-3bf6-4c12-b1d8-9993eaecce66",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e53cf434-ff82-4528-bb8f-60f08196d4a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b69fec4-3979-49a6-83c2-292addddcb01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba4ce4d3-52f8-4f19-926f-67b79a0dd667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "fbe34ea2-5671-4a26-abc0-7a15917b3081"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bd734a2-0a88-4a82-9306-87b62eaf4cd0",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8318fb33-9343-40c6-8c23-248042fe76bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41122f61-edc7-43df-9fb3-b87673340bd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8867a522-7eb1-43cb-bf95-12e8cf5713b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "429959a0-f548-428f-81c4-9270bd8600a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f67c1e6-db16-4e8f-8791-c6ba32c554c0",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9457549-8819-4345-93ac-bea6b07bce42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9ece068-218a-4231-8d76-966808f6eed5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8fad69e-a14b-4893-a0cb-54c339b01c9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9df343d6-651a-4313-8921-cad3c2232554"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88a3c3d7-3d06-4cf2-8ba0-a6480c6cf91b",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df1db909-531f-49dc-a600-f6c5505f88b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "582138d7-2f58-4ed6-a620-4ae9d00c8875"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94d1e887-be0d-47a6-83f4-d17f1d9c3215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "35f7ec65-e9ce-42ec-8833-e242a1706db9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9981f9e-3a82-4830-9fd8-8201c09c12d7",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec4b9a33-b89e-4de7-9319-c5cd8e627a5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d0b9cfd-9313-4ddb-b7e6-aa587b1a51df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1a27a61-369c-4bb2-ab1f-a4369baef691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1ee8520-ff92-4ee3-a87d-51da63936b6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa695ce2-34f2-43b1-9c26-e4135ec51a87",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d458f8ca-28ee-4dd6-b9cf-f4f811378bb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1464c53c-328c-4635-9a9b-3d16bf3175db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "622b3943-ebae-4da2-8dfb-c4cc489003f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dc09c835-a3be-4e93-9d09-cd7f16cf3985"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f769525-28d7-40c3-9d09-7cd06a1a5697",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "636f1f0a-7894-4520-9b86-cf49305f5cb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43f7bde5-6272-44a7-8201-fe01feae7c07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3d9f67c-767b-4f28-a863-4e0a39067a4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ef8ad875-50eb-45af-976f-aeb333c7ada3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be7817e9-f0de-4b01-a667-7f93e54c2d2a",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52200e7a-fe59-493a-8c9f-735597f0f910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd326564-89d5-4fef-9ce1-312184ccf6f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07660032-06d6-4ad7-9871-47f17530d68b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "57b6a775-db27-481e-b174-1531f9e3e7a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f7a0235-f35f-4548-8cfa-e0d13849fee5",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b049fa6e-92fd-476a-a32e-4e4ec4d1394b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22664572-e2da-46a3-afce-09ceec5ff08b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd92fefb-fb47-46d2-96d2-f46fb5c64770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4ccf943-4b2a-4495-9220-958812964dca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2a22ff9-be34-43b0-a099-bdc529d1b12b",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdfdf946-46a0-4d0f-b92f-b5c20f611e3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45ec10aa-d2d1-44ba-b7a5-7a1863ec1646"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23ae77da-aba4-4bac-8f3f-bbc4dbb75032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "54308ea6-ee9e-410f-ac9d-d9f8dca438eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddc6fda5-541a-4373-a82e-e353c068c554",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92e0f641-c99c-4625-b714-30acaafe458e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c20329d6-456c-4f0b-b3df-99c864a4e576"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7891dcf1-521b-4134-8d5a-56d6c0f9bcac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e5ec4d0-3150-4033-8878-bc0d9040c47a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fa3c37b-9253-4eb7-b527-0c527c29ae40",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c6965b8-9e9e-46ec-b13d-63ed6535737f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b412b6e-121e-4c92-bf1c-62e30fb694d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b88faec8-8464-41f4-b84b-df979f6a7fce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "eff8f6a6-37ab-4b26-bdff-165bf887fa47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e07fb69-127f-43fc-9112-e8646499ee49",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85cf5ae2-4f0b-4156-90af-798f662a13e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25e0c150-d2bc-4d2f-8a0a-2e1d588c8ded"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "518359d8-2577-436c-a774-c978c1e605a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cb2e3ad8-ebef-429e-8925-2a89c1a97a3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c99a9217-fb80-4f7a-a509-7efe668a7fe5",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59ef89cc-429a-4be8-a618-d94d5578aea1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb5e702e-0d68-48eb-8622-81ccebe97fbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "625db1f4-3a67-442a-9342-f600208abfc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ef85ad2-1821-4938-9f09-97dce73b325c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26fd9b1c-ffb4-47ab-8bfa-e8a88eaf9cbc",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97423d7c-0923-4626-933d-3cd476841f3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa6497ba-0ab3-455b-b932-d3393df235fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feb6ac6a-e564-49d8-b6c7-8ed4f10e1f13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b7fd03d-1157-4549-b0ac-b83fb857e7f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bac8a2ef-1581-4275-acd0-a432d58ca07b",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e053802-84eb-44f2-80a8-957fa96c935c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d75e2ca2-67ae-44ce-90a8-8f579f447b5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "780fc0ab-8a5c-45fa-9f8b-7114117e8ef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b620444-be46-49fe-92da-c839528e98ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee225dbb-0c05-46e7-a2a8-e0f73cb8e569",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "524559d2-6c6c-462a-9995-862beb8fadcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76c49104-d0b9-4686-bbd6-de49b93de2c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac3f861b-c282-4513-b550-4c6eca3893b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa22da70-6c0c-435c-a8e5-35f88b455dce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "161fe73f-f10f-4d56-aa81-73559a265f1e",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cedd648-2ef5-45ec-85ba-69a1040dca76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c470a71-9adb-4d58-b3e1-6473f46fbb7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b12688c-3c0d-46b2-a642-573e642dbd29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7c4ec408-a6a1-45e7-a4a7-92fa78cf2f35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9773cfa-6dfd-421d-a9c5-9a6c1f261738",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "765cd44d-ff37-452e-9930-0688ca0f1294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05e289f8-0d4a-43c9-aa01-636b1481db7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eb4df70-c1f7-4812-bc8f-3907099fc7ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9591620a-4499-4d26-9406-6ad968dc9d2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e371add-80b3-4c7c-b9e9-f4114418f976",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bc413ae-2da8-465d-9a7c-4cd54032c2f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "499fb7ce-c201-46c7-a20b-eb6509d462c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c283f73-888e-450c-9f4c-b2148f8b8146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c8cb87a0-3e0c-4ed2-b9e7-3f0fc09b5594"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e062f16-1eb3-46d5-bb4f-66e29751a7f1",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17c538f1-1df0-40b4-867d-cb614be007fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb497578-e9d5-4207-8f2f-4de4ec6cb88d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6f2bef4-6ba3-4937-94b8-e52acc566d12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f921fec-ddb1-4465-bc8e-8ad6f19a8fa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45b410ff-b86d-4a87-82d4-2bed6657438e",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be074590-90a2-4b1a-a01a-4d2240428210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e71dfc0c-d770-4050-8f23-9e60409bbc1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da962ff4-ff1b-4958-b1b9-f3890faff5ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "cf133ef0-8863-4ea4-8ab6-dad00d35ce6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d725c9e2-c22c-4438-81f2-b1458b14fc43",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dea9ad35-e06e-44a4-a381-5b665f3c9a4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1b4eccb-f63d-48b6-b3b6-f10bde5c226f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfc18111-de6b-4562-9e35-ebc67b80e493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "45d10621-d78c-4206-bd07-8faac586904c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc2b49e3-d9e8-4878-a6d6-8f98961938dc",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5134e781-fca8-4ce2-bc12-4a22de25ef29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a362f784-cac4-4c57-8acd-fa9516d4e498"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82a87d79-60eb-4735-8051-274bfb827ef8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "0daf738b-7475-438d-94cc-8add3ac6e943"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e16e9a1-c55e-49b7-bd0b-559e44a54b85",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3c1b6e5-625c-4933-a77f-e38bdc5681e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "f24d7372-40e2-41a7-bcb4-7c227ffdafd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9728902-03f0-49ee-82ef-63422cb8a6fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "11f040e1-46be-4663-b08a-dbfb75a42f96"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2978586d-6313-457a-8ac6-bc997f85354f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4aa7ddcc-4519-4808-ba76-9ca63cdc4a11",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c09b8ad6-b290-4d23-a8f0-4460f9250d1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "14f34c0f-5c09-414e-8e9a-d1aac815f3fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "100453a4-e911-467d-b0cf-4d0676465fbc",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c4c16838-7310-449a-9fb2-ac39b39b7f33"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "772fdc4a-113d-47cd-96bb-7acbac5b18bb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9a327af1-86f0-43f6-b947-7540f936baf2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7db8aae0-ff85-4efb-aab7-4eceda09bd70",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2c9cb29d-d42b-41fe-b904-5fa4cc12ace1"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cf99f567-1f7a-4995-b109-c48bbe200635",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9256c4b7-d814-4e27-99b3-6f05fd73f939"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ad3caf63-292d-49ce-a67f-704e9fd73909",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fae1dd99-5122-4c8f-8050-0687c650e88e"
                }
              }
            ]
          },
          {
            "id": "220da2b8-90f8-46a0-985e-c0b91fae8d41",
            "name": "Positive Testing",
            "item": [
              {
                "id": "338da717-c819-4574-9a4e-9c6a0598b421",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "84c7c826-ef9d-49f6-a485-55798d39ab6b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5396730c-f0a3-4dd7-8989-1508b4183075"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "07cfcea8-8f16-41a4-87e4-39124fc736d8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "889068f2-f51e-4be9-8b03-2d06976aa219"
                    }
                  }
                ]
              },
              {
                "id": "e7da15d3-3628-41b7-8c37-9ab19b3ea32c",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3d1feac4-3a10-4842-a8db-08bd01dc3ebd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e4ab4934-5906-4357-be8c-86ffe5f60413"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "06b382c5-023d-4306-96c4-4c48b18a421b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1ce80b40-9986-4aa2-a353-ba25a409582a"
                    }
                  }
                ]
              },
              {
                "id": "f9b70d5b-7a0e-4404-96a2-cd5cbd679f8c",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f22c9b85-d06a-4241-9b4b-3324eb04d2f7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4f329818-c7f4-44ff-9b48-a6f64b8f809f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5cabfaf9-fc1b-4f8a-8b15-0c07f447df01",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "dbddb858-a92c-4be6-889a-735bdc32c26c"
                    }
                  }
                ]
              },
              {
                "id": "434f07ae-d402-47c6-8856-ae988e7221a9",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8e0053e7-2cbe-4c72-97bf-52bf194ca659",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5117d7f1-85a4-49d4-b3e3-9e39ba46c8a4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "706f8a09-96c5-434c-8708-3d3d13f96c9f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "24d0712a-413e-45e8-b35b-e63ee704ace3"
                    }
                  }
                ]
              },
              {
                "id": "b7752a5e-b8ef-4315-afff-eb08fe37af11",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "546496f6-b559-4b3c-a8e2-88976556b366",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "21698663-6e07-4847-a6df-6dbcb0064400"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0b08f960-15cd-4e04-abb8-4daf30ab6200",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "0293700f-1478-451a-a771-8e649ca6cf1a"
                    }
                  }
                ]
              },
              {
                "id": "cebce277-da35-4098-83bc-3580805709f1",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2e5b97bb-225e-47c8-bd88-e98fce8e0c52",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9cce3c71-a7a0-4d73-b9ee-0ebb4468bb91"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "36706c37-0744-45ff-b917-18006ca7bef0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "eb85c937-8ae7-4df5-9d7e-8e9cc4baa07e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0489fcbf-094b-4883-a465-6790d8c92710",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "82279ff9-c890-4781-8004-c16d3aa96401"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "75e69885-6776-4c9a-b537-7a9ba0250e22",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1c5ed7ed-d6b6-4632-977d-f494e81bdc58"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "854c7229-8682-410c-b818-195a58e0b4fa",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "99feb310-3b89-4deb-af5e-81796d183dc3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ffc6c8c7-85b3-4147-89c3-3550fc5c22af",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bd73119d-9a73-4232-8ef6-eb13ba5d6570"
            }
          }
        ]
      },
      {
        "id": "681c5bea-ec8b-4aca-a313-525292a90c6b",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "cf0008c2-81a1-43a0-862d-c511e559d80a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "18cf1267-9f15-4720-be04-3f575f3ef259",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8c0d288a-2dcc-43d9-98bc-fc7818c76994",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bf4f5cd-719f-4b62-8a5c-319b218b6f4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0589bf00-578c-43b0-b5f9-575509e7d86d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b727da6-87ae-4198-a081-193943e23bcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ce309d3-b13b-465a-80bb-93c3b03b33ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a887e248-972c-436c-bdcf-ba9d359818d5",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d71448bd-0617-4456-a8c4-32e635300186",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5617a782-2a0f-4a63-afce-7d887eb9d6a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fbcb284-e161-43e1-ad9e-9803a5ca9c46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "34d0d50a-6dab-403c-b20d-ada17e7205a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6ad6d64-5b5b-43dc-87a5-68d8568cd954",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e0331d3-4916-4bf9-92c8-505bfbe0604f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "510b7402-bd3a-449a-aad4-ca06769fb805"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5fd1883-369f-4b11-b32f-59133205ef0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "51228061-923d-4fde-87eb-6786e152e0ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdae9c5b-7065-4c96-ae6a-cab88d540cef",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2205c1e6-10b1-48a9-af44-7abc409965aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d5ae627-5149-436c-ae89-ee494edfa23b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8c52ace-9122-4f4d-b404-f05f1051eb95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "45d56c04-b716-4c54-9fb3-07ab30b4270e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d66978e-cd3a-4d86-8455-efc3ce2cb804",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67ee1a7f-d889-4850-b0c7-29f01ccd15fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2304ca78-ec2f-4943-b881-ed67fed9c904"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b39bbbc-c270-4cb2-baca-9668b101fa50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "79a213ee-1bb5-442e-b8c3-8a47f53da080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02eb1411-38f5-4381-a293-fa9a59384397",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4600fc39-d6c5-4fd7-91e6-6562f7fb3c14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d69af89d-5297-4120-bd92-22cce6ec4948"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52f79f47-986d-433d-a672-81a610042ff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "67f3fcb4-be95-4a17-9632-147aa5d610a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74a348af-cf34-4abb-b175-6fab60e0fb8a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b2bcdf0-c9ff-4d28-ba02-ea74fd800c80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e416cd55-47d8-4643-a94a-ae23f67bd0cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1644ebc7-fcd8-4d7d-923e-da0f4e23c4ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "04165181-48e5-4150-893c-fae27ab5069b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44c1be21-ce0f-4fbb-8deb-0605f5eb7fe5",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b692cb82-761f-4c76-bc83-840af63d9e3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a7df51f-f918-4136-960f-23fe4fdec811"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f90b655-8420-4a67-bec8-9d494d5c805a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1ec965c-7e20-4e22-a50f-34e5605f939d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c62ed11-8e1f-4cda-babe-a156c21a2399",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fe1f983-5979-45bd-8199-6ab6ac223f7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f6cb28e-5d3c-4578-ade0-76c0b5651afd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1503e21-e2d7-4080-b8c9-ea5b5ffd0575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "af08831e-e05e-4ffb-8917-7fb9ab0a9d42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e6c38c9-4583-42ae-acb7-8f34f4930097",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d10adba-3ac5-4201-8d7b-1c566582c5b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c0924e9-6e4c-459a-b940-ef26b3a18443"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30bfd273-b8e6-4939-9297-21901d059e20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e6df9da-3125-4fea-9c2b-8435ab75979e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8f6cd9a-d638-4fa5-b979-6ed650408046",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbe6de90-8629-4eaf-b0cf-50ef6b80eda1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f28fd70-bd78-4a9d-bc94-7dde1ef38b78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64a6b27d-6923-4251-b82e-5c8b9db68c9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "6b41524e-d088-428d-843c-721477e76f50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f67a383-4662-4dcb-b83e-52adf1b8a22b",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12eecf2b-ed78-4e69-9abf-81416b3d88e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd5a312c-0dc6-47f4-b40d-a54bc34e26b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0bef128-1aa7-439a-b67f-d4c6a3a2ad43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bb1dc85e-076e-40ad-a7b8-aaa4408f19b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "625d8404-3ada-4f57-8a2e-3c7d3fe6bb9d",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b29ef22-8635-4293-bde1-3a6daa00288a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "038bcf64-faa0-43f1-8045-6cebfefec6ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53312619-5c79-416d-86a9-7e3df9a109f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb99ee2d-5c29-435c-b745-43c8eb857b09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e5e1af0-0a3b-422e-a3c6-01eeb3a648e2",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b1ba8fa-abb1-47f5-b630-c9c4abaae3f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18d696b1-05b1-4f96-9cdb-887a0e5a7113"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e79c910-e5a1-4ad4-8527-1b8217782e50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7072823-01d5-4730-966d-024f4ac80bff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "006c5a05-e684-41bd-ade1-c36481f9909c",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e8bb5af-a8a8-4047-aeba-b175d2b0ba3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c82b1ce9-734e-47ef-974f-79df4d0ed2a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1adbc47-14cd-4e43-999e-91d28dffeba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "bfb4a110-b379-4002-9880-8565894e83d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab60a98d-bf85-4da0-9b5c-175affe23b5c",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28fcbac6-a76b-4661-bee6-49dc6e077e08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c53c4dc1-fba1-42f2-ae5a-2d45dd0bf3e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a09dfe5-6ef7-4050-9856-b385f3ce3dad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "47f146f9-dedb-4d1c-a84e-b636686967d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "029949cd-31f6-43ee-b10e-9dd2d56c1f64",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72f20dca-99a0-4870-b938-b0e3ee39cde4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98c06a53-a40f-4a02-9797-6e310f86d410"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "685eef8c-bcfb-4e35-bb53-8a15bc20d18c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7b2dd93-d555-40e5-a5a2-d7898be1f938"
                        }
                      }
                    ]
                  },
                  {
                    "id": "943528cb-4f23-4521-b682-129ec83db5c3",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3df9d17a-edfb-4bba-89dc-c7bb5364d0d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56260e7a-3735-4118-ab27-c55194d3aaec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3513f587-2bfe-4960-b2b1-8ad0af4e3542",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "34bb1a78-7c51-42e3-b3ff-41441aede86b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d34fb675-f036-4d99-b785-51db6dceab44",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a841005-aa9d-4723-803e-7d0770bcd9a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59762938-8dfd-4fda-becf-e52aaea77a63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7980c13-f408-4e46-a400-7a43ff24cf87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "03554885-9a56-4380-a055-9f23970703d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c77cbfd-01cf-4e57-aa3f-deaea74e0d82",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01e4340f-3dd7-484c-bab2-915018b08de3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96c1bc6e-2890-450c-972c-073ad650b14e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd925d67-8aee-491e-9a85-1567ef01c8c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "45f61304-18cd-4e17-9312-095a3ed10994"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4878fb81-f066-4140-9bfa-32243eb0078d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a85d0d9-7aa9-4e80-af58-05ab8d5d84c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1680a49f-511a-45cd-8417-29cef556477e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b07602d8-948c-40ca-a43e-29da337ffc46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "749c5e22-16b3-427d-a30d-c4c5afcb0291"
                        }
                      }
                    ]
                  },
                  {
                    "id": "084e1bf9-1c05-4053-856e-e9cb5b637727",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09f9efaa-1ec5-4728-acf1-e4b8cbffb848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8710be5a-5d18-4aa4-9e99-443e9758e362"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59bfbd87-9d91-4d2e-8baa-98c66b458132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "54283e0b-0207-4104-b7ac-904cec74b86f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38af7161-d956-4873-acb8-55acef3b61b5",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ca749aa-3105-4ed3-be63-25f33b4e9485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "013fd09c-e105-4319-888a-8df79407787d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09be0f7a-6c27-4978-846f-71312e4f3803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2ea9ff3-5158-498b-8234-f648d2e8f775"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5cf1b91-3912-4a30-9eef-0f6f5da8b6aa",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "294ab7c7-3bbe-4c64-84c0-65a6058bc16f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d25a1c68-afe6-4ff8-a57d-7247ccbce8dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c95a17c5-8e13-44bf-bef2-f3362bc463ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea217728-bfb5-41c8-870a-6a78050276a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f74e758-4dfc-4a81-addb-df3f933cf239",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abdcfd61-3ef0-4f67-b669-f5a9a7d91be7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03c8854f-5497-4733-8277-2429b3fde965"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6558fe4a-b23e-4f21-881a-8c03cd5e8f3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "21020619-31d1-4fb1-b5f2-768ae7202b3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bddefa5-eab6-488c-b5bc-1222739566a1",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ae7bfa7-9cbf-4df9-b46d-4d97902382de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "075695f6-9d11-4a7e-b440-872a2db340b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ca79b34-2eee-40f3-a246-1db79d696465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab5f017d-f3ee-475f-9f2e-9c981147ddd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4edcc62a-3960-42b4-b9d1-22cba0ce3ddf",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c24ecd3-468f-43fc-9812-aa127f30f467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd7fb2c1-2b3f-4e46-8a1d-d25e13af7cac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c7842c3-3ef8-46f6-8100-729f45137002",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0b8dba0-f2df-4a80-809e-1395a2d274fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5b55a8b-ee79-4119-8ab7-d12f433e9f50",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d14f967-a9f6-4cb6-910c-d55daf97224a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47410b79-dfda-4e0c-b094-ba9f6f50a5ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb5ec809-383c-4775-93d6-207ec1cbf6f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9115175-c05e-49ae-bc3b-694fdbdf8c5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9c4a25b-2dba-47bf-a046-fbb2c2fe3f2e",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afd78438-663d-4ad2-9276-edf5238057ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99b7350b-9012-42d3-92e1-e056d7ffbc29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55108463-592c-42a6-b077-3f440a75af4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "464730b3-b837-4f3e-9511-77d4da2a9fae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40349d89-d120-4d1e-896e-aff49076f258",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e36562e0-e154-4637-a92b-5e8386468b77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5eedffd4-9da8-4f0d-85f0-cbff9a804f3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bfbea2f-9a0b-4301-854f-76a37d53ab26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "12b669d7-daa1-4495-b10f-85bd9f75f154"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8d839f3-0cca-4674-864d-f6a87993afbe",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cb7b612-78e9-4e27-a2ec-ab82390413ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abbe37cb-e3b2-409d-8bbe-a87c9f975d04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2f9e8ec-2338-40cc-ab66-a54474c994c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9cdda48-743b-4c14-b114-23aac03102f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b8179c6-5a44-4541-bdb7-3e051bdfaf18",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1620e878-5b5b-4b60-8535-b8ddbd02d4d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31258c75-0538-47cd-bd43-2ba8e6832d82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f80fbecf-57d4-4f49-af53-7149d33605ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c09e35ea-2419-44aa-a7ff-544419fb921e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "649ae767-746a-4f66-83a2-c8ab3a6c5480",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "46710bcd-6ebc-413c-b7de-68833374fd0a",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0343979c-11d8-42d5-a074-9dda25f2ab01",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "47488830-e5f6-41c2-a29f-513f911c39f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e53244f-cb78-46d7-9108-46e56cad022e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9b8392d5-8ad1-413b-84b5-d5f9eb515602"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c759ac5c-0dbb-489b-af22-66c024c33951",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6ab52425-883c-4ea3-acf9-0f3ca2badc74"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1ae1e82c-8ab8-4a07-a4b2-7e5175ab8fef",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "81402cfa-2f93-4b59-b5bd-f20a400e65fb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3f159bcf-bcb0-4953-a60e-d3c5b89365b9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3799bdb7-3a02-434c-9974-24670d5d65e7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "557f7ba7-b704-4691-bd1a-932be7c48d8f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4b66ba3c-6455-44c3-aac0-f1989c8d7220"
            }
          }
        ]
      },
      {
        "id": "4f921594-c6f2-4dd1-8731-97a2265519cd",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "ffbf137d-db6b-46fe-a260-b8670411d349",
            "name": "Negative Testing",
            "item": [
              {
                "id": "91d31f9c-e169-4000-83ed-038c5c81a240",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e9c72472-e7c6-4507-b5ad-6d74ad8ce13e",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a1fa6ca-f16d-4308-b02f-bf0d8850e66f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d8dd710-1590-41b6-a209-18c1c01746b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcfd02e7-2efa-469d-8d02-1d953adb0138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b16888e-9cff-410e-9a8d-4fef6ddd36f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a38663c4-0e83-4973-981f-a2ce998bee16",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "541825db-d50c-4176-be83-70ee23bcfe52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5e36179-ec81-4abf-b0ef-88835b07f085"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6ec155d-a229-4fb7-95cb-630b0d319ade",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f610a9d4-603b-4c3e-87a6-6cf902b6c2b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b01e5f0-8e3a-44f7-a49d-35fbf48311fd",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cc0b2cc-9e7d-48b4-acdb-bd4e19fee920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9278bf77-b546-45e8-86d9-efa0e0559abd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d2a8e66-c1b2-4957-a309-e576e5772314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ddf07a69-de39-476b-ab06-ed061c69456f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b893001-f73c-4a9c-8040-54aa9768f87c",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "419bfc91-75ca-4107-a084-c62601c216eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4aaac5d9-6996-4815-aa7a-887a78a5ae4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0b0f4ea-5700-41e5-91fd-c6d434ba9fc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ae4d9ea-f23d-455a-9630-fab4099ddf8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef15782c-cdcd-4239-a8c7-fb1af504090d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63ee52fa-2c77-413f-81d6-9262878f36ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf351a2a-d930-4d6d-8b91-0132b32ed5e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42b7e71a-8d0d-49ee-89b2-818f1ca948d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3abe98d6-00ca-4994-8a46-53388aaeb458"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1130ba0-65fe-4399-bde0-c15a1ed87b89",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4d8bb61-68a0-4372-ae67-5a6a974d05b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb99c97f-ab1c-4003-94e6-dca4bd99fa8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ebd8e38-d0f8-4320-b90f-281ee6c9887b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b8105df2-cc6c-40d7-b352-113a1cbe2909"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5f2c085-e4c5-4bb7-9223-28d013152380",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd9c5c75-85c3-4815-94c6-e99021a0f3ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9c2f44b-eac5-4fb0-ac92-1558f2a5488d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cba265e1-2492-49cc-9fbe-c1f29856ceda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "5444da0f-2150-4754-9a70-33b5bf065460"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16b473bf-1dd6-4dd5-9a92-8bbe2581e26c",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11a7d188-2a0d-46f5-9dbb-ddaa3e4ce331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "693eae95-b9b0-4f33-9ada-20d0b8dd9a7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e056d72-e5d8-4950-a48a-40ee67544ad6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb1b3adb-0fdb-42c2-9e7a-7b3c968bcb4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16773a19-df03-4a9b-9b01-9eed21667735",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51514d59-4e07-437f-89af-a0b7aff51457",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cab9dc37-d508-4943-8e98-9d3a035e8d00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "243be391-d6a6-4091-9655-7287b0d5bc4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bbbc96c2-2048-4b25-89f2-6b1a87b26ac6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35dc1d66-557e-4c8e-b387-4b9f96630447",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80e3f393-aa0a-4ed2-9e2a-f260fd59bb2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "080702bf-6cf1-4a29-89e3-d53b196a1a55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "491893d5-bdcf-4e10-9e1a-80c72f44bff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ad93eb5-f276-4e0c-90bb-d17a4cfaff37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9418b348-d707-43f1-a116-a27b91e775e6",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f677353-3d33-4a40-a819-1d72813370a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "868d5029-b0f1-4dae-b878-e6b806b213ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd7410dd-e641-42d2-8e04-6b3dd56242a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "22daa613-924b-4165-9bef-4b8090deba71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "212fcb3d-df31-4e23-8ae4-698c63c81393",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "702236d1-af72-47b5-8173-d6e132c41385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c6914ce-86f8-4271-a8a2-02c308c9aefc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fa44190-9846-4621-bba2-e27279c642cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a329ab26-3dab-4c0e-9f32-6a50061f15f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09717928-ae65-408a-8d35-3b5c9877583e",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bce9711-a39d-4df5-84f6-9d745b2cff1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "202620a9-e9c9-4cbe-b237-89eba9f2ce10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eace45f-0745-47ed-9831-bd4ff0bfe663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e460c334-1902-4eb8-8037-70a056fb5bb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d722892-c866-404d-a05e-ac8d954d616a",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "364805b1-ad54-4821-aa51-712d6e7657d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8df48cd4-7d92-491b-8ec2-1f8f9a168a0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1edbea6-96d5-4065-86b5-87e27b37bd4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "e732501b-4582-48b1-9b24-2ce83b13a996"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67272ac0-6468-411f-a14f-74e2b4e6ed12",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8f43216-a4e9-4b30-8d4c-ba975ea21f7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f2758a8-b2ca-41a7-a62f-46e5bb9e0bbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed814a6d-9e70-4d7b-a98c-763ab8439b1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "138cc746-84d4-4157-a979-89ec205f481a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfb66cdf-67bd-4d7f-918c-f6cc4846b5ce",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c105a6c5-c144-439b-842d-3398b73bac26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d438b4d-529f-4b21-b662-2c88bdf6923f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4f0ec5d-8cdf-4e13-b903-0e3a109427d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9b46b85-a4e7-4609-81be-8d5a0d681e7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d21a858e-6097-4f0d-a118-84b67e4c9353",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f2b6194-20b6-485c-aeb8-57bdae803208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7269bd8b-7e87-485e-8fb3-750d6901e8b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6f8392d-7f08-475a-bad6-e014665cd9b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "910fa80c-ecd8-4d1a-8213-f383b350eb00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0dbf025-8309-4ded-ad6c-d1f0ca7438d5",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1a9496e-d6e0-40b1-9eec-53a1a313e829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "641deaee-e03a-4cab-968c-7d39cff16db2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfc21154-64c0-4601-9106-2964a83f85cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "bac9058b-585a-4569-9aaa-124210f28390"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8273024d-0ec2-4530-9144-8f28ffda2824",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c888bc87-67c0-4da4-bd8d-490431218fc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f3f04d0-bd69-439b-a356-07d4f0d81896"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d2c8f20-0749-4872-a72c-382678205a89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "38d02c27-19da-458b-8e05-567b221edb0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bc95f11-5763-424c-a198-19fe737fe2bb",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1ac2fd5-74f9-4507-8563-95458232bb19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7feb00ae-9801-4693-a6ca-63a31b550129"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "454f64f0-5e6f-4031-a3f6-70ea5c0cd5cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2555249e-b5ec-43f0-90e1-284ab6f1656f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45972aea-15a5-485b-9fef-0475985a1282",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b136cf93-c4bc-4281-9269-9c5813c497de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af3243f7-00ad-47f0-9bac-2dbad8117acb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "404c059a-30e5-4a69-8b86-ac274c58fe96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e58e5855-1252-4780-a1c9-650cbea26e93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31bea1c1-fbb5-4ab9-9574-277043a4a1bc",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5fb4ab7-c295-4c92-81c4-2d3e00be767f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b08020c-c3a5-4f63-b960-4a4f558f8a6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c93ee53-f27d-499f-8c86-4308d9433284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b76ae32-6f17-45ff-be9e-db1a0d7140f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18311d51-54e3-4fea-a9b3-9f4bcbf66f84",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd722f05-9233-4cc2-b95c-968c3fffafbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9085122d-7f2a-43f5-89ef-7cd67406d199"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0f252f2-16e5-413a-90a5-1770a632462d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ead75cd-8f2f-4a99-b8f9-cc345b044080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a847ddcb-fd5f-423e-97ce-a9f5e0c6ff50",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d685432-75e8-4f41-9682-81158487c84e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7702eed5-0ad5-4309-b53d-3f504f91464d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "141d387c-e3b2-4e95-b0f4-dff1e16fe57d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e48fa740-abf6-46fd-94ac-0583dd150bb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af80059b-3174-41a5-80b3-c643bf3b27a8",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2066c17-3ae7-4405-8143-f89705ccaa79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cf0c80c-c1e1-4c8d-80c5-1398f1a50759"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c599ae6-1e7b-4b4e-8722-65e1a0666011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "72da0223-1757-41c9-802b-21e5fd150295"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e166e1a9-3933-405a-8309-f2a96ca86ff2",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "432eabc2-8dc9-4ec5-8a64-fbce0fa4c35e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ab928cb-91e2-42c8-bcbf-4d1785563982"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc1d3963-0e23-48d1-a5ee-6501f3bb1606",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "45e6c4db-8197-4383-a401-0d806949d8b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f151f9f-50d1-49df-8a3c-762f849e2b8a",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c399fbf-7930-424e-9616-cc95d4a3830c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5a9aa8c-2ec2-4b52-bb72-f996a56b050d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "613361cd-7082-452e-b2e0-e42d745b8132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e43ded17-ef7b-4515-a779-02e8d4e3ca0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7e78dc9-be8e-4ffe-82e5-5d025ef5e73d",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c9075e9-30d8-4d09-a95e-9597c123182a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0187891-673e-454b-83b6-ee91d319ee64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "327ff906-d81f-4d28-9818-8c780fd770ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9fbb07a1-5aae-47fe-928a-e668d5fdedf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7afb3039-9b11-47cc-9fc2-602e09b4211c",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5309ffc9-fae2-4d8b-bc17-d786fb49a7fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33174d1c-9241-4a98-aed8-6999b512ceca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c73450f-0161-4413-90f2-b511d298d0d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0ac8fca-0e70-4724-99aa-996be0a739e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c71fb2b-608b-4569-970b-8b0595561b52",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0544d3e8-749f-46e8-ab39-9b4ea7081613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "696ff570-869e-4e66-8026-fb70c4e8fa94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51ce5bb1-b391-4669-b03f-70bae80721d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c86447fb-65bf-49db-97ca-6f6710e39948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ff5b66e-0854-4d63-80a3-a633f44f8ada",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65eb8dc4-ff58-4f91-b0a3-99e1c1921a8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56b6e4de-2a0f-4aad-b53a-c2cb32c45de7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94d3c312-3e40-4657-bb63-03e35a4ba5d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c31f930-b8c9-470e-887f-8db373be4322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e23f98f7-0223-49a6-94a1-e9ee9b3e027a",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fc6b8db-e4d2-4d3a-8939-727ba66f646f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7c205f0-5b81-481f-bc5b-4a9c31deb4da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "175295e5-492f-46e5-b42f-be6b3e58f975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9008c444-08b1-4fda-810b-9027de5ead00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3321a22c-6bc1-462e-a152-e64f9b8b9fea",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8745d577-704f-4280-8a82-f96c4564d37c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "106877ee-b47f-4575-9d36-f920bba772e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fb49991-a864-4c39-a541-2bdd15df847a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "05a29240-41ed-49eb-b45a-a22d2cd96425"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f394a85-cdb3-4d73-bc64-664d2eab2aae",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ad6b9b4-0be1-4ffc-84a0-aa0a726df5c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c210302-1a1e-436b-a479-4387a82114b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19cd850d-7eb9-4f4e-99c8-220908f0fd3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f73eca75-f3f8-443f-8a20-3deae7f47284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a153ce0d-280f-4f15-9b46-d6c5140f5a6c",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "131b02c4-9a9f-44e6-9d32-2f3026a8a3c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b580d454-b72e-4d41-8951-4913f74b1c0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cfa7705-630a-4e0c-bf48-df3727e85190",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c73fb6f-5e35-421a-b9dd-ba727ec4eefd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "421991f1-7aaf-45b8-a8fd-6451ce61e85e",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4db84804-b030-472e-a5e6-75d5466794b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d69fb47-c469-422d-911c-2c1377df0e54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92a18e10-5d78-45f2-8043-213d0eedf96c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "edd4a1e4-1fb9-4e00-8557-9d50790d108f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d50aff40-99ba-4d6c-a58e-ab61070d87ce",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7484ea1b-3c15-44b4-90c3-c202e8a8054c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daf44a4b-2fbb-46d3-b733-f1cba7554b50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2265199f-5ae2-4bd9-80f7-4721491fae41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ede9d17f-f398-4bd0-8a64-cc962a8ac6d7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a6cff8f7-5e2e-4f0b-9c78-61f6857b6610",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "14e736de-9c9b-4ee4-94ba-505b54fe628a",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a80c7523-3a09-4bf6-a117-802abeae3d15",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "438b225b-f9e2-430d-b796-76eeecb03e8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcd4e692-b282-4f84-a783-760b6390bf7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "00365610-b8d4-4468-ac11-fd0d9e049a1a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f7f115cb-02cd-4c1a-b1ba-2cd8b350fa7a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "48434024-ccd3-44d0-a200-8bedabff1c85"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a7d1fd96-24e1-4d6c-829c-3821c5a9c62f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e2ce595b-9e37-487e-88aa-866f5c140882"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "585b4453-a8da-4df1-8f7c-f45872f14478",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a99231a0-c548-40ed-95f8-fc17dd41efb4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "81fa3751-eec3-4ddc-a976-1a156bd87e3e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "979d5092-fd2a-4b80-9b5f-8b02d68f2f4f"
            }
          }
        ]
      },
      {
        "id": "c809e173-c60a-4a36-b220-3865973b9208",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "790ee92a-30f3-4b48-b0c8-03c8bd0097ee",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f006f5ae-2a38-4ca8-b2f7-21727719058d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "53472fa6-c9fb-4f6b-a7ee-f365e6bde76d",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7c62585-ae46-4c42-a67e-a264b1522e8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c616322f-55a7-4504-a57f-aadaa8bb4723"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0fefb86-cc2c-47b8-9b77-308904725b45",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8d563f5-0993-4476-9659-a89fbbafbd2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db83f6a8-3cc7-4806-8968-c08895dea41c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "296770c5-0b87-411d-9a8d-879689fe5054",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d435d9de-ee96-49ed-b1b5-d0d247dbfbe9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd066e66-e4e5-4a98-8bd0-15108d9cc55b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82beabc4-5648-4e05-988e-d59858f5e9a4",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d98722d-5000-4c3c-ad57-865151c58e7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e66b7ccf-33ca-44a7-a477-3fa316fd9655"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab5a6ad3-1756-4350-9b20-e4f9e7865be9",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "420ab55f-ee24-4208-ae41-a018f180d0f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10268230-a873-4df2-b5e9-87b418e339ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b688621-9d4b-4e18-9f3e-63251374a916",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed90640f-d849-4295-a77d-cdb4e9b31abd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b95a62ea-3697-46e8-8d0d-1cd3bcc8e97c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2243ba8a-9b1e-4dac-b1a8-92c643f0367e",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e7689c4-39be-49b6-af01-a1ea7af24249",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84b839a9-8c5f-4aed-b09d-0bacf3463bdb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ace47364-1095-41e5-83c2-84da9898ccfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b31f4ef3-e14a-4732-a192-ed004699957f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80661798-5c64-439e-8bff-a3cad0988ef7",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a5356fd-36df-4bd5-94d1-0fa979223a09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b071e9a-1335-4611-aeb4-97f31862817a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6039f601-b84e-44e1-ba1b-be7a100a258f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b51e9688-8464-4613-b7b5-c5865bda610b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "531fe9be-efd9-40a0-b8c9-7b8894ad2c3a",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95d446cb-0453-4d3b-96f2-4f519f194cdc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e5c61a2-1e0f-4b07-9968-08749f0b5b4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "547f60c5-6872-4d56-9661-99794b0adae7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09c0d76a-fc83-4d05-adef-b90742fae942"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ae434dd-c724-486f-9cb2-241343d1596d",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "876b727c-ebf3-47dc-8aca-abd96ec0c975",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10391bda-9b12-4606-9282-511b0932a859"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5acd9e6e-dec1-492e-9221-584e46008bcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6316c533-8716-4661-bbcf-6d1636ed738e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b20a8b3b-cf21-41c4-b0fe-83009742607f",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67783849-8b59-43f6-8312-381abe6d9cf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d76dbf3d-41e1-40de-a0f5-2e2bc91ac434"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b52f890-3746-4c1d-8091-01ddd5cdee21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fc5c684-d563-445e-bc23-94a4c1179135"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3fd3ebc-1779-4314-83a2-dd769a18bd3d",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f2d99ea-200c-446b-80c1-82021c6dd881",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cef10fb-b2ed-450c-87ca-933fb57787e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6a2bcc5-6522-4328-9742-f5a220a2f7a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acdf7899-8775-4de2-8e88-2cbd8ea21752"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d371db44-ca09-41ca-80b6-096c67ed6849",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95eef214-e303-42ee-b55a-47272e6664fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1275d6e-9d2c-4a30-9ea7-57228e25e0dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a11e2d6-e6c6-492c-b664-5b5943422a31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f51d05c-3ef6-40b4-baad-3450507be380"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f719eb18-4386-4c42-86e2-f58ee63aa5b2",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dc3ef76-4c5c-48f5-84f0-ea46142f6e1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2edb2142-f99c-42bd-8501-72f2f898855c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c3ae0cc-77a0-47c6-8138-f95587a3c00d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f485928-7c78-4ec5-8d21-21cbbe74a7da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3914a18d-00fd-4202-9e80-f60406df68b2",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e23d81e-e672-4a34-b945-553584ec10cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8027c7b-2c4c-4261-b33f-1125021d12a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a45a7ab-70c7-40a9-bdbb-d0a579fdd2a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abce79dc-d3e9-4086-8cec-bf027e4f0409"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2c0e045-b3ea-48d0-8e31-26c94ae4ef64",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "466a6818-0ddd-4f5c-933b-11b7ff78e742",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbdfa69d-6e69-4895-a6bc-1ab7b2beb085"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e6236ff-13f8-4199-9f4d-99afe2d2d235",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "667e3d44-def0-455c-a73f-73119fff9bad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7bed627-557a-4e14-a3d8-fc37294d089d",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff74eb72-a515-4e62-a6b4-0c6c8c22c3a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c26979a-f123-48a4-9ae3-6c71339219d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "408d4c39-6862-4157-ae08-3d31191416ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e60b88ad-f67b-4358-b233-15342b4762aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6069fb14-98fc-4657-9831-79a828c337ac",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53f42e45-364d-4391-b1e8-e213cf27dbe9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc3d30f4-2f0c-496b-b43e-8afe3e193047"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7b1b4c0-dcba-41d3-885c-dd2457b4aa45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "391b00fc-9601-4123-af41-90b2f0a18bdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a178bf5a-7772-4ea2-ab61-aa2619fbf000",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9a8373d-b585-4bb5-b183-f8bfa714112e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ce7684f-2669-4a26-88fc-29338b66a509"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2426dec2-ed7b-45ec-afb5-5a870227255d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44fea751-5ef3-4b66-924d-559e8ccb82f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28375eef-be6d-4772-8a6b-fa090b59b263",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f387082-c24f-49df-8c4a-0505fdbfbf95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7915ec5f-69cb-4e83-b9b4-64f3121b7f93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcd94146-2cc6-4e99-a612-d13270a1e976",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b88e621-09ef-4a49-9f94-7a0cb2382bce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f16654f-1787-454f-a23a-99b9d78e7a16",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d6d0418-c261-4c78-bbb1-f39aad5c0373",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7230b795-7615-424e-a122-7aae79accc38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5556bd41-760f-4b27-acb7-2225d42bf0c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20200774-7df0-4684-b52c-46c3ecc2a285"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5da5d457-229d-4c6e-8cc8-3f84c47d75ef",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b6653e1-b172-4214-a7e5-92a439d3e2b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ca773a9-a9f5-4c9d-b25b-236797bf5b23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fa36928-9e53-4a6e-a9b2-815b2289bec3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b60def9-ec2c-4f40-b902-bcf1b8cd45ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "542df1d5-6bae-4b74-a706-d9994deff507",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd7fb669-3d6a-4190-9ee3-19ee73be2f50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24d8e024-1883-4b97-b647-200e8973a2e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4918022-0b0f-4b5b-924f-084bfdcf4c5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07df30b7-67f2-497e-a232-9a263e593f7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f18d963-ccff-454c-8070-68e3ecd1f17c",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc4a1093-541b-4012-9d88-d0f7e91df702",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1bb0b66-f82e-4ec4-b827-70e9d77bdf3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7efe2005-7471-4b16-9a6e-77740023b73b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f291cd96-8a2b-45d3-9728-b03f30eacf29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12257841-793d-4f09-a426-282d4fcb2e00",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "523ce958-31f7-46d8-9359-47901748e39a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3af38db-60d0-4aff-ac2e-23735c6bae64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b6fb8ae-6628-4260-951d-aa3f13a669ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7198d0ab-653e-46fa-8467-b0d3b0af02ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e9c05ec-a189-4678-89c8-76a77867a684",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3f7b03e-c233-49df-8bd2-83d08c1e4d43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f5bf3dc-6cbe-4210-9913-5d73b0819da4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f42532d-88ae-42a3-8739-c738977c11ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82897c84-95b0-4269-b5fa-ce82b41e53aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "947fc498-463e-4182-8db4-578ff5146ced",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaea3e1c-f320-4ed2-8dad-a9d1bab30559",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d4b7912-4fe6-46a8-be4e-f7ab1131200a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74d49598-0988-49b3-86e2-f9ae6a390dce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4de7d913-6ee2-400e-ae2d-d98517e018be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a1064b2-0b78-4608-a422-05ff3b1cf3aa",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4af389d-df18-42f1-b0eb-2f7134371ad7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed88b46b-1ed3-442a-8e46-c0aa1d5cded7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f11cc151-a963-4204-8872-a89cacd7143b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d197df5f-2941-4a89-9e14-55bb6483b534"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24a87616-b7d7-430c-b885-4371014cdd0e",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce0db510-d161-47f3-84d0-2eb1576e8e8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "787936a0-abc4-4ea1-974c-021534eba545"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5df64abe-81ac-4c4e-ab65-52817006512d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbdb7603-38e7-4e3f-86e0-bbd73bb323e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "210846ea-5029-4ab8-b8d7-dfcde6693ea0",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9512b0d0-3809-4f9c-85b6-5a6f54fd2f50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99f36867-373c-41ad-bfd3-6dd6ed9ac8f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11b1f918-6b48-43bb-891e-315034ec125f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "436cf1fc-2c60-4f33-ad56-d79903d13f87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b9a3ecd-1c3b-4a64-9ff2-d4f74469b21f",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72b7f112-5662-419f-8853-4a0d62b3c8f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "678cb196-df6d-4a3e-991f-aedb5f867d39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9f95ea4-9df3-454a-bee8-e5145035ba1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9c660c3-a087-49e8-a9a9-c6a4bfa96ed4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "766801e2-3fa9-4078-bf69-c074f24d737f",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06484d22-0bc7-4a01-9d0d-d099633e1859",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67194246-ac71-4860-a167-28ab284d804f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bbf0612-990c-4611-ba3a-82be699e3afa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ea0e511-ae90-4f78-b86a-aef2116c44cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0467e501-35b7-4216-a789-4486cb52dd93",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66cf7457-ad60-4610-9f60-c9fb58e2b7f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "895144de-021c-49b7-b8eb-45f12abdd509"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0c33f1e-b88d-4392-a73a-54b037e0d832",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4df68e2b-4229-4616-87e7-5430a3fa6a63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6739c77e-807e-406b-8d0b-aa74ff881324",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e739b1f-8cb3-4a53-aa0d-f36ce9cad8dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b1269ec-d974-463a-8af1-62bfbe08a492"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b704340-d040-49e2-902b-c389d9c3f358",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b837c8cd-727a-49b5-89f6-89414e245627"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf963578-6167-45de-bd7a-3299758aaf5b",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7906f7e2-1ea0-4de5-b351-00aaa27407cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e17effa1-b15f-4dd0-bb93-7114d3a21441"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37807d56-169a-4a02-b769-32c175dfef0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42f857e4-c8be-49ce-9167-3c45b5465741"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c123a62-fec5-4085-96a1-3311a3640c67",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a962ab0-ddfa-447b-8ee6-bad9a37d8e7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0c23d9a-1eec-44e4-8327-0828f4712e48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2beb20d0-dab8-466a-b39a-e8a984040a70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "975fc896-5cb5-434b-a3b7-5c3da157eadd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff0c686b-a6ac-4131-963e-3ade01f45604",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d51fe58-4991-4d36-b99c-6bffda36bbdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3971d85-0c34-41cd-86a4-366174ee9af9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b60a547-0410-43bf-892d-f8826dbad53d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fb549e2-0fd8-4c87-8130-548ac84c72b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0d45764-e253-4aa6-805a-c68ddc2a9356",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b2e0320-5811-471f-b829-683dc91951b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a1a90f3-61d2-4b65-9efd-17085a218649"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66403594-172d-4c19-9ea9-c5543ce56842",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38b05635-d073-41f2-8b7f-2b79ed4dc00e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2ae5005-bf62-4cae-a400-541de10ad58c",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71db3415-328c-467e-a8c9-a569be091e06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c3cd731-1a84-4108-bf70-2c4ebbaa34b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be0b695e-b860-4745-b376-4f66eb173c84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5a57756-e3c9-4c8e-adf2-b3db4dda4dc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb23eff6-f046-4775-bffd-9df6e4ae423f",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f6fd2cb-bc24-4290-9394-484bb001e7fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a63ecb3-921f-499d-96a1-a48c59a9d439"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c708af39-7ed3-4ea1-8d6d-264538687b59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e965712-a2e5-4c3b-96fc-3100b8f7f262"
                        }
                      }
                    ]
                  },
                  {
                    "id": "122c55ba-2bc9-42fa-b373-e9bb29b3ef07",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67a31c15-9a87-4078-876d-0dfd131846cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43d10ffb-b734-4b38-a786-0edec13e6ccf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd1894d2-31d2-426d-b4db-b67212ba53ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c23aaa7-449f-494e-8cc0-dff3eb7eea01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9b08624-8bd2-4ff7-ae55-410770c7b353",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0a13080-a0b2-4a0a-a80f-121a08247d0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "850fe0e3-fd5b-43dd-bfec-88ff169a3394"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29b58c38-f952-456f-82b5-60a995d41281",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e22c40ff-8e27-4985-9ac2-d1f4e60ab406"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcdd17d9-faa6-4b4e-9eb2-5880bfb1bfc9",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91d0de2f-c905-48d2-ab05-390b659d4668",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b15203a2-3a81-4e84-b3c4-5120b3b2bccc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27c6eeca-79d2-4a25-b22e-977c674f62ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "493097f0-1cab-4362-a3e1-e143d41d10e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06368bc9-e426-400d-a25e-327c36cd195c",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5eb7a1e-ae99-4ef9-b735-1ad6aa9bc5c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59ee70c5-396b-4e45-a8ce-5976d9b55a60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02fe9158-513c-4679-a2a2-ae955cc3f883",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "202c178a-316d-400a-9d73-3240d3e916c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d786071e-9859-4110-92ba-b0aa8067ef79",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73f1ae73-78bd-4cd9-874b-f9bde6a10fae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1436f6b8-7b80-497c-9bdb-fb438775ba70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2eb5cd8-bd49-4551-a93e-e58c1fed105d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01f5ff4b-093a-43d3-a44b-82824169f571"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea4aa668-dbce-4bee-980f-3584b8b60974",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa3445a6-184b-42bf-9233-037e5f5d4ef6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8eca77cd-4421-4393-84a0-b1323325328a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f95f579-0664-4fdf-973c-d5d986ebee92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d1d0d2b-e6e3-408d-986f-2d6a6900d248"
                        }
                      }
                    ]
                  },
                  {
                    "id": "588dce3d-23ab-487f-858b-092125e9705f",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a2c94e2-89ed-489c-8bb4-b3473ef841a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98620e8b-d411-41a3-a96c-196dab5af040"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2964dcfd-6ee9-4513-be89-27d5a131fe81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08361241-928c-4aaf-969f-a0c29c70e8d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bddf1fc6-ecab-48c7-8b48-9c2f2bc2985e",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "382523c2-1ff5-4e26-8635-27c49456eed5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ea5a48c-4a18-46d8-a27b-a9a6bb25d87d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2431bea-a14f-4db1-95ab-d02bb6421662",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04967bdf-a05e-472a-bd09-4f111f1da104"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe3901fd-b228-4f0b-8611-617fb57a23b7",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11204055-8699-469b-a878-fe5a3279c6d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed6e20e2-6249-4be3-983b-00e14cbf64ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac1c7e11-94ed-4038-a1d6-31334c359744",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfb8aec0-b759-46bd-93e3-38ca312c5f36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b94b8fe-46f6-468e-86d8-b55310745734",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a948495-ff55-4bff-8c1c-a1d975b6f8af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7da0c5c-9ba1-470f-9151-4b560702e8ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6234f75-987d-4067-9227-7215920daee5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6e9213b-6318-4af8-a150-cff6837467d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc7a7b0f-1e58-4657-9101-4e048c9ef1c6",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a51d519-3b16-4e25-ba58-99b637a6f276",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b4fd8ef-0674-4716-9528-ce7f50406832"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2f61200-8cdd-4f46-baa1-b211128b1aad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae7a34c1-8c4c-4d77-bdec-29c2c051601b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d22e1a5-2c41-4a09-a362-42e1ecb4e8f8",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a98e5a03-297c-43de-9716-5cd432f9f071",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae294a34-1fff-4400-a9e2-c9d027b21441"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb981fd0-7679-4385-8f2e-afacc5074978",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5aff8d2-7353-4790-9b0c-8b18ecf704e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d7d63ae-8065-4df1-a29f-ebf857f30d26",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7410c4c-46f9-4048-8aa5-37c9d8919a5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe8e9190-c0a0-40d1-a9d2-7da98339ba51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaa33bfa-fd0c-479c-b755-752ea3bbf981",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb676a17-9d7e-476a-9e3b-ebc8a0570093"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ec73d19-e74e-4786-8b28-7abe9f3c02ca",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e39911a3-14d6-480b-932b-45255f77adfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bad418c-f8ee-402d-90d2-8c6e39a49505"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ab16a8f-bc22-43c1-8971-8d3dd2dc9a74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33e75c47-1fec-4a82-a208-ab2a3e12abfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4705fcc9-6537-4772-84ad-9c1d3ed6f0fd",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d70df23d-572d-4d6a-8a91-3e773da34965",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fa1518f-61f3-4ec3-a441-1787f20dee07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c993fa5-cc95-4ce7-aea2-5e6678902a63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43f47a5e-9f19-44f7-bdbd-ffd22edfe60b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7c86344-2d4c-445c-8350-786a7ef47132",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6f4b21a-5a73-4c58-9c06-d3743cc0f11e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04cc5861-4354-4b0e-bf72-e3d4aec6536e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dfa2250-e828-4207-8ad7-a6bd89c0de01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba305c0c-682c-4003-ae63-3eb99e682ae8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82f96e51-ca27-46af-95f4-c6fbf012cde1",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e307535-d8d6-4d84-94f1-aaf560f85813",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c52b33b-51b8-4e0d-8345-2cbde1a6917c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e2e89d4-2713-41e6-b3a4-34722cfd063d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69b22e70-dc63-42aa-92c8-ec73831ae189"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a8b96fc-9649-40d2-82da-434c5f7b9270",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c62d60c8-f82b-4da8-9312-9d62ccbc11a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "458fb47e-0a72-4102-9852-59a91e6999fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbde8868-3e3f-45ac-9cf4-571751db233c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e3278a9-abdb-4762-b578-3310df2fc46e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfb910ba-e364-44ab-9469-d2289f33e96b",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67c51968-0719-4672-a896-5fbf81ad6ddc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d71e2f33-968b-4c18-869d-863c1e31db9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9842086a-b92e-4683-a056-3388c46d52aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da3cbb71-1d9d-4c04-825a-3ff7e4906847"
                        }
                      }
                    ]
                  },
                  {
                    "id": "336c2bf8-f726-425d-9ba1-acaa516faaba",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0371ec1-739e-4dde-9661-5463f04f6168",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d86f3802-c8ea-4eb9-b0a6-e6e114b74abd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abe54d50-f7b2-4116-922d-5fce2448f986",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a76c9582-f65e-48bb-bb33-7e79924c0ceb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f726a6fa-4fce-41b9-87e3-5c3396733fcd",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd7cb83d-9196-45d0-8c54-007b95044640",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ca4112c-7097-4822-8f47-dd312b85b551"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54d264bc-3b37-4f00-82e1-f553100b0e6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfbb586e-183e-4cee-a5c4-bbe4e776bc99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c2a5442-c817-4fda-90f0-29fcd0beb79b",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8812a963-d813-4bb2-815b-175c81950704",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faf482a0-4066-43ad-b949-b2bb083f1ba0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b25e984-3eb8-4540-bb30-f04494ae6ea5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4980193c-ea50-4fbe-a928-b3bbcd483391"
                        }
                      }
                    ]
                  },
                  {
                    "id": "834cfc79-b62c-4d9d-b62d-8d1c501d16d9",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b075c3c0-dceb-4dfa-99d5-7b5288ce675d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23dca20e-e70d-4383-b30a-761ab0c21771"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77ed635e-40c5-41fc-9f02-f01f9bd76f6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e94286d5-40b5-4379-be14-4a01bde6d95f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38eead4a-7d94-46fa-ac92-40df92846a8a",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a01cf8bc-e163-4ca5-8301-82a787fcecc2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed72b6f6-35c9-45e5-9e1c-b3614f4ca0b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b94741e3-36f2-42c4-97a7-c8e6be3c5c3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57c38d87-b301-484e-9000-8dbdd66deac3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f44a239-ecfb-4f7b-8776-f5804343ef4e",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf013068-04b0-429c-8941-ca371ef9f8ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3fb6ff7c-21f5-482b-96a7-f5fe877562a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d13615aa-05cb-4902-9481-8c4e56fa31de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0debf610-819b-46f0-ba31-3a126c8aeb5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a63b46d-b793-41ff-9e07-ca019b980c4e",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1828765f-0a24-4d5d-9741-19e1f2d0b3ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aecab3a5-a404-4bf9-9ccb-18769474d773"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c75a1002-8061-4fb4-92dd-6e0d960b113b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a96fc484-e847-4d47-8829-5a1a5f9ed32a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af4268b4-fac4-48c1-9220-d8c75c6b10e0",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1159db5-989c-4714-81c5-98416ee4df92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ff4ead4-acda-464e-a311-607c8c3fe413"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f39db47c-43ef-4e23-b06a-3cf05624ecef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "776b3044-6532-437a-9e54-c3a7e649126c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e52cc689-f1a2-468d-a191-1de45bf87f57",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96afee25-046c-4298-9e6b-9ece0f95176d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "633ea6fc-d909-41bc-93a0-5cc1bed72d44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60e17f24-4ca0-4165-ba64-94f9a5416da4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "858f27a3-3f0f-4fcb-9734-4754a5d101f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2af2f4d-ffb3-43dc-8de3-fe7c65206fae",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d575086-063e-4e98-a3a5-cf3f8368b973",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90371214-7ec8-492e-8a1e-2ca9c5c7e40e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2630a5d-d837-4df1-b997-b9021061a6ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2227d411-01b1-4c0c-9574-e88f6d43d591"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fef5d3ca-87da-4f6e-ad41-4c6f92da1b09",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c9700a0-5ac2-4ecb-9ebe-97bc82362fea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe6b8aa0-3bf9-4846-a1b1-0a8093b58250"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c4218a8-ec9b-495e-8519-9ea04a8c1f95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7af4f5d0-0957-4237-879e-fe905067b538"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd5ac3ef-7a6c-466d-ae0c-6364fadbbbaf",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7caba609-67ae-4067-b26f-5847951e2dac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d072d120-70d8-48dd-af9d-8d4f004f591b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2603d5d6-bb77-430c-89c0-49da855aec66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44718672-60e6-4f58-8caf-e4e75e0b06f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0421b2c-018e-4c96-abc2-7b17e4620c9d",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71b57e44-9c18-4f18-b3db-38a39fb3544d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d66b327a-64fd-4260-acd9-d386c2022f97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d85097f0-9c60-4d76-9498-851ec40f9d68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54af7ea1-c14b-4f08-aaac-7016921a60a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9d3c079-1e75-4eaa-a993-64fd45b0ba47",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd02ccdb-8ea9-4c4a-87bb-93b8cd4ecd65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49688c2b-d946-4fd3-b4d6-8c596d468d1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdda25fe-0713-41c2-a948-6086e4fa86f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dae900bc-198f-464b-b05e-30c28ed44e73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08e78531-30d0-4837-8b5e-1b105fa9f940",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4935e658-7de2-4a34-88cc-b067b480cccb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c541f970-b4d8-4ea4-8ac7-bee63cc3f153"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96619097-7e68-437f-a3d7-2ea32de03e02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b138e1b5-19eb-4398-ba86-72edf5e9157a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d3af98f-bc9b-4934-91cc-8b256e717e9e",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ce8d928-ea87-40d9-94ea-c536d2e7567a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "660611c5-565c-4841-91bf-9ab6e160093b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3ea95ef-90bf-4fd5-90d6-0d89cc88db98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9275b28-d4b4-4f07-bd3c-f0540106eb2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caa0f118-a278-434f-810c-ab7b0561a6de",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10e4aaa4-05c1-4d5f-aa80-f31b646e6f42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b02f8e01-5021-45c4-b912-fbc9dff72184"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1e05911-791e-42d4-9240-b15e7d6b9810",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49d46a83-a904-4401-b503-3b809b6badeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f50728d7-1419-4969-9fbe-9e8e25974838",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "550a4f7b-cdf4-4972-8ca4-001223d0bbf6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfdc5ae1-c2ea-4c46-91c7-f069b4adc3f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26241c24-c2a8-444f-9834-a22186c57abd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a3d07a4-3e90-4398-929c-3470b41fedd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6363a9b1-9ebe-4454-955e-45c6445fa951",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b65146b4-0948-4a9f-85d1-8f6783ff7378",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f7f792f-7b4c-4002-a837-9ab91e6852e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7a6074f-2b3a-48e3-b729-9cefb2784a5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b1d9d58-7c9d-4239-9911-8d02a4872830"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e48d746-592f-4050-b431-5085601e9443",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09f559a0-6d99-498a-8391-6d7ab34e3b96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f030393b-c179-4205-9d12-6696e3764725"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a4e3c1e-667b-42d7-a1c6-648fa1350d9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8488e330-0d40-4200-adb0-9c9583e8bd8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a17c795-1bf1-43f2-b5f3-cd151b4faeb5",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17ae3530-7f6b-4801-a210-31a8600a2cb4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "451361a9-5173-4e2d-b5a3-29dcbcbd7ce9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29221d77-0299-4f71-98fd-0353589c8ae0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc9d2006-bbca-4f79-a4bd-4a703bec9a4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c4ad7b5-1533-47e9-8049-8f2ef7df108b",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c81d2752-3b7a-4533-bea1-353b0b5134fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aad5578b-4a33-40fc-96b6-1d0f1a9034e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb925a51-7d66-4022-9b59-344f38d65a67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8831f632-29e1-4446-b2f2-a37a900ac521"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55de11b1-193f-4692-aef5-cd5971b53d1a",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f43d613-bb61-4f04-acf5-5939b9500c47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c3a8e7e-87a8-49a2-b0b1-a464e3b026c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "489efa56-3fa2-4e6c-b1fe-0a4e3d4ea65b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a2a72d0-7cf6-4f80-837f-ca7fb1badd20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eea858d-5eec-43ed-a928-9fc46dde4aa0",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8513890a-5102-4b2e-a808-c0158bfeb7c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6560334e-5241-4477-884f-d851b01a1ff5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c050dd80-029c-4abd-ab8b-b319f6a21903",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7c8a606-b9fa-411f-8b31-e466254699a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a699f6eb-bd25-4994-9469-3608e5d3cf5f",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a0312c2-6a2c-4f35-8ebb-e711e6ff7852",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f7627cb-99a3-47e1-85ea-fd64e71cefa5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc4bcf95-3d7f-46c5-9894-d41caa955424",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "703fb631-1407-4c35-8fe6-b18a51ce2004"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cd31aba-caa6-4791-b4a7-3541906bb66f",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e174614c-12d9-4150-accf-6d292c63bd4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6378909-f022-4834-b18d-b897d95b897a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9e4b7fe-c16c-4a39-a32d-a987a493c2fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "468220fd-0993-46d8-bf1f-157ecfed59c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "099fd114-67c2-4098-9f4e-4e3832402128",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "628e52a3-b50a-495c-b65f-7af3797e02a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bebf9280-5eae-4b0b-b4be-c1ed80065521"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05b89c18-772f-4d6d-a739-9f2393a8e506",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "569b619f-bc3c-468b-8737-6c2042f09de3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baa024a9-ec51-4859-9b24-d47c208ace2c",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d711b0e5-7515-4a6e-8faf-f1d0335a4fcc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97a830e8-9f65-4455-b692-17f05419ac7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52df1a13-84d8-401d-93df-35d054f93b75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80f2785d-9973-4d3b-a0a6-cd3bf173004b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0e84de0-c7fc-4a79-b696-b1ee9efa5666",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b720f64-4fc7-4a07-b55e-8ba5e3775add",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3c09385-b206-4a43-9d3f-2bcd83562125"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4eb9ff6-cbbd-4c24-831c-d50aed149de5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa02af13-58fe-4fed-be87-56cf8e5737c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f27c021d-4503-4561-bb97-79a19c9a158f",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cde9b83b-6813-415c-b869-beb084e10cf5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "adc7bf21-a38b-4508-9d22-d13c0d4d9179"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed9bea9b-ffe4-477c-95af-fe54db33ea68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e4746db-f5f5-4576-b3fa-0482d3095fc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af7198c3-d8d8-49ae-b7e4-2404327065cc",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "010095a7-e40c-4fcc-abc4-f27f88ba4cab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c80c0b8-38b2-4a71-9016-36b6a17fe09f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7f9aed9-841c-439a-9e0e-9599df69d4ae",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a6e35d7-b9db-483a-ab8b-5c551eddf3a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45595cbf-e8fe-413c-b72f-a14f235d28bd",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3a059ce-c87d-470d-8971-07adcbc7e676",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "911c4d69-cfc0-458e-89bc-4a5da13b9354"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b96d7aa-6f74-4a53-9ce9-289c5af2651f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c1c7987-d122-4ace-bb8a-96e025bfd989"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28f8e5ef-b0a6-49c6-aafe-58e8287ea841",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a854fe1b-4ad7-4b02-b8c7-cbf345bd6a78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3e2f59e-cc3b-49fc-9d27-cdf9c4a27710"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b6a1a38-0498-446d-b7f1-05aa42e319fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ec16132-6874-4bc6-938c-ca9fe4b3ae12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc9e130e-c825-45d8-ae00-2df11ead3b7c",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "038ebf82-c0d0-4a13-a087-9fd8e640dce5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eabdeb1f-c44a-4175-a2a2-d793bb65703b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50873b15-b907-45f0-9642-87fb18d384e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d290d873-5785-4876-be8d-c2bc595aa97f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c5f882c-03ea-4cbf-b42c-a3368d93369e",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f003b6ef-df91-4f39-be97-7ec29f602a3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ef18205-bbc2-4330-8eff-bcc8ee198cb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3400c30e-9027-4eee-8ecf-6171ac6092c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2912138-edd2-40f8-afb6-6d6341ee4700"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b5fb1aa-18a2-4709-ac7e-e2c579c03f1d",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d55e400d-f95b-4250-984d-a6bc473594e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1c6da1e-58e7-4ac0-9c29-6e273dbf821f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "958bcb29-8268-4b30-9560-80d7a16acf46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a1a2cf9-0ba9-4551-a667-47a9692f98e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46d530f0-72f2-4d9d-9daf-9f61ccac248a",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d7d2166-773b-4ad9-bfeb-c7beb4cb99e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5653dcfa-d679-48f7-8ff0-5fe18a452cf7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bbd500a-7ff2-478f-ad58-07ef01687075",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40712c73-1e34-46f8-8b77-37f54e8d3a3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83529d71-5be2-468f-ab6a-d9f32156c948",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cf69caf-5db8-4d46-a4e9-062aba4905c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c57cba0-6386-4d5a-bd60-f64661c0748c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e50f64c7-4ae1-4956-b5f5-37b6e28d3403",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63220601-de92-4240-a00a-b3baebd8422d"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ad0b50dc-a56e-4cfc-b82b-4d15c32b131c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d555ba19-0476-46a3-a36f-3c20a19d1a5f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e8585486-ec2b-4195-87bd-5d7b83a78eee",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f33beb99-4a2f-499b-9a68-2e128a676f28"
                    }
                  }
                ]
              },
              {
                "id": "6cf87b64-9b0d-4b6c-afea-81341fdd3845",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "00233b18-0287-4d3b-8e2d-498b76a44dd6",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2381924b-ae21-4b5e-8866-6a7922e52f01",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "4fa320f1-b446-4232-8393-de6122879c71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fe1a0ba-2c39-4590-9438-da38a9bbb236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0bb187ea-dfa7-4e24-9865-a9dfa4722614"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8333bee9-aae6-4ee2-941f-755b71836550",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f1e0e4a8-f9de-43ac-9bec-e82a104e8488"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d5f2f773-02f8-425d-884d-c59fe8d71d2d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6a4a3ceb-42a2-4a9a-944a-b25648c5b96c"
                    }
                  }
                ]
              },
              {
                "id": "2ca72fab-6067-48b6-8d86-30972b692698",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "93a919ca-473a-4426-9cda-487fb63e81cc",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85206d7a-8347-4123-a4c6-d9c06c36d03e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "8a0b001f-a556-4963-b676-657eb0a6f25d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee89cc17-7d97-4b46-a670-e4da2c88bb62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d733a92-56bb-479c-baca-da90a7a20da8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "7acecb58-eb42-4b29-8952-3d0c25680d54",
            "name": "Positive Testing",
            "item": [
              {
                "id": "656651ea-febe-42b2-836b-2a7207697509",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e5d3a8f9-2605-414c-8239-98eebbc12246",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ede5dd4d-7627-42dc-9d16-05673c06524c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b1307d1c-e002-4640-a2d1-da78b4c8f405",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "48bf0e23-18c1-4d8e-99d8-0639bd211f8d"
                    }
                  }
                ]
              },
              {
                "id": "f21f727c-2567-4c08-bb1a-7968bd4c0d8b",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "861c2d7c-d592-4fe7-9a3d-09c07b1fa6a1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "cc0cc566-97a3-45c8-a270-91229e099687"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f27325d6-a6a7-4f36-92d5-536b4a8f2f54",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b73f9ad2-d18d-456a-a190-68d14ea6e45d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0a19685d-dc44-4a89-ba32-cd90d32f8d6b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "c52a6b3a-55f7-437e-b777-1239b1e4e878"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "752f7208-d592-42bc-8a47-b0fdfdc4f7ae",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4d04fa6a-66a0-4a3c-96e3-44ea4cf53d04"
            }
          }
        ]
      },
      {
        "id": "b5a8c208-9147-455a-ab3b-0836eb574e61",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "b36d22c8-ebde-4b11-b720-0b59274c0c3e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cf2ee818-fd08-40ca-8b63-fa064f643faa",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "66a75ab7-037e-44ec-948e-6b0dc59f803d",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e77ef098-b7b0-4405-be51-ed50070cc1c7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "b9276b0c-dbff-426e-80b4-127fd58bbd43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1064a79-a370-4ac8-886a-36534a432b77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ef355946-0233-41bc-a0ea-3df852dcda77"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "75402057-1da8-4c86-8ec2-cf33633e3834",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f00afd0d-eece-48ef-97a2-9d4b24361dcd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f05ffe12-b7a8-4b98-96dd-d5eaef65e1c1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f11a8fdf-117b-4064-ac1b-fb68dfc0df5a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b66abbf7-63c3-4b59-92c6-12517a79cf67",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "ee162852-8ea1-4f32-a2ef-1dd2f6f49f2b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bf0c6ef6-a1e7-4178-9b67-1d074eb65f23",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "aba9a550-a4c5-414a-8f2f-120398a208a3"
            }
          }
        ]
      },
      {
        "id": "57da51c6-a2e0-454f-8852-ac46a830c2e4",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "85f5e8f0-4dac-4f9b-aec6-09b8ca0af878",
            "name": "Negative Testing",
            "item": [
              {
                "id": "77bf7f02-7385-451c-bbd0-e50ad01ffc77",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3aab4e63-be05-4168-8b2a-df097e73c2c6",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64d73f09-0681-49b0-ab4b-d2503393cb85",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8998f4a3-f39f-4ae4-a538-c1f67cf7c8fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa97a5f1-50a5-4dd0-a100-264bef37b71b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0adbb902-49a7-4491-9414-2008ece6c7aa"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f9b7662f-f7d2-4b17-9fbc-743804dbeed8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "56c66f57-dc63-4ffb-9390-803884836870"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "499d15af-38a1-4cfd-9e0e-bda4931717dd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "69de86f5-3e36-4810-8251-bfcea205eda5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b56b330f-119d-48a6-b20c-1d56d5ee3e88",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "deb18798-8368-4de7-9b75-4f8493002442"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "88b73c67-f2d7-4171-a869-fc58de5f7a44",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a92c1378-b997-4d4f-96b9-7d3bf482af24"
            }
          }
        ]
      },
      {
        "id": "e0713bfb-ab16-4360-8ecf-b1e9fb01ffc7",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "a6ced5e0-cc78-4ff0-9291-4abcbefcab6d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a4e81666-df1e-4d06-80e8-987bb4f81c78",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0319244b-245c-4fff-9dcf-8962b71d78fc",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21c88858-35ce-453c-a777-3c1f69eecee0",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e0feb419-5ed9-4413-b3b3-136e8ee8ddaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66244f43-2b7d-4097-8f81-188abe8e5c56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "21558e38-7ef5-4272-a482-501650997dbe"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "68b4b084-8ea6-4c64-b607-7578a25f71b2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "632d8e74-08d3-4e40-9266-94d33afaf71e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "712ed7cb-bdf9-4438-9a57-5900c1808b95",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "35dba32a-ecd9-4b02-89a8-74df5a4d83d0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ce0918d9-899c-4110-b812-75009a47262b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "13d102cd-a530-449b-9037-dfb5080c7d63"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "60d657ee-f676-4e40-b895-4660acc6ccca",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "adf667c6-8c95-4e56-91b6-9e3fd99a02d4"
            }
          }
        ]
      },
      {
        "id": "1dd647d1-28ba-42fb-b58b-31123fc8e5b4",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "24ea6048-4737-4d6e-846d-ea3a50a14e43",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0d8dfb5f-12f9-410c-aa85-8a603f1a4935",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "c91de40f-6231-49ed-89dd-1ebb5f326452",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c934b812-cba4-41e5-8e0a-41b45adce6f5",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c3768b47-391e-437c-839a-23410f9ecb6f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 9.080985915492962,
      "responseMin": 3,
      "responseMax": 341,
      "responseSd": 26.37187584620568,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1691628079080,
      "completed": 1691628094800
    },
    "executions": [
      {
        "id": "cb97efc4-0a36-437b-836a-000e256d928e",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "c38b461c-438b-4522-99ba-c72a32ba90f3",
          "httpRequestId": "a65fb171-f136-4fe3-a5c2-04eb80ee6d61"
        },
        "item": {
          "id": "cb97efc4-0a36-437b-836a-000e256d928e",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "d1e8f0c6-577a-4ac7-9d09-4f572beda0b0",
          "status": "OK",
          "code": 200,
          "responseTime": 72,
          "responseSize": 0
        }
      },
      {
        "id": "9b10d5f9-4288-46a5-bac9-03b8b8bd1aaf",
        "cursor": {
          "ref": "ed15b581-d373-4df7-afe7-0ff34b15fd48",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "4c0a5722-1c2e-4fde-b158-ed9dc9512781"
        },
        "item": {
          "id": "9b10d5f9-4288-46a5-bac9-03b8b8bd1aaf",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "cd3a9ea5-6166-43ab-88df-9ea2bd762912",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 0
        }
      },
      {
        "id": "4a964046-b04c-4b23-93cb-63f42878f3f2",
        "cursor": {
          "ref": "570bc75f-880c-4983-9001-631a45045a48",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "ca9ad52d-3d6c-4e3c-be78-de49583cc833"
        },
        "item": {
          "id": "4a964046-b04c-4b23-93cb-63f42878f3f2",
          "name": "did_json"
        },
        "response": {
          "id": "5b0b0fbe-c315-4d7d-aa02-f47445b17841",
          "status": "OK",
          "code": 200,
          "responseTime": 39,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbc37da0-5ca0-426b-860e-ae76a2729b01",
        "cursor": {
          "ref": "5b10a04c-4c12-4273-b4cc-4375fed7a71f",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ba056756-1f88-4d7c-9fd9-eaefb03eed23"
        },
        "item": {
          "id": "fbc37da0-5ca0-426b-860e-ae76a2729b01",
          "name": "did:invalid"
        },
        "response": {
          "id": "9c4caf68-ba4c-47e1-bd8b-af950f4bf220",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbc37da0-5ca0-426b-860e-ae76a2729b01",
        "cursor": {
          "ref": "5b10a04c-4c12-4273-b4cc-4375fed7a71f",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ba056756-1f88-4d7c-9fd9-eaefb03eed23"
        },
        "item": {
          "id": "fbc37da0-5ca0-426b-860e-ae76a2729b01",
          "name": "did:invalid"
        },
        "response": {
          "id": "9c4caf68-ba4c-47e1-bd8b-af950f4bf220",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "415ee257-1c5c-4985-a46e-09384503e0ea",
        "cursor": {
          "ref": "5b614cde-df8e-409e-a8cd-dac1c9fbf7da",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "c08d2ed6-e9a0-4dc9-a0c3-41adc954e718"
        },
        "item": {
          "id": "415ee257-1c5c-4985-a46e-09384503e0ea",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "3eb444a6-10c4-44af-a8df-81677e2c14c7",
          "status": "Not Found",
          "code": 404,
          "responseTime": 52,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb68c96d-4c50-4377-9a31-dcda6e8680be",
        "cursor": {
          "ref": "44807a2a-6e20-4d1f-92e8-d7ab66cd82c5",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "139f3dee-3d8b-4815-9541-551e7a35934e"
        },
        "item": {
          "id": "bb68c96d-4c50-4377-9a31-dcda6e8680be",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "5330d227-8eee-4f8c-b559-16d82b86f39d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8428c51c-75f1-47be-8b28-bf6f47f0ff33",
        "cursor": {
          "ref": "37038a64-1afb-402b-b237-ea9bbc21b730",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "b025831b-c468-44e6-9241-b3e5960cd768"
        },
        "item": {
          "id": "8428c51c-75f1-47be-8b28-bf6f47f0ff33",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "b41a3d22-fdd2-4c40-bc37-0f9f909dad83",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f17bf75-e392-4ea5-a6dc-f4482d202a5a",
        "cursor": {
          "ref": "cbbc3b6f-c5b6-4825-a1b8-5b5e170f25b0",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "eb06ea2c-33b1-4a58-9c76-7e1ed3a7a3c9"
        },
        "item": {
          "id": "4f17bf75-e392-4ea5-a6dc-f4482d202a5a",
          "name": "identifiers"
        },
        "response": {
          "id": "1ea5f0b9-9e7d-4542-9d92-86fc48c2b8a2",
          "status": "OK",
          "code": 200,
          "responseTime": 211,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21355ee3-e396-4bbf-b55a-0ee6f07375c0",
        "cursor": {
          "ref": "dcaf319c-dba3-4343-90ba-e0dab5679f22",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "c533ec69-7d69-4201-be56-5271d10447d9"
        },
        "item": {
          "id": "21355ee3-e396-4bbf-b55a-0ee6f07375c0",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "aa19a67e-b598-4fac-bce9-eded0ce5e8db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35145d42-50d9-4d8a-a1c0-24aa309d741f",
        "cursor": {
          "ref": "a0e3f6d6-6baa-4b18-bef9-8b7e69578067",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "c399fb3d-85ed-442f-955c-efedc5751e3e"
        },
        "item": {
          "id": "35145d42-50d9-4d8a-a1c0-24aa309d741f",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "62745ca8-04a1-4a02-8367-bf5f4db60299",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac5cbbd0-2599-45ef-a2b3-751366f649e4",
        "cursor": {
          "ref": "84ff0ff9-79ef-4700-8ed9-4ed2f173c9dd",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "8ebafe79-481c-4391-9a00-72676f10362e"
        },
        "item": {
          "id": "ac5cbbd0-2599-45ef-a2b3-751366f649e4",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "a45902c5-a5c1-4f6e-b097-8c298c81e3cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7187ce5-d1c4-47bc-9d56-281e540c7069",
        "cursor": {
          "ref": "7bcbed77-d81b-4d48-93af-8dde4660650f",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "ba9f877d-5fc1-4b0f-b286-34c5178d8c34"
        },
        "item": {
          "id": "a7187ce5-d1c4-47bc-9d56-281e540c7069",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "ad0ce780-c9c5-40f2-ad3f-ee844c14d2dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4c18d7c-99a7-4e95-9390-2ac7b357a625",
        "cursor": {
          "ref": "9fe0ed12-f85a-4599-a0b5-1065f5f8253f",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "e048fd2a-06e3-4108-8e47-bfaf75be285c"
        },
        "item": {
          "id": "e4c18d7c-99a7-4e95-9390-2ac7b357a625",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "783c10d1-dc45-4234-abe8-9ff058185ce7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9574086-d371-4a5b-ae4c-4c061dc307ed",
        "cursor": {
          "ref": "3eed77ae-571f-4968-960b-a00140732b72",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "99df37da-15d5-41ae-9246-8b5d6d8b6e96"
        },
        "item": {
          "id": "f9574086-d371-4a5b-ae4c-4c061dc307ed",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "71adee06-7f02-4911-bcbc-05b91142aa43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "435485dd-54dc-4db0-8f06-b515f03e2a88",
        "cursor": {
          "ref": "5d8b5342-f568-4535-96a7-135f7317ad59",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "3aadf912-639c-43d1-9514-14318d85b67a"
        },
        "item": {
          "id": "435485dd-54dc-4db0-8f06-b515f03e2a88",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "9e491e37-a0f2-4c0a-8d4c-acc13b9f6b79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d605bc2a-da8a-4a7f-a098-c788f2b11bf4",
        "cursor": {
          "ref": "e201319a-756e-43d3-862a-24c31c93322e",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "94af7061-98fb-463c-8acb-e390c18bf3ff"
        },
        "item": {
          "id": "d605bc2a-da8a-4a7f-a098-c788f2b11bf4",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "7e3d361b-b77f-4428-bd29-6c8bd77f11ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "880723cd-ffae-48bf-b517-5fad86eaf7c3",
        "cursor": {
          "ref": "2304832c-2965-436c-9275-eeab444ca7f9",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "f4157958-c14d-4112-84e2-f708d5636cd0"
        },
        "item": {
          "id": "880723cd-ffae-48bf-b517-5fad86eaf7c3",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "5f0f72f5-2b23-4cff-969a-724c034eaa0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cd3ae0e-e539-4554-8918-c06747966e7a",
        "cursor": {
          "ref": "bf2da598-91f8-4be6-afe0-57719d647842",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "f1c90010-5ff4-4e84-8fbb-d4837980cd39"
        },
        "item": {
          "id": "0cd3ae0e-e539-4554-8918-c06747966e7a",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "c00de6d9-0689-44f3-a481-14d55838032b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76bae796-3acc-466b-ae68-1cfd9a52d540",
        "cursor": {
          "ref": "2cb3074e-9c43-4783-b896-3a5a801c49c1",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "e539ada1-a5af-4a90-9a39-9d574ee32213"
        },
        "item": {
          "id": "76bae796-3acc-466b-ae68-1cfd9a52d540",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "01c49a1e-5b41-4fad-bb05-a2ab33c6a0da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2339529c-806b-4924-9770-9c0979bb9f8c",
        "cursor": {
          "ref": "28129646-275c-4efa-856b-66503fe87eb5",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "09ee9158-2074-44ce-ae52-be864e3c0134"
        },
        "item": {
          "id": "2339529c-806b-4924-9770-9c0979bb9f8c",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "72d34412-402a-4061-a16d-590f6591cff5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36182ec1-20f6-40ea-830a-aac45f269c8e",
        "cursor": {
          "ref": "48c15cc6-d9f5-4122-9c0e-78de1a6a0d88",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "881dd802-2c0f-4afb-831d-a5f18a224271"
        },
        "item": {
          "id": "36182ec1-20f6-40ea-830a-aac45f269c8e",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "5dac2823-b349-40e8-812b-f5cfabc129c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6593b760-16b9-46be-8a08-e5359e6c8dfb",
        "cursor": {
          "ref": "9b777b68-f4dd-4e46-8556-a46cd0b2f05b",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "d4723766-5f25-4c87-bac9-11917fd42468"
        },
        "item": {
          "id": "6593b760-16b9-46be-8a08-e5359e6c8dfb",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "cfd9d184-afb7-470b-9207-5d6ceed55096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd3b9c21-c4f3-4272-bff8-4377cb22bf19",
        "cursor": {
          "ref": "a5292220-f66b-4899-a0a5-78607e04e205",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "ac719176-d930-4917-b6da-9edb5bf6dbb1"
        },
        "item": {
          "id": "fd3b9c21-c4f3-4272-bff8-4377cb22bf19",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "dd296b94-4cb0-4dab-aea0-14e6c7f4a4a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00298de1-db46-49e2-b197-f5ac2b36fb82",
        "cursor": {
          "ref": "a94f94f7-bb54-43ed-85e8-42599bdf1af7",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "228256da-4f8c-47ef-8946-ab58ed13703b"
        },
        "item": {
          "id": "00298de1-db46-49e2-b197-f5ac2b36fb82",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "a7b8380d-56fd-49b2-bf53-1edf7e937357",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ddc2de2-88b5-4d1d-81b4-bf813a80ebac",
        "cursor": {
          "ref": "d3c10118-b60d-4187-bbf7-e014e727df29",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "58b3124c-0d40-4536-9730-9b5d5d0ff57a"
        },
        "item": {
          "id": "6ddc2de2-88b5-4d1d-81b4-bf813a80ebac",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "129572e6-03cd-42e6-b4d7-083ff203f938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c71cf56b-539e-486b-97a4-00145b5f984e",
        "cursor": {
          "ref": "00c8bef0-404e-4a50-bd72-d47dd362add1",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "b7408790-6a48-4fce-b3f5-4a2133cac384"
        },
        "item": {
          "id": "c71cf56b-539e-486b-97a4-00145b5f984e",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "b28cc9e9-8647-4241-93ae-9ab77d9a6da0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98e78dd8-5b3f-4238-8e94-4bb5590df0ee",
        "cursor": {
          "ref": "11576416-e8a2-4853-8b0f-da880587457f",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "51f20210-59d7-4ca3-bdf5-39618827e399"
        },
        "item": {
          "id": "98e78dd8-5b3f-4238-8e94-4bb5590df0ee",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "f90aa8ee-c6fe-4750-b33e-2d3b85eeb228",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06d445cc-6416-42a6-9567-dbb69e39b824",
        "cursor": {
          "ref": "e1aa54f3-bf45-41ef-9645-48174d83f470",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "85acea44-e75e-4433-8e99-27917abf8aca"
        },
        "item": {
          "id": "06d445cc-6416-42a6-9567-dbb69e39b824",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "d63a0b53-c852-4293-95be-f6386d0e4486",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd02be1e-9e42-41a3-9f29-3bb44a01491d",
        "cursor": {
          "ref": "6213093a-78ad-41c6-97d7-550a95034d5a",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "2bb46aeb-ea66-47af-a0dc-22509f0a8acb"
        },
        "item": {
          "id": "bd02be1e-9e42-41a3-9f29-3bb44a01491d",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "0b618d99-d8e1-4074-98c0-b61b3495bda8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6cbeb36-faa1-4991-82dc-8787bc6fcd94",
        "cursor": {
          "ref": "aec193b9-bd4a-465f-a29f-355e41a4e7df",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "46f72af1-a652-4b9e-9920-a023be9d6b78"
        },
        "item": {
          "id": "f6cbeb36-faa1-4991-82dc-8787bc6fcd94",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "648a26e3-8c75-40e5-a783-8f4f43ba4f70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fda7c48-3117-4ec0-ad72-0fa8fc978192",
        "cursor": {
          "ref": "4a375572-d637-4f66-a7dc-9249cee8bd5f",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "7d18f865-da54-4f0f-87fc-dfae1a1602b5"
        },
        "item": {
          "id": "3fda7c48-3117-4ec0-ad72-0fa8fc978192",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "9077b642-4664-4676-aca1-8c49e8d3abc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c387ab73-cb0b-4cf2-83b0-17336289609b",
        "cursor": {
          "ref": "69b5533e-25bf-460b-a78b-edabd3295ece",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "b24b2eab-4e7c-42a0-8691-90602f6313bd"
        },
        "item": {
          "id": "c387ab73-cb0b-4cf2-83b0-17336289609b",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "b688e201-a6ce-4cb0-9837-e18db1733b75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4deb3499-946d-4a56-bef7-f8c408cf75da",
        "cursor": {
          "ref": "fbc4ad75-fa15-4516-81f6-084845dc834c",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "9688d35b-9ede-43cc-8771-a3a49ff5ae2d"
        },
        "item": {
          "id": "4deb3499-946d-4a56-bef7-f8c408cf75da",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "17657352-ffcf-4790-9034-6db68f1d0761",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c52a2341-ef93-4d5f-8472-f64575febe0c",
        "cursor": {
          "ref": "6fdafe46-ee91-470e-bac1-21a3df2a4035",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "02d009a7-e608-41d9-9252-1b352fa45134"
        },
        "item": {
          "id": "c52a2341-ef93-4d5f-8472-f64575febe0c",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "5eb68d25-b29c-44b7-9be8-4441e4e4cfd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "157f6bb8-daff-4fb9-8dcb-b5c5204a8401",
        "cursor": {
          "ref": "6314e77e-ff69-4ae3-b845-8751590df81c",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "71c3979d-5e42-4d90-b5cc-236df7d2ba27"
        },
        "item": {
          "id": "157f6bb8-daff-4fb9-8dcb-b5c5204a8401",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "9cc03f0c-5b81-4c58-811b-ffcc356ab13c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2d48521-782b-40da-b9fe-08073d96dd78",
        "cursor": {
          "ref": "9a6c9b72-f028-4d8e-b1a2-ee43d3b16d71",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "0ab220e8-fd29-4b1e-aa6f-b1abe820802a"
        },
        "item": {
          "id": "b2d48521-782b-40da-b9fe-08073d96dd78",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "ea0d9c29-baf5-4d32-8318-495077f1a621",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dfa95a9-6308-4fcd-9538-a1bbf5c61f6b",
        "cursor": {
          "ref": "87854e29-c835-4a20-b5b2-468d69e3f3a1",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "c3861461-e99f-43eb-9675-b941eb3d4a92"
        },
        "item": {
          "id": "6dfa95a9-6308-4fcd-9538-a1bbf5c61f6b",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "97940762-fe40-45eb-a410-2e189839b4dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa993885-226e-42af-a517-21e78f0ef57f",
        "cursor": {
          "ref": "4306ec41-481e-400b-8d20-09e9389b3fad",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "ec199d7f-622f-4684-b710-45e0df024902"
        },
        "item": {
          "id": "aa993885-226e-42af-a517-21e78f0ef57f",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "f2ddf864-c899-4a53-9221-870a08df92a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "814e1c53-cccf-49e4-80cb-a2ec7b743e2b",
        "cursor": {
          "ref": "602db78e-ba49-40ca-8d49-aad3089e696b",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "abff7e2b-904f-4ce9-b7d5-6fbfdc4c14f3"
        },
        "item": {
          "id": "814e1c53-cccf-49e4-80cb-a2ec7b743e2b",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "0317efc0-88d9-4c3d-b433-34524a7855d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fff53ac5-dd3d-41a5-93ee-6c20b08de68f",
        "cursor": {
          "ref": "b926dc50-564d-4e01-bd82-8b6b47cfeb3c",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "15fb2a5e-cd3c-4667-b168-3ebd40667841"
        },
        "item": {
          "id": "fff53ac5-dd3d-41a5-93ee-6c20b08de68f",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "958bf695-4944-47b6-be9b-c0a6f12a5dca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "074098ac-6d95-43f7-9fdf-77f750448614",
        "cursor": {
          "ref": "94d0d3f8-33a0-4bc9-bdf8-fcf45dfa720b",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "b4fbc81a-5b31-4c39-8696-4d3b013af4cf"
        },
        "item": {
          "id": "074098ac-6d95-43f7-9fdf-77f750448614",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "bf8e13f1-35dc-4e3d-a79d-b8aed217b62c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c081efa-3c8c-4fb9-9481-1f063f229252",
        "cursor": {
          "ref": "a04a34a9-6632-4665-bdf2-821a2e9fcc6a",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "09a006ff-107d-41ff-86ad-28abb332c4d0"
        },
        "item": {
          "id": "3c081efa-3c8c-4fb9-9481-1f063f229252",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "e0e1214a-47fb-4972-8d64-c71b54ab4eac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d909e0e-c92a-4afd-938d-3a0d80173b86",
        "cursor": {
          "ref": "4716ab95-9da4-4239-8540-0ab5cc419e34",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "055b1bb6-ee9c-4fbc-9e78-6abf5fed057f"
        },
        "item": {
          "id": "3d909e0e-c92a-4afd-938d-3a0d80173b86",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "3fe5f791-5baa-49f6-b583-95709b6e2f1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f40a90ac-4cb7-4c30-b3f4-e2817e750b6f",
        "cursor": {
          "ref": "61850caf-b047-4a5b-9c05-babb3106bf02",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "6bb97093-4590-49dc-b659-43ed36f8b171"
        },
        "item": {
          "id": "f40a90ac-4cb7-4c30-b3f4-e2817e750b6f",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "e3fff4e5-0228-4d59-9dfa-86bc6fa9d0a4",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 20,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9144766-e8cd-49b7-b9b5-d82eea5dc125",
        "cursor": {
          "ref": "07f155a0-da6c-496e-be97-8d59f8a81f95",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "311fe9cb-00fd-431b-ae3d-4508ddb22cf4"
        },
        "item": {
          "id": "c9144766-e8cd-49b7-b9b5-d82eea5dc125",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "dfc71956-05af-4a67-bfdb-93224c875d6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "262a9879-30e4-4e98-bf6d-797c1ba8400b",
        "cursor": {
          "ref": "d896281d-9243-4978-8953-8f088db854a3",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "ab7f19ac-599f-49b7-8e0a-69dddae9ee50"
        },
        "item": {
          "id": "262a9879-30e4-4e98-bf6d-797c1ba8400b",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "fb871f6d-6f72-4ee5-a1d5-035495c9634b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de6e0876-f540-4cfc-9f41-464534ea8675",
        "cursor": {
          "ref": "b94e02a8-7d6a-4e25-a548-9b71fab7f64f",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "122b6ce2-dc54-4478-906d-1344f4354f30"
        },
        "item": {
          "id": "de6e0876-f540-4cfc-9f41-464534ea8675",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "6fb0f2ee-1edc-424f-9327-aa080c78db79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef423570-23f4-41e5-8a7a-bf6405f8bae8",
        "cursor": {
          "ref": "359e2760-5b1f-4302-bf48-1384269ec829",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "6933cf89-f5fa-43af-8139-85df4f54b3c5"
        },
        "item": {
          "id": "ef423570-23f4-41e5-8a7a-bf6405f8bae8",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "552444f8-dd45-4a20-b23f-74329dd8ce0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f92b735b-f64c-4b76-90e9-a79c1b2ae262",
        "cursor": {
          "ref": "7619df89-92a3-4310-8e0c-4cb624192df1",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "20b8ea45-823c-44bd-b84e-93527b9ac45c"
        },
        "item": {
          "id": "f92b735b-f64c-4b76-90e9-a79c1b2ae262",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "3f963ef9-9936-4440-baa7-6df5d1d0119a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6231e78-e471-4a56-bb4a-dd7a00566782",
        "cursor": {
          "ref": "b96c5d37-9a48-4158-8b53-8d84b690fc94",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "dcad713a-df89-4a49-936f-1e463194673b"
        },
        "item": {
          "id": "f6231e78-e471-4a56-bb4a-dd7a00566782",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "d9e19943-97b4-42d9-a364-82d5ef8a611b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5358b71f-d32e-4aed-a16a-f692aee00231",
        "cursor": {
          "ref": "b29d88f1-226b-4a5e-86d0-b2132607039d",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "0fed9057-1daa-4359-b252-96c361a59bc8"
        },
        "item": {
          "id": "5358b71f-d32e-4aed-a16a-f692aee00231",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "253f184c-6f7d-4111-85a7-0576d2622035",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 19,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff18deda-7583-46bb-b493-663bfac23b8b",
        "cursor": {
          "ref": "949a2f8d-3407-4808-b8e9-c0362e64de35",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "01b74a92-403c-4653-a634-8937a1402138"
        },
        "item": {
          "id": "ff18deda-7583-46bb-b493-663bfac23b8b",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "c0315785-3948-4126-8fd2-b8469a4c9ea5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fabc0fb5-4dd8-40be-9d06-ac3c747b8dca",
        "cursor": {
          "ref": "0a542c29-2a21-4647-8724-c620ab155ce1",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "cfb3a7ca-134c-43ba-8421-abb554cbcc45"
        },
        "item": {
          "id": "fabc0fb5-4dd8-40be-9d06-ac3c747b8dca",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "bfdd1166-4d9a-4946-8fb4-8f8590c91aba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f707c51-45bb-4b25-bac6-6ff86087ff12",
        "cursor": {
          "ref": "72010a54-63b8-42a7-b9c1-fda9878e3883",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "44fba540-aa5d-4d2b-8b3b-89fd4b931f16"
        },
        "item": {
          "id": "4f707c51-45bb-4b25-bac6-6ff86087ff12",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "006fce59-d520-4c10-82dd-c855f4ca782c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "410aa6a8-d12e-4872-832b-72c3958cc72d",
        "cursor": {
          "ref": "66b82d60-6217-43a2-bea0-9a1ec63cc4d8",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "41a1494c-7643-4941-a86a-c72e8c4b140e"
        },
        "item": {
          "id": "410aa6a8-d12e-4872-832b-72c3958cc72d",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "1cfb8cca-aebe-4a6d-948b-30f6b9e9f9a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63431945-54f7-49c0-b076-1395a5fa440e",
        "cursor": {
          "ref": "58707a00-290e-4c81-8d73-c94921982fa0",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "c59d60e4-99f5-4746-ae3f-1eb64b164bac"
        },
        "item": {
          "id": "63431945-54f7-49c0-b076-1395a5fa440e",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "6c217e1f-1321-46b9-b8e2-96f28a5be32a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c097209f-4e93-4d55-87dc-686e46d1264e",
        "cursor": {
          "ref": "a184748d-db77-4851-8986-d634a0ac6ae7",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "463aea0a-4368-462d-8019-b748e2447170"
        },
        "item": {
          "id": "c097209f-4e93-4d55-87dc-686e46d1264e",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "d037e101-23ed-4e8c-9470-06a6c4e3d2aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d0bc8f1-951c-4352-9ba2-d0ce6f078126",
        "cursor": {
          "ref": "2c999cb7-26bd-4943-a1d7-55eb813d7c27",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "29ba8b4d-28e4-4ff7-8a77-2768d16ccb9f"
        },
        "item": {
          "id": "6d0bc8f1-951c-4352-9ba2-d0ce6f078126",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "1be0c17c-1ed8-4aa3-b282-fc1e389da987",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "436d69bd-ab05-4858-8c9e-8345c6bd9973",
        "cursor": {
          "ref": "3dd74e71-9244-478b-9418-309db87b96fe",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "7fafbd4c-2f8e-40dc-a38f-9249b8882160"
        },
        "item": {
          "id": "436d69bd-ab05-4858-8c9e-8345c6bd9973",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "1302f6ed-5b60-439a-b8d5-584ef8f1357d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f02004c-53f2-40ea-9c1d-fc2437dd1c6f",
        "cursor": {
          "ref": "2c3ee414-f708-48b3-aa22-d8389bd01e95",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "cea52b9d-d268-47d5-ad94-4bf91e848ef0"
        },
        "item": {
          "id": "0f02004c-53f2-40ea-9c1d-fc2437dd1c6f",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "8679fdfe-1829-4056-8447-2eb2179364ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eea4ffab-f169-463f-a6f4-0746b11dce2c",
        "cursor": {
          "ref": "26f0bb8d-786d-433f-9966-34a981ed3701",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "48141930-1921-4b5d-9b62-0e3a127fd244"
        },
        "item": {
          "id": "eea4ffab-f169-463f-a6f4-0746b11dce2c",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "ce0e02b5-df9a-4bad-adef-8cc18bb1bd0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f28501aa-c00c-457f-ae13-68f8a7b5b41e",
        "cursor": {
          "ref": "09e8052b-adc6-438c-90b5-cd2c86c997b7",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "eb0552da-0835-45a8-a426-3241746e2222"
        },
        "item": {
          "id": "f28501aa-c00c-457f-ae13-68f8a7b5b41e",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "de240043-886e-46ea-973e-06dbdea039f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b5ca620-6b78-4672-9231-55054bb966b9",
        "cursor": {
          "ref": "b2495c18-715c-4583-957a-d25f4700440c",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "b4e72e59-ecdc-4cce-90a6-73adb00b01b2"
        },
        "item": {
          "id": "6b5ca620-6b78-4672-9231-55054bb966b9",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "fae94dee-c620-4860-bf21-226f1eec3bee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c1fe5ef-58b7-4fc1-9f60-5431c076a411",
        "cursor": {
          "ref": "db2d5a86-d53a-4dbd-ac08-f199ea6275a5",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "e6a6f586-018a-4a72-8d36-19c1acbfd6fb"
        },
        "item": {
          "id": "0c1fe5ef-58b7-4fc1-9f60-5431c076a411",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "a154f321-b255-4bea-92c0-80941884f9d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d7f1b84-0240-4ec4-9866-75c63720d157",
        "cursor": {
          "ref": "87de06bc-24d7-4232-927c-f7e6b5f06d91",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "b303b204-2004-4491-868e-1c588ad3abe3"
        },
        "item": {
          "id": "6d7f1b84-0240-4ec4-9866-75c63720d157",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "6080bdda-76c9-4bdb-8711-efb2c65078fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "124f4a60-843c-4bba-84b5-4b81f9c6e008",
        "cursor": {
          "ref": "29a1864b-1fb6-4173-8cb7-ca2bcb5a327c",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "aa353652-b2d5-4906-9787-aaf9daf426b2"
        },
        "item": {
          "id": "124f4a60-843c-4bba-84b5-4b81f9c6e008",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "cbb2a4e6-7d23-4417-b080-b03791d25f43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b53714f8-4d5b-49fc-aa4d-9385ceaa13b3",
        "cursor": {
          "ref": "4c8a0af0-d9c8-478b-8464-adce4a542b0c",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "5a678fe8-75c4-45c2-b970-3a50923d86c7"
        },
        "item": {
          "id": "b53714f8-4d5b-49fc-aa4d-9385ceaa13b3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "b4e53033-5cbc-4a81-84df-c7f6e5bb794d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "500dc918-aec5-47f8-87aa-423315a2872b",
        "cursor": {
          "ref": "dec00eb9-f3dd-4638-8c5b-41ab223a77f5",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "67ba6fde-732b-4331-acce-66e0c68f6bbb"
        },
        "item": {
          "id": "500dc918-aec5-47f8-87aa-423315a2872b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "2724293c-01f9-4c3b-a00b-b107a91806da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05c58b79-ce8e-4eca-b0e3-e21813926426",
        "cursor": {
          "ref": "833c13f8-0cfe-43eb-9a1c-d716a1fa55f9",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "3c7ffabe-b5a8-4077-be93-4d61bb49aa48"
        },
        "item": {
          "id": "05c58b79-ce8e-4eca-b0e3-e21813926426",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "43fdf4aa-8556-4b4a-8fe7-b5a58db91640",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edcdedcb-5a84-46e1-8e0a-9611a021c561",
        "cursor": {
          "ref": "26d2c8dc-e743-4ae6-894e-e73053ec8026",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "b16126d7-d034-48d8-8ded-958c87389021"
        },
        "item": {
          "id": "edcdedcb-5a84-46e1-8e0a-9611a021c561",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "784b5f62-122a-4a79-8cf4-99b0f9c090d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de203697-19cb-4bfa-ab6e-23f3be8d6e46",
        "cursor": {
          "ref": "9661031f-090a-4544-b4a4-7667df4985e7",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "4b835902-f94d-435f-ba99-e994ea9c741e"
        },
        "item": {
          "id": "de203697-19cb-4bfa-ab6e-23f3be8d6e46",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "bc34cb4f-1a8a-4a7e-b836-fb7e62908e91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8db5a40e-ec73-4b42-8990-8967b5830ee3",
        "cursor": {
          "ref": "d79619d5-6b7b-4bc4-b5de-3ae5d14315aa",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "96ce5e4e-7a5d-4098-b087-947981d36bc0"
        },
        "item": {
          "id": "8db5a40e-ec73-4b42-8990-8967b5830ee3",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "b41051ae-f9e1-4ead-8820-d1cac0249c24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b61dbcfd-8cd6-4c9a-8771-73c3afc01945",
        "cursor": {
          "ref": "6ea8e7b2-d8d1-4d3f-85de-6799240e6423",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "ca18be27-f821-4523-9cd2-eae04acd4b1e"
        },
        "item": {
          "id": "b61dbcfd-8cd6-4c9a-8771-73c3afc01945",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "aef36619-603e-4122-b221-b2cc70336549",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1239930f-ede4-4e58-b212-4120e591fb88",
        "cursor": {
          "ref": "c36a92e9-5a82-4c00-aeae-b0402b4af45b",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "9d9a4c17-1def-4fb9-abbf-2058117abdf4"
        },
        "item": {
          "id": "1239930f-ede4-4e58-b212-4120e591fb88",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "974af03f-56b2-4882-ad3e-7a4bb4432dba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4087b8ba-b863-40d7-8be4-79edad437fbe",
        "cursor": {
          "ref": "064cb7ca-d36d-442a-8251-4e8e44c3e2ab",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "01653b8c-8585-4ad7-8bb9-c7c58bcda959"
        },
        "item": {
          "id": "4087b8ba-b863-40d7-8be4-79edad437fbe",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "6a32435c-6d38-4266-8957-30f7a12c0714",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17498b52-3bf6-4c12-b1d8-9993eaecce66",
        "cursor": {
          "ref": "98da2a40-8120-49b2-9071-83cbc1ea6038",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "da389825-55df-4552-b7d3-fd26e26962cf"
        },
        "item": {
          "id": "17498b52-3bf6-4c12-b1d8-9993eaecce66",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "4b4d4199-28e0-4355-9ad3-57471e22ea32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bd734a2-0a88-4a82-9306-87b62eaf4cd0",
        "cursor": {
          "ref": "7a978538-45df-4467-a04e-08db13b48016",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "609ec29d-2985-4a54-b4f2-431513f311a4"
        },
        "item": {
          "id": "2bd734a2-0a88-4a82-9306-87b62eaf4cd0",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "a33624e4-3e2b-4ca9-9d6d-20e0caae8ca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f67c1e6-db16-4e8f-8791-c6ba32c554c0",
        "cursor": {
          "ref": "62dd6558-d738-4eb1-a6ce-c6b78d57c234",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "16b99d0e-0197-408a-bd22-9e78c1b018c0"
        },
        "item": {
          "id": "3f67c1e6-db16-4e8f-8791-c6ba32c554c0",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "2b9e71d1-5457-427f-9e5f-daed03863dfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88a3c3d7-3d06-4cf2-8ba0-a6480c6cf91b",
        "cursor": {
          "ref": "ab010b3c-06c3-4916-8395-4bf7448f63fa",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "88fdc9ae-11bd-40dd-95b3-2826cfc4ea5d"
        },
        "item": {
          "id": "88a3c3d7-3d06-4cf2-8ba0-a6480c6cf91b",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "ad5f7f78-7179-4950-84d1-5a37935e34fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9981f9e-3a82-4830-9fd8-8201c09c12d7",
        "cursor": {
          "ref": "9803ac0d-602b-47a2-9a45-86645c6f2966",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "7f93b13b-3ebe-4d2a-aa02-b33813430ac5"
        },
        "item": {
          "id": "f9981f9e-3a82-4830-9fd8-8201c09c12d7",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "0ac099d8-23c4-4149-852f-6f732f3f6bba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa695ce2-34f2-43b1-9c26-e4135ec51a87",
        "cursor": {
          "ref": "00b7ac85-7247-4c09-ad24-13fa1d5b7a24",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "c19f4320-d4df-4319-bb44-3f921fd71cea"
        },
        "item": {
          "id": "aa695ce2-34f2-43b1-9c26-e4135ec51a87",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "214f05e4-8e07-489e-a5e7-2f3f7ced68e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f769525-28d7-40c3-9d09-7cd06a1a5697",
        "cursor": {
          "ref": "89cc89ec-4ae8-4519-accd-2afcec5763f1",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "10c4ea66-0648-4aa0-8836-71a4529f61fb"
        },
        "item": {
          "id": "1f769525-28d7-40c3-9d09-7cd06a1a5697",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "b74327ba-d6e7-4656-bef2-6e5c596a40c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be7817e9-f0de-4b01-a667-7f93e54c2d2a",
        "cursor": {
          "ref": "7fc48e36-53fa-4739-a20f-0b5a9e90c3df",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "81a1eb6f-7a16-448e-a6e3-735c0720ca0d"
        },
        "item": {
          "id": "be7817e9-f0de-4b01-a667-7f93e54c2d2a",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "3d7ceb53-e9df-482e-87db-c540a7b733bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f7a0235-f35f-4548-8cfa-e0d13849fee5",
        "cursor": {
          "ref": "a13d0f51-9a5b-4192-baeb-cc113960dcd7",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "bf7c23ba-8a9f-4493-adc3-01b5092937b1"
        },
        "item": {
          "id": "8f7a0235-f35f-4548-8cfa-e0d13849fee5",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "ce29224e-03f7-40d9-82ca-1e6815a2d0c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2a22ff9-be34-43b0-a099-bdc529d1b12b",
        "cursor": {
          "ref": "96d2a4c2-ce45-460c-82cb-9a3d5cfd181f",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "17940097-9274-4027-9ab1-50eb455e6753"
        },
        "item": {
          "id": "f2a22ff9-be34-43b0-a099-bdc529d1b12b",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "684cf3f2-b850-49b3-8864-34df6b77adf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddc6fda5-541a-4373-a82e-e353c068c554",
        "cursor": {
          "ref": "6e43355d-194c-4e0a-a941-ccc39e23c334",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "54e88e32-590d-4d7a-a66f-51d753fc9466"
        },
        "item": {
          "id": "ddc6fda5-541a-4373-a82e-e353c068c554",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "22c7ee99-d9b3-4336-bcad-02b835100b64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fa3c37b-9253-4eb7-b527-0c527c29ae40",
        "cursor": {
          "ref": "d4c4318b-0d37-457a-a382-4f8c87551a05",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "ee84c9e3-3f15-4aa2-ace6-c533b0d6823c"
        },
        "item": {
          "id": "2fa3c37b-9253-4eb7-b527-0c527c29ae40",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "f11740ed-34b6-4463-b4cd-f700fcc89719",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e07fb69-127f-43fc-9112-e8646499ee49",
        "cursor": {
          "ref": "ded389b9-3aae-4495-a28b-e0a4a2260daa",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "dcadeebb-9be6-4e55-ad31-4b7ba9a0471d"
        },
        "item": {
          "id": "1e07fb69-127f-43fc-9112-e8646499ee49",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "e6d327e7-3c0c-40b0-ba94-1c65794a90aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c99a9217-fb80-4f7a-a509-7efe668a7fe5",
        "cursor": {
          "ref": "c90b71da-cc90-453f-a54f-d464ebac1043",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "1fe27c47-4071-4323-a613-de504f7a5c59"
        },
        "item": {
          "id": "c99a9217-fb80-4f7a-a509-7efe668a7fe5",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "a4428a4d-720e-4579-82b4-21bb3f96d854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26fd9b1c-ffb4-47ab-8bfa-e8a88eaf9cbc",
        "cursor": {
          "ref": "63a16260-8b42-4d76-81e3-ebec72fb7b39",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "aef4a7ea-9dc7-41b8-8b32-d31f8516bf3a"
        },
        "item": {
          "id": "26fd9b1c-ffb4-47ab-8bfa-e8a88eaf9cbc",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "64f41dfd-9686-41b9-89e3-85fa3a79d554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bac8a2ef-1581-4275-acd0-a432d58ca07b",
        "cursor": {
          "ref": "904b8783-2c45-48dc-9261-75d5eec7ffb6",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "dd6f78a7-3bf9-48d2-9a21-ed73d587f481"
        },
        "item": {
          "id": "bac8a2ef-1581-4275-acd0-a432d58ca07b",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "f46c44e4-2a04-4425-acdd-59b76b96792c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee225dbb-0c05-46e7-a2a8-e0f73cb8e569",
        "cursor": {
          "ref": "e7510f36-9ad8-4d5f-96b9-9f189ce7c636",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "d9bcba97-4838-4a45-b851-a5e5e8c136a9"
        },
        "item": {
          "id": "ee225dbb-0c05-46e7-a2a8-e0f73cb8e569",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "ce7fd52d-83da-4c27-9502-5237ef35f3fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "161fe73f-f10f-4d56-aa81-73559a265f1e",
        "cursor": {
          "ref": "d6c9ffb6-8725-4ace-aafa-3cc6c25ea389",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "1a969a2a-a759-491d-bf45-a3262bebaab3"
        },
        "item": {
          "id": "161fe73f-f10f-4d56-aa81-73559a265f1e",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "3bb55c70-18e1-48aa-a6aa-6834fd36bf86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9773cfa-6dfd-421d-a9c5-9a6c1f261738",
        "cursor": {
          "ref": "d2da408a-4810-46ab-803b-5c9f7f3f28ae",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "d903e438-eb13-4477-80d6-27a195a11a43"
        },
        "item": {
          "id": "a9773cfa-6dfd-421d-a9c5-9a6c1f261738",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "076adfda-b581-40d8-a427-b79fb0b8a1ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e371add-80b3-4c7c-b9e9-f4114418f976",
        "cursor": {
          "ref": "94aac13b-5d46-4e9b-8c34-9e2b12db4d5b",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "faac1fae-705e-427f-9a0c-66a1b4d40e54"
        },
        "item": {
          "id": "5e371add-80b3-4c7c-b9e9-f4114418f976",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "e36e7944-4d0d-45c6-8608-18d8bae1d7e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e062f16-1eb3-46d5-bb4f-66e29751a7f1",
        "cursor": {
          "ref": "dff1d06a-2881-4fbc-926d-e19c730aef39",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "3daf41ee-497b-4df8-abb6-faa56e6420cf"
        },
        "item": {
          "id": "4e062f16-1eb3-46d5-bb4f-66e29751a7f1",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "c592bd51-4156-40a1-9284-77a7ddc9e762",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45b410ff-b86d-4a87-82d4-2bed6657438e",
        "cursor": {
          "ref": "7af63c6b-7174-43e3-bade-3ebd0d9cffd8",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "740cdd9e-56f5-4085-9fd3-c37674f0a364"
        },
        "item": {
          "id": "45b410ff-b86d-4a87-82d4-2bed6657438e",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "70617f04-ac63-402a-a4d3-dbd697b2f59a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d725c9e2-c22c-4438-81f2-b1458b14fc43",
        "cursor": {
          "ref": "c05ac7ff-e855-4ac2-aa88-b3767956726a",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "101a2953-159c-47fc-b815-cdafd772725a"
        },
        "item": {
          "id": "d725c9e2-c22c-4438-81f2-b1458b14fc43",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "7817e561-22ec-42da-b707-7a554bb8eafb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc2b49e3-d9e8-4878-a6d6-8f98961938dc",
        "cursor": {
          "ref": "e25b8e78-36e1-4e8f-b8cc-cbddbe5343d6",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "dd306d93-f132-4f57-8c18-5f23d19a8290"
        },
        "item": {
          "id": "cc2b49e3-d9e8-4878-a6d6-8f98961938dc",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "66d9931c-dc7c-4839-a8df-d662d0174c5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e16e9a1-c55e-49b7-bd0b-559e44a54b85",
        "cursor": {
          "ref": "6e6b3b5f-ae42-470b-9d8a-3476de8f58b2",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "e1861ba9-345c-4153-8f84-bb7c755571b2"
        },
        "item": {
          "id": "5e16e9a1-c55e-49b7-bd0b-559e44a54b85",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "e357f512-1e64-447f-b913-02d559ee5f46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aa7ddcc-4519-4808-ba76-9ca63cdc4a11",
        "cursor": {
          "ref": "11ce986f-f8fb-45de-88b2-b85107182c8b",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "c0b8ceba-b650-4aae-bc97-38b8e973e2e4"
        },
        "item": {
          "id": "4aa7ddcc-4519-4808-ba76-9ca63cdc4a11",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "5e760f53-a0c9-40f5-9b77-1e37e2aa5c89",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "338da717-c819-4574-9a4e-9c6a0598b421",
        "cursor": {
          "ref": "c6f2c0bc-c9e2-447e-8cfc-a12f4c04550c",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "de027e61-0975-45e8-8f02-35568e621527"
        },
        "item": {
          "id": "338da717-c819-4574-9a4e-9c6a0598b421",
          "name": "credentials_issue"
        },
        "response": {
          "id": "a0b042db-b921-4d42-aa6b-b329466b4a33",
          "status": "Created",
          "code": 201,
          "responseTime": 46,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7da15d3-3628-41b7-8c37-9ab19b3ea32c",
        "cursor": {
          "ref": "0722f806-c631-4188-91b2-5fe065de7721",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "12e00dc3-dff8-4fcd-a0ac-17a574b688a6"
        },
        "item": {
          "id": "e7da15d3-3628-41b7-8c37-9ab19b3ea32c",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "4692d40b-7c94-41fe-b3b1-9fa038cd5aae",
          "status": "Created",
          "code": 201,
          "responseTime": 182,
          "responseSize": 916
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9b70d5b-7a0e-4404-96a2-cd5cbd679f8c",
        "cursor": {
          "ref": "4511465d-3138-4ce4-9407-fbb9886d4c65",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "9af57533-5512-4db4-90df-8bb2dd2474bc"
        },
        "item": {
          "id": "f9b70d5b-7a0e-4404-96a2-cd5cbd679f8c",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "fa4ef04b-bbcc-4795-9891-69c54ce38f5f",
          "status": "Created",
          "code": 201,
          "responseTime": 49,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "434f07ae-d402-47c6-8856-ae988e7221a9",
        "cursor": {
          "ref": "127e9dc3-ded1-48ea-b06a-f893206c19f1",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "982c7909-5a02-4607-90da-330fd5975014"
        },
        "item": {
          "id": "434f07ae-d402-47c6-8856-ae988e7221a9",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "acc48d59-9fbc-4684-b689-0e5cd8248555",
          "status": "Created",
          "code": 201,
          "responseTime": 30,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7752a5e-b8ef-4315-afff-eb08fe37af11",
        "cursor": {
          "ref": "dd8e4eed-1f6a-4e58-9d6f-23b4640ff46b",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "2f127fba-54a5-4a43-bc92-23d2bcb63bc0"
        },
        "item": {
          "id": "b7752a5e-b8ef-4315-afff-eb08fe37af11",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "951a8fdb-ee3e-4bf0-8d41-3d5bc988435d",
          "status": "Created",
          "code": 201,
          "responseTime": 32,
          "responseSize": 907
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "cebce277-da35-4098-83bc-3580805709f1",
        "cursor": {
          "ref": "cf513c3a-6c6c-46fa-8c5d-569319c7acb9",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "b48e91fd-ec34-422c-b7bd-927242ca2c59"
        },
        "item": {
          "id": "cebce277-da35-4098-83bc-3580805709f1",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "8f36205e-b2ee-4a34-a48c-418d6223246b",
          "status": "Created",
          "code": 201,
          "responseTime": 32,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c0d288a-2dcc-43d9-98bc-fc7818c76994",
        "cursor": {
          "ref": "7578d89f-d449-472b-8a10-9a061742c81c",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "f3a9f292-f390-44c1-ae42-f43f6db2ce27"
        },
        "item": {
          "id": "8c0d288a-2dcc-43d9-98bc-fc7818c76994",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "108e906e-4fc9-4b54-897b-4143360a072a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a887e248-972c-436c-bdcf-ba9d359818d5",
        "cursor": {
          "ref": "a94ed4e3-41ac-4135-ba90-acaed0a22e10",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "d9bd0620-1e62-482b-b1db-0628038ec508"
        },
        "item": {
          "id": "a887e248-972c-436c-bdcf-ba9d359818d5",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "dc61956a-7715-43d9-95d9-bbc13092c883",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6ad6d64-5b5b-43dc-87a5-68d8568cd954",
        "cursor": {
          "ref": "b49712f4-6d78-42e5-8954-fedafe339852",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "b0e0b3ed-4d3c-4332-bea0-2306c4ba1a46"
        },
        "item": {
          "id": "b6ad6d64-5b5b-43dc-87a5-68d8568cd954",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "5801108a-3655-4fef-86ef-0044e9865d60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdae9c5b-7065-4c96-ae6a-cab88d540cef",
        "cursor": {
          "ref": "9b704751-ecf4-4bb4-a893-c3a7fb9c8730",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "734b9ffd-7f5e-4879-a89c-a32f00936b82"
        },
        "item": {
          "id": "bdae9c5b-7065-4c96-ae6a-cab88d540cef",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "8507dac9-46a5-4738-9ff0-ce11b1f8cbde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d66978e-cd3a-4d86-8455-efc3ce2cb804",
        "cursor": {
          "ref": "789e9146-1f6a-4bc1-9e76-41b1694faafc",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "5bc51719-2492-45c1-be55-af82da3773d8"
        },
        "item": {
          "id": "2d66978e-cd3a-4d86-8455-efc3ce2cb804",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "872ca9e3-01a2-4dc3-a8ff-6b9a804cd7b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02eb1411-38f5-4381-a293-fa9a59384397",
        "cursor": {
          "ref": "506b5a96-97dc-4a62-80e0-aca826305c18",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "e9877518-8dbb-447a-847d-52ee1ccf145c"
        },
        "item": {
          "id": "02eb1411-38f5-4381-a293-fa9a59384397",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a74b69da-0c19-402e-87a9-b0e01e8220c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74a348af-cf34-4abb-b175-6fab60e0fb8a",
        "cursor": {
          "ref": "7a82255e-d8b3-42aa-ac4b-db3cd7775304",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "e85b54ca-9027-4d83-9a4e-27836c2d1b14"
        },
        "item": {
          "id": "74a348af-cf34-4abb-b175-6fab60e0fb8a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "fefeff50-bf3f-4056-91ad-7471a0cc6b98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44c1be21-ce0f-4fbb-8deb-0605f5eb7fe5",
        "cursor": {
          "ref": "d953af39-e08f-4781-889d-568b2f760ffa",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "df22d69c-0768-4b06-88c8-d921e62a3230"
        },
        "item": {
          "id": "44c1be21-ce0f-4fbb-8deb-0605f5eb7fe5",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "5bf78390-d3ae-4cc3-a16c-d445af86e3b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c62ed11-8e1f-4cda-babe-a156c21a2399",
        "cursor": {
          "ref": "0e047a84-a335-4607-b701-7b39aa863ecd",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "f85256a8-525c-4c97-a5c1-ff8259771c5a"
        },
        "item": {
          "id": "9c62ed11-8e1f-4cda-babe-a156c21a2399",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "57f6f283-2d4b-4aaa-a345-f577b792a29c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e6c38c9-4583-42ae-acb7-8f34f4930097",
        "cursor": {
          "ref": "f36e6a8c-fadf-45c8-9fbf-15891b3b76df",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "7d851575-155d-495a-8dda-c20b027d8ce5"
        },
        "item": {
          "id": "8e6c38c9-4583-42ae-acb7-8f34f4930097",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "b5c63974-100c-48e2-a9f1-2505354c2a7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8f6cd9a-d638-4fa5-b979-6ed650408046",
        "cursor": {
          "ref": "266f760a-42e0-4d0f-821e-b1e1f32e19bb",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "f56add71-b219-4b2e-973f-80d36ed4d989"
        },
        "item": {
          "id": "a8f6cd9a-d638-4fa5-b979-6ed650408046",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "1f32f1d0-d598-4228-ac45-d3549aaa6399",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f67a383-4662-4dcb-b83e-52adf1b8a22b",
        "cursor": {
          "ref": "9fe5b879-e2f2-4cfa-ba0c-274430b81b60",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "07290c51-a859-4942-9941-094b3ada4778"
        },
        "item": {
          "id": "8f67a383-4662-4dcb-b83e-52adf1b8a22b",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "83067cf6-fc2f-43ef-b0ab-ad1af9a09778",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "625d8404-3ada-4f57-8a2e-3c7d3fe6bb9d",
        "cursor": {
          "ref": "d678aa0e-3494-46ed-a0b2-a83d9c05f59f",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "335de2e0-dad1-4948-beeb-65b7e6c28623"
        },
        "item": {
          "id": "625d8404-3ada-4f57-8a2e-3c7d3fe6bb9d",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "0ae10060-4cc0-4ecf-b549-6a71a035df67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e5e1af0-0a3b-422e-a3c6-01eeb3a648e2",
        "cursor": {
          "ref": "efb877a6-a00d-45f7-add8-84187f03052a",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "4e15e925-74e7-47b2-b20a-66074487281f"
        },
        "item": {
          "id": "3e5e1af0-0a3b-422e-a3c6-01eeb3a648e2",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "e4a95830-d4ea-48d3-9ec3-d849e2abd7b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "006c5a05-e684-41bd-ade1-c36481f9909c",
        "cursor": {
          "ref": "15315970-ff8f-4e05-b8d2-3aef5198c530",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "ae8b97cd-99fd-4594-9d85-0525d0dbff27"
        },
        "item": {
          "id": "006c5a05-e684-41bd-ade1-c36481f9909c",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "90a2b1cd-805b-4f3f-b099-31fb7a0a93eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab60a98d-bf85-4da0-9b5c-175affe23b5c",
        "cursor": {
          "ref": "a20d6309-4738-4386-ac45-f56e858d4e41",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "b0d02fb9-b138-40ae-be5d-12c9c6322098"
        },
        "item": {
          "id": "ab60a98d-bf85-4da0-9b5c-175affe23b5c",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "272a3b42-04c2-4eea-9992-1c209284e0cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "029949cd-31f6-43ee-b10e-9dd2d56c1f64",
        "cursor": {
          "ref": "0a7b9abf-d6f6-4f74-9888-6cb28edaba14",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "13db362a-184c-4a32-b5f3-23757fa5ae2b"
        },
        "item": {
          "id": "029949cd-31f6-43ee-b10e-9dd2d56c1f64",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "76d8d4eb-95e6-4f5c-9184-1e2610a92fc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "943528cb-4f23-4521-b682-129ec83db5c3",
        "cursor": {
          "ref": "1fbb0d1a-f244-47e1-afd3-d1fe6b32ae5c",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "05b1827b-15b5-45d7-80e0-67d2bda1ac2c"
        },
        "item": {
          "id": "943528cb-4f23-4521-b682-129ec83db5c3",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "1e5c6b90-3f36-4154-89b3-9a1bc6f92adb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d34fb675-f036-4d99-b785-51db6dceab44",
        "cursor": {
          "ref": "87719642-4a81-4331-b521-dd8e2b7f06b7",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "6160498e-8fa8-4ca0-a602-653f74c0cf35"
        },
        "item": {
          "id": "d34fb675-f036-4d99-b785-51db6dceab44",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "3fb5b176-0195-4081-97cb-e94fd5da69c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c77cbfd-01cf-4e57-aa3f-deaea74e0d82",
        "cursor": {
          "ref": "fb1259af-1dab-4322-930b-69f585a6066f",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "f97cae5f-c225-40d7-9334-1cae32a40059"
        },
        "item": {
          "id": "8c77cbfd-01cf-4e57-aa3f-deaea74e0d82",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "0940f495-6387-4e62-871b-29ab9078bf2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4878fb81-f066-4140-9bfa-32243eb0078d",
        "cursor": {
          "ref": "a8100125-0b18-4860-96c4-d7bc0d70892f",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "5920272e-a24d-40a6-b889-36827b1cd72c"
        },
        "item": {
          "id": "4878fb81-f066-4140-9bfa-32243eb0078d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "54cc66cb-c331-4833-8d6a-bd486d463d21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "084e1bf9-1c05-4053-856e-e9cb5b637727",
        "cursor": {
          "ref": "ebfd82ba-cc68-43a7-a5cd-8cf3b95d6857",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "42d89361-393f-4eb9-9005-a215a280fa8d"
        },
        "item": {
          "id": "084e1bf9-1c05-4053-856e-e9cb5b637727",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "f957b2ca-b880-4e22-bff5-e064347540b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38af7161-d956-4873-acb8-55acef3b61b5",
        "cursor": {
          "ref": "b0405380-dd7d-44cc-9522-52b19ff8f08a",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "755468cc-0cb9-4440-8c7b-308ef6cc8ee7"
        },
        "item": {
          "id": "38af7161-d956-4873-acb8-55acef3b61b5",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "5f511c88-b08d-4666-a22f-e0deaa754e67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5cf1b91-3912-4a30-9eef-0f6f5da8b6aa",
        "cursor": {
          "ref": "65f686fc-ddf3-4bef-a877-3576484a9060",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "478ba16a-a2a8-4b7c-aaf4-51e4537c6985"
        },
        "item": {
          "id": "c5cf1b91-3912-4a30-9eef-0f6f5da8b6aa",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "b002bf01-cd5a-4b1b-a4a8-7a67c5b588ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f74e758-4dfc-4a81-addb-df3f933cf239",
        "cursor": {
          "ref": "04c29ded-5da4-4d51-888f-725349d8b556",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "0c73babc-c5a7-4106-be86-7adde27d812d"
        },
        "item": {
          "id": "9f74e758-4dfc-4a81-addb-df3f933cf239",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "01ef3cad-d9bd-4c86-95a1-dcc5a2301570",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bddefa5-eab6-488c-b5bc-1222739566a1",
        "cursor": {
          "ref": "c8d21ee4-6fd5-4cd9-a5f7-9b29e070c28d",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "2a51df83-3de7-446a-9fbb-06ba7a56ddc4"
        },
        "item": {
          "id": "2bddefa5-eab6-488c-b5bc-1222739566a1",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "ec24cfb8-ee03-4b4d-9dcf-f186288ff14a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4edcc62a-3960-42b4-b9d1-22cba0ce3ddf",
        "cursor": {
          "ref": "770452dc-a881-41b3-b800-20eac34d42b5",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "35ea1e2b-da68-443d-9f8b-dd213d34321e"
        },
        "item": {
          "id": "4edcc62a-3960-42b4-b9d1-22cba0ce3ddf",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "d6a80e27-5008-4892-a150-3ce570154e5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5b55a8b-ee79-4119-8ab7-d12f433e9f50",
        "cursor": {
          "ref": "f8cc1782-26b7-49a2-bb76-1392a35a7f6b",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "bcc70ad7-c29d-44fe-b7d2-55d85260e3ce"
        },
        "item": {
          "id": "a5b55a8b-ee79-4119-8ab7-d12f433e9f50",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "79a52ec9-201f-49a3-a149-1ce8c3e7f964",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9c4a25b-2dba-47bf-a046-fbb2c2fe3f2e",
        "cursor": {
          "ref": "1b2320f4-c215-47fd-90d7-4d06cbd1b0b4",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "4d6fbaf4-e2a0-41fe-89fd-d2cfa9a1b3d4"
        },
        "item": {
          "id": "f9c4a25b-2dba-47bf-a046-fbb2c2fe3f2e",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "06e4f0f5-0b31-4930-89ec-4cf64963bac3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40349d89-d120-4d1e-896e-aff49076f258",
        "cursor": {
          "ref": "e243a785-7efc-4fe8-b04f-b324c966c9b7",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "d8f12b1e-99a9-4e77-b890-b89ee6fbe051"
        },
        "item": {
          "id": "40349d89-d120-4d1e-896e-aff49076f258",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "a78aea55-623d-45bb-9ac7-a960af8a27a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8d839f3-0cca-4674-864d-f6a87993afbe",
        "cursor": {
          "ref": "8ba5e36c-ef16-4aab-9ff3-ffb637af2683",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "c33f3f61-51f9-472a-a31f-fe61e30b0037"
        },
        "item": {
          "id": "a8d839f3-0cca-4674-864d-f6a87993afbe",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "f94238c2-d0c6-4668-b034-096097315bb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b8179c6-5a44-4541-bdb7-3e051bdfaf18",
        "cursor": {
          "ref": "15d152db-b0ee-4258-be82-3da812c5f902",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "0eb2d056-a58d-4eb6-8b63-b441d5b0dce6"
        },
        "item": {
          "id": "4b8179c6-5a44-4541-bdb7-3e051bdfaf18",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "8a486277-7fc3-445d-9d70-4c3d981f251d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46710bcd-6ebc-413c-b7de-68833374fd0a",
        "cursor": {
          "ref": "dfe75696-a9fd-475a-9823-50e9b63fce33",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "48a4f96d-4897-43a3-a914-9fc4286e1ad4"
        },
        "item": {
          "id": "46710bcd-6ebc-413c-b7de-68833374fd0a",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "6b5b90d3-bb19-4e34-be20-4360ab6580f9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9c72472-e7c6-4507-b5ad-6d74ad8ce13e",
        "cursor": {
          "ref": "148efdc0-9a4a-4339-ad39-c5cdd0d46db3",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "36b3e99a-7995-43d9-a9b6-96b27489d207"
        },
        "item": {
          "id": "e9c72472-e7c6-4507-b5ad-6d74ad8ce13e",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "2405bb66-e109-4359-a573-9ac07d92c997",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a38663c4-0e83-4973-981f-a2ce998bee16",
        "cursor": {
          "ref": "84f5635c-8ff3-4274-8fd1-16925609c179",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "81291962-f990-42ef-b666-372cb8e7ab32"
        },
        "item": {
          "id": "a38663c4-0e83-4973-981f-a2ce998bee16",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "acaaefed-71b5-4c53-993a-f460e798d50f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b01e5f0-8e3a-44f7-a49d-35fbf48311fd",
        "cursor": {
          "ref": "5ddd265f-8c74-4871-89b8-0bdeb635c0c1",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "5e4426fb-395b-4759-8530-d214de5f9c5c"
        },
        "item": {
          "id": "3b01e5f0-8e3a-44f7-a49d-35fbf48311fd",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "754db99c-220a-4dca-b7e8-b3eee29cee0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b893001-f73c-4a9c-8040-54aa9768f87c",
        "cursor": {
          "ref": "e0ca81de-d560-4e81-98a5-95a02cad8d75",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "49c724b4-7837-4725-be64-5b29ab9354ec"
        },
        "item": {
          "id": "6b893001-f73c-4a9c-8040-54aa9768f87c",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "aae79d86-7517-4e26-97cc-8900477d8f53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef15782c-cdcd-4239-a8c7-fb1af504090d",
        "cursor": {
          "ref": "687589be-2381-41f4-b1b5-5e92b1c05644",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "9db85373-30bf-42bc-bc63-232f737b95bc"
        },
        "item": {
          "id": "ef15782c-cdcd-4239-a8c7-fb1af504090d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "1eb11a51-4e4a-4b92-8459-1cc386588370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1130ba0-65fe-4399-bde0-c15a1ed87b89",
        "cursor": {
          "ref": "536b3538-83f5-450d-b879-510b5984d389",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "d341bbad-e72d-4ce2-a587-67fad6bef73f"
        },
        "item": {
          "id": "f1130ba0-65fe-4399-bde0-c15a1ed87b89",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "1c8637d6-885d-4838-b359-d649de6c4a7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5f2c085-e4c5-4bb7-9223-28d013152380",
        "cursor": {
          "ref": "9ec42ceb-1f65-43c5-82d8-ce5f7cee733e",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "5ffc5b73-f418-4987-9c6c-c7d120623112"
        },
        "item": {
          "id": "d5f2c085-e4c5-4bb7-9223-28d013152380",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "6503f0c1-e52d-4164-9b20-0231805abc1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16b473bf-1dd6-4dd5-9a92-8bbe2581e26c",
        "cursor": {
          "ref": "ad3d890a-b429-49db-be66-a58a4b0da28c",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "de8d4e38-d04d-4886-92b0-c8f21717aaa4"
        },
        "item": {
          "id": "16b473bf-1dd6-4dd5-9a92-8bbe2581e26c",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "2e5891cf-2e3b-470b-b03c-10cb69eec8ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16773a19-df03-4a9b-9b01-9eed21667735",
        "cursor": {
          "ref": "ac1b6fee-8ce3-47f9-8f51-a4d62c14f2dd",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "c2133b94-e5a9-4bcc-93d8-2ef8e53b89da"
        },
        "item": {
          "id": "16773a19-df03-4a9b-9b01-9eed21667735",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "0be6af6e-3ea6-4ff1-9d7e-e8aeb2c0abae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35dc1d66-557e-4c8e-b387-4b9f96630447",
        "cursor": {
          "ref": "2c37b834-b879-4b35-bdd3-d7597056d751",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "8e20b3dc-f140-4d2c-b62d-5f1fc49c5611"
        },
        "item": {
          "id": "35dc1d66-557e-4c8e-b387-4b9f96630447",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "06162d6b-145a-4123-9577-bb1a5dfa817a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9418b348-d707-43f1-a116-a27b91e775e6",
        "cursor": {
          "ref": "36e1a980-31ff-47d9-b350-f85f33272172",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "bb5e00cb-b2db-452b-8745-03c6fc5af8b1"
        },
        "item": {
          "id": "9418b348-d707-43f1-a116-a27b91e775e6",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "6d6c61be-2630-43cb-8cdc-97a3d850eeb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "212fcb3d-df31-4e23-8ae4-698c63c81393",
        "cursor": {
          "ref": "061f4b8e-d7a0-4e06-8790-16820c61f626",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "4175cd9c-b3e7-4f4e-b4c8-8cab2db93fe6"
        },
        "item": {
          "id": "212fcb3d-df31-4e23-8ae4-698c63c81393",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "a6d6acc6-09e3-4790-90c5-52313613d327",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09717928-ae65-408a-8d35-3b5c9877583e",
        "cursor": {
          "ref": "cbbeba66-0c74-41f2-81ee-0efc52048312",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "489a1625-c7e7-4c36-9a89-a1b2496146e0"
        },
        "item": {
          "id": "09717928-ae65-408a-8d35-3b5c9877583e",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "88bb9797-f9bf-4f91-9a80-89731fe7fc02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d722892-c866-404d-a05e-ac8d954d616a",
        "cursor": {
          "ref": "b5e5e682-55d8-4bfe-a2e7-32030bba86de",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "1b94118d-8c12-4551-bbe1-5ee82142e994"
        },
        "item": {
          "id": "3d722892-c866-404d-a05e-ac8d954d616a",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "a8e57232-d28b-4134-88ab-e85f7da0baf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67272ac0-6468-411f-a14f-74e2b4e6ed12",
        "cursor": {
          "ref": "8023a667-e592-4393-a454-f46fe2c8f208",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "97a53005-6c53-4563-bff5-acb2d0efb2be"
        },
        "item": {
          "id": "67272ac0-6468-411f-a14f-74e2b4e6ed12",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "030afd3d-a80f-41e3-9434-f7a2c6f82bed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfb66cdf-67bd-4d7f-918c-f6cc4846b5ce",
        "cursor": {
          "ref": "96549b85-2484-429b-8f7e-6e594bcc72bd",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "28a365e2-0562-4121-ab48-b1d7a0aa2224"
        },
        "item": {
          "id": "bfb66cdf-67bd-4d7f-918c-f6cc4846b5ce",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "da5664a2-f44a-447d-8a97-93269fd9023b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d21a858e-6097-4f0d-a118-84b67e4c9353",
        "cursor": {
          "ref": "f2b0f3c4-e4f7-425c-a5cc-f11167719464",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "e1a2f818-cc15-4888-91be-e1b22c611881"
        },
        "item": {
          "id": "d21a858e-6097-4f0d-a118-84b67e4c9353",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "9edc6854-26fc-4e7f-a624-48010dce1596",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0dbf025-8309-4ded-ad6c-d1f0ca7438d5",
        "cursor": {
          "ref": "58434662-6569-4ec1-b980-946d626b1c8a",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "46da87f8-5dcc-4d4c-875c-23d745a0e076"
        },
        "item": {
          "id": "f0dbf025-8309-4ded-ad6c-d1f0ca7438d5",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "efacc1f4-5d88-42c9-affb-356dc71dbc7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8273024d-0ec2-4530-9144-8f28ffda2824",
        "cursor": {
          "ref": "5882d796-5601-4932-ad04-ba2ca6fc0b3f",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "d33fd97b-535c-4904-9a65-1a1ee2f2ec53"
        },
        "item": {
          "id": "8273024d-0ec2-4530-9144-8f28ffda2824",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "8209440f-67e8-4d5e-9b76-f0b75d2897a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bc95f11-5763-424c-a198-19fe737fe2bb",
        "cursor": {
          "ref": "1e616ac0-39f1-4802-8d3c-b0567193e764",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "b1469875-3955-4acf-a6df-b8d50b94f716"
        },
        "item": {
          "id": "3bc95f11-5763-424c-a198-19fe737fe2bb",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "b8b56827-a9c7-440f-a23b-11c891ee2dfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45972aea-15a5-485b-9fef-0475985a1282",
        "cursor": {
          "ref": "949cfa2a-f915-449b-93ca-57ad1c9fb260",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "9af69f7d-5643-4e71-a298-2dc5b92fc97d"
        },
        "item": {
          "id": "45972aea-15a5-485b-9fef-0475985a1282",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "8a66bcd0-0d96-46a6-966b-e87289fde18d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31bea1c1-fbb5-4ab9-9574-277043a4a1bc",
        "cursor": {
          "ref": "18771ee1-1f7d-4a70-8e8b-3092584fb929",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "3b3f0a32-338d-46a6-9211-95458185e41c"
        },
        "item": {
          "id": "31bea1c1-fbb5-4ab9-9574-277043a4a1bc",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "329d2c7c-3135-4639-a75a-3246cadb4699",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18311d51-54e3-4fea-a9b3-9f4bcbf66f84",
        "cursor": {
          "ref": "a413a7cd-8a44-46cc-a3f9-9a0bbdad6a1e",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "4771b994-3b36-4e9f-b552-9f6ab14dec70"
        },
        "item": {
          "id": "18311d51-54e3-4fea-a9b3-9f4bcbf66f84",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "96656d7c-de3c-4a96-9ca3-9ccd67922f0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a847ddcb-fd5f-423e-97ce-a9f5e0c6ff50",
        "cursor": {
          "ref": "c1576140-6fa7-48bf-976a-4abdf8064dbc",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "e83d2255-0b30-40cb-bace-c44d41e465ae"
        },
        "item": {
          "id": "a847ddcb-fd5f-423e-97ce-a9f5e0c6ff50",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "52d95446-d8bc-46ce-bdb6-a9c9d212f73d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af80059b-3174-41a5-80b3-c643bf3b27a8",
        "cursor": {
          "ref": "5ca4758d-818c-451c-a27d-73c32888bdfd",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "91dbab77-e281-4fe4-9fee-d315163443f4"
        },
        "item": {
          "id": "af80059b-3174-41a5-80b3-c643bf3b27a8",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "289a0d7b-2825-478c-b8a6-b97008c19420",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e166e1a9-3933-405a-8309-f2a96ca86ff2",
        "cursor": {
          "ref": "130fb21c-f290-4011-9437-88a4bc308ddb",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "9dcf8e41-9487-45ad-8d9e-68d4e164e436"
        },
        "item": {
          "id": "e166e1a9-3933-405a-8309-f2a96ca86ff2",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "ce91c4e7-4e0a-481e-8517-12a6598e27e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f151f9f-50d1-49df-8a3c-762f849e2b8a",
        "cursor": {
          "ref": "c747b27f-0449-406d-9f57-d7e452d55dca",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "420bbeaa-ac79-4b00-99d4-a128bb94522a"
        },
        "item": {
          "id": "4f151f9f-50d1-49df-8a3c-762f849e2b8a",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "3616fde7-6f53-40f8-841a-39cc4b0b28b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7e78dc9-be8e-4ffe-82e5-5d025ef5e73d",
        "cursor": {
          "ref": "65913c62-670d-4ee6-8227-aa345fd3c569",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "59cc14f1-cf0f-4eeb-9c54-17bc08fa4704"
        },
        "item": {
          "id": "a7e78dc9-be8e-4ffe-82e5-5d025ef5e73d",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "31243489-a911-4f11-a5e5-72fbb03b1dd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7afb3039-9b11-47cc-9fc2-602e09b4211c",
        "cursor": {
          "ref": "f317f5b4-20a5-4113-a569-bebdfcad870c",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "4475794b-9458-44b5-b065-4b9bdaca591b"
        },
        "item": {
          "id": "7afb3039-9b11-47cc-9fc2-602e09b4211c",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "de90b0d3-c9bf-4002-b976-9ea5a71a8e2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c71fb2b-608b-4569-970b-8b0595561b52",
        "cursor": {
          "ref": "63ea4f7c-a218-441f-b11a-d86e15cb8053",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "bdea5a07-91ab-48b8-8852-64b8fca1ab38"
        },
        "item": {
          "id": "2c71fb2b-608b-4569-970b-8b0595561b52",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "ef369ae8-ed70-4e8d-933b-b781d1a52144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ff5b66e-0854-4d63-80a3-a633f44f8ada",
        "cursor": {
          "ref": "a11af2c2-46f9-41c0-afc8-0dc7929fc772",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "9cf4cddf-1c34-4913-8452-a5b4dfe5d184"
        },
        "item": {
          "id": "2ff5b66e-0854-4d63-80a3-a633f44f8ada",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "4d3aa891-d47a-4bd6-83a7-cc993f02e00c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e23f98f7-0223-49a6-94a1-e9ee9b3e027a",
        "cursor": {
          "ref": "f0330061-2971-4b08-8a70-e138bc634488",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "058767ab-a2b9-4c94-b5ac-ca30f9de3082"
        },
        "item": {
          "id": "e23f98f7-0223-49a6-94a1-e9ee9b3e027a",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "c6826696-8f38-4164-a70d-76fe5b8edd36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3321a22c-6bc1-462e-a152-e64f9b8b9fea",
        "cursor": {
          "ref": "a7644134-7eeb-48fe-bfa6-8356eacdf92f",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "363da799-7cf1-481f-9063-d749939d8f47"
        },
        "item": {
          "id": "3321a22c-6bc1-462e-a152-e64f9b8b9fea",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "a3af9760-9818-43f6-8022-de29bccdfc48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f394a85-cdb3-4d73-bc64-664d2eab2aae",
        "cursor": {
          "ref": "f6463c25-989b-409d-ae21-d2b74e4f4952",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "1d1c10b8-8247-4796-813e-128561285a24"
        },
        "item": {
          "id": "6f394a85-cdb3-4d73-bc64-664d2eab2aae",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "eed17c61-25b7-4910-8ec6-8dd80897189f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a153ce0d-280f-4f15-9b46-d6c5140f5a6c",
        "cursor": {
          "ref": "2dafe25f-2986-441a-a06b-4a08c1997bd9",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "547ef306-6762-4c41-9240-87c2c89e812f"
        },
        "item": {
          "id": "a153ce0d-280f-4f15-9b46-d6c5140f5a6c",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "d4bd80ca-74b4-47b2-9aaf-e465b5abfdee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "421991f1-7aaf-45b8-a8fd-6451ce61e85e",
        "cursor": {
          "ref": "04224828-2860-42f3-8fce-1bb16566fcf5",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "d34f668d-6b48-4a44-b3db-c7c272142d67"
        },
        "item": {
          "id": "421991f1-7aaf-45b8-a8fd-6451ce61e85e",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "b4b68293-a740-4728-8012-972ac3056904",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d50aff40-99ba-4d6c-a58e-ab61070d87ce",
        "cursor": {
          "ref": "dab186f7-dab8-4b1b-97ff-2499932e7d7f",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "518430b1-215e-4ab5-bd82-b8c2ce27a71e"
        },
        "item": {
          "id": "d50aff40-99ba-4d6c-a58e-ab61070d87ce",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "86fd89aa-bfd2-49ed-b9e7-44c1146a3e25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14e736de-9c9b-4ee4-94ba-505b54fe628a",
        "cursor": {
          "ref": "6dc10c21-ce92-4060-94f1-8937992afb56",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "9da89e55-ab43-4c5f-8ca9-3d660b4c7354"
        },
        "item": {
          "id": "14e736de-9c9b-4ee4-94ba-505b54fe628a",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f52bc7a8-3780-4a5b-a528-7d60d94df984",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53472fa6-c9fb-4f6b-a7ee-f365e6bde76d",
        "cursor": {
          "ref": "654d3390-082a-408f-8888-b358351f8ff0",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "608dc0d4-3a15-4804-a50f-aaca4ca5a689"
        },
        "item": {
          "id": "53472fa6-c9fb-4f6b-a7ee-f365e6bde76d",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "1b49ea4b-66d8-4a0e-9441-1f94d3d961a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0fefb86-cc2c-47b8-9b77-308904725b45",
        "cursor": {
          "ref": "b18af9e4-f9f4-4fab-9249-fc0e96ff06c5",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "87ce3780-9434-4c83-9bb6-d70eb78da16f"
        },
        "item": {
          "id": "c0fefb86-cc2c-47b8-9b77-308904725b45",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "31e5ff66-2704-4e7c-a142-24e5c6b49f56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "296770c5-0b87-411d-9a8d-879689fe5054",
        "cursor": {
          "ref": "4b1162e4-bdba-4df5-aae7-5321e88aa110",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "aebd3b72-7cda-461f-8897-a0adf174937d"
        },
        "item": {
          "id": "296770c5-0b87-411d-9a8d-879689fe5054",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "733cc65d-f524-4b65-8fd1-e870aa0f1051",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82beabc4-5648-4e05-988e-d59858f5e9a4",
        "cursor": {
          "ref": "69560865-f8d0-4357-8b41-4655fb95c2b7",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "fa78eecc-bb14-4cf8-b218-022a77bdf88d"
        },
        "item": {
          "id": "82beabc4-5648-4e05-988e-d59858f5e9a4",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "7f1b69f5-9287-4280-9c2a-d79538a61ff2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab5a6ad3-1756-4350-9b20-e4f9e7865be9",
        "cursor": {
          "ref": "c70d8d68-c9c5-4eb4-814c-f8d979394e8b",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "6acac00e-9510-4575-9001-d22f88819f5d"
        },
        "item": {
          "id": "ab5a6ad3-1756-4350-9b20-e4f9e7865be9",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "ca87f85c-e5d1-41de-a5b4-148ff95d5671",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b688621-9d4b-4e18-9f3e-63251374a916",
        "cursor": {
          "ref": "68dd9836-cdc1-4900-bf3c-9b4658b5c255",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "87f32158-5402-4ee4-9696-92170e6a0202"
        },
        "item": {
          "id": "8b688621-9d4b-4e18-9f3e-63251374a916",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "93a66821-9065-42a3-8e24-80cbab43471c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2243ba8a-9b1e-4dac-b1a8-92c643f0367e",
        "cursor": {
          "ref": "c4dac46b-a9e3-4793-b310-0fab8338534c",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "3ddbf358-ccbf-4d30-9c0b-be7180449274"
        },
        "item": {
          "id": "2243ba8a-9b1e-4dac-b1a8-92c643f0367e",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "79b980cb-7e40-44df-aaa5-41b2341e2eac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80661798-5c64-439e-8bff-a3cad0988ef7",
        "cursor": {
          "ref": "c753ee4a-1085-4773-bfc7-20a186a80efa",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "7384ea40-86de-4a55-a59c-86df047e1839"
        },
        "item": {
          "id": "80661798-5c64-439e-8bff-a3cad0988ef7",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "5025ac93-c631-4a8f-bf4a-f785345c68d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "531fe9be-efd9-40a0-b8c9-7b8894ad2c3a",
        "cursor": {
          "ref": "7be178bb-3fc4-4b02-bb65-db7bb601ca98",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "1c33bd08-7d81-4dfa-bc38-800342083229"
        },
        "item": {
          "id": "531fe9be-efd9-40a0-b8c9-7b8894ad2c3a",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "37efb7e6-e074-4e48-9fd0-97cffe4f0e19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ae434dd-c724-486f-9cb2-241343d1596d",
        "cursor": {
          "ref": "b4e17777-0418-4106-b87a-511789f70ecf",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "709521c0-e4db-498b-b749-b892e1baa603"
        },
        "item": {
          "id": "5ae434dd-c724-486f-9cb2-241343d1596d",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "0f41ea9a-9634-4395-8be8-a7c89f67bbc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b20a8b3b-cf21-41c4-b0fe-83009742607f",
        "cursor": {
          "ref": "0de71f5f-f798-4e0f-98a8-32405ced5b9d",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "9bf78d13-8b5b-4caf-af03-b9386d284ac6"
        },
        "item": {
          "id": "b20a8b3b-cf21-41c4-b0fe-83009742607f",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "ac61528b-7151-4946-8ac2-abdd13c89bc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3fd3ebc-1779-4314-83a2-dd769a18bd3d",
        "cursor": {
          "ref": "25be3944-89a3-4c8b-b0e1-4d32ebe7ab9e",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "5eaf13e4-2abe-407f-b140-ff8fc8a5f283"
        },
        "item": {
          "id": "a3fd3ebc-1779-4314-83a2-dd769a18bd3d",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "e4ce3fb9-6ddb-4e8a-ad55-a15378089a38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d371db44-ca09-41ca-80b6-096c67ed6849",
        "cursor": {
          "ref": "caa1b9f3-3791-4d94-8913-50c48c0e652b",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "6c36c3c6-b4c3-46e3-9439-bde68c56bd14"
        },
        "item": {
          "id": "d371db44-ca09-41ca-80b6-096c67ed6849",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "a50dc344-1d98-47f6-9b9c-02ecc0bc28bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f719eb18-4386-4c42-86e2-f58ee63aa5b2",
        "cursor": {
          "ref": "85686222-611c-4ec5-b4b9-b3a8e71e9dca",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "eec82104-f90c-4839-893f-21bba8e6fdf2"
        },
        "item": {
          "id": "f719eb18-4386-4c42-86e2-f58ee63aa5b2",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "dbdd7500-9882-474f-8d61-f167d027c2d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3914a18d-00fd-4202-9e80-f60406df68b2",
        "cursor": {
          "ref": "a4ef97dc-449b-4413-9568-e845604df509",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "f191305d-94a6-4914-aebc-9068ca658cf6"
        },
        "item": {
          "id": "3914a18d-00fd-4202-9e80-f60406df68b2",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "7dd98f39-b7a2-43af-81be-6115bf24b7bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2c0e045-b3ea-48d0-8e31-26c94ae4ef64",
        "cursor": {
          "ref": "1f253aab-0d66-4552-8a88-e823f0f986ce",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "f81b6034-2517-4e5c-aecf-43ddee0ee4e8"
        },
        "item": {
          "id": "a2c0e045-b3ea-48d0-8e31-26c94ae4ef64",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "a80aba3c-4f8c-4b7b-ba7b-077223ac9660",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7bed627-557a-4e14-a3d8-fc37294d089d",
        "cursor": {
          "ref": "ac084b57-3322-4518-ba92-12812f2730dc",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "da52c997-0e2d-48e2-945f-643e536a7d9a"
        },
        "item": {
          "id": "a7bed627-557a-4e14-a3d8-fc37294d089d",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "541e6ff1-60a0-4de8-a202-b10ad078f604",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6069fb14-98fc-4657-9831-79a828c337ac",
        "cursor": {
          "ref": "e771f019-6938-47e0-b43d-5aad5bf3ff6d",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "7856cad6-ab55-4cde-8fd2-d9cfbf4bc5a3"
        },
        "item": {
          "id": "6069fb14-98fc-4657-9831-79a828c337ac",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "aeb6ad48-51c8-4def-8bf3-f71e0e2ccc67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a178bf5a-7772-4ea2-ab61-aa2619fbf000",
        "cursor": {
          "ref": "60632e36-691f-41ab-9e5e-48632ca784ec",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "e96cf46e-dd41-43c0-b14a-dc5e447c1d9a"
        },
        "item": {
          "id": "a178bf5a-7772-4ea2-ab61-aa2619fbf000",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "9e5220db-720f-4759-a554-642625f8de39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28375eef-be6d-4772-8a6b-fa090b59b263",
        "cursor": {
          "ref": "0ba02558-c3c6-4739-b8bf-ff8dcd9ad324",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "53c42cf0-db22-462c-84c2-6f97fd1a19f9"
        },
        "item": {
          "id": "28375eef-be6d-4772-8a6b-fa090b59b263",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "f97d6d5d-3db2-4678-8d27-2cc3e7301365",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f16654f-1787-454f-a23a-99b9d78e7a16",
        "cursor": {
          "ref": "42980d6b-e2f0-4d13-bfbb-ff4c9119754e",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "3a27a255-be7b-4238-b117-068288904f42"
        },
        "item": {
          "id": "9f16654f-1787-454f-a23a-99b9d78e7a16",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "4566e52b-244f-4e38-a00c-ec44211a385d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5da5d457-229d-4c6e-8cc8-3f84c47d75ef",
        "cursor": {
          "ref": "5c39f21b-a559-4458-8784-adfc9516603c",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "45ac5695-1067-429a-9673-5a7324d88d29"
        },
        "item": {
          "id": "5da5d457-229d-4c6e-8cc8-3f84c47d75ef",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "7f6e9c95-b1d7-454c-b939-994d11bee7f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "542df1d5-6bae-4b74-a706-d9994deff507",
        "cursor": {
          "ref": "502bda8e-5171-4c8b-bdb1-64814d00baae",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "fb48e54b-54d2-4e35-b759-7eb0e80a737d"
        },
        "item": {
          "id": "542df1d5-6bae-4b74-a706-d9994deff507",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "23fd6759-e68f-4117-a00f-4d5a414b443a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f18d963-ccff-454c-8070-68e3ecd1f17c",
        "cursor": {
          "ref": "95b9c70c-975a-43d7-8e1e-586694bcbeb4",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "2cabf572-490a-47a2-a121-9cf4864051d2"
        },
        "item": {
          "id": "2f18d963-ccff-454c-8070-68e3ecd1f17c",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "d25cc775-0efb-464c-bc68-99bdc9008d06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12257841-793d-4f09-a426-282d4fcb2e00",
        "cursor": {
          "ref": "6d5862c9-6ac0-4ecb-8a9a-e228a90a2623",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "1494093b-0840-486a-9fad-ad3a0a7dd6f2"
        },
        "item": {
          "id": "12257841-793d-4f09-a426-282d4fcb2e00",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "5631080d-2394-4a93-8c3c-a5fcef8338d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e9c05ec-a189-4678-89c8-76a77867a684",
        "cursor": {
          "ref": "e20c51a7-e7a0-4454-aa0d-2226e8ef504e",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "b4a32c53-415a-43b9-a727-3b14916d5a94"
        },
        "item": {
          "id": "1e9c05ec-a189-4678-89c8-76a77867a684",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "53ccbe1b-b6e2-4f15-b5b6-1b79d683ab3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "947fc498-463e-4182-8db4-578ff5146ced",
        "cursor": {
          "ref": "3cffa80a-91d8-4aae-af82-a160cc5e0377",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "dab8a0cf-aa90-449d-99bd-9ae90dc2db60"
        },
        "item": {
          "id": "947fc498-463e-4182-8db4-578ff5146ced",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "52001ef0-9d55-4d0c-a4d0-12305177f1b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a1064b2-0b78-4608-a422-05ff3b1cf3aa",
        "cursor": {
          "ref": "f7f3fc35-6267-4450-a3ae-8b4ed90ee5b9",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "66eb4f57-80cd-4805-893b-c88eb0cc351a"
        },
        "item": {
          "id": "4a1064b2-0b78-4608-a422-05ff3b1cf3aa",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "6a3139b5-4ec6-4ce0-9378-4e57fd4c994c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24a87616-b7d7-430c-b885-4371014cdd0e",
        "cursor": {
          "ref": "b7f6dde7-036b-4606-a990-b4f32d5e842f",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "86b1b64a-ed28-456d-ac73-e314faf8f966"
        },
        "item": {
          "id": "24a87616-b7d7-430c-b885-4371014cdd0e",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "5e28b5cb-dfc0-48df-84f6-462f6d5769a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "210846ea-5029-4ab8-b8d7-dfcde6693ea0",
        "cursor": {
          "ref": "604d7148-a3ee-4996-9153-26446c890f74",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "5e3c658f-7761-4199-8071-00f94783df4c"
        },
        "item": {
          "id": "210846ea-5029-4ab8-b8d7-dfcde6693ea0",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "6dc7ea50-74d6-4534-ac18-5239bc3846ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b9a3ecd-1c3b-4a64-9ff2-d4f74469b21f",
        "cursor": {
          "ref": "60f34453-75bb-4a95-92a0-de8a2f9eb7da",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "bb8acc12-694e-4cae-ba92-4589af4211a3"
        },
        "item": {
          "id": "8b9a3ecd-1c3b-4a64-9ff2-d4f74469b21f",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "c40d8ecd-ce89-4587-bc2a-3a0c5acb471a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "766801e2-3fa9-4078-bf69-c074f24d737f",
        "cursor": {
          "ref": "050236f7-e5d2-42f8-8e01-1edd332d98f3",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "1746c3d3-3e26-429f-a81f-f91d74544778"
        },
        "item": {
          "id": "766801e2-3fa9-4078-bf69-c074f24d737f",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "f1bb3dd0-c1d2-424e-8e55-8234e6c4d756",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0467e501-35b7-4216-a789-4486cb52dd93",
        "cursor": {
          "ref": "75203cb2-39bc-4415-9829-dab6d949914d",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "131a7a55-52d5-43ec-b409-ef12341c62f9"
        },
        "item": {
          "id": "0467e501-35b7-4216-a789-4486cb52dd93",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "f1453e23-172f-48bb-8c0f-bbd6349295a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6739c77e-807e-406b-8d0b-aa74ff881324",
        "cursor": {
          "ref": "1e6c3d03-e3f4-4b8f-b8c1-b7b67e95cf4a",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "a367c662-a774-4384-a20a-881b680ebe4e"
        },
        "item": {
          "id": "6739c77e-807e-406b-8d0b-aa74ff881324",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "a7229147-c2a8-4dab-91e5-151b6b60c818",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf963578-6167-45de-bd7a-3299758aaf5b",
        "cursor": {
          "ref": "e6667d78-7cbf-4d2d-bbcf-b5b4fa50250e",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "9ae1c88d-eb46-47e0-a100-fc0f103df841"
        },
        "item": {
          "id": "bf963578-6167-45de-bd7a-3299758aaf5b",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "e453dbcc-11d0-4a1a-983f-6d9440f1fa05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c123a62-fec5-4085-96a1-3311a3640c67",
        "cursor": {
          "ref": "422e90bc-e79e-461f-91e5-9272fbd3ef5d",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "50360c21-d4ec-4c68-a643-8f8cbe42777b"
        },
        "item": {
          "id": "8c123a62-fec5-4085-96a1-3311a3640c67",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "25601f93-017f-4b18-9533-81554f7119c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff0c686b-a6ac-4131-963e-3ade01f45604",
        "cursor": {
          "ref": "7249b4bd-40d4-4337-9b87-33a5307c0f6a",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "a5238a5b-abe9-4fc8-9ee5-3394e517656b"
        },
        "item": {
          "id": "ff0c686b-a6ac-4131-963e-3ade01f45604",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "7c6dc2a8-314f-4199-9323-2e4543d90ecf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0d45764-e253-4aa6-805a-c68ddc2a9356",
        "cursor": {
          "ref": "10d5f0b0-04b0-4b3e-b5c1-ff1f3ac3640a",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "1cfe6958-4bf3-4fb5-add8-638bc15c902e"
        },
        "item": {
          "id": "f0d45764-e253-4aa6-805a-c68ddc2a9356",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "f3b7da9e-e4ab-4940-be9e-b64929a75f08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2ae5005-bf62-4cae-a400-541de10ad58c",
        "cursor": {
          "ref": "8c129455-af63-451d-8e64-15f0f5500179",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "25de5a82-ca69-4a4b-9895-77ba461a3486"
        },
        "item": {
          "id": "f2ae5005-bf62-4cae-a400-541de10ad58c",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "53f3efcd-b0bc-4cc8-a190-937455f6ea8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb23eff6-f046-4775-bffd-9df6e4ae423f",
        "cursor": {
          "ref": "4d2ff6e1-2da0-4fd2-b087-3f2dc886e996",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "1f7bc1db-54ec-4c8a-b32a-885826c52659"
        },
        "item": {
          "id": "fb23eff6-f046-4775-bffd-9df6e4ae423f",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "bf594872-54b8-41c2-a38a-49fecad92e46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "122c55ba-2bc9-42fa-b373-e9bb29b3ef07",
        "cursor": {
          "ref": "9f8c58ab-d2be-4d53-82f5-b287a20af577",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "d7199fba-1b21-4936-9b5e-5fd13b577734"
        },
        "item": {
          "id": "122c55ba-2bc9-42fa-b373-e9bb29b3ef07",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "b23b006c-b374-433b-9a16-691aaf586df1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9b08624-8bd2-4ff7-ae55-410770c7b353",
        "cursor": {
          "ref": "f19616d8-91d6-44ea-9c5b-e524f931973e",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "94281bba-3335-4572-813a-cd6523f94992"
        },
        "item": {
          "id": "b9b08624-8bd2-4ff7-ae55-410770c7b353",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "c85d5b9a-a580-4ee4-abf7-da6393264d06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcdd17d9-faa6-4b4e-9eb2-5880bfb1bfc9",
        "cursor": {
          "ref": "fc57557b-2133-453f-b65d-12aa568151bf",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "7e101349-4d65-4d51-bd39-743a30248020"
        },
        "item": {
          "id": "bcdd17d9-faa6-4b4e-9eb2-5880bfb1bfc9",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "7b8a0a58-b28d-448a-ad67-b1d443472b90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06368bc9-e426-400d-a25e-327c36cd195c",
        "cursor": {
          "ref": "360f950a-abec-4f85-99aa-9796f9017f54",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "ee6d9538-da4a-4708-853d-a03f6f74b169"
        },
        "item": {
          "id": "06368bc9-e426-400d-a25e-327c36cd195c",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "5bdb4711-2155-4f12-8849-933a9f4d4f43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d786071e-9859-4110-92ba-b0aa8067ef79",
        "cursor": {
          "ref": "4ebe9c85-5092-419b-8b06-2fc276b6ea0b",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "330ff363-4f30-4e1c-8555-237f8262e358"
        },
        "item": {
          "id": "d786071e-9859-4110-92ba-b0aa8067ef79",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "e0d9d05c-477c-4c60-acb2-145269223600",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea4aa668-dbce-4bee-980f-3584b8b60974",
        "cursor": {
          "ref": "8c986694-84e4-4ac8-b564-4755648ef9fc",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "2ff87c04-c07e-4b9d-9db9-7639d12cafe1"
        },
        "item": {
          "id": "ea4aa668-dbce-4bee-980f-3584b8b60974",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "bf4794d5-724e-4fcd-baae-db1c90471af8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "588dce3d-23ab-487f-858b-092125e9705f",
        "cursor": {
          "ref": "e8119ecc-7cfc-4f3a-8bdf-17815f4a4739",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "477a78e3-b716-4357-be2d-6206f4fb007a"
        },
        "item": {
          "id": "588dce3d-23ab-487f-858b-092125e9705f",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "4292b275-d072-4adb-9aac-ce4088f3e08f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bddf1fc6-ecab-48c7-8b48-9c2f2bc2985e",
        "cursor": {
          "ref": "6c52f519-35fa-43eb-b491-3285cb127c98",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "d2297aca-449b-442a-a38d-184ec31e66b6"
        },
        "item": {
          "id": "bddf1fc6-ecab-48c7-8b48-9c2f2bc2985e",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "123dd8a2-9a74-40f1-a258-abd943736fe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe3901fd-b228-4f0b-8611-617fb57a23b7",
        "cursor": {
          "ref": "94e8df7c-af0d-45cb-b35b-e935628f08d9",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "31c23e18-2540-4bba-ac3c-74bf312f06a4"
        },
        "item": {
          "id": "fe3901fd-b228-4f0b-8611-617fb57a23b7",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "a483a9fd-7c04-421b-a07f-1dcdeb39b417",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b94b8fe-46f6-468e-86d8-b55310745734",
        "cursor": {
          "ref": "73a79a0a-96a2-4422-841e-de12071892d9",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "cf71b34c-8aee-4079-aece-c90a1c781d41"
        },
        "item": {
          "id": "0b94b8fe-46f6-468e-86d8-b55310745734",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "9d96365f-5398-4f91-9d50-b08a80408610",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc7a7b0f-1e58-4657-9101-4e048c9ef1c6",
        "cursor": {
          "ref": "9178e5c9-f824-4b8e-ac96-7ff01d120db8",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "36c74598-108a-42f6-8cee-bfba727b65c0"
        },
        "item": {
          "id": "cc7a7b0f-1e58-4657-9101-4e048c9ef1c6",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "3a67c716-27c6-45c9-a5e0-6639c9880a83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d22e1a5-2c41-4a09-a362-42e1ecb4e8f8",
        "cursor": {
          "ref": "1ac36b89-8ee5-40c1-8ffa-46d87f97c9d2",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "9284b9b1-ab12-4c8b-9e2e-dd14d6604050"
        },
        "item": {
          "id": "4d22e1a5-2c41-4a09-a362-42e1ecb4e8f8",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "0ed24de0-bcfc-440c-996b-13cdd064360a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d7d63ae-8065-4df1-a29f-ebf857f30d26",
        "cursor": {
          "ref": "24099c4c-05a1-4340-95ef-521b90a56a5b",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "9a653815-f9a7-48b0-8f89-eacf7323f576"
        },
        "item": {
          "id": "2d7d63ae-8065-4df1-a29f-ebf857f30d26",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "23a571e4-e427-4ab3-b3ab-d468e0353de7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ec73d19-e74e-4786-8b28-7abe9f3c02ca",
        "cursor": {
          "ref": "02d4e964-5d25-41a2-892c-e0cbb5e6b04c",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "baa20014-93de-4039-9226-4bd61bad40b5"
        },
        "item": {
          "id": "2ec73d19-e74e-4786-8b28-7abe9f3c02ca",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "fa303677-a356-4583-8212-0249ff3a83fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4705fcc9-6537-4772-84ad-9c1d3ed6f0fd",
        "cursor": {
          "ref": "6b0742e5-36cb-44d1-bb63-5af6606e3afb",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "826fbc01-0788-4258-bca9-c6989eb19d68"
        },
        "item": {
          "id": "4705fcc9-6537-4772-84ad-9c1d3ed6f0fd",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "ce65596d-d92b-4eaa-ae03-5d12e0c30692",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7c86344-2d4c-445c-8350-786a7ef47132",
        "cursor": {
          "ref": "ed19c92f-a183-4e51-8ef3-168c3dd66cc4",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "b84b96b1-1b00-4980-87b0-20d01b06fc99"
        },
        "item": {
          "id": "f7c86344-2d4c-445c-8350-786a7ef47132",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "5e7cee17-3f32-49aa-a701-ab88ef0abcc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82f96e51-ca27-46af-95f4-c6fbf012cde1",
        "cursor": {
          "ref": "f183a962-2001-4612-b358-1bba7ee4dd90",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "eab029f1-d830-466b-8af4-3eb3984860bd"
        },
        "item": {
          "id": "82f96e51-ca27-46af-95f4-c6fbf012cde1",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "58204d57-db03-407b-902f-e86ad9c83ee5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a8b96fc-9649-40d2-82da-434c5f7b9270",
        "cursor": {
          "ref": "a9232d0a-e11b-4fc3-b4c8-79938e9d1cdc",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "82c2ed97-8042-40dd-8744-45a716818e5b"
        },
        "item": {
          "id": "4a8b96fc-9649-40d2-82da-434c5f7b9270",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "5c8c409a-905f-4ea7-85ce-ae23a57d465b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfb910ba-e364-44ab-9469-d2289f33e96b",
        "cursor": {
          "ref": "1dd488ba-74e8-41d6-8110-e30c537d1c7d",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "119c9f8b-11b4-4c8c-91b3-c53ed3a2255f"
        },
        "item": {
          "id": "bfb910ba-e364-44ab-9469-d2289f33e96b",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "f52ab360-a588-474a-b9d5-ed2c46d19dfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "336c2bf8-f726-425d-9ba1-acaa516faaba",
        "cursor": {
          "ref": "2df5f769-25a7-4826-ae67-91712009862e",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "925b51cd-10ee-4fb6-af08-aaa45152f7cc"
        },
        "item": {
          "id": "336c2bf8-f726-425d-9ba1-acaa516faaba",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "4a346399-f9fe-4c5f-bf80-d2b70d243e84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f726a6fa-4fce-41b9-87e3-5c3396733fcd",
        "cursor": {
          "ref": "c0f7b6fb-4bd3-4f34-ae03-a62240f46f87",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "b5c1c60a-cd90-4c12-956e-e1760f9c9dc7"
        },
        "item": {
          "id": "f726a6fa-4fce-41b9-87e3-5c3396733fcd",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "436c4ef3-702b-4ce2-8af4-eb240c535f80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c2a5442-c817-4fda-90f0-29fcd0beb79b",
        "cursor": {
          "ref": "59d6a8b0-342b-47ce-9d4f-3cbc700148d2",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "3d122cf9-2262-4fe6-85f5-ee38fa64797e"
        },
        "item": {
          "id": "4c2a5442-c817-4fda-90f0-29fcd0beb79b",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "c78dc301-e686-4e6f-8220-142c8702f065",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "834cfc79-b62c-4d9d-b62d-8d1c501d16d9",
        "cursor": {
          "ref": "66a8b586-7a4c-4465-84dc-439e287376e2",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "d070737e-72f1-4ff8-b2ab-aad481298790"
        },
        "item": {
          "id": "834cfc79-b62c-4d9d-b62d-8d1c501d16d9",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "ae195467-0eab-49dc-9a03-ca7fd7926593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38eead4a-7d94-46fa-ac92-40df92846a8a",
        "cursor": {
          "ref": "bd771618-fc9b-4fe6-b3e3-b65bbc74d2bf",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "b394086a-931d-40d7-8b11-96cdc7eeb4a8"
        },
        "item": {
          "id": "38eead4a-7d94-46fa-ac92-40df92846a8a",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "d74bb506-56d2-4f49-854d-6dea600dffa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f44a239-ecfb-4f7b-8776-f5804343ef4e",
        "cursor": {
          "ref": "bfe6056d-fcbb-466c-b8ec-06e8c068b9d8",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "82d32c64-9667-41e8-89ae-c37b60d9b981"
        },
        "item": {
          "id": "2f44a239-ecfb-4f7b-8776-f5804343ef4e",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "f37d1ff3-364a-449c-a68f-507058cab472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a63b46d-b793-41ff-9e07-ca019b980c4e",
        "cursor": {
          "ref": "931f77c8-a3eb-474e-919f-7e21a811f88b",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "08d6da40-fccd-42c6-a05e-ad5961260169"
        },
        "item": {
          "id": "8a63b46d-b793-41ff-9e07-ca019b980c4e",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "ce464439-05e5-487a-a985-fe5273ce0417",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af4268b4-fac4-48c1-9220-d8c75c6b10e0",
        "cursor": {
          "ref": "fd68452f-8942-465e-9613-c8e27cd7db4f",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "bd8c8135-8bdd-4012-af50-daed473a6ae5"
        },
        "item": {
          "id": "af4268b4-fac4-48c1-9220-d8c75c6b10e0",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "a977c29e-d375-4b12-8022-9f906bc656c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e52cc689-f1a2-468d-a191-1de45bf87f57",
        "cursor": {
          "ref": "11cd63c6-e5e5-4f38-9ada-ff998da2eec3",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "7fd77cbe-86be-445b-a3fc-5c30ea63e305"
        },
        "item": {
          "id": "e52cc689-f1a2-468d-a191-1de45bf87f57",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "77b0dbbe-8daa-4403-a400-f74737d66f20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2af2f4d-ffb3-43dc-8de3-fe7c65206fae",
        "cursor": {
          "ref": "b617776c-9ac1-42c4-9e0d-04c2b4e387de",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "c9f751f9-3128-4ae7-bdab-1be07285643c"
        },
        "item": {
          "id": "a2af2f4d-ffb3-43dc-8de3-fe7c65206fae",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "c6fc9daa-0997-43cf-8239-df032b7ae2a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fef5d3ca-87da-4f6e-ad41-4c6f92da1b09",
        "cursor": {
          "ref": "cbbaa499-89e6-4029-92ae-19613fa82c1b",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "b4785d50-1c94-4a81-86b2-f7ad6d278196"
        },
        "item": {
          "id": "fef5d3ca-87da-4f6e-ad41-4c6f92da1b09",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "2f70e942-7b7e-4b1e-85cf-171b7eaf4166",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd5ac3ef-7a6c-466d-ae0c-6364fadbbbaf",
        "cursor": {
          "ref": "2fd4fc18-2ff6-4b84-88c1-da9a3bd11d34",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "ee2df361-ef18-4691-af74-8a85635a55df"
        },
        "item": {
          "id": "cd5ac3ef-7a6c-466d-ae0c-6364fadbbbaf",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "66f67442-3987-4ee7-b877-7978fe5b4df8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0421b2c-018e-4c96-abc2-7b17e4620c9d",
        "cursor": {
          "ref": "2915900a-9360-4694-ad7e-9aa456db4972",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "0a52ecdb-74f1-47df-a61a-3028d3d5d7cd"
        },
        "item": {
          "id": "a0421b2c-018e-4c96-abc2-7b17e4620c9d",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "06f8a09b-49c2-4843-b84e-99575a42d97c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9d3c079-1e75-4eaa-a993-64fd45b0ba47",
        "cursor": {
          "ref": "914d8379-95d5-4b75-8195-d4663329d330",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "5b22f324-c58a-4948-afe9-1cbe78b805f9"
        },
        "item": {
          "id": "a9d3c079-1e75-4eaa-a993-64fd45b0ba47",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "78f99c7d-f8a2-4015-82c1-72ddc6230049",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08e78531-30d0-4837-8b5e-1b105fa9f940",
        "cursor": {
          "ref": "1f43922d-9e6f-420e-acf3-e26307c509ab",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "47d62d2a-7de0-4845-999b-a430ac2ec130"
        },
        "item": {
          "id": "08e78531-30d0-4837-8b5e-1b105fa9f940",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "7a200815-f2a8-4e70-b828-cc3d5b5ad6a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d3af98f-bc9b-4934-91cc-8b256e717e9e",
        "cursor": {
          "ref": "cd457ee3-8e6d-49cb-8084-f137d1789bf3",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "42ca2b98-b0e2-4574-a1cf-1c98704878c0"
        },
        "item": {
          "id": "7d3af98f-bc9b-4934-91cc-8b256e717e9e",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "f691c326-cd1d-4a22-b479-af4dba20b2be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caa0f118-a278-434f-810c-ab7b0561a6de",
        "cursor": {
          "ref": "2aa261e0-29eb-4309-beb6-211f846bfda3",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "6b3209e6-ebf5-433c-8b20-c9c4eec3ff36"
        },
        "item": {
          "id": "caa0f118-a278-434f-810c-ab7b0561a6de",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "3c8ddac1-0fdd-4c63-98cf-bf7e9c82626f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f50728d7-1419-4969-9fbe-9e8e25974838",
        "cursor": {
          "ref": "7a3c0aab-9015-4c10-ac26-1c20169d2eec",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "bb5b1548-2145-4160-b342-b54acb45febb"
        },
        "item": {
          "id": "f50728d7-1419-4969-9fbe-9e8e25974838",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "ff5e63aa-2c95-45c3-82c9-9b4a896d3956",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6363a9b1-9ebe-4454-955e-45c6445fa951",
        "cursor": {
          "ref": "db0f61d1-ac50-462e-9d3d-d7b6b5141047",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "8420b057-89b4-4f96-99a2-b3f8fdd23707"
        },
        "item": {
          "id": "6363a9b1-9ebe-4454-955e-45c6445fa951",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "7f93c902-2614-45b9-b4ab-002603e6a463",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e48d746-592f-4050-b431-5085601e9443",
        "cursor": {
          "ref": "523a4bd9-4a37-47bf-98e5-d75cc05d9c08",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "56992812-4381-4a72-a4fb-9b4fc530b324"
        },
        "item": {
          "id": "4e48d746-592f-4050-b431-5085601e9443",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "d6f7e1d2-5e20-463b-b423-fddbebe857e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a17c795-1bf1-43f2-b5f3-cd151b4faeb5",
        "cursor": {
          "ref": "78eb9e02-db1e-4df0-8f1b-304d1835e8d4",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "2991886a-0c81-490b-8cc5-95b89fb0afc0"
        },
        "item": {
          "id": "8a17c795-1bf1-43f2-b5f3-cd151b4faeb5",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "3d326113-0600-48f2-aeb2-d1afe24e215e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c4ad7b5-1533-47e9-8049-8f2ef7df108b",
        "cursor": {
          "ref": "8c218908-9c94-40e9-a60d-5b5c8a03b7a9",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "dd992fa0-3fae-4c96-b6d3-7d2f28bf8938"
        },
        "item": {
          "id": "6c4ad7b5-1533-47e9-8049-8f2ef7df108b",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "36e90747-f455-47f0-958a-4da11f8b683d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55de11b1-193f-4692-aef5-cd5971b53d1a",
        "cursor": {
          "ref": "cb052bce-982e-4ff4-bbf3-de0099657698",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "9b1a9658-e464-45ec-bac2-c088e79bc7ce"
        },
        "item": {
          "id": "55de11b1-193f-4692-aef5-cd5971b53d1a",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "ff801258-dcd6-4eb6-87d9-8272ec21994a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eea858d-5eec-43ed-a928-9fc46dde4aa0",
        "cursor": {
          "ref": "678e7036-7451-4894-be81-c9fb95b65b85",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "93330d66-34bd-4783-b62c-69449c59fb18"
        },
        "item": {
          "id": "2eea858d-5eec-43ed-a928-9fc46dde4aa0",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "067a3605-62bc-41cd-8582-a8a63acc6470",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a699f6eb-bd25-4994-9469-3608e5d3cf5f",
        "cursor": {
          "ref": "94d268e4-d6a6-45ab-a589-be3c16a212b1",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "5e61ac4e-fe32-4506-ac22-8ac6daa52e2b"
        },
        "item": {
          "id": "a699f6eb-bd25-4994-9469-3608e5d3cf5f",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "350421de-1c39-4be6-bc0d-56a13cc74dd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cd31aba-caa6-4791-b4a7-3541906bb66f",
        "cursor": {
          "ref": "7156aa56-7e4b-4a49-9494-50ecf289426a",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "7f174ee8-07df-4f67-9fe5-153223640a0c"
        },
        "item": {
          "id": "7cd31aba-caa6-4791-b4a7-3541906bb66f",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "5b5aca64-f464-424c-a6fd-ca6b8fd4d68d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "099fd114-67c2-4098-9f4e-4e3832402128",
        "cursor": {
          "ref": "123893ad-38a4-4182-a4de-166fb8b3958a",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "f9d24fd5-748b-4d91-8e00-190acc7ea0bd"
        },
        "item": {
          "id": "099fd114-67c2-4098-9f4e-4e3832402128",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "3ce47d26-d260-40a9-bf41-d828e7fcc37c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baa024a9-ec51-4859-9b24-d47c208ace2c",
        "cursor": {
          "ref": "f494ed8f-c33b-4cf2-848b-212cb3ad2ef0",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "36c94b7a-d992-4def-bfba-9e678c82014d"
        },
        "item": {
          "id": "baa024a9-ec51-4859-9b24-d47c208ace2c",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "73a782fa-953e-4497-9ebb-a7d79a179271",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0e84de0-c7fc-4a79-b696-b1ee9efa5666",
        "cursor": {
          "ref": "a783371e-361f-4dca-b8e0-bb1d7a21afa5",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "5f9f272b-be28-4465-b261-fe06d3a09361"
        },
        "item": {
          "id": "f0e84de0-c7fc-4a79-b696-b1ee9efa5666",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "2a1d4595-9f72-401f-8181-b653857db8c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f27c021d-4503-4561-bb97-79a19c9a158f",
        "cursor": {
          "ref": "cf962ea6-b0c9-4e31-b4da-7461a2912340",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "92ed2d9b-83d3-4928-b138-864c8bc3b355"
        },
        "item": {
          "id": "f27c021d-4503-4561-bb97-79a19c9a158f",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "8cf4130f-899a-43bd-a60d-623d2f122890",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af7198c3-d8d8-49ae-b7e4-2404327065cc",
        "cursor": {
          "ref": "937d393e-96d1-4e33-99bd-576228f33111",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "c01f80b5-6693-44a8-a440-d60b70a79baf"
        },
        "item": {
          "id": "af7198c3-d8d8-49ae-b7e4-2404327065cc",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "5964fd68-9e26-48ad-bf90-728b9fa987a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45595cbf-e8fe-413c-b72f-a14f235d28bd",
        "cursor": {
          "ref": "ae15d509-d7e0-46ce-9b46-1bf107f0987f",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "3d940be6-cc5d-4292-9b02-276b216633b9"
        },
        "item": {
          "id": "45595cbf-e8fe-413c-b72f-a14f235d28bd",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "f654e69d-98d0-4c3a-a2c7-7a031275942b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28f8e5ef-b0a6-49c6-aafe-58e8287ea841",
        "cursor": {
          "ref": "e237956d-4e6a-4173-b889-32dadfa220f9",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "2f045c1f-3918-4ca6-b997-0a9288061baf"
        },
        "item": {
          "id": "28f8e5ef-b0a6-49c6-aafe-58e8287ea841",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "ab7585e6-bc00-4005-8354-1ca6947a037c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc9e130e-c825-45d8-ae00-2df11ead3b7c",
        "cursor": {
          "ref": "adf6d595-ec78-4e38-b6fd-4462930505a9",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "d2df4ee4-9bc1-478b-ab1b-1a458eed033b"
        },
        "item": {
          "id": "fc9e130e-c825-45d8-ae00-2df11ead3b7c",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "bb705d29-0c6c-448a-9da9-439ebf690acd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c5f882c-03ea-4cbf-b42c-a3368d93369e",
        "cursor": {
          "ref": "cbb59ccc-854b-47ee-9458-26e5c05039f1",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "8ea9b7ba-c181-4074-aece-2e2dfd0399fa"
        },
        "item": {
          "id": "4c5f882c-03ea-4cbf-b42c-a3368d93369e",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "3cdfc154-8700-4e9c-baf9-ceaddae5b337",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b5fb1aa-18a2-4709-ac7e-e2c579c03f1d",
        "cursor": {
          "ref": "28c3c494-5bd6-40e6-b222-e7cce0e7cbf9",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "e24325c5-c476-4612-9f36-c2d6fc02088c"
        },
        "item": {
          "id": "9b5fb1aa-18a2-4709-ac7e-e2c579c03f1d",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "f01672ba-13ca-4555-9ba0-ee2e0ad38161",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46d530f0-72f2-4d9d-9daf-9f61ccac248a",
        "cursor": {
          "ref": "f393cd37-bf9b-4218-90a8-5e4467d1f49c",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "3006ffa2-db74-4bab-8d9c-52e93d4c1f55"
        },
        "item": {
          "id": "46d530f0-72f2-4d9d-9daf-9f61ccac248a",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "19b876f8-6304-4ad5-97af-458b68935616",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83529d71-5be2-468f-ab6a-d9f32156c948",
        "cursor": {
          "ref": "51ba4325-b6fe-4f88-8966-08ee8f410e67",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "5a058394-4c64-4df5-8741-55b76117cd61"
        },
        "item": {
          "id": "83529d71-5be2-468f-ab6a-d9f32156c948",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "26cde9a7-a4a4-4156-a6fb-beb456ccb009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00233b18-0287-4d3b-8e2d-498b76a44dd6",
        "cursor": {
          "ref": "1143542d-e041-43f1-b5d2-c9f0dce6123b",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "92df3876-23a0-418f-8971-f9fa8369d2be"
        },
        "item": {
          "id": "00233b18-0287-4d3b-8e2d-498b76a44dd6",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "a05e2561-f8dd-407c-bd6a-ae7e09d469c8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93a919ca-473a-4426-9cda-487fb63e81cc",
        "cursor": {
          "ref": "b0a9132f-7d33-4a2d-91d6-ad3958ce8d8e",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "035c51b0-9f73-4cd7-b288-714aabe7ed58"
        },
        "item": {
          "id": "93a919ca-473a-4426-9cda-487fb63e81cc",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "ce56b3d1-70fb-4dd6-97a2-18199a3ec978",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "656651ea-febe-42b2-836b-2a7207697509",
        "cursor": {
          "ref": "3f9666ef-5b0e-4f3e-94c0-4b9dbd2e8aea",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "73373fde-14be-4532-a2c6-f04a5a2e0169"
        },
        "item": {
          "id": "656651ea-febe-42b2-836b-2a7207697509",
          "name": "credentials_verify"
        },
        "response": {
          "id": "8b74731a-0874-40cb-b41b-459693394e2c",
          "status": "OK",
          "code": 200,
          "responseTime": 21,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f21f727c-2567-4c08-bb1a-7968bd4c0d8b",
        "cursor": {
          "ref": "fa6305c1-84f4-4325-8381-b51176874892",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "9733abda-ddcc-4134-a6ce-2b592e9b140b"
        },
        "item": {
          "id": "f21f727c-2567-4c08-bb1a-7968bd4c0d8b",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "0bccf7d3-9cdf-4232-866c-078b5bbbf249",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "66a75ab7-037e-44ec-948e-6b0dc59f803d",
        "cursor": {
          "ref": "ed9f544d-010d-4c52-bb50-2ae1c0c5502b",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "b6271214-2875-48cf-816c-e81961824bf0"
        },
        "item": {
          "id": "66a75ab7-037e-44ec-948e-6b0dc59f803d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c20018b7-8f1d-4184-9b63-0dcffa76c6dc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66a75ab7-037e-44ec-948e-6b0dc59f803d",
        "cursor": {
          "ref": "ed9f544d-010d-4c52-bb50-2ae1c0c5502b",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "b6271214-2875-48cf-816c-e81961824bf0"
        },
        "item": {
          "id": "66a75ab7-037e-44ec-948e-6b0dc59f803d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c20018b7-8f1d-4184-9b63-0dcffa76c6dc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aab4e63-be05-4168-8b2a-df097e73c2c6",
        "cursor": {
          "ref": "2a4b945b-3b0d-42dc-8f12-be27d34f49f1",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "9cb60672-0540-4c6d-9d42-4400829f89c1"
        },
        "item": {
          "id": "3aab4e63-be05-4168-8b2a-df097e73c2c6",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "6d5c8418-d87c-4a65-bb22-0f546855c847",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0319244b-245c-4fff-9dcf-8962b71d78fc",
        "cursor": {
          "ref": "79353722-adaa-4b86-8582-6a3b451dc7c4",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "68139817-03c4-4267-b825-daf841a33a12"
        },
        "item": {
          "id": "0319244b-245c-4fff-9dcf-8962b71d78fc",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "7cb40c62-c445-4ec9-a022-1a9ee0ed91f4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}