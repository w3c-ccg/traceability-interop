{
  "collection": {
    "info": {
      "_postman_id": "e9c7f21a-ef69-4217-8f40-0424834c0fdc",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "464113d8-0aeb-4bce-8463-aa33dd5c540b",
        "name": "Clear Cache",
        "item": [
          {
            "id": "9bfa0841-b72a-440d-b711-c7d02e39da42",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "43c6e322-0d64-47da-bec2-45002747eae3",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "dfbc532d-b0af-4478-bdb9-f32bd9f6bc2e"
                }
              }
            ]
          },
          {
            "id": "56d56bcd-d45f-4d5f-a86c-4a1dec66a28e",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2fb4f72e-190c-468c-a13d-620009ef25dc",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8ef7540c-90da-4c4b-9cc9-60abd74cc5ca"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "973abfed-6283-428c-af95-c25f58de9a33",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "81958036-6033-490c-9d28-20b7fcc2ccb6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "abe6bd0d-0618-4492-a720-c6e1bc58aebb",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dcf44b98-1960-46c5-a530-659287f11191",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d40c1689-95c2-4e0d-ab5b-ae9c091b6609"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d1fb25c7-a4c7-499e-af4d-1c19f07b866f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8b36b69e-1ab4-4a41-a23b-45f57ced6377"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f67bdd96-a722-43f6-b7eb-ecaf8aab23c9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "66b9e727-d585-4077-9152-3435f322bd4e"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c92d4364-9b28-4087-b8b2-b37fc79caa11",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "6a9ccb09-503c-4891-bbd9-3d77e7ad1314"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d04ce373-5bbe-4fe2-83f1-766de431daad",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7ab076e1-4194-404d-965f-e527f171c908"
            }
          }
        ]
      },
      {
        "id": "df6a1ddf-a03a-449e-8de2-13fbed606825",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "29286db6-2f16-4501-a6d0-0b3d3464d2a2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5bb31904-bd77-402d-a8af-ebdbc807f25a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5844cb72-1438-42b0-9eb3-aba506e2416f",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b9ecb79-43f6-40f9-8dc8-5cb98c12693a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a3dc787b-1195-4010-8169-3b1f008c2874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d97241f-2fff-44e9-91b7-584e3cc65b99",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb8e81af-a608-4c77-b959-f16d9ccb655f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "718a1572-e2d5-4e43-a4d9-4ec14d974ff7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90563a80-9bdc-404a-acd3-a34f2a408786",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "333f2aba-b5c7-4b75-8de9-e235db0d1dc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d910a623-c917-42fd-89b1-48d2f10a8e44"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ae1e6a6a-aa05-4015-900e-5087fbca5c9c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "898c24ff-2cdf-4f5c-b768-2737fd287f69",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7869e4a2-9bb1-425f-b538-5fdad994c73d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b7c3688d-32e5-453b-8871-075eae7a13f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57cf1178-b20b-4474-9fc0-a463894383a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "249ed8d9-21b6-42c5-a2e5-92f93edb3fec"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "cfc9b701-b20e-40c1-9877-89d66cc0f5f0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e64dad48-f73e-4b42-b819-bae17730be89",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8623fe0f-b4f1-44fd-831b-f82a649efd67",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "352c3ca8-c5ad-4447-846d-3c50d17a56e1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "52dcbcf7-a977-4eb9-914c-5d04d4ca0dbd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "af616ac6-1881-4323-8c75-48f33c91c19e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fe3c744d-f6c1-4d42-b3ca-2a84b4707a2e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c261cdc0-029b-4000-9fca-ec687fd0ddd6"
            }
          }
        ]
      },
      {
        "id": "6c891f3b-3f70-4d69-82a4-8b9e89cf6597",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "d682eb92-d9f8-4ca8-b99f-02f6d6fa372e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9140f559-7e16-480b-b125-b06d403d71f2",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "90321655-bbd1-4748-a175-cf0f812dbf6d",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a5dfb5a-d7dc-4237-97b3-b1f36d5e6047",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4d887e6-5af3-4e34-b692-2f63fcfba233"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f73e105-2be3-4b59-b426-024f481f35c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "79a1996a-94bb-47ad-b11b-14aec4118cf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "900a8a78-9097-4973-a0ee-c5d028a03d1e",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2e3ed9e-9b52-417f-800a-2bb9e201620c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6682d6e1-e93a-4277-ab14-06050ddb3ed2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd0f7dd4-bb49-45d2-87c4-5c5decc5ad6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d663b668-9fe8-4fc2-b364-225e1810d223"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36341cf4-0633-4203-80f6-1aff803313de",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a86c1f2f-9c9a-45ce-83b8-8ad818075db8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ce09337-a629-4500-a053-8574cb8c02de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0d6c75a-e0b7-40c3-b141-21d10c385aac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7cc48d84-3d2a-49ae-b5a1-a43d05d41202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1d83e9d-132b-4d3a-a920-4b3e4307061d",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7bc53e6-0452-42b5-8040-362ccdec1ae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2437fbd9-7546-4175-b1aa-44305d45eaad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "095f6c60-bd2b-4616-b3e0-7b3e80d4ef2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "103292de-a85d-46e9-86ee-a031cebaf6c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bda8393-584f-4fcb-a8e2-93cfb34d6fab",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c01e4eb6-1c7c-4ec1-b80c-42db89b3d750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ac24fc5-9bf7-40e4-967f-1c70ecb97572"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f181136-fa92-4879-ae23-3c809d8a0902",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "88388d7e-bd3b-400a-b559-ca0cf4121a7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5972d87e-001c-4ae6-bcc3-bd8eeed111e4",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cb92f77-d4d1-4ff1-a004-ec4fa72b2a7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ca8c805-d0f9-477f-b6d3-3b87e6cb4c7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dfdeae6-5565-45ac-8cc2-5192eeee7c36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "91645c4b-0302-464e-8866-0ca8f2bfca36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ab37824-f401-4576-97f1-e629564800a5",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37c9687f-79b8-4250-b5f9-d56cca28a4c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b9b91c0-f4a8-426b-8deb-3b50d447d06d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec24f0cc-f28e-45ee-b1e6-0812df4b3750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1a2720f4-e5a9-4b25-a1d0-5d89d854b5fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17cf3f97-d662-448f-b939-4c0b84a724f3",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c12075f-eb7b-4855-924c-2c24805a8758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44bc4395-1471-40f7-87e2-0e2a691df793"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c841020-9eff-4a84-8672-f816bea3a6c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3f775757-51d4-4d37-b1c4-7b91765683db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9af9c7b-822f-4d73-89f5-e44f2a510685",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6eab7d8-7382-4d76-8fd7-73d30a7d2206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "192606f7-6cea-4f38-967f-950b28b6d177"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "198cab6d-39bb-4c07-8055-835440dd805a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f233a99e-7b16-4a60-84ed-104570fddb86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "324574f1-9693-43d6-8e74-3c63df33f284",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f5af695-640f-4c47-a3b6-6d8a2b61106a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "022c9b86-a8f2-4262-aad3-4bdea67c7b35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05b4da4a-adf7-4303-bbc0-48e140179b10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6c31eec5-bfac-40f7-877b-fd6108b17a52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e77296a2-b1c7-42ba-a427-95d7b4d3c14a",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f62bced-3f78-4957-b321-331f7ce865bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c948caa2-0380-4ec7-be95-7ad03f4137b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b427e8ad-8ef8-443e-901e-fdee9acabdfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a4891519-3152-4358-87aa-309cce3b6406"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2411ecea-19a3-44c0-ab9d-ca068982b8f6",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1145071f-3fbd-4732-bc36-757d929db709",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74ed5260-ad6b-4919-b7e0-48ad037e56c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "202ce13d-caf0-4555-90cd-40af907180a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3b950f46-e08e-41d8-a553-deae93b3fb4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a99cf57-08aa-48c4-9035-79fef64b79b1",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0215e8ff-165f-4cd4-9693-c7206ba2b48d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58a8115e-77be-4ffb-bd0d-5f557f59f244"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "410f7b47-39f2-40bc-ae79-7da1ed441eca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "10f35596-a90d-4b65-b902-454b065532de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ade23679-994d-4aca-82e4-0cfedc241aba",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6c89980-a089-412c-842a-79f45f353910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84ba3e89-c545-42f5-8524-48533836867f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50a20439-93c4-4a2c-9d50-945ce6a6bb99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2e348710-6543-4ecf-9fd3-ae50e67ee461"
                        }
                      }
                    ]
                  },
                  {
                    "id": "836621c4-d6f2-4056-a11a-73798e4422ce",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d86709c-b3c6-497e-aeb7-3f40dacf6bcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2016066c-071e-4cfc-8158-a1c0150a7a05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa58dae9-ea9a-4107-ad09-a8d92a541619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7cd8a2d9-51c4-42d1-b563-6603907bbe23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "961faad4-9550-4353-9d3c-dfacfd35ce0c",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a726aa60-bf9c-4b8b-987a-7f4df190946d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f8eb35b-7a47-4372-b584-6132e637392f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1345b3d-9169-4dd1-8c4c-cc13bfb8e486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6caf0374-a22a-4269-acfd-c2ce4d4769bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87e123a4-ce4e-4c9b-a225-bc2d5c32ee3c",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "060654e3-ae8a-41e1-b1a5-16d8a99b645d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "408bbf88-87af-438c-a769-5a37f92dbe1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ad79c6a-30e1-402b-8002-4a45332528bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c882c558-3686-419f-beb0-6650462c7852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69425470-ae78-4427-88b2-e8c4488c8e85",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c232c9c-a86a-4032-a43c-2f11380f1610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a2403a0-8871-4c6b-adae-a39bcb18917a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d821656d-508d-474e-9bbd-7a6e95261210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "6aeb05b7-e585-46a7-85d6-792483fea798"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c7c2f81-40b4-4616-8690-075430f2d323",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ba4f6f2-8ad9-4028-a529-1164b458cc37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4ab8553-f06b-441a-9142-a719dfecca2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06faf4b3-89d5-4d6a-8360-fc15c14c3137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e323d785-82fb-4f45-921d-f265008229f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ec92ed0-7e26-47a2-9ff6-3dbcaf1c6e9c",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b29a528-589d-4627-84bb-0276f55696a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90e1d0e4-b2ff-46c9-be58-e164438593b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf49f8c5-66d9-4339-bb50-fab22dc434d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "78776838-aabb-4f33-9fd8-a20c4254f2a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9cca516-832d-4435-9bb6-a97afce7dd00",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5fa6e8e-62b3-47b5-8087-d7ac7a026640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e577a6b9-bf5c-47b9-8476-b7767540bb65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2adf667b-676b-4710-891d-c81d2f42e292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dabe360c-8527-4348-b2f8-0962efb33cc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd784794-c8bd-46dd-9e1a-59ab4d050305",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1940b2a6-50dc-4d24-af46-627c3e618e25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f90f068-b0e6-4f51-930d-1e3443557904"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76c3fec4-a52f-4e67-a20a-9cadf8375991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "877aa037-a28a-442c-9b33-56c9599fa0dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19e7c112-6518-45a1-a22f-53bd1607148f",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bcd8e83-2c1b-4e2a-b58e-39d14c41973b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cf1ec05-fd24-4e7c-b419-4f92e65a1130"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5619c06b-2064-4a90-835a-b2b1aaff9791",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0bdc8f4f-ec53-4569-8029-edbc0da62af3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "700a29dc-0f67-44fc-86ca-19bc093b8f2c",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a743cf62-2d19-4c19-a33b-6a4823ea66ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e694dbc-86d5-4b59-ad91-a817b03480fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c6cd601-7489-4f9a-bfdd-a44dab8f0695",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e11a28d-7101-48ca-9369-ddeaba65c99c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58532887-df5f-4156-957c-f47516e015ac",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33349eb7-ee29-45da-8cfa-c4cf76c8ba63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bd08adc-ce61-4200-b7bf-a31e621cef92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46f3ac46-7b7d-48e9-8c14-7b5e428fee9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f01ee58-7ab2-4fcd-b96b-f58d41307f5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c826a4b-41c9-48f7-8836-8edf7b862086",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3fee377-626a-452b-b7c1-60d0cc2566a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ed998d3-fdb0-45e8-bdc3-5c09cd348631"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37ca9e2d-dcfb-4bfb-980b-ceccbf285b88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b70dbf87-fd94-4cc6-94c4-ccdf409c3747"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2375ef2-337a-4e2b-9486-b8b4dbcc595c",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9b387bb-d407-4c82-9883-49b6e7fdec0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1f4fa05-105e-442f-8044-e74368bfd6d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95438d84-4ae7-4baf-b56f-e28dcd4a5a9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "490010b5-522b-4a91-933d-911471b499b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76191de1-b886-4735-b0da-fc7a8e66bf20",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2d22e43-1405-4f4a-9aa9-a39a12561916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa14d149-8171-4e5f-a421-b2196dfd6ce1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "502d09e2-99f0-43da-aba4-dbf7980bef86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9ce6b95-b8dc-4e2f-8aef-cca5add63342"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e886a631-c530-4f0d-8a58-6370f7504c9a",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb13b3f1-503e-47fa-ada2-9db85a821c33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4277f6a6-cc21-4e49-afc2-fc4cb5374fc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b33756d-97f8-4f2c-96ca-90c720be31fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b74513c7-9806-4d0a-9f66-cdf13fd6e6bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9682183c-7377-4786-8ae3-87130f26b251",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18859cbb-3619-412d-a251-752e26c19093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2cba751-5270-4477-a61b-a37276d38f86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a99a855b-be5d-407e-b14b-1aeb429f4abd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "08248cf3-b0af-45b4-838e-e06fb114b49c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e12684b-e0b8-404d-b0a4-36077e3c24a9",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b2ea4e2-2f9b-4d7f-a3c1-7d1469928b59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4edfc18-731e-4195-b4fd-4b3271ccdb32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cbbe530-a339-492c-910c-aa2820e7d166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f240fc3-78bb-44f2-a1a7-f0f56d4a96d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "949db2c3-4f79-4ef7-a8fb-b8d05a9131da",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a07a7715-6c45-41af-a3e9-1cf86f161c1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "829cb420-de77-4ac3-9dd8-9461ba191768"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33ab770d-73fa-4fb3-9bad-e47f9bf08ddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe26e23e-b3eb-4e36-826b-9adee89eb0c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c963a10-eebf-4dc5-9232-7370f4a56a4d",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cfcca74-04cc-439c-a6ec-8e31388bcb39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3073d344-7b3c-4636-b4c2-68566c0fa9b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1e2251f-440e-472a-a072-1d56d3d21a11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dcfd2572-2eec-4fe5-959e-c58c7a592a18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d32b41a9-8b66-454e-bfb3-0c73fe7e2625",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5052e6e0-a847-4d48-ba48-49362f83e191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ce4d0bb-0829-44dc-9cd5-9f5a9cdd4b87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa759aa1-864d-467f-a758-da35b47f809d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "da58b3d4-cd96-4810-99e7-310d138fee33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c89a9be9-65d6-4f93-9d9d-3eec45d33905",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e83de76-e7fd-475f-aaf4-4267e27332f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4ff7214-cb6e-4ae1-be04-9642c0aaa619"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9469cfd-f1aa-4bf1-b82c-bc857a1332d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "32998e14-d6b4-4e33-aaab-37c5a2f58eee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e66f333-67da-4720-bfa7-c749b72f6565",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80d08ea8-c190-4194-984a-7a1e0cb97705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7a00841a-b171-46e6-b2a8-bafb26ba8432"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfb8a078-23ab-48b4-b5a1-12d773f1234b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4a48245f-0031-4270-b820-1ee2a6b84e4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8125e82c-721a-46e9-afab-b766adedc1b4",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "185a6ac9-5d38-4c53-a937-0b866a08917d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96a1fc26-041d-47eb-b682-e7048dec2bd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e05c97bd-8f31-4273-84a2-fd4edab51cdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6d494557-4894-4a92-abee-85c97b055346"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55a4d185-85b7-4f89-aa6a-3206c3fbc38b",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f32096f1-a475-4f14-802c-01acef524e97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f24fe80-b30e-4515-aa8e-e8465ba9d26d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64cb8a99-6d8c-402c-8fa9-b36b38625f89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "157fba51-1772-40dc-916b-961b51018679"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aeafc91-b6af-4162-8cda-aa31af757011",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54208bec-89e2-4e5e-9be1-bd26fda883d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6aa6b82c-ce2e-45bf-9c84-3cf2dfb9f3e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f3ea78b-8140-49b5-bee6-1f0b66eecd14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4193658a-53c8-4092-bc29-76228c19e93b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8242f5a-05d8-4fbc-9e4b-9570b136d078",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31b7ed97-5454-47dd-a576-710a5e98b3e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c47e621f-ff0e-4e4a-8e4b-9b540f6a97ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3149307c-f504-4941-9e71-ac8a30d492d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6889f0b1-e64c-4d88-bf30-083c77eb05e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb89fbc6-4350-42b2-b4de-c288effa1fe6",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02b1925d-a892-4aca-9fa5-43a72c8b0ad3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c79c8df7-6fb1-47ca-819f-2ea4d6d790e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1ec18f5-2c46-4a81-82f3-6d905e4cd740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "bef98a80-8178-48b1-af5e-a93ad4b31850"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11c5b56d-153e-427d-b9cb-4527db8cc1f2",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bff9aad-284a-434f-9acc-ef868d7a6512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fd81e8b-963c-446b-90eb-b68f512c3c84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "830cabed-b57f-4834-a617-62144554f8fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "ebd4a060-1b4b-4a95-98a9-9f2c546c5a8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46fbaf1e-6475-48be-8cf2-a3e858391552",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc7df1d4-784e-4887-beeb-6be491af6d60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89b7529b-36bf-491c-9d67-498dd5b900fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fdd3a19-375d-4049-8f47-8568560b7bf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ba9acfa5-605e-4556-957b-794b0507cf9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e19da30-b6ee-4c96-b75e-505760ded666",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84d3b30d-f703-4182-8a95-b2f00fe0b75d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5563bb3e-8f1a-428c-8662-7151918e2a0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35626688-b012-4ad1-975f-b8f0b42772a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "2301afa1-9571-46cb-b05a-6d45dc541eea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f21f7034-a777-491a-8021-5d89f758dace",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f5ed6bb-4f81-4be7-895b-31b08eb058e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b47b345-0945-49fc-95e8-ef5e87294b75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34cdb21f-3c74-4f65-bdf4-336a5c40baa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "85393d7d-3922-485a-92fe-6b3fb5af654b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10a60efc-abc0-41ea-943b-94f7c42803b1",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c910a783-9d00-4786-82a8-988fa44078e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9213ef6-010c-4a39-9a91-2c68197742df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4f85568-9c9f-4f39-abfe-825af7a90087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f3e04ca-522b-4c15-93f4-79e4262e6404"
                        }
                      }
                    ]
                  },
                  {
                    "id": "859edaa0-e5bb-403c-91c0-28c88b6dd8da",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98e26e68-e8e6-4ed2-88f9-dbd58d369f84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c1f8cb2-9c00-46da-becf-92eb4e3550ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b65159ce-34a2-469f-839d-1d41ea8fb7e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b69b190e-3e0b-4fa0-bcf2-88227258c10d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bacb9d7-5048-4cf5-988d-b978e5ab9aa2",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54b5f2ee-fa41-4be1-b0cb-1f4316598017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd523719-e5b1-4c04-9fe1-701439db6766"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf008cab-47ad-42c3-86bb-f368843f0f81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c57464b-83c5-45be-bc29-de1f71196cf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e35bd84e-0e2f-4718-bf0c-631c83e5b9b9",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "934b32ac-89e9-4b2c-8cbc-1307774f23ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8afa2f59-30ca-468c-a079-15041d9c7fd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9db7329-5cf5-48ab-94a1-53c23f06c8b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b96728de-9e3f-4dab-888a-d95e2a5d8abd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34de66b7-cf92-4fbf-b089-0c7d37f1c765",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "705acd74-00d2-4a6c-ad87-eafb3cbf7aa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b50dc9ed-53a0-4597-b534-b13ed782335e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e4eac74-23e2-4d98-88e1-c684c55e8808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2c9c4944-bf33-4486-ba0f-64fa5cb9cba4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f74298e4-aaea-495a-8605-9540bf14a338",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5384cbe7-ab4b-4c00-94e2-d1f9cb3fd11f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ab0e180-757d-458f-abf1-0f3614b51bbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cea39993-b83d-4132-a591-b5c1d1070dbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f7c83d0-dfe4-4647-bf11-c50c9b6df498"
                        }
                      }
                    ]
                  },
                  {
                    "id": "160aa22d-30ca-466f-a573-307493617611",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e76f1a9-1913-4a4a-84bb-f2d0ce8c5c5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dda2050-1434-4b0d-bdf2-0cfea2b7bfc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d482d916-7981-4b97-b7b0-35510691fbc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "30a138de-a253-4209-a456-b67f28558189"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a2e07fe-ac48-49b3-a182-c5c133929565",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2542869d-5710-421b-96cb-cf9cd1fa31b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ab4f420-a58b-4d06-a80e-aaac1b373787"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "039289c3-7d17-47b0-ada9-3a2f087d4a83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3315754c-879a-408a-833a-c6c1b1fb35a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eac0bb78-78af-4b00-8aa4-ae2edc596c81",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c2b9e2d-90a8-4218-a21f-b3930f4aae90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d796caf5-4a47-4ddf-a9d2-e8d31e973059"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17236ff1-f4ac-4936-bdbb-3171d114092e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "948e39e1-2a0b-4845-98e7-1eebff037378"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2498c10-9a69-419b-ac94-412900da813d",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa97a7cb-6cc4-437e-a728-6e3d0299cbbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9f76836-c2cc-443f-9b7d-533cb812c711"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54e12fc7-a407-41ea-9b8e-c6fe1920e979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6e0a06c-ea5b-43ce-ad85-72239e1e3ed9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28644244-a3bf-4831-9538-51d37644cfdb",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef259a4a-7a8e-4094-ba17-daf059a7b3cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a266c6e1-1dc4-4b49-bb14-30488ba2390b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "668b1f8f-c83a-4af2-9f8a-c36e3f0e8dcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "f8e9d182-52eb-4c8d-b0dd-ab9d73ed209d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f52bcd19-2acb-41d5-875d-74676af41ccf",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a6f659b-cf03-4df0-a850-04572728e55e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "049ceda0-96c4-4fd8-bf7d-f116ebfd2b0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d64cee19-3a49-4ec3-9ffe-c0f911100a8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "492346ed-6e66-484b-9984-b9c52320f0b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d90f749-1467-44bc-bb8f-6e8a77ceadad",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cb78c4d-94e9-4fda-ac12-5962a79a654f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31c2d775-105f-4b48-ba6f-bea537ef601a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb2c9964-0500-4d36-85ad-1eec26b5942a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ff6dea1a-1e29-42d3-b4d5-cfe494d6195b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f5dba6d-225d-47f2-b8bd-fb4db9110a8b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a3b2df5-0d8e-4ccb-a5c3-a810755cff2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "646a975c-407c-40cd-8656-058f4d48fb46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24eb336a-710b-4942-9428-25d76f95f139",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4c5822f0-1a44-4215-b76a-ebddd10d3c45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d64cec10-4698-477a-81df-a721fc60074f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aef6fc0-dae1-4f81-90c2-ec52673581c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e1d1747-59d5-45bb-96cd-c59b2df38118"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbffc65b-900e-478e-b3f8-c7afbcf325c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "dfebaa91-7918-4f01-ae0b-cf4bdf7cb569"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c69740b-da78-4938-aab8-1e70f101657d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52a84a74-f10c-4a68-a4b1-679dd65dd8ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b55cc8e-750c-4854-98a8-1f24b9dff38d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb4f77ad-a9fb-457e-8abe-0626f8280390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "5d9c0873-ed67-455d-818f-8182f95d77f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "079af9f6-ce5b-42ec-b582-31b367244ec4",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eda2dc8-3e8b-443a-908e-51909473c339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fc7095d-0c25-4ea1-82bc-d467fd71b5c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af6453a5-fbd0-49cc-bbc7-059cc902754a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "63a52404-eff5-4219-a0e3-20ba8e9b8cae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4356cb51-7ced-45be-b5c3-048ecca825a5",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed321740-bcd0-400e-9613-56b7cadafccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5924b1f8-d876-420c-9dcb-52c88e431aab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3e27ddd-b398-48c9-9259-67a0850a6015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1d1bae4-a1d9-4c7d-b81b-2c8c3a155115"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9000180f-987d-4fe6-b693-36eef62373c9",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "229bad99-27cf-4f12-8416-03db39d89b0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6c94c69-cc3d-47c8-9b5c-c5d06006d039"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e64e6f8-6fb7-4133-8457-c3affc4eb16b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9388954c-8cfa-442e-90b4-8238d681aa3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f734688-dbd4-428a-af97-3250861f38cc",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65b90d5c-2c6c-40be-b9fe-272574b27afa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d021514-5941-4f85-b69d-62a74096052e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1ea49c2-bd01-4f9c-9a20-c26b31db49cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3d40a2d-61ef-45c5-a3f0-20466e68ed01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43170acc-9c7d-4731-bf40-308d7690a1a7",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c777c550-cbd2-47c6-9549-8078ec7122df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "858964ac-88bd-4920-99f6-8fa76c6d8508"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dcc12f2-8e60-4f29-ac68-b81528c361b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "69172ff5-770d-459d-a957-d1aa8f996674"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2642864-f0dc-41b0-80cb-e909e9c5656b",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e18ab5ec-9a1d-456e-9076-22399b325f04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35c20910-8c6b-4fbf-bbcc-ef0d79c5f918"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3083c32-5bd4-4413-8f4f-d296c214cba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a1ee8755-b6f8-4868-862b-00be8b510f1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d98447a9-03b1-44ad-9206-19baab7fdedc",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3966e42a-d04a-457e-83a8-b455f7a1f5c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa17517c-3841-44af-ba5a-70562ccebc3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25f0546e-4cf1-44c4-97f9-5a3e81b1fdb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "75671b2a-eb14-4237-91d2-9db5e307e82e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f90ee0fa-6618-474c-aaa4-62fa6faead0e",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4acb505c-e5f7-4a66-8c73-69fe54779942",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6ae031d-eda4-4c04-890c-593850e4f350"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2db56aaa-c272-4f75-9bd8-cd47368c88f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc2f1438-23a6-4fb7-9d61-9c7a4b2a48c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e4fae3c-af88-4bc9-91b5-a1e05a45eaa1",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3ccccb8-e100-4bdb-83fe-e08f1b73eed7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b415394e-1852-4882-9c40-e161f0f0c963"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42eae672-64f2-455b-b47c-239b2dabbbb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "abd9c3fd-5012-470d-9230-e87dd202ea49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d2c9885-05cf-4feb-bac0-64383daef9af",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a9a7043-8ffb-49e2-819b-963e40d52296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ecc5c70-7e0f-42f0-8802-460422baadc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bd2d32a-4c22-4b4b-8bad-2d7aa7dd4161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae330b6c-78a6-4c68-abcf-86a0d7dfb6bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd276808-134e-4c92-ac36-b9d15aad50e4",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20c8abff-ae66-44be-b98c-57244c35c608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3f4ed2f-d617-4679-9fac-7849974ee13e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "300cf31d-d9a9-4b46-a994-de79bcdc8ea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6251d11a-c92c-4c2e-99fd-34233ae9c8c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3613f49-f286-4a55-aab0-56d1f20ebde1",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "312696c4-4958-40c3-bc35-448fcfcae34d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab4ac4be-fcc3-4617-96bd-25547bc05156"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcefa15a-4caa-45e4-897d-0a7ec64e2cfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "946ee9bd-7568-46c6-b371-fd0a153ae185"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45b1d73f-d055-40c0-afa8-7d61187d005b",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a8307f1-4967-4bf5-b3e7-19bf788833fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6313701-8a9d-4e0a-8479-7ee040d6eab5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91084406-e386-42cc-b3ea-15dc7deb5afe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5213d9f3-cc82-4c2c-b59a-04e8fffd884d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2e05174-cfb3-40b3-8e04-5bc9ef3f4cec",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a55cdc0d-50f6-452a-89d1-71ba1fa119ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89919ed8-97d1-40a6-9902-48fe6254ec22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54bd7a37-199e-49c2-a26d-2af1713faab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "897aabd6-1bad-4391-8d8a-e3f05df83fe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "825ef1b0-6717-44ea-88f3-aad5cdab1994",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d67ebbc-b6c3-4bfb-a419-9077b1df0845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11d9a3eb-b9b8-4263-8391-eb575277a2d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b8facc0-b184-4bf4-8db1-ede8b9550e67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0590e420-abbb-4228-8dab-a9c0747cecb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e600093d-e2a0-4567-8a72-109bf194d452",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc94f74f-2663-46d8-b4a9-8e2078e17def",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "048aa2e1-1828-4d6e-9e0c-6573e85c7e16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82cacc16-c694-4e4c-bf47-f88035b46ffd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "110f4c91-e6ba-4c9b-9528-a85116497cc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66391d49-fca9-4a57-a7f4-083e97aa8b54",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc076b6c-ec8f-4eb1-8ac0-acf74a238e26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c64383cb-eebc-4cc0-961d-ce83d48828ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5829672f-96a7-46b3-a59f-25f367486764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b1ef276-10e8-4710-b847-6e3a3a42fc05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4837c1f2-a9de-4ee2-8e60-2b9279e330c7",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44d19d6a-5c2d-4977-a01a-3ed26f67883c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33575218-0904-4919-b1ff-4564e37d7c48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8f5d1ff-25c5-459d-881e-d8265d52a22d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "855d15bf-2b72-4e4b-a0b6-01e95da4b61e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddf30ecd-bbc1-4a0d-8255-10ac561bd6ee",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0596bd37-58fe-4080-a7f9-a11e57cd9845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d15547e8-bc6a-46dd-b21d-a6e20154b5ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63731222-e7ef-41ad-bfbb-e64113c8b624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e0e98645-038e-4929-bdea-51c4193d0b70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a5078b6-ce75-4475-8c4a-a374c677f683",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2355a50-4ec7-4a17-ad8d-3603f19f09ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b9fa6c2-7f27-4151-a003-f24468bf838d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95e2f712-73b3-4c7d-9812-919d671267e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "912ba431-a8fc-47ba-8904-57d21f306eed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5519c27d-b65c-42f9-b6a4-c7ef7d88493d",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a85788e2-1166-4c71-8691-205579ccd0f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4251847-b55a-44bc-ad01-84962b92a50d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92eff1c5-1d65-48b4-a773-228bcf41221c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba0b350d-c842-4e25-adde-6a77a14bea72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc4a97f8-1124-4940-977e-e75596bf7694",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1719b1fa-7e7f-4439-b408-39fa252a8958",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c1c7fae-0b06-483d-b710-f414d306ba10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7039a3e-b5fe-4f1d-af04-05d70eeba617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3942800-492d-4480-9ec2-6b1d1ccaa31b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "449b2a7f-36f9-4dd4-96e3-95961fb320b5",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb4b9b85-704b-4f77-9cd9-48d7617feaec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d17377e-88e6-4646-9443-7aa7b43ea7b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a46150dc-b478-4a37-8259-61d761577256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "640e3749-b28d-4430-b604-e52470cbf08f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c718bad3-79ad-4615-bfa2-9fb0696a017d",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fd937e2-2209-44be-9f70-c4a4724a726e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ff75efc-9044-44b3-9277-73a46731230d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "462b8aeb-3d9d-4d47-bd2a-f0c755f821c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "01b40957-1eab-4e7e-8eef-a14aa775494d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fab2cc01-8ece-4349-9dd6-7ef2cb742a31",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e44acc54-f676-469b-941c-b351fba2db59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f8ca79a-0330-419a-9872-7c5cff497c5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "637a1bef-0532-49c7-a6b0-594f432ed2f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c9781759-c78f-4cae-a23f-78e51ddf0119"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd189403-eba7-4528-86b5-5e659f526bfd",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f811e229-7474-4658-a904-76befe19f874",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be453bf0-fbbf-4646-b48b-bc4643589432"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4e4a1f8-c16d-4000-b004-ce2fb0bd1739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "10e6b5bb-d331-4b35-b98e-a006d997f4ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92f4a4ca-0d06-4e7c-9d74-ff28f02055e0",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9be954e4-7b7a-4a81-b714-a92df117a446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6315f18-0f9f-4a38-98b0-9cac2ca8ba75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97d3a0b1-d826-494c-8330-0382d5fee819",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "68775574-9806-41cf-8cb8-e95e5d9a653d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "284b28ab-9062-47e4-bf50-1059f8a53dd8",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60e6288a-9e9e-4620-acaf-74a90fd4ca5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6989f390-84b3-48d4-beca-728f8ee90327"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b802e592-1671-49c0-aa26-88572b47f855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c4fea6c-0228-4044-8073-848b8a6721d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81f40d67-0abe-43c4-9749-579432b6656c",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12b8fa4d-c94a-44c3-9649-06c89ea56876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e068ca10-f5d2-4a0c-a748-ee604944de54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd0cc333-c5b1-4f37-b40a-577fd1d4208e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "82c760da-38c9-476e-ab43-ca75860c0199"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bfdd38e-4864-4737-b34a-de1c6cf6058c",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d938059-cf78-4e4c-bb0b-b85ed87c6af7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c247086-261a-4cbc-be65-3bd965809dc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cab88df-566e-49a7-9fd5-92b17dc2c4dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "40bac963-0123-4a0e-a602-d11f1cb07412"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e93cf5c-2130-4ea4-8c47-558bc526a9fa",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6315a2d-f1a0-4169-a3ae-c20a2fbe9750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "bb4e4027-e0f2-43c3-99f7-cd904f170200"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbdec5b6-670c-49c3-8518-7507b3231336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a425f31b-ecdb-4a1b-9e66-5592211b49ff"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a7c29b65-9a3d-4d88-8e05-ae791389019f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c50f01fa-0f65-4b46-ace4-1cb2a66fd357",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be5934df-2d1f-4988-bd25-f73568468ec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "87ad0641-1381-4c3a-be07-716891af22e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c52688e4-e14f-490a-9277-c7d68fb4fc62",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "089964b5-8426-4a86-b772-cd8731a1a14b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d01d96b5-771f-4704-a86a-68f9682e2546",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3751de20-defb-4d7d-93bd-c500e4c6556e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "37d2f592-cbdc-4ec5-99a9-8d8041439e45",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7977ef1c-70c2-4d3a-aada-52634d851771"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2a9486ae-f1cb-46e2-994e-80830d970097",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e1d10e33-eedf-40c1-ae5c-34386c760ece"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "91f39966-c335-47ec-a56c-1ed37e56d36d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6f82effa-526a-4637-97ec-6a7d3833b338"
                }
              }
            ]
          },
          {
            "id": "cee991bf-b097-42e4-a9c4-0c15bdc3bef1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "06dbcc17-2083-47a4-aa12-e4b301482f74",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7f19c1f2-491f-467c-94e4-e482349216aa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8d61310a-f4d0-41d5-84bd-b784dc1ccf7c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "601005aa-d671-4a7b-8041-b22d4698dff4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d02274e4-c3da-415d-a587-2a6afa626d37"
                    }
                  }
                ]
              },
              {
                "id": "3ecf9c18-4dc3-4151-9821-046a09c72212",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c0a31027-21a8-4b0a-95bf-0e2a908b6be5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "52cbcb87-3b09-4a76-be30-b4a33f766517"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ecfb3fae-31fa-4e4d-a93a-4879b29b38bb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c6e8f198-24bc-4689-9c19-90d76cb3e795"
                    }
                  }
                ]
              },
              {
                "id": "5e0349cf-a4a7-46bb-aa4e-4252334c5f50",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "262a35cc-8865-47bc-a998-639426597d95",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4f8129b7-9844-4444-9c7f-b73f7c6e3c0e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c5f1de99-c6ab-49ef-978d-3823be3d25b4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "62e0f977-3f5b-429c-a526-e6b79ebebbe0"
                    }
                  }
                ]
              },
              {
                "id": "e4fd9d1e-32af-4aea-8592-4745882a1e27",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "016125d6-9fda-4ee5-a9cf-cb6c7346805e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9e2d6090-84ff-455d-ac97-046eb3c7d47b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d0dd4e60-78f9-4069-b6ba-4ff4dcc71898",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "0302f99b-8839-49d5-8b8e-d3f30c3fc431"
                    }
                  }
                ]
              },
              {
                "id": "bb4b1fa0-b341-404e-86b5-83cd503a6ce5",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3f454843-a07c-4e80-ab63-45262610e21d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9c2be977-0110-4db9-abc0-a50969cfec93"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "25955890-a4ed-4f2d-9249-c1f0c63c4b29",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "7051b761-3ce8-46f2-85d5-c575aa5c001e"
                    }
                  }
                ]
              },
              {
                "id": "10233814-413d-472c-a840-09e3a76dc69b",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "127a3c32-b010-468a-82f7-8894b10e91f9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a866665c-64e4-4857-ab17-71454600e943"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "efd30949-e6cb-421e-b6f8-f3f2effeb5c6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "31f16f92-c6f9-45e6-a7cd-828da42df3a0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1f59e9b9-059e-4689-8d46-ce9091d3ef79",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "201aca66-3adf-4710-a54a-4e4fb65678f4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e4a5f5d6-a7fb-4db6-be00-3ead2c04047f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bd5c888a-0155-44b9-8861-dbebce9193ca"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "156f7489-a292-47bb-8b75-4436c590e841",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "557be0dd-004e-446a-9adf-c7fc0a05b463"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "92f01d89-be0d-44ac-ab5c-e355192daf0b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1e64dd73-f0f1-4092-944b-90c037c7dc11"
            }
          }
        ]
      },
      {
        "id": "d8d53624-981a-45dc-9f2a-9fa79fe0f4a7",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "f8e2c9b7-dd59-4e61-aca4-b0fd1d3cae23",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a49294a3-2e6e-42b8-a0a9-bb5c8843224f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5b3c8932-70c5-4b63-b5bf-8c1ee8cdbbfd",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98eced62-e7b2-434a-8906-8507770f453a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95cc4dbc-a357-45d1-951b-78af8e32a633"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44ba5c80-7eff-4ec5-97e4-87652115ef08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "90cd8768-7832-4463-b4b3-00616b2ef9f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c85f7b80-e411-48ea-b36a-9882709627db",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14c50820-3c8a-4367-869b-fec7a1188b15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58727598-4a0b-4416-9eee-2817c379e733"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d7ecab6-3a92-443b-85e0-71c82fbc1016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c6addfe-8ea9-4e7e-aede-a0c64d5798ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c06eef8b-691c-40d2-9000-792afc491fca",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12440f20-b187-4310-a22a-7d20e6903f92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37d5cdd1-e188-41bb-857a-0b6e99d60e85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fdfc5f7-f9a1-432b-8ab7-811c4ac1483f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "31569205-99c3-4386-bb7a-d11ddc82aac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd7b064f-d1e7-4621-93ee-def267807d2e",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce71f326-49e8-446e-b538-635b7b5b9ef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47b92f06-d6cd-4902-9cfc-044ec7df0750"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ac19701-009e-4fc3-b70c-48c29813253a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6919ba20-c109-43aa-a3e7-897a9a6531ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccaa7eff-6095-4a9d-9bff-32f122fdf27c",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "442929a3-28a6-411f-bd1e-f422ae038251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be66154c-d7e6-4819-87ce-470164c39a7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcb7df61-355c-4be1-9044-31192cd82c14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "055d65a3-ab9f-4f95-b9f5-1f1db22e0061"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2906518-6198-4657-84d8-40f05b175793",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb1df4c1-9c49-4eac-a697-12ab20124865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61b2a632-6dbd-4a79-96f1-330f177d7222"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "614c85ca-850c-4023-bf19-33c3003ab0ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "22dcbf73-35be-4471-8a03-63ef27fde703"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d916a37-cc02-408a-adb3-739f634ab20f",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82f324f2-1e28-47d7-85cb-c06d1acc8266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85c56d46-5310-4e98-856e-1b5ea67be05a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e0edfc8-30ca-4728-83b7-b2722501f847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "15cc500f-7234-4660-b1ce-079555fb2a1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "304e0818-b0f7-4ab3-ac5e-9a25853c9f2c",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d954d5d6-467c-442c-884f-67187f2c4b8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9801eff-a143-43ea-a3d5-62c8b68b790a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff019821-8f71-45a4-aa56-510b78113ad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a5e7cb1-84dd-4d6b-b2cf-14eca51577eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "169e2ea8-75b1-4279-8856-761579b029e0",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f587d78-98c0-4e56-8347-7c49c4fe6528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b79d024-cc3d-43b8-8767-8174ec5c8775"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f62afb9a-c559-4a73-a16f-7a49f6d13882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "40eb17e1-ac02-4b5c-a5d4-f0750edfc835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7958152-512f-44b3-b61e-14aaa68bd13e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77f2d0cb-b711-4ef9-8c46-a2614ece877a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c852594-49a3-4061-843b-d0099fecc726"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c39e793-7d72-4953-bca4-ce780398f605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2144d33-a8c7-4214-9ae1-a8d42c118548"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c497532e-4977-466c-92c9-9613f47bccdb",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fba4ed1-896b-41b7-872a-b4c84e561b3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47c8a2b9-e815-457b-bb65-66ec3c2c8771"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75ab92bf-4720-4b01-88d9-d3d8fb56013b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "be36d471-6ecc-4e71-912f-673fde112295"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e421c4a-97d4-4676-9e7e-1233a9f1cc47",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fd00a07-1431-47f8-978e-d62f800c2c27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62f38a3a-ed32-4707-8446-d784448a125e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6703b675-9321-4c8b-b61f-e3d90e923f20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "505e242f-06cc-40c3-9701-5654af6a824e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9299e23-2cb4-4df1-900f-be881d71a999",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c51b4642-39e1-4d97-8247-936b0465a69d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82de862c-f083-408b-82e9-c04cedae7ee5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e2537f3-e815-488d-9b2a-84d33b3a82e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c39fa8e-e3a0-407a-ba55-c97e6f55e530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "711373ba-d18d-498a-b8a8-e3269a951a51",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0ae94e3-be25-45c6-a495-5db90b31fe46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "122a6fa5-ed5a-4774-aff9-84fec6696993"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da48b42d-8746-4a86-885b-f0f70080916c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "8177670b-26b8-4782-86ed-2f6134be98a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f41c453-5d5b-49bc-8939-d4b16f0d5c3d",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7a18f2b-e40d-4b4e-b06d-5dd98cc2ad59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba417498-f33d-4fae-8721-023ac55bf853"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa1745ee-624d-4437-91f8-8d8a1b3f4eb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "540b4625-8172-47ff-bf52-c033c140f3e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01da7fea-2677-4a47-9720-5af1e0b2105f",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "186d583d-83d4-473f-a2ec-cc1097e4fdde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5743af5a-826e-463d-bb81-749a5a2d7631"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56df3831-0c2f-49d2-b222-019c1f0a513c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a1b128c-df5a-4f30-8957-4adc12a153b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97e749f6-9108-46bb-9b1d-e11853056178",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f8e7ae2-8ca7-4a90-b85e-a91273dd37d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b949a097-8106-4463-b05c-40b8be6948b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3707dbe-6dbf-4560-95ca-f437a180b267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d92b306-ba33-4022-90b7-53cddcfd22ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8caa18d1-e2e1-4581-bf1a-40ea997ccbc7",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84db05fc-7ffe-4e6c-8245-0287e62ec743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3f16c46-cc32-4992-8d5e-bc77750e5b33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2dc29db-9f99-4d95-8303-3c316523a3b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "612ea4d5-dfb1-4ff8-8fe7-a052def29a89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9472d43-a4f0-48a9-bb1e-871d8ac1a3c3",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "159783e8-e7e6-48ef-89d2-23a14d75fea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d209ba9-c043-4083-8f4c-429c597a96c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b99b1f3a-6586-41bb-9c47-a39c0008d878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "37543d96-7729-44f9-b386-03ce0b2ee8ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d12b678a-a124-43d2-a5fc-08796e945e55",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16534853-3d73-4c65-927a-df306bef6334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff50b45d-f292-48f7-8a70-136a7320b177"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40022c2c-4e4a-404b-86ed-e087c694b854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c31c544c-87db-4719-80c2-6d999993941c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd9084a5-7272-4a0e-aa3e-2c405b640453",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0001ec31-ebed-45a2-9c36-b701b3f621ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39c4c93c-4ec0-4eb3-a636-19885c8769e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d34c1c10-cfa3-4a27-a24e-39ceca591946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "155a5762-6f9d-41a5-9a92-e352d8ebb324"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3580645-95e3-49bf-87c1-dc138cee3b74",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eff20dc4-0104-47b4-a571-856ce59d08b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ab442da-edd1-4ace-b2ab-4836102f4e53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "431bfa6e-7004-49d6-9d1f-e35a22166d57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1af1cf79-1667-4158-9971-60241a74b606"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b5a6f53-a8b4-4df4-8d33-ad839680373b",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e21f6a0-a227-4966-876b-9f3cf9b20b96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30f27072-bba5-4099-8c26-e30c298e429e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f763207-4094-4670-8e78-0d2245d0f9fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4177141-4356-4fcc-b747-01b21f2e59bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61782e56-5006-4cb3-872a-f529aec9395c",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cda2cf3d-bc4a-4502-aa4d-81f584635c9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7772ddd6-e039-4c35-9b36-9d8559db9407"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9228441d-6d24-4e7e-a83c-bd13f46bcbf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "14ffb183-6474-4532-a7e0-7da335c3bc47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a679aca3-2970-48e1-8331-b390e110a693",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "931a5b3f-2439-405b-ad09-ad8ff42f781e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb7784fe-e8c0-4a57-857c-899cb5240720"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "913e3231-6bbf-4619-8bd3-ba1deef75a30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "71a445a7-3016-4f21-880d-b9359fadb173"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c4ec1b9-1544-407b-9522-8c1bee9905a1",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f68ca8a2-971d-4f41-9775-da5381fa366a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bfeadbe-05f3-4070-9373-4f9458cc36a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04145630-29a2-4d70-aeb0-51bff5ce1150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0010d50b-1939-4f72-891e-3a9cc0bb3ae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca951b09-e994-4801-aab3-07604739c715",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d410672f-932b-45a1-8841-d65f88768f76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d26b4180-8bfa-460b-b091-4f3cbbe0242e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db65bfb8-c736-4635-999a-c6ea62f0d64c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a7ad0d6-0215-4354-a935-d0d5d46d9d95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd8b7104-f51f-4e2c-9a5c-0f2031466fc7",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a9e8b87-746c-4ff2-860e-a0c867f71550",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87e9d0b5-a510-4ddf-9598-7b65ebf34aa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cf43bb5-edd5-4ad6-b80d-0f5d0edb93cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a66099c2-5333-49a7-8397-e4f3b428414d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b992528-233a-4e95-ac43-a42335ca38b2",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6c5171f-b0e9-4ae0-a546-cacfeacb30da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efdb3584-673b-46d9-afdb-5c3cfb66d131"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa371e0a-73ac-45ae-9f92-3bb6eb77ef12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e8f4b56-7ad8-41ad-b749-9c6a02c14374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbbb3a90-0516-4d28-b4ee-b4a85003787d",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9f9716c-d5e9-4c8c-a30f-c28d2040d378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02cbaedd-eb4e-4bf1-8fd1-c94d65f3e12b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0201a0c5-e28f-4cc5-aa89-9e13e80f610c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd043995-4fc6-4335-b6b7-a4101659e0bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdf5a9ef-e692-4aae-bdac-3be15aba1421",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "388ef7f2-0fde-4199-b3bf-204f3e9ea7ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "132329b2-71fe-475b-8382-084fb8618351"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "484d6e99-5bc2-4255-acfc-dc004bb3e047",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1247d6e7-3952-4e6e-a340-92cb830230dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7939a3be-74ae-4d5a-915e-66dededc1737",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "844f6605-fe43-429e-a7fd-f312b851bb34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dbb7770-5d49-4ef6-be05-373d2a8fa576"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "517bff6e-2449-4aa6-a5da-d56900163111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1064ad82-6863-43c5-8550-bd3f9e71da2f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "685a9b39-2264-4de7-bc77-75409ffff36d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e7bcb732-d98f-45ba-a5d2-75c018be9071",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e837218-6763-4cd5-8879-94a1ad8396ec",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ba056ebd-0576-4098-9419-bc0fb6c55b6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec70c0f0-e45e-4a1a-a12c-fcc12212fb7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "79b4e15e-eaec-4300-8dd4-17e05f3593c5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ffba0815-6cc7-46d6-94e9-9cd749017977",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "11c9ea10-1b2a-4a86-a853-0815e82c585b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e7f2e93f-b16d-460e-8a5a-c59d7d57ffb9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cf24c74c-1de1-4ddc-8826-34c6f61dddb5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8ed78ede-bde4-404d-bb41-e30a349e6ccf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "cfdb7265-517a-40e8-a800-603199b51562"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "285bf258-9651-4eb5-9b47-f1bd44798809",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e1c19f0c-93b8-45bf-a851-c3eb8705838e"
            }
          }
        ]
      },
      {
        "id": "6cb6124e-ebb1-4ba0-82fb-8a451522595f",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "da0623d7-21a1-4e71-922a-6fcf301146a0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "085873c8-6bb7-4920-8623-b3e9c6cdf36c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "268451ff-287e-481c-876a-94d3feb37032",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc008a0b-9492-46ef-aec9-d7a85d50c446",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d66deadb-a50c-45d6-97db-340e740d0c93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "119370c8-b2b2-449a-8166-2b3d9a8c3624",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d84b9887-8693-4e1e-b439-5b4774e32a6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80d8ae03-6f71-432c-9ca2-a1361781b968"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2c3d95c-f32b-4bd3-8d11-3d481cd7245c",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6374b254-94db-4674-bf22-99c3a8c9029a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf43380f-bba9-4d85-910c-b17dab1cd7c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2acb8597-1d78-4c36-889f-564ee8a9fca5",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb0754bf-1822-414b-a7f5-8ce93e89e3b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22e861a6-c8d4-44d8-9c7d-21f90d5155e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "578824b0-6e2c-4ce0-a8fd-c37fa2d118a2",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94fe27c0-32ac-4a83-b710-e061c1ba472c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a76561a4-9f1d-4372-b0cc-83fcbbfa568b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9005f6e0-0516-4f9f-b86c-edbb8c1d15dc",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53562c4d-498b-4abd-8417-f9a7fffe7627",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3974dbf8-ab9e-4893-897b-57fbeb32b6a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ce08c12-86b0-4305-82f6-ae08d9270eb1",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9801480-5d62-4264-a4de-9fee579f2fcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "633b4029-fd66-4f97-ae6e-9f4542fd0eb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0d57cd5-0d20-4b3b-ad17-6f52bd1a0cda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e35b2071-0fd0-4e5e-8056-ac9c96fbae81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc2ea491-3ee0-4d28-a57b-6328d1acec1f",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02c1af5e-8c87-41f8-9cba-e937b7bddabd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce8e4b38-019c-4641-b598-1aeb704f40af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "713481ed-977c-49b3-9aaf-5fbbded84cee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92a602ed-df36-43c4-8082-3bd7cdc978e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48be820f-e3eb-4a18-93e7-78b0f892ddc3",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be009426-effa-43d4-9624-6277baac3a43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "028d0fe0-ba5c-4fb0-b9f1-5ad01c6e2399"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "100e4927-fa8e-40c4-967f-01f5b4d471d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "707954bb-a0d7-48ea-b3f0-2435c5bde2d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41d5d42a-cb42-4dd3-9d9a-aba1542a9307",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdaf2ec6-13a1-4420-baf9-b69a511dc205",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "321c53f9-0da2-47fe-a301-05afd5c45767"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7d6ad26-fa22-4990-a7eb-7fa694508276",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23918f29-ea89-4437-be33-b57ff1ed4e2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c51a473f-6eb8-49af-a33b-39ed1791ae55",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46e4be2c-be1b-48b5-bf69-1b03192f82f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81c3959a-a35f-43c5-878e-6f429cbf4a08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7428b0e7-2e3a-48d1-8277-b77be37ec292",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2033c8e-e699-4a85-b816-34714defa22b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dba59c3-8021-4637-b7f3-4814e07b6dd4",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34ce470b-277c-40e9-adb3-f2a7b2895ab9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cbe7696-11fa-47bb-94a6-e9ed95b7c851"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7453b4e-ffb2-404f-a853-e04a6ce53de6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43669f1d-1e46-4bf4-aab3-eca1c06fb4f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ebc9bf0-7887-4081-a80d-e37187272e9c",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58c1f53d-2f2d-460c-952f-d0ff3b36b0b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d425c7d-b6c8-4caf-a0e5-90a37874e001"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "607a9d50-5ca7-469c-a9f9-91a94351488d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "075f28fe-cf55-4498-a1b7-1f5b3df45126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f87601c9-eda6-44ad-99fd-716cbabc2dc7",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f47b2744-0cf1-4e99-ba5c-ae4eef1f006d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77d3c9f7-eac7-4691-b9f3-99b6916cb39c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91aa2850-4bc3-4eb2-ac46-d8155d211065",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "497942e2-0cf6-408c-baaa-9ec71f5530de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c69d2c1-06d7-43ab-97aa-ce0c3d99308c",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e703b08-a6c5-4521-bd5b-667ab45f9288",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "939d69f1-1182-47de-96ef-a7022f7a39e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5229c0ef-b5e0-41d8-a879-251e6f21e166",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dbf1ebe-88cd-4f0e-bd63-61d0bd7ca0f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "593df5b4-a80b-4910-aa58-bc50eb008a02",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77816cfe-bdd2-4d97-ac42-ed12b379eb95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be9cc444-a92e-4f88-920f-e0d1b5e37c3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "693701cb-71fc-4708-9075-85438d167f2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "452b3dd9-c916-4915-98b2-bea7e2fdc51c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11d4bd91-8781-40c6-a6d5-74b1026ef29c",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f99b8e0-7bfa-49f6-a3c3-30830eaa3f9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d026cbdb-c6e0-4b31-a8c1-6d6446657fc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09c79ce6-b56f-44c4-9b99-1f21bdf7488c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f986bef1-68a3-4b95-8f14-35af4fb604fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e62b71e0-e176-447f-81ae-755011828b6e",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3f8c6ee-c62e-4b3e-999f-a15b7b07672f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4754c996-a2cf-408a-ac30-dcc7841f1abb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfe75562-55fd-4d26-a5a0-a8973d735e02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26a1124c-b045-4e72-9af7-8483b15e6cdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9504541d-36d8-4449-b003-687c6b4fef6a",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce5abe07-ab7d-4850-abb2-e21367ccadc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23926023-0957-45e2-b6f4-fab1697236ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fae23dc1-13cc-4a55-9326-3f4f237e9d74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2278bbf4-2d28-4628-a4dc-3ef64b60c8ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cb619d7-2683-45c1-96be-99208edf334e",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c6fcbd6-da73-480f-873a-fb53828e03fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e27cedf3-77d2-40bb-a2d6-35790a7c8a34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3466d05-199a-4a2b-82e4-7b0a91827ecc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51dd6bbb-4bc3-4186-b8bd-4c934610321c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75f4ab38-3c21-4383-9f34-c002f9d36a49",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "466c2615-6468-420f-b3f8-0df05724c8f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19b5b426-4904-41f7-8730-16e479d95fee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "806d3f85-1b30-4ff2-882f-939f206cd61a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b74e1aa-6596-4209-9d45-cf8f3a088e6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae24de3d-fa3a-4f6b-b30f-a8baa384f1cc",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "302bb03c-ca59-4228-9144-3595849854f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c498deed-c923-44e9-bce7-aad753b9d6bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e01c6857-2bfd-4368-a30c-418e03dfd064",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ac7df49-3114-4195-bfac-399e2c987194"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a6758ab-0009-4d50-b17f-4cb81bb69014",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e83effbb-8938-49a9-baae-afb29369cccd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8db7c7a-b28d-43ae-a688-478834c6f024"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08951323-d3f4-400a-8c7b-6a7cbf2316a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78731250-74c9-4090-856e-6f577c60d6b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44022e03-5c10-4ba8-8084-c78fa15d6f72",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cadebd91-ae38-4141-858d-da75891f60ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6475c8f-d786-48f3-808a-0e5dff16bee7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13720fac-6ccf-4db0-a6b2-9f67c5cb5ba6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dc26027-ab47-48f3-9a53-e058a06a1ad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "281a882f-5267-44bb-8873-7bd677cd97bf",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7566b96-fdcf-4191-ae2b-0f1b0703ac08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f862068e-2279-4964-996f-4cc1abc6a401"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6361dc9d-3f99-481c-9fc4-44ba59de8d3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "621b7da7-4e8f-4b8c-be1d-16a95e4ce114"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86d1bcc1-65f5-4e50-8253-8191b4fa9517",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2e3c66a-2fed-4cb8-aee6-43adf2eeb9cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a6c00ff-7f26-4f06-8c9a-169ca28665c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38c3ed85-9c47-4eec-8d71-3e5e3195ba01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d2dfba9-3587-40d4-9110-8f20a235ce9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35a73b1c-903d-4dc1-9021-a97f8f025a77",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0221678-ac2e-4212-97d8-25979900cb2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7d2f68c-bcba-4733-933a-7779172ea663"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "924c7ce8-84a8-414d-83e7-7c6844f2ae5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d59e9a6-846e-499c-b812-e9e9436dbc8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cb4cb54-2a71-4acf-b4d3-bfb76804e7e0",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c77e22a8-d8fc-4626-bd24-9a3fc384608d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7d1db1f-ace2-4554-83ce-98817f9e7202"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43f29401-a6a4-45d3-ba9c-de7f858d2ec2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94e6918b-61f3-4fe9-897f-2515bd925fe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b0b08e0-9913-4e39-b146-f42ee06e85b9",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61dbd098-d934-4f4c-b502-7af7bb4b906a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "543c87b9-eb0c-4532-99f6-9116dff94761"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2be585aa-3608-40f7-8149-1a9b09f1eb3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "119309f5-61e0-4741-8954-8f7f6693f4d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be3d3d25-d01f-489b-b481-5f5d99747645",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4d90d5b-a1ac-4467-a953-fe45cffd65e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2169a2b-e238-4733-bd5e-581b2687b169"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b5ef14e-c473-4ee3-a771-db340fb969b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c8ad8c6-1544-4213-9082-1614a43376a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b1debee-f7e9-41de-902f-d0e653e84b56",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96988fb6-3226-48fa-9e27-cdaafddd8ab0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63143a4b-0310-4b9e-b247-f3d63d8c9b32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d470c8a0-c7b3-460b-a95f-ce1229e20c48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc17cc6b-a923-4739-afa4-ddf597dc1176"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0646719d-719b-43c2-82ad-b71b7f860526",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f5bc9b8-aeb3-4ad4-93d3-9c1bfdc4e37d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16f65b2a-c4af-4faa-a16e-c5016b99fb3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebb0a5b3-3d4e-42df-be32-33d72f613bf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b192b75c-84fe-4d54-853d-80cee2a95b67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36bcdd28-be49-4e01-8315-53e480a11b78",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3cc14e0-1cc8-40b6-b2b0-3adc0161e810",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ccd8c2a1-03e6-4cf4-87ce-d7fd4beb9c2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3ce696d-2511-46b2-9c0d-f20421786b51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c267f390-5bff-4dba-a6c0-b55994913e07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61d7c870-3953-47a5-b227-b1bf2bdd69e1",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb5b3ede-3954-465b-9b15-8e42f7242397",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c053bfc-e983-4d72-8e2c-bc502467d18d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b4cfb7a-1f65-41e9-917a-e6248be59ad9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0798ff6f-0f79-4d6d-9f10-74ac2384b428"
                        }
                      }
                    ]
                  },
                  {
                    "id": "433bca45-9b76-434f-91b8-d504ebbd25d4",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e72a08d9-494e-468b-adfd-4f03a559fa56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af1da313-b578-4758-814d-abea68e71550"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9789f86-c374-4ed3-8a44-52ad6f5a0e4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35b3f904-5b6c-4adc-80e3-c3bc17c6e824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9803df16-2cf3-487b-b347-9e1883c4f17a",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7edf6f13-028e-4b6f-bd33-8a0e94480a8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e287dfb4-fa62-408c-93e8-d701a94a5226"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e3037ce-1cbd-42c6-b419-6c975fd47419",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab75d58a-2064-43e9-b5c8-8d2cbc37c780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "886c113f-37af-4cd4-b2b3-afb05a67ca70",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e734997-5065-4860-b8e8-fc543f85a01b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a52979f9-c04e-4c21-a196-0e434a2f5015"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ede6eef-f944-4496-9335-8f5f2d96f52d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "108ead55-118c-4cbd-811a-03116211b175"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42c5706f-003e-4bf8-9faa-9bd2b18733ce",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7927b7e5-2497-401b-8861-ac6b8991d634",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65892888-ec3a-43ff-a56d-6b7b653d3601"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dee9249e-6355-4914-8984-22b8a49e63bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "626a6e45-0fff-4ece-ad1b-d18210b2d318"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d93f7f7f-ce4d-47d1-86a8-df6ec9eb8e2b",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0da0825-4736-46b9-b18a-3534688515d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45a3a6dc-a78c-43a0-9c11-963ba0324331"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f887ecd5-f16f-4f4c-a479-502911cd89ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ce1032e-649e-4009-827e-cd6d9a2bfd36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a568d11b-6bbd-40e3-a2b6-cfb24f4c3646",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd1cadef-c1e9-44ab-a90f-d572678ed86b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e16b3715-e26a-4292-8398-2f1b15311462"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0949e23-60c4-471d-8110-429308ee65de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42d17c8f-a3be-4330-97d9-63c9f85838f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dc342a8-cc06-4f27-8809-197ca151370a",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c65caf2-ec4e-45bb-9bb8-f5b97543850e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37ac429b-c24f-43b8-8dad-7d5e1b4598d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c64ab1c-6fae-4dfe-8f40-1c8ebe221646",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73beca6a-eb48-4c9a-840a-99e4dd83131e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff676601-d559-4365-821f-907191ee3984",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba745cbc-fa3b-4658-a1ec-dcd932b88ac9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb1fcb00-64ab-4d2d-8610-b5a51950b779"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "410aee63-e239-4ccd-a331-d40fde95e494",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b0fa76c-a918-4040-b18b-ed0200157029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6d6c1f6-b017-490c-8958-4a6321348957",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3599682-c028-4886-a110-ca89ff05f656",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4c6c14b-d3bc-4182-b7a1-f16e991ebac9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cce3f871-5fe8-42f2-aa61-cccd7de75f1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4f180c9-646a-4982-8dac-3e0dcd3e3249"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac0ba10a-5e86-4a05-b5df-bb099fae0c0b",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cb6ed27-8b63-41c9-971a-ac71ca61666c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6fb7307-e029-4403-91ff-e732d49e2261"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c60a3607-5826-47cf-8b5b-ae131a747081",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85a0cf96-b967-4196-ba2c-55e2859bcc0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cd97388-d26c-4c2b-b08a-d800d7215106",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5caf78e7-74e3-4015-96bf-2d90bea27d21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85214d3e-d42c-4014-8c13-ac12d35119f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1665627f-4550-40d6-b570-11f68a94e1d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09af8574-507e-4cb1-ae6d-d599e004dee5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02120d1d-4621-40ee-a995-daa70075016e",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84d42b46-17d5-4c52-821a-729ed3a3ec77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ecbb790-abc8-49d2-a22d-4b7bf38f6e59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "018f220b-360f-4d1b-b2c1-c1ddbb0f849d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3938ea52-d12c-496f-a3f7-bc6db48a7428"
                        }
                      }
                    ]
                  },
                  {
                    "id": "650e890e-de51-41b0-b1c5-376dc9143d45",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d94cc1f-389e-49df-9b2f-e84b8f3cbeaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6968572-3a40-409a-ba48-ef9ed6f84605"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fd9c1b1-883f-4c0f-80ea-dca670cd3f19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bddd9b91-75c9-4a97-a520-534755b520db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1cfb2bb-4b38-48bb-ac64-b1078484e93d",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d97fbd0-84c7-4de5-85e0-c041c09d15e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "164d4146-ee02-4282-9fe9-064aa4829f2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d11ffb6-0efe-434d-a3ae-f36f55697660",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ec44cda-ca4c-4a77-b313-7724d6e888e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa778346-b041-44e8-a572-6f9bad2a649f",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcc96199-dfa0-4fc3-9186-030c855a7669",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19933ced-f963-4a07-901c-3dde6949af2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ab87d95-6017-4231-b635-fb7cbc2263ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dd59b71-44ef-4544-b1b5-a5909342298f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8d46459-e0c0-4890-9744-3344414c5a52",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1641299e-bdef-43b0-b4e4-51d9bf5d9f88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3ff32b7-e2ee-4c5a-bbe2-fce4df9febd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d562a2a-621f-436c-b16c-046c77450c6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ba94bcb-da13-4331-9277-1baa0284a7c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aace3b3a-1996-4f22-9628-2515850e5eac",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20cc6894-6b9c-4c0e-9672-d56de9da4c95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d76e15b-b99b-43f6-b216-1d71e7c5c17e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87fbccff-d538-4743-b75a-7f2fbd0aea79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "898da50a-e3f5-458f-8546-63141870c7fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c971b95b-c7c8-45f0-bf25-249346a9f3b5",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c142790-d018-4d48-aa93-a313cd39fd74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e7fbbf2-217b-4ba9-9631-19d840415507"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4fb328b-9624-415a-81a3-7012a04e08c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d70e2e4e-13ba-481c-abdf-945817c76666"
                        }
                      }
                    ]
                  },
                  {
                    "id": "374ab20a-4d90-44d0-8d29-596a4126cdac",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5007ff18-de36-41ab-823c-bfa8e9a72f4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8c58f13-cbc9-4dd5-9c9b-2fbc8f0631ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "231f4e60-c2b4-4f8c-9f1d-774b97fb0932",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21547b25-5eb2-4201-bf84-14c52d108304"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74a32eed-58e3-4c00-908f-8f1495cea5d2",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d39fcca0-110e-4180-9d16-0312fae5b480",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac0cdf10-af32-4e91-ae7b-08b7bce07ae4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9c4edf3-90b7-4ecb-bd01-0eae687f8a43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51fcda3f-d290-45be-ae2b-071ca94a47fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4788e8e2-ad45-4303-adab-d84449d9c1e6",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "414af0f0-3125-40a2-beaa-364308337b5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b595678c-9c33-423b-9653-c9c8a624d53c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "114d72b4-0479-44f0-9de2-11533d1e18d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75969af8-68f9-4c85-8d83-9a3bf9c46c9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8660a847-401e-4c11-9aec-ac29b46487ef",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcaae6a9-9910-41f4-869d-d4dba935638f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae55e020-fb16-4916-9ea8-0174e594bbd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61270c74-74ab-474e-8cd9-efad475a2d9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2173b80e-0e88-4ebc-bdde-97b6f248a523"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e88db469-36bc-48b6-aaed-8df6db7a2c84",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f5dedf2-679a-4729-9148-286cd0253985",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fea61b3-549d-4dc7-8db7-2480351d69d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08940692-6d45-4f97-8c0a-953ff2bc6b20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ab9c6b0-a944-47a0-b078-ed2db0a91b9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a3d5907-5e29-47e9-9e7e-0e7e1b87c102",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5024e0fb-d704-4617-a312-bc37ddb2bd3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09ea5633-af1a-42fd-b1a7-68b4aea2c607"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78cd3bcd-1f54-4a3b-bb47-338fc989df9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "871fec78-9eb7-4032-b65b-b272cd593db9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e094481-9be9-49fa-a823-ef2fdb04019f",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bcd952a-9da7-4d12-901d-d2d04069d12b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb87980f-cb6d-4066-821b-3d1f95d2eea1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aa6b93b-3909-479a-8742-64c2f7795fe1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faf6578c-34ad-4c05-aed3-3905534e2215"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63d91e51-93e0-477f-9327-d901f68dde22",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5551c0ff-32c4-4c1f-8aa6-2a987642ac3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7301c66-f8c4-45ca-b1ce-9d06b1962a18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce6e42a9-26bc-4ea3-bcd5-7087ccd8e0ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88a94e73-bc23-4fef-a032-f78e2816088b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3de25572-6abd-48e3-8802-b6673e4edcdc",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89bcde75-bb29-40ce-a9c5-c01a698c123b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "918381c8-db64-4f9d-912c-2bcdcdea8835"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f13ee712-2b87-40ca-a0a4-77676220173a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c322ec1-c037-47ae-8885-319382f05993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25ced32d-8c31-431a-b305-ad33137db61b",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d6523cb-b63e-44df-b9e5-fcf23c680974",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dae46d1-2159-40ab-a02c-50688b1c4022"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdc84ebb-42eb-4aa3-855c-35b29426e032",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faf2c2f6-b9df-4c89-aa51-5581fba9b492"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e299658e-2ddb-4668-857a-28c3649e66c2",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41bed3b0-fa95-414b-88d1-144f5ce501c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb1a6a63-e489-4a60-afd8-d4040541c815"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cae5639-ed98-4ca7-acac-c19dd4037739",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "422fc5eb-d889-431d-b817-b70f5f64fc96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17c127c2-ebfc-4f64-9711-6892975d7cc4",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f556fe6-1a3c-4b62-a8ec-a6556435fd1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1d3a89b-5a34-441e-8ae6-bbcdb4564dd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53825775-012c-4565-9259-a87353f919ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "299feefd-9dca-4ec0-b191-33c7ec895a32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6137b64e-05b8-4444-9b05-10163a6af7fe",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0af66734-bc76-4956-bb09-12b3413e742c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ebf876f-9862-44a3-aa22-2e457080e7fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb536059-47d6-478b-a2bd-ad68ae9ed594",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d200000-ba40-4b93-9610-9e30433cc794"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42a1713a-7eea-4864-88d9-e61abb3c0bf9",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a16eaa6-3f9d-42e2-9f16-bac67bddf9e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f68285e-a211-4551-9166-38ff59dccdb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27b84387-9504-4930-9e3f-cf50bd05e2e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85dfcc95-59c1-4c87-ba51-b779ef1f4044"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f02b84ef-84a2-493f-8273-bb1be91b5571",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85a2f9d5-b9aa-4e0a-b3f1-b9d3c9228498",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dacd45bb-f188-4064-9299-2c731ed815f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95100021-21af-4c9c-9e31-ec294c83608d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d698376b-86e4-4d3a-a8f4-21152e283ca6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fb5b001-cb8b-451b-90b8-726e354bbf1c",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "971d2daf-e298-4c8d-ab90-b7ef9c50571e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f648aad6-cfe6-4478-8793-628b4d3411b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6825999b-836f-4b97-9251-b73a6f77168d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "326e4dc9-691b-4f6d-b2af-4936b4fa8132"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9002f623-6b4f-4c45-8593-1d7a14cd514b",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30dede71-8d9c-4c18-9c01-c38bd0c37d2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03c59225-c707-46a4-acf7-76e5a19ff61b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a8ec505-61a5-406f-bfce-7d6d12b8fce9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c00517c3-b471-4a66-b832-01f9567bea81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8adb938c-838a-4c9e-8652-a5b306b0fce1",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd6ccc39-d0d9-4a55-bbbf-b966c6fcb458",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e970e13b-fa49-45e5-94b8-97fb402f74c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0425f64b-ced0-4fb3-a47f-2494600c8373",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5aecdd61-1775-4f23-a8df-fcc578d97124"
                        }
                      }
                    ]
                  },
                  {
                    "id": "736832a6-6ab7-4abd-8850-f30204c7b80e",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "377a159b-5b11-432f-bc50-fbec2c579701",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5bcc5c1-9d44-4fb1-a2b3-33306065e57a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f170d416-e242-4746-a20a-390c31db22f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baec5762-d20a-4f4f-b7c6-912af1dd75fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a85c7190-cd2b-4f8f-bea5-078f0d2662b6",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a29fc55e-6c4b-4f67-bc41-4a7167f91d66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd4c009d-bbd5-4eb9-ad9c-cee9ab093c7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a83e0faa-fe4a-4e5f-8522-6b3cecabdf17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "791b89ce-daf9-48aa-8ee6-a1def21477bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ca3c368-40f7-4ce7-9564-ceb21a961eae",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec744d9f-9315-4d32-bdec-1516c6815735",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf2cd8b1-d2c8-4395-ba4e-60fdeec39ba3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58b41ac0-1b6d-4423-b4d3-e7eed7c46bee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af50b3e5-b610-47fd-9945-cd7a46560f1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b3e3815-5dcb-4bf1-8405-b4712dd000f6",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2806a39d-6cae-4e5a-b657-bd19799cffd2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0437df01-5dc5-4c33-ba6f-f56deb06ab78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5bac73e-1973-4ab6-b6b8-9e936f111218",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0496542e-9a70-4104-9135-5e740d157cef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "010eb1c4-11cb-41ae-a64e-c8849f545a25",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1884d5a3-ad78-43c1-a544-e88f0225355e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51e3d8da-624a-4851-a3d3-65ae1f9e10af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afedd6a8-1b87-4b84-bfb7-87fe26f68d61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c1fc3a2-fb44-40ee-a7cf-00de6ca914a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebc6b8be-75e7-411d-95ea-06301028adec",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e7f1e8a-2066-4635-aa10-eb20043f3a44",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7af95f21-a8b9-42d9-a23f-afdd78bb7c6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c51aabfd-71f2-417b-aff8-e3c2971fa415",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3daaacb-b699-4e2a-a7a3-66067aed7786"
                        }
                      }
                    ]
                  },
                  {
                    "id": "216f5e87-c99b-460c-91b7-997e558ca338",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee692527-833c-4e04-bfd4-ee1b0d56176a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "077d3a1e-3dbb-4629-82d7-b7bb1fb13238"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39d01b06-3ffe-4969-92b7-4029d42876aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fee64555-bedb-4e57-ab39-eb0b4511b565"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45deb13d-c794-4763-af1c-c075215a59b1",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56bdba68-9c9f-4e10-b1bd-7a9d2f5fa440",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6abf1d67-b269-4a43-b86b-bcb2ce85145d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c13dfdda-8d37-4d65-9e5b-25fcd71b6e14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95ad819e-7937-4d8c-a57a-67812f9c262b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ed54a7b-d277-4729-8d75-e2433187a209",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d93004f-1518-4ca6-864d-dca8c7c83042",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f77dce9e-987f-49ae-9643-b15d3a387b3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96a005e3-1c54-4c17-9935-fd446857940c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b57448cf-d7de-456b-8c32-b0e865210c55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e75530a-a456-4b4c-80bc-ebef6fc26297",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a522178d-84c2-43f0-a3fb-bb264a1bf2bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c7cfd8b-9e79-46f9-b5f9-9ff8080db366"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50a1797f-474b-45d4-9018-124c2bb359d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "099d1ea9-2f98-4f43-901f-448055d58c0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "177bf2e6-b8e9-45b0-9da3-2e258d24e761",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5215cdde-0ce5-447c-aa32-740fe1bbe30f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc95d790-fe09-4adf-9a81-48af572e9729"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdff28c7-2428-48ad-bcc8-730b846e0097",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c40f087-b5f0-48e0-8e87-8779432c54fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0f837ba-b896-4fee-acd3-52c75fd1fbf4",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f7cfe33-3a8b-4862-92a5-aaa18433b6fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35221d3c-cd46-490d-b05f-e5e61d60dbbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff22344f-e9ef-4949-a507-d64360dcd473",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4face79a-50c3-4257-b71c-ce5adced2dcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "380715b1-948d-49f4-935c-61c03600628e",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76afd1fb-40d7-49e5-a790-6291c6a5154b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b49f7c60-0fee-4efb-aa55-c3ebe89dfe13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b21ee615-790f-490e-9185-efd0513c2e91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a3b2b5b-e266-4aca-9a3d-65990372ccfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21ea2fdb-7a33-480a-91f7-c599f6634778",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfa53328-6bb6-4f26-801b-a84791a381c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68af8178-7070-435a-961a-960e2658205d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2c0dc0d-c9ca-4b18-8d9e-9f76f2e7168b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1238c723-8be8-4504-8b93-7575febdd449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c863ac7e-30f0-4b1a-a038-d2fb978908a2",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "693b0363-8f0e-4cc2-89e7-ad3ff5a2572c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "295ac3ff-d596-4dd0-b22c-a0c58da5c680"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "572e541d-44ed-4982-87de-b4476e921a6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e280ff3a-6a42-45c7-a4e3-5d452cb61abe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b62ce49-0c9f-420e-95c0-f9035712def5",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dd7015c-7a25-461a-8d40-7f67ea648013",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be00f92f-cb5a-4914-a23f-01bcd1af1bca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54ecb5bb-0f84-402a-9891-94ebdb0ed9df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40df4927-e1f0-408c-bc5a-919117a13c9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a881e6d-b98b-48d6-a8fb-c84951e32464",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e37b492f-a699-4307-a61d-49b4e266ac32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72554eb5-9d46-490f-bcfd-446d993933ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b400ccd3-1c85-43b6-9980-a8f9aca84667",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a98a0d1-afd4-49e6-8622-88b9a917d568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "756f0106-4251-48f9-a3a3-4fb0af9605c8",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ada3616-72c6-481a-8772-412099eea5ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d947d7f-4441-4f3b-936c-4018393d3fc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc182716-413c-4720-a1fa-f330ed4a0dc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a84841e1-02e1-4dda-820f-6f1d981b8e30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "349ac57c-bdd8-47a7-b60e-82ce6a667ae3",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05ded906-5edb-4a2a-b9e4-88df108e5e15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6442f59-2616-4a60-8289-5c1a75524464"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57709bc6-1d6f-40de-8af9-72541db1ea9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "820ee7c1-b5d8-44ed-b47a-95f4c557293a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65104139-ddcc-4e31-8cc5-33f35bc33b2d",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8e0ba5c-6982-473c-8173-71c26dd0d781",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9efe9169-ad57-4c3d-9fc2-bc0534bebc09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40b81005-d8fa-4782-8a3e-8447bc547fc4",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3a44bd4-b33c-4bec-ab0c-aa9aa50fd94e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca17aced-280b-4040-8fb8-7eb367b977ab",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "261d3c3d-1d9e-4f0e-8526-b2b7f63b845a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5fcdd0f3-fadd-461b-adff-741e8bf38094"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab3859aa-b39f-4442-b5ca-62eb98246bfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7ff526b-36aa-4f64-922a-732581f47cf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "058fa9e7-dfb0-4442-b609-e1a05a32f78c",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d828a64-9f82-4f0c-a16d-7746c582b85a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "034d5ed9-c18e-4243-b275-2f51c946bfc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "901b84eb-2411-4816-b69b-8f2841971dc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db43097f-d060-43ae-9f45-5afcd9a94346"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d9e3639-0b9b-4e46-92ba-499316b4d7da",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6f64d5a-933f-43ac-9efc-74bc6d893afb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3cbba9c7-9616-42d2-8dd1-3dfa9bb5187a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90a3f179-857e-4812-a37d-3efbc2ba9d82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56e78847-0805-4c86-add5-70546d876c16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "864f61e9-b4e3-4989-86cf-6919f165ec81",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88235435-507d-4b26-a49c-21e04645d12f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81adfa53-edc5-4c74-b968-52c156678d0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "366285b1-f722-4233-afd1-22783b7ce0fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40051eee-8f97-4e50-bcd0-88cd7d257b28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a0d5bb7-e39d-48a4-af4a-c098afdf0c8d",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97052ff8-adc8-45d0-b022-a19d15cc5c8d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bedb83d7-1ae6-4df3-b2fa-174f7052c2af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25013bb3-3514-4255-8319-467881c48c29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1963d532-8d0f-4490-9d38-160319c5b4d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd19c05c-9f3e-402f-8e4e-6de0128cca45",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cb7571b-671d-4f3a-9715-51f3b6ed0007",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7093374c-1809-45fe-b933-b11f7d91be6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12c3e5ff-0df9-46f4-b1ac-c02a0d83f6fe",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b697c2a4-c656-40a2-9fcc-c1a820a842f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9ca40c2-4968-40dd-acc2-f522e54e734d",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1c6ce2f-797e-47c8-b039-84320acefc90",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19846f1c-6a02-44e6-aef6-fdbbb2039de2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "327ec22f-8a6a-483a-bbf8-94866ff0d055",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91176c37-476b-49ed-9105-61f465f68753"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8ee10904-bb65-4aeb-9a99-e540609d9ea3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7b80b173-a842-4697-8158-ddc76f4ccb10"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8b491179-32fd-44a9-830a-9f8ba0c20411",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bd45184e-57c2-447a-9a62-33f0d28050e8"
                    }
                  }
                ]
              },
              {
                "id": "6b60bdca-6e14-4d07-a919-cf800c1bd6f5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f34bcef9-dfb5-4042-b98a-52672ca78a1a",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b8b3b33-07b0-4b29-a440-a526f535c941",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "61e73070-4c91-421b-a360-5370decb3bf2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cf2d47a-0450-4345-b86c-6fb03362ce66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "45906933-2772-4afc-b1c2-af77e4f00e38"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4328c11e-bf01-414c-b7c3-365b698754e7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "52c92825-0715-4c2d-8119-26e0697fd572"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3f330a8e-b154-4aef-9ecd-fb3753e6ee5e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "288476cb-87fd-4742-b5f0-fc6a776f4fed"
                    }
                  }
                ]
              },
              {
                "id": "a7743967-f4c8-460b-afd5-16b4ebba61e0",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "4298d555-6f29-42e2-a37b-b701d1fde4d9",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba3d5d23-fff9-4908-a366-100626e95abe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "16915b04-ccd9-425a-ba5e-7ae406d534f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5147462-8232-4379-ac8c-1c16b241e9cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f20cd86f-8cc9-416d-9540-cb1de2825511"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d9b94938-4632-4e10-a3bd-7e0adc539d44",
            "name": "Positive Testing",
            "item": [
              {
                "id": "54b19817-89b2-4afc-8884-51b65b957035",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c4b075fc-461d-4b26-b762-0849b12775f9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "5ebb1268-5145-42db-a118-e9bcb34c498f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "674bc27c-82da-4213-bcbe-c9efe323a098",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6eeb4494-8bbf-4580-a600-6e496f0c1d1b"
                    }
                  }
                ]
              },
              {
                "id": "f68f08b7-bd52-46c6-b522-96ad419fbb57",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4003a5ea-7115-4002-9737-07dcb579e177",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c48065b1-a21f-4a0b-b588-e9601ba2e5fd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "215de2a1-c9f9-49fb-8d94-db7d24eaaf24",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fcbb18e6-00e4-4cb7-ab23-102fb13f9ea1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "34cc2c11-2f96-49a0-be72-6f69e07b015f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "ce984867-93dc-4ba2-8fd0-13d75f90f34d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a562344b-fc51-4540-9aea-794a8d1e38b8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "009b2c0e-5010-417d-8642-734fa3e514ef"
            }
          }
        ]
      },
      {
        "id": "bc93159d-8d4a-45dc-9e34-e25ab7003eaf",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "f1cc3c7b-60a1-4ad0-9a1e-8a6896cbbb67",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7542f15a-ec0c-4cac-b79f-be2d86aa370d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5e5671de-d32a-45a2-9ee1-5b0b2f1c7f7e",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84f757aa-57d8-4d7c-8fa7-687dbf812807",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "5bae8540-cd75-494e-ae6e-f8180716ffe1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "362d237b-ba41-435e-a7ee-180b93ae7ce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f4b27c90-6f07-44e5-90f5-c139ef1c0735"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "08e1536e-9d05-4b36-87da-6eb7ba3ff20c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "96b4a019-b64f-4ccc-82e1-f098d94ab7ca"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cfcad58c-1c28-4657-8341-2fab81997b88",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8a6e7a9b-4660-4205-a648-c95fc5331a97"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2285eeee-55a2-40c2-826d-b38851a1c440",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "61a9729c-9f06-4151-9e5f-0c492d785f84"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bb235ce8-12e1-4ca2-a7a8-e024c308a884",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1ec5ab65-c76d-4694-b22b-0a2f88a2ffb7"
            }
          }
        ]
      },
      {
        "id": "ddab6738-66c5-4c2d-80e4-4745254c429d",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "0a03bb0d-4f3f-44e1-9539-d0466de2b057",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5ec5024d-2289-4c24-9274-d9cd695b976c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5342e4a8-5890-4548-9d8e-86796d9ef207",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "613ed4cf-f541-43a3-a2d3-110fce7bffaf",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4f071d7f-cc3a-44aa-bca1-3032ce0807f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d00ace11-96c6-4fa0-b5cd-ffc8cb42e89f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ea80d3c7-3e19-4596-8824-023fe59226db"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "924ac8eb-4cf1-42bf-9479-b799a55dae41",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c1cba938-25bc-4b39-af74-b393d04ccd66"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dad984bb-49a6-495b-86bd-0f7840c96b84",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b13da958-1603-4de7-9c2d-c4a392ec8f3a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "28116095-4a38-47e2-88a2-2742cc51b06c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3fa83212-b402-446b-b99e-812f370540dd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "01577bd7-e77c-4839-855c-c1782ce2a694",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e53f08e0-0f1f-4dbe-a5d5-924f996e12b8"
            }
          }
        ]
      },
      {
        "id": "0c80ad8c-2530-4b63-a531-3b5e211b2082",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "978141e8-21fd-4ef2-bb0a-1887665d49af",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4d3f06ab-ac2d-4195-a320-5193b43eb041",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "732c7305-a07c-4b61-b3a1-102b2b478d29",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8e3ac41-60c3-4397-9dfa-28268a6ef07e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ce6ef37f-190e-43f0-95f5-c0d4262c46c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4040dbd7-7a1b-4935-acfe-ea402dcca611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e9cf1b93-734f-4ad3-95a2-3151e27907eb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b12e7da8-3f9f-4cd0-8985-d136cb3643b3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e0f07e6d-f914-4a95-93fd-89e2696c61de"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0638208a-cdaf-4e14-8e36-542b7e0e7dd6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d1aa8892-0f19-4ecc-8abb-1d08cd65dd7c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2593f34a-bc62-408c-a8ed-2cb6acd80173",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "faa50b4d-e821-4572-82cd-a414325729c3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "38bfaef1-2512-4d83-b310-062a4bbc33b9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "095ce8c3-0894-4774-8aa0-76e82ba69123"
            }
          }
        ]
      },
      {
        "id": "f547bc97-cf28-4eb6-bf06-cc34b7970554",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4ed9bea8-7964-4dd2-9296-b201a82ce399",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8700baa8-321c-4670-ba81-99e99d5fee8e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "e1a11927-ec1a-4791-a6dc-7cd6f10018aa",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "966525a4-8bfb-4fe5-a483-937ef916b220",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "60a021da-2494-4ec2-9b5f-e3785b3ce6e5",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 244,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1853,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 244,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 246,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 244,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 495,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 931,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 922,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 69.35772357723583,
      "responseMin": 7,
      "responseMax": 393,
      "responseSd": 29.40829208910954,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1686703220907,
      "completed": 1686703250034
    },
    "executions": [
      {
        "id": "9bfa0841-b72a-440d-b711-c7d02e39da42",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 244,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "5c1f9f73-28c4-4a94-8c12-cb41f16f381f",
          "httpRequestId": "d9452631-db5a-463d-9475-9dce3c47b38d"
        },
        "item": {
          "id": "9bfa0841-b72a-440d-b711-c7d02e39da42",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "7d3daa7a-9a2b-4345-a1b7-af4d7141783a",
          "status": "OK",
          "code": 200,
          "responseTime": 64,
          "responseSize": 0
        }
      },
      {
        "id": "56d56bcd-d45f-4d5f-a86c-4a1dec66a28e",
        "cursor": {
          "ref": "9c7f69fe-672d-4e29-8d9d-aa357f3d963b",
          "length": 244,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "6156fe90-942c-43d0-acd3-0106d0898e64"
        },
        "item": {
          "id": "56d56bcd-d45f-4d5f-a86c-4a1dec66a28e",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "3a97df2f-b378-43f3-b0ed-56282ebc0f2c",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "abe6bd0d-0618-4492-a720-c6e1bc58aebb",
        "cursor": {
          "ref": "a2cd87d0-00ac-4b0d-b581-2095e1ca44de",
          "length": 244,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "75241392-2f7c-473b-88d2-f82281347fd6"
        },
        "item": {
          "id": "abe6bd0d-0618-4492-a720-c6e1bc58aebb",
          "name": "did_json"
        },
        "response": {
          "id": "2ae6c8d9-0423-48a4-b399-d3d7ee062f0e",
          "status": "OK",
          "code": 200,
          "responseTime": 310,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5844cb72-1438-42b0-9eb3-aba506e2416f",
        "cursor": {
          "ref": "4e8fbfe9-63e4-48a0-8292-2d08919f2048",
          "length": 244,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "800b8658-67b8-4141-9153-5c5daba304b3"
        },
        "item": {
          "id": "5844cb72-1438-42b0-9eb3-aba506e2416f",
          "name": "did:invalid"
        },
        "response": {
          "id": "1bd13c93-f8d0-464d-93ec-88301183cad1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5844cb72-1438-42b0-9eb3-aba506e2416f",
        "cursor": {
          "ref": "4e8fbfe9-63e4-48a0-8292-2d08919f2048",
          "length": 244,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "800b8658-67b8-4141-9153-5c5daba304b3"
        },
        "item": {
          "id": "5844cb72-1438-42b0-9eb3-aba506e2416f",
          "name": "did:invalid"
        },
        "response": {
          "id": "1bd13c93-f8d0-464d-93ec-88301183cad1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d97241f-2fff-44e9-91b7-584e3cc65b99",
        "cursor": {
          "ref": "944bf25f-e745-440d-986d-1224525d98ce",
          "length": 244,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "3fdb320a-838b-4278-9752-82fcab0a7005"
        },
        "item": {
          "id": "6d97241f-2fff-44e9-91b7-584e3cc65b99",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "a7fecda5-59ea-4897-a13f-cd1cfa673f3e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 106,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90563a80-9bdc-404a-acd3-a34f2a408786",
        "cursor": {
          "ref": "8ae47b26-f906-4860-a899-fba9604d5c23",
          "length": 244,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "0072d0d4-72bc-4cd8-8c4a-1262abaa5236"
        },
        "item": {
          "id": "90563a80-9bdc-404a-acd3-a34f2a408786",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "0332b9f8-80eb-45df-a06c-b509d41ea7e2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 66,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "898c24ff-2cdf-4f5c-b768-2737fd287f69",
        "cursor": {
          "ref": "915e6755-05a2-4879-b29e-82e10cd7c9c5",
          "length": 244,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "3b306c61-e921-4a7c-b3f7-35d10642f26c"
        },
        "item": {
          "id": "898c24ff-2cdf-4f5c-b768-2737fd287f69",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "c2bbeb98-18f0-476a-9487-df4b75d31ec4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e64dad48-f73e-4b42-b819-bae17730be89",
        "cursor": {
          "ref": "a7d2b3d7-6401-4b05-b659-57fa24e642db",
          "length": 244,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "ea555bde-cd91-46ca-8a8a-f424d5e18866"
        },
        "item": {
          "id": "e64dad48-f73e-4b42-b819-bae17730be89",
          "name": "identifiers"
        },
        "response": {
          "id": "dde8da6d-8ca7-444a-87ee-ea573f4df3aa",
          "status": "OK",
          "code": 200,
          "responseTime": 109,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90321655-bbd1-4748-a175-cf0f812dbf6d",
        "cursor": {
          "ref": "d17b41dc-ee1b-464e-9c95-b29cec28a453",
          "length": 244,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "08e23531-267e-459b-816f-347ca99e86a1"
        },
        "item": {
          "id": "90321655-bbd1-4748-a175-cf0f812dbf6d",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "9fe1aaef-aaf9-4437-9d79-ddc2ffe48f6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "900a8a78-9097-4973-a0ee-c5d028a03d1e",
        "cursor": {
          "ref": "840adb24-ff51-42ec-a2e0-12245c1b30db",
          "length": 244,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "12e0e4a8-bca5-43a9-84d2-df560f529086"
        },
        "item": {
          "id": "900a8a78-9097-4973-a0ee-c5d028a03d1e",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "73e16a0b-c726-451e-9b13-4ed2cc8ec95a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36341cf4-0633-4203-80f6-1aff803313de",
        "cursor": {
          "ref": "fe33c3b5-1791-4dbd-bc9c-8d8ea264c74b",
          "length": 244,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "7cd033ed-9b6b-4be3-a263-fb133bd8efff"
        },
        "item": {
          "id": "36341cf4-0633-4203-80f6-1aff803313de",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "b66af64f-bd65-4791-bedf-387cb0574e1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1d83e9d-132b-4d3a-a920-4b3e4307061d",
        "cursor": {
          "ref": "3955900a-59c6-4f41-b876-a1ba87186a6f",
          "length": 244,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "64fc01f2-3d37-4751-a2d5-4c04d7786602"
        },
        "item": {
          "id": "b1d83e9d-132b-4d3a-a920-4b3e4307061d",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "3ac6ba05-b2bd-44e9-bafb-05ddf17eb6b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bda8393-584f-4fcb-a8e2-93cfb34d6fab",
        "cursor": {
          "ref": "7acb0be2-432e-42be-bc4f-7b1f6237d427",
          "length": 244,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "6fda747a-00a9-4d5e-af05-4f3be5aad6c2"
        },
        "item": {
          "id": "9bda8393-584f-4fcb-a8e2-93cfb34d6fab",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "7ec396e0-facb-45a4-9fb1-c21fc85fcf76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5972d87e-001c-4ae6-bcc3-bd8eeed111e4",
        "cursor": {
          "ref": "c83d5a91-ecce-4eac-b645-3ffbbec926bf",
          "length": 244,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "ed846737-f8ed-42f3-b58c-83caa5d58f3b"
        },
        "item": {
          "id": "5972d87e-001c-4ae6-bcc3-bd8eeed111e4",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "cccb4738-c2cf-40e3-8992-23c08ed5b6d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ab37824-f401-4576-97f1-e629564800a5",
        "cursor": {
          "ref": "315c5c39-a7b7-4b2f-9b06-5075fe1486f5",
          "length": 244,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "72e1e1bd-2400-4a00-9017-f41f912dbfd6"
        },
        "item": {
          "id": "7ab37824-f401-4576-97f1-e629564800a5",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "c7a3aaf3-f37a-47e1-953a-ea9eb64e1fc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17cf3f97-d662-448f-b939-4c0b84a724f3",
        "cursor": {
          "ref": "54554ee0-9fc7-4aeb-9f51-211d8523bd2e",
          "length": 244,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "31ce3720-2b19-49b6-b3e3-85b0ca1a484c"
        },
        "item": {
          "id": "17cf3f97-d662-448f-b939-4c0b84a724f3",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "46ba6b94-cdb2-43da-aa9f-0dd83cef2fa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9af9c7b-822f-4d73-89f5-e44f2a510685",
        "cursor": {
          "ref": "5f835343-daff-4228-91b8-021ba31260f2",
          "length": 244,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "66f4546d-5e4d-4e92-8ec1-7ddccb1133e3"
        },
        "item": {
          "id": "b9af9c7b-822f-4d73-89f5-e44f2a510685",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "0e6749fe-fd57-4e81-8ff0-0ca9451afb71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "324574f1-9693-43d6-8e74-3c63df33f284",
        "cursor": {
          "ref": "d4a8bc40-735f-430f-859e-ab3a4b408d70",
          "length": 244,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "e50fc2fb-0ece-436a-b857-6db7fc1e4fe0"
        },
        "item": {
          "id": "324574f1-9693-43d6-8e74-3c63df33f284",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "9eec1533-6bfb-4875-ad83-f09c672dd03a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e77296a2-b1c7-42ba-a427-95d7b4d3c14a",
        "cursor": {
          "ref": "6b359e3e-892b-415b-876f-5a2b88b04b9c",
          "length": 244,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "4c521123-7800-4224-9cc5-0779728c1fc7"
        },
        "item": {
          "id": "e77296a2-b1c7-42ba-a427-95d7b4d3c14a",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "75638c0b-39da-4261-bf27-a26b79ff76c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2411ecea-19a3-44c0-ab9d-ca068982b8f6",
        "cursor": {
          "ref": "28a3e4f1-c4b1-43a9-b523-7327b64b31d7",
          "length": 244,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "381050ba-2a8d-46bb-8596-331bfbbd9b30"
        },
        "item": {
          "id": "2411ecea-19a3-44c0-ab9d-ca068982b8f6",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "6dc42282-3d55-4365-8bc9-9638243cb28a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a99cf57-08aa-48c4-9035-79fef64b79b1",
        "cursor": {
          "ref": "6a5c618f-4597-49ca-9d2e-62deed770770",
          "length": 244,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "58fc2a05-e9be-445b-8006-8dd2ad50f431"
        },
        "item": {
          "id": "6a99cf57-08aa-48c4-9035-79fef64b79b1",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "cd219fda-34e9-4ed0-b320-fa3fb0f163e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ade23679-994d-4aca-82e4-0cfedc241aba",
        "cursor": {
          "ref": "32915f62-d3e5-4b1c-826d-f8a630ad3782",
          "length": 244,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "7060fd3b-289b-4985-ad52-cb613efbb870"
        },
        "item": {
          "id": "ade23679-994d-4aca-82e4-0cfedc241aba",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "9a9eac3b-9c6b-4e1b-9b65-5560c38a375a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "836621c4-d6f2-4056-a11a-73798e4422ce",
        "cursor": {
          "ref": "8d7c96cd-9482-468e-bf10-cb5315c44109",
          "length": 244,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "8b4eba0e-e154-4bac-ae07-c235c8e765e7"
        },
        "item": {
          "id": "836621c4-d6f2-4056-a11a-73798e4422ce",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "b21272e8-dfe7-4302-9a64-8b85932419c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "961faad4-9550-4353-9d3c-dfacfd35ce0c",
        "cursor": {
          "ref": "acff6dce-f50d-481a-904a-8c3702950652",
          "length": 244,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "9087ef35-0167-4b1d-9b2d-c620da73cc08"
        },
        "item": {
          "id": "961faad4-9550-4353-9d3c-dfacfd35ce0c",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "44c9fef8-bd31-4f16-99ee-7304362ae3b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87e123a4-ce4e-4c9b-a225-bc2d5c32ee3c",
        "cursor": {
          "ref": "41973681-f777-40a2-a3af-4ebed620141d",
          "length": 244,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "62704edc-4a31-42e3-ad6e-d7f3e73e9053"
        },
        "item": {
          "id": "87e123a4-ce4e-4c9b-a225-bc2d5c32ee3c",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "37420fd6-859f-47b7-830b-eadb54acc7f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69425470-ae78-4427-88b2-e8c4488c8e85",
        "cursor": {
          "ref": "62e755b9-6cc8-473b-abab-8e4551979a25",
          "length": 244,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "f92356ec-1b51-4f44-a582-f860c389de86"
        },
        "item": {
          "id": "69425470-ae78-4427-88b2-e8c4488c8e85",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "e6f5af80-793a-437f-9ae1-2fc390170a44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c7c2f81-40b4-4616-8690-075430f2d323",
        "cursor": {
          "ref": "757e70b9-7db2-47b8-8cfd-49c2f720f000",
          "length": 244,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "628a59b4-ca6e-48e4-82c8-2746785dcaeb"
        },
        "item": {
          "id": "4c7c2f81-40b4-4616-8690-075430f2d323",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "9531db3d-03f1-49c1-af35-1ac03ebddb96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ec92ed0-7e26-47a2-9ff6-3dbcaf1c6e9c",
        "cursor": {
          "ref": "12e1a392-141c-4af8-b51e-e348a2e7629d",
          "length": 244,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "ae121165-8fea-4180-a384-d011fa97b836"
        },
        "item": {
          "id": "5ec92ed0-7e26-47a2-9ff6-3dbcaf1c6e9c",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "2a406251-6383-481b-9c3c-cd6227cc8b33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9cca516-832d-4435-9bb6-a97afce7dd00",
        "cursor": {
          "ref": "3c615c30-06d2-4648-99be-8e1bd26b3e79",
          "length": 244,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "1a76ae46-f7b4-4a34-9821-fedf20ae010c"
        },
        "item": {
          "id": "b9cca516-832d-4435-9bb6-a97afce7dd00",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "48f1b975-a254-4211-9f32-c99410582864",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd784794-c8bd-46dd-9e1a-59ab4d050305",
        "cursor": {
          "ref": "3d9b3ab6-93a0-49bf-a70b-9e42f6be5c72",
          "length": 244,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "66d86772-5020-4c06-95cd-14a3fbace135"
        },
        "item": {
          "id": "dd784794-c8bd-46dd-9e1a-59ab4d050305",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "ad600e45-d72d-4952-9a24-f03d0ad1e2ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19e7c112-6518-45a1-a22f-53bd1607148f",
        "cursor": {
          "ref": "bf28db51-4f3d-475a-b584-e9daae975b35",
          "length": 244,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "f8317885-9e5c-4958-a500-a320fd58d4e0"
        },
        "item": {
          "id": "19e7c112-6518-45a1-a22f-53bd1607148f",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "17b4199f-e1aa-455b-a452-63d437a0a786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "700a29dc-0f67-44fc-86ca-19bc093b8f2c",
        "cursor": {
          "ref": "a8c41ef6-1645-43d4-9469-231192e8dbcd",
          "length": 244,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "0fcae850-d545-434e-a8ac-b990dc1f426a"
        },
        "item": {
          "id": "700a29dc-0f67-44fc-86ca-19bc093b8f2c",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "c64cdab6-1765-4efb-982a-39fb02826dd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58532887-df5f-4156-957c-f47516e015ac",
        "cursor": {
          "ref": "15c083b6-7bdd-415d-a938-ad48d7e953ab",
          "length": 244,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "9272c855-4569-4606-a7e3-dee3d7c0b025"
        },
        "item": {
          "id": "58532887-df5f-4156-957c-f47516e015ac",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "947c5fd4-2ad8-4ae6-8f72-4b790a6fc827",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c826a4b-41c9-48f7-8836-8edf7b862086",
        "cursor": {
          "ref": "287de908-b5b2-48e8-8f3d-55004c70ccb7",
          "length": 244,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "87a3285b-4829-4688-9813-255a05008545"
        },
        "item": {
          "id": "9c826a4b-41c9-48f7-8836-8edf7b862086",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "15220e07-060f-4652-bc2c-facfc3965cce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2375ef2-337a-4e2b-9486-b8b4dbcc595c",
        "cursor": {
          "ref": "968e29a0-8041-4fac-813c-50839ca7e773",
          "length": 244,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "185850b5-375c-49f3-a7d3-2ad450a2129b"
        },
        "item": {
          "id": "a2375ef2-337a-4e2b-9486-b8b4dbcc595c",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "56189604-dda7-4a70-b4aa-6cb748639b7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76191de1-b886-4735-b0da-fc7a8e66bf20",
        "cursor": {
          "ref": "96a029be-d929-4514-8821-99cb50f7b3c7",
          "length": 244,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "765e5de0-0dc5-4835-b9a5-d676be042f3b"
        },
        "item": {
          "id": "76191de1-b886-4735-b0da-fc7a8e66bf20",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "4671ffce-fe50-49a5-87de-d58756ddf2f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e886a631-c530-4f0d-8a58-6370f7504c9a",
        "cursor": {
          "ref": "76d81bd8-1377-4ad2-bdc7-d0837922b31b",
          "length": 244,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "825fba6d-97b1-454c-a162-62731f575da4"
        },
        "item": {
          "id": "e886a631-c530-4f0d-8a58-6370f7504c9a",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "a2703a37-e414-4b0d-ac73-b12844e3e794",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9682183c-7377-4786-8ae3-87130f26b251",
        "cursor": {
          "ref": "95ee58f5-45d3-4e64-9a9b-05aa779aeb27",
          "length": 244,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "ba532fab-c766-424c-8884-3391c174724d"
        },
        "item": {
          "id": "9682183c-7377-4786-8ae3-87130f26b251",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "fb87da75-ad92-4f22-a29b-fa1fea8dac70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e12684b-e0b8-404d-b0a4-36077e3c24a9",
        "cursor": {
          "ref": "fdfc00b0-6452-4ffa-b7c4-29aba3ff05b9",
          "length": 244,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "bfd0e3b5-9d80-4481-83ab-87454b17bc50"
        },
        "item": {
          "id": "5e12684b-e0b8-404d-b0a4-36077e3c24a9",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "6bc7fc51-e3df-428c-a5ff-bb6670cb5a16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "949db2c3-4f79-4ef7-a8fb-b8d05a9131da",
        "cursor": {
          "ref": "bbff00ff-3b46-4a33-9bcb-da35d61b2e78",
          "length": 244,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "a7bdaea8-c8cb-433f-a1da-46742f665358"
        },
        "item": {
          "id": "949db2c3-4f79-4ef7-a8fb-b8d05a9131da",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "1258f3f4-dd95-406b-a7c7-ed2d493b69b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c963a10-eebf-4dc5-9232-7370f4a56a4d",
        "cursor": {
          "ref": "b5dacfca-93b0-4ea9-b3b4-0c2e0076699d",
          "length": 244,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "cff213dd-0f65-4a9a-97db-c7b3490b4d86"
        },
        "item": {
          "id": "5c963a10-eebf-4dc5-9232-7370f4a56a4d",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "d2282455-dd15-4dc7-b5a9-64395dca46b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d32b41a9-8b66-454e-bfb3-0c73fe7e2625",
        "cursor": {
          "ref": "6a2ecf0e-1028-4a81-8747-610ddfe0498f",
          "length": 244,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "73cba507-bf8b-4e89-98db-837a991071ea"
        },
        "item": {
          "id": "d32b41a9-8b66-454e-bfb3-0c73fe7e2625",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "fdef9319-a9f2-426c-b165-5a0886d936a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c89a9be9-65d6-4f93-9d9d-3eec45d33905",
        "cursor": {
          "ref": "6fe5de48-4b97-4333-82cd-f233280426db",
          "length": 244,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "69a53477-a2d0-4b56-b8e1-73360e5b999b"
        },
        "item": {
          "id": "c89a9be9-65d6-4f93-9d9d-3eec45d33905",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "8729a5a8-4018-4f07-b0ed-304ac96adef2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e66f333-67da-4720-bfa7-c749b72f6565",
        "cursor": {
          "ref": "42605965-77d5-47cd-b0d9-69b31269583d",
          "length": 244,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "aff32b2b-8d2a-41ea-a57f-cd3167fe97c8"
        },
        "item": {
          "id": "5e66f333-67da-4720-bfa7-c749b72f6565",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "4039edd9-b54f-4721-ab82-f07bf309232b",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 73,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8125e82c-721a-46e9-afab-b766adedc1b4",
        "cursor": {
          "ref": "bd776d03-a7bf-488c-8ba8-a3eaf43c3fc5",
          "length": 244,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "3c3188e1-0927-4619-ad42-21ad014e3473"
        },
        "item": {
          "id": "8125e82c-721a-46e9-afab-b766adedc1b4",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "f7a5cefe-1086-417d-9904-bcdb304a2198",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55a4d185-85b7-4f89-aa6a-3206c3fbc38b",
        "cursor": {
          "ref": "0b4c1b7d-8a6d-4634-a9ee-ecc9e7de1f3c",
          "length": 244,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "cc6bbcd6-b10b-4dd3-a413-e83a2d10d9ee"
        },
        "item": {
          "id": "55a4d185-85b7-4f89-aa6a-3206c3fbc38b",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "47739b7f-22ea-4068-a4c1-105199bafef8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aeafc91-b6af-4162-8cda-aa31af757011",
        "cursor": {
          "ref": "585e27d2-59ab-41d3-ae25-0aef94536cb4",
          "length": 244,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "ed1c5254-3769-48d7-8d09-78a671132983"
        },
        "item": {
          "id": "8aeafc91-b6af-4162-8cda-aa31af757011",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "abbb2aa3-389d-46c6-9cc6-bd5ca23db61c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8242f5a-05d8-4fbc-9e4b-9570b136d078",
        "cursor": {
          "ref": "21b04f6a-d2d1-45e0-a6d2-d364a2472d81",
          "length": 244,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "a4bfdc96-250a-474a-be60-1f98374a92da"
        },
        "item": {
          "id": "c8242f5a-05d8-4fbc-9e4b-9570b136d078",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "95de627c-a7d9-44da-a808-256d2bc5f4b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb89fbc6-4350-42b2-b4de-c288effa1fe6",
        "cursor": {
          "ref": "f47c25e8-7b04-42dc-a60b-c34eedbb43a1",
          "length": 244,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "22ca3833-5872-486f-8096-d485a97c3834"
        },
        "item": {
          "id": "cb89fbc6-4350-42b2-b4de-c288effa1fe6",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "cad34942-f3ad-4af8-a7e8-6b26fc2dd733",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11c5b56d-153e-427d-b9cb-4527db8cc1f2",
        "cursor": {
          "ref": "17a27153-f056-439e-9893-1ebd5dcda2bf",
          "length": 244,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "196cf06b-fc7b-437d-83eb-722a40dbd672"
        },
        "item": {
          "id": "11c5b56d-153e-427d-b9cb-4527db8cc1f2",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "0bd9198a-8174-40e6-bd28-3fbbba02b060",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46fbaf1e-6475-48be-8cf2-a3e858391552",
        "cursor": {
          "ref": "1c539d8c-cb4b-4d0c-acc3-d12d3744817c",
          "length": 244,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "2ac34369-0a18-4a76-8fdf-675f70471772"
        },
        "item": {
          "id": "46fbaf1e-6475-48be-8cf2-a3e858391552",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "e587d0c4-df17-42b2-88ca-764b07723131",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 74,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e19da30-b6ee-4c96-b75e-505760ded666",
        "cursor": {
          "ref": "199181dd-8a6f-4261-8274-31c58b152e64",
          "length": 244,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "32de4ce0-f4b7-4058-be10-2240f5e9a9eb"
        },
        "item": {
          "id": "0e19da30-b6ee-4c96-b75e-505760ded666",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "fcc9058e-c214-4200-9c5b-d59440fa4081",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f21f7034-a777-491a-8021-5d89f758dace",
        "cursor": {
          "ref": "d3a4de30-28d1-43ec-b6f3-6a929ed64669",
          "length": 244,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "a8f86499-270b-49a0-9e52-d4cd71029258"
        },
        "item": {
          "id": "f21f7034-a777-491a-8021-5d89f758dace",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "b60749a1-c26d-4be8-bdbf-5dd822e740a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10a60efc-abc0-41ea-943b-94f7c42803b1",
        "cursor": {
          "ref": "7b9b8655-3dfa-4dc1-816a-c674413e34df",
          "length": 244,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "f5c66fdc-1be8-4280-83d5-35219f2a6505"
        },
        "item": {
          "id": "10a60efc-abc0-41ea-943b-94f7c42803b1",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "59fd3c1b-0f5e-4960-bfc5-c0cb7c23be25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "859edaa0-e5bb-403c-91c0-28c88b6dd8da",
        "cursor": {
          "ref": "5358b78b-0435-471a-9e08-7ca6f55e23ce",
          "length": 244,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "96b17c98-698a-4eb9-b73f-9178e01a36da"
        },
        "item": {
          "id": "859edaa0-e5bb-403c-91c0-28c88b6dd8da",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "2ed697cc-5959-4707-870f-6f675c9d191f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bacb9d7-5048-4cf5-988d-b978e5ab9aa2",
        "cursor": {
          "ref": "0f3cedd7-d7af-46a2-b9dc-c14a63f31f6c",
          "length": 244,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "aded9a11-c863-47ff-b573-74b0f2b2f70b"
        },
        "item": {
          "id": "7bacb9d7-5048-4cf5-988d-b978e5ab9aa2",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "a5097246-893f-4fcf-ba13-baaba86e7916",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e35bd84e-0e2f-4718-bf0c-631c83e5b9b9",
        "cursor": {
          "ref": "48fbdd2e-f335-4bb2-81ed-184a4a19d052",
          "length": 244,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "575ef299-b0fb-4f49-b8de-86fbcb5d14d7"
        },
        "item": {
          "id": "e35bd84e-0e2f-4718-bf0c-631c83e5b9b9",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "eb2d4fa7-8451-4569-90a0-f153dabe5963",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34de66b7-cf92-4fbf-b089-0c7d37f1c765",
        "cursor": {
          "ref": "65de71de-0e61-46f8-bc64-6d8ed38d53f6",
          "length": 244,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "f224c823-fc56-40ae-b228-e0be3c4e11de"
        },
        "item": {
          "id": "34de66b7-cf92-4fbf-b089-0c7d37f1c765",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "fc68ca28-4e4c-4bb0-af20-796aaf0b21a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f74298e4-aaea-495a-8605-9540bf14a338",
        "cursor": {
          "ref": "2f942ec8-f83b-410c-9bde-366426ca0b6e",
          "length": 244,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "8250bdfa-5765-4ef3-b83c-068f096dcf8a"
        },
        "item": {
          "id": "f74298e4-aaea-495a-8605-9540bf14a338",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "d30a9494-fb7f-432f-a4cf-e55ec6d76cb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "160aa22d-30ca-466f-a573-307493617611",
        "cursor": {
          "ref": "305aafcb-cb43-4c39-8b33-f5f23c29dea1",
          "length": 244,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "50100289-4d31-4e5f-903c-b3b798676ab5"
        },
        "item": {
          "id": "160aa22d-30ca-466f-a573-307493617611",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "18981a84-c14a-4f38-add3-85f05796b860",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a2e07fe-ac48-49b3-a182-c5c133929565",
        "cursor": {
          "ref": "5a5b6955-1524-40ef-b377-a58373299203",
          "length": 244,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "c8229934-b8da-4cbe-b096-3c86bb501415"
        },
        "item": {
          "id": "2a2e07fe-ac48-49b3-a182-c5c133929565",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "99d486f7-db83-4451-8646-00f12ce5ef2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eac0bb78-78af-4b00-8aa4-ae2edc596c81",
        "cursor": {
          "ref": "ae750def-8aa8-4514-bdc8-9739946d949d",
          "length": 244,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "b586e743-7f93-4242-9b6f-35f4d5ce9fe1"
        },
        "item": {
          "id": "eac0bb78-78af-4b00-8aa4-ae2edc596c81",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "8267c3ce-0149-4e9b-bc67-d025f404eda6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2498c10-9a69-419b-ac94-412900da813d",
        "cursor": {
          "ref": "13361e59-6693-454d-8820-1c48253f2860",
          "length": 244,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "830040fc-e664-4653-96e2-5f058e9d4c04"
        },
        "item": {
          "id": "d2498c10-9a69-419b-ac94-412900da813d",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "2d7c694c-db75-4867-86ad-0b18c77c7610",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28644244-a3bf-4831-9538-51d37644cfdb",
        "cursor": {
          "ref": "282f9691-fa6a-4eef-ba13-1ceb8c71a2bb",
          "length": 244,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "caaad9df-a601-4ed2-8523-1c97d75906b7"
        },
        "item": {
          "id": "28644244-a3bf-4831-9538-51d37644cfdb",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "e7132761-6bf5-4f5b-80f4-2ac57edaf9dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f52bcd19-2acb-41d5-875d-74676af41ccf",
        "cursor": {
          "ref": "1d6d8772-2ae4-4738-af7e-2c70b882e481",
          "length": 244,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "1256ccfc-472b-4dc3-ae1b-3c34b391020f"
        },
        "item": {
          "id": "f52bcd19-2acb-41d5-875d-74676af41ccf",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "11d9f3ec-fdb9-47ce-9e00-5292066b34c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d90f749-1467-44bc-bb8f-6e8a77ceadad",
        "cursor": {
          "ref": "912b6fb1-a01e-46ab-aef0-bcfa2fa2c01b",
          "length": 244,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "cfa62fb7-57f5-4fd8-83ca-8dab9fda24c7"
        },
        "item": {
          "id": "5d90f749-1467-44bc-bb8f-6e8a77ceadad",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "71eb91e1-6618-4957-829c-b0599c6440b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f5dba6d-225d-47f2-b8bd-fb4db9110a8b",
        "cursor": {
          "ref": "d578cfc8-ef11-4d6e-999f-579e97483305",
          "length": 244,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "933ff363-24b3-40bd-b030-04e83fdadbe9"
        },
        "item": {
          "id": "3f5dba6d-225d-47f2-b8bd-fb4db9110a8b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "cdeea40e-bc58-4183-ab33-6b1ec58f375f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d64cec10-4698-477a-81df-a721fc60074f",
        "cursor": {
          "ref": "c61a7c0a-f971-4b46-b6e4-876099679a79",
          "length": 244,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "8f80ca6e-068c-4d6f-b81a-b649f8e8a0f5"
        },
        "item": {
          "id": "d64cec10-4698-477a-81df-a721fc60074f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "357c2c71-4173-4df8-8aa1-7571c85e30a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c69740b-da78-4938-aab8-1e70f101657d",
        "cursor": {
          "ref": "18a1b288-1678-4b67-9729-3912f8d18947",
          "length": 244,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "c2519d4e-465b-4426-9310-e823265a43c9"
        },
        "item": {
          "id": "8c69740b-da78-4938-aab8-1e70f101657d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "f8b1dcef-1241-4633-9cf5-002acc572287",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "079af9f6-ce5b-42ec-b582-31b367244ec4",
        "cursor": {
          "ref": "76696815-956a-4489-a4dd-8521801afc0d",
          "length": 244,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "26bacd36-f3f1-4033-8cb6-992f14fd4dd3"
        },
        "item": {
          "id": "079af9f6-ce5b-42ec-b582-31b367244ec4",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "64291b50-0e3c-419e-b1d6-41c11359cd0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4356cb51-7ced-45be-b5c3-048ecca825a5",
        "cursor": {
          "ref": "30f97506-cfb2-4f06-aee7-aa796961aa4f",
          "length": 244,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "6796702e-8906-472e-a35e-c3283eb8a3d0"
        },
        "item": {
          "id": "4356cb51-7ced-45be-b5c3-048ecca825a5",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "65d0ec0a-39f8-4f10-ad4f-6cd0073ecf57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9000180f-987d-4fe6-b693-36eef62373c9",
        "cursor": {
          "ref": "d3f2a653-b779-4f1f-9291-7fa7362b173f",
          "length": 244,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "46253731-1c0d-4017-9980-4d26b18b512b"
        },
        "item": {
          "id": "9000180f-987d-4fe6-b693-36eef62373c9",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "e5da19b7-c135-41a9-9108-768ee06e28a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f734688-dbd4-428a-af97-3250861f38cc",
        "cursor": {
          "ref": "676e7c8d-55da-479f-8936-6b45a028fde3",
          "length": 244,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "2f32f439-b3c1-4fd4-88cb-f282843cbf19"
        },
        "item": {
          "id": "6f734688-dbd4-428a-af97-3250861f38cc",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "8cc69ff3-9eba-4c4a-a7f1-f64140060f9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43170acc-9c7d-4731-bf40-308d7690a1a7",
        "cursor": {
          "ref": "c0f54ce8-7c42-46f9-9ff8-3e72a54d3b6b",
          "length": 244,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "591d1ac2-ab3f-489f-a87b-e2adf8a9b58e"
        },
        "item": {
          "id": "43170acc-9c7d-4731-bf40-308d7690a1a7",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "8b106813-dbad-4820-b95a-5f3fd088b9d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2642864-f0dc-41b0-80cb-e909e9c5656b",
        "cursor": {
          "ref": "b879f67c-83cc-43bd-873c-39c44fc32abb",
          "length": 244,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "5c66b1a0-a630-4b94-80e1-dc4cd2ff59b3"
        },
        "item": {
          "id": "f2642864-f0dc-41b0-80cb-e909e9c5656b",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "91ee7379-311d-4ff2-9b90-ad99b39e4c48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d98447a9-03b1-44ad-9206-19baab7fdedc",
        "cursor": {
          "ref": "88a8b238-6cbb-4fce-b91c-e72101e46d8c",
          "length": 244,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "9d2e5b7a-3288-412a-8f90-2e302f57d372"
        },
        "item": {
          "id": "d98447a9-03b1-44ad-9206-19baab7fdedc",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "c99176e3-19eb-4b63-bbac-a2c2cf3f65a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f90ee0fa-6618-474c-aaa4-62fa6faead0e",
        "cursor": {
          "ref": "16693ac9-847c-4399-ab09-378909e9a6c3",
          "length": 244,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "50864a96-c79b-4da7-9173-5ac1445c68e1"
        },
        "item": {
          "id": "f90ee0fa-6618-474c-aaa4-62fa6faead0e",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "4045de6a-6e2e-44b0-bd61-34f10d91ef7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e4fae3c-af88-4bc9-91b5-a1e05a45eaa1",
        "cursor": {
          "ref": "a263d571-6f74-48a0-bf96-40f98ca741b4",
          "length": 244,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "68b91faf-b6e3-4ea1-9b23-57294a5b5d2b"
        },
        "item": {
          "id": "8e4fae3c-af88-4bc9-91b5-a1e05a45eaa1",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "c39c6efd-41f9-4f1b-af5e-712ec723f41c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d2c9885-05cf-4feb-bac0-64383daef9af",
        "cursor": {
          "ref": "8a603a8c-cf18-4938-b013-a9c662470c36",
          "length": 244,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "fe4a12d6-146f-43ac-a3c5-826bbf84049d"
        },
        "item": {
          "id": "5d2c9885-05cf-4feb-bac0-64383daef9af",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "12178b43-1a28-4147-afc8-c64df9aebaa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd276808-134e-4c92-ac36-b9d15aad50e4",
        "cursor": {
          "ref": "9a92e14f-791a-49cc-b7c3-a6e7375043be",
          "length": 244,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "28e4fd53-3c8d-4f9c-9287-8e326d3abee3"
        },
        "item": {
          "id": "dd276808-134e-4c92-ac36-b9d15aad50e4",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "90b3cd62-b9bc-4d07-bbd2-3f26bcd68ed8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3613f49-f286-4a55-aab0-56d1f20ebde1",
        "cursor": {
          "ref": "b5821a0c-cc2f-4027-bb7f-255ad3f0f94f",
          "length": 244,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "bbbecbf8-aec0-4294-913c-c96cd2bd051c"
        },
        "item": {
          "id": "b3613f49-f286-4a55-aab0-56d1f20ebde1",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "15bb559a-42e8-4439-9aea-2ea73b0fc5df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45b1d73f-d055-40c0-afa8-7d61187d005b",
        "cursor": {
          "ref": "7b5f2ceb-04d4-4839-a818-1e9229cb8218",
          "length": 244,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "ad5fdbd2-b098-4e09-aaf2-0df2bfc967ad"
        },
        "item": {
          "id": "45b1d73f-d055-40c0-afa8-7d61187d005b",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "9b80f97d-8376-4bf7-a774-f0ffa650ccb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2e05174-cfb3-40b3-8e04-5bc9ef3f4cec",
        "cursor": {
          "ref": "7b36fbe8-4fbe-4f8e-8c5b-2856feae3401",
          "length": 244,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "6088459c-805d-40e4-8273-c337a7bcf461"
        },
        "item": {
          "id": "a2e05174-cfb3-40b3-8e04-5bc9ef3f4cec",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "1ed969cf-482d-41ac-813a-1c9f01e2f220",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "825ef1b0-6717-44ea-88f3-aad5cdab1994",
        "cursor": {
          "ref": "a885e620-cd9d-4880-bb7c-2c8e2266f7c9",
          "length": 244,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "13935098-55c9-49d9-b212-73e0b36e0aab"
        },
        "item": {
          "id": "825ef1b0-6717-44ea-88f3-aad5cdab1994",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "b440338d-e1b3-41ca-b848-5c56df0a6381",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e600093d-e2a0-4567-8a72-109bf194d452",
        "cursor": {
          "ref": "a9a6cff9-215c-4d5d-8f23-c55b160f8e62",
          "length": 244,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "9e413059-4c92-4111-8094-3a7060b7e010"
        },
        "item": {
          "id": "e600093d-e2a0-4567-8a72-109bf194d452",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "0e3f6e64-c00b-4f39-a7d6-88679f8c8687",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66391d49-fca9-4a57-a7f4-083e97aa8b54",
        "cursor": {
          "ref": "859523ee-f193-406b-9c5b-3f703ddc80f7",
          "length": 244,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "2c7e6dec-df7f-4cfb-8156-5c138435c8b3"
        },
        "item": {
          "id": "66391d49-fca9-4a57-a7f4-083e97aa8b54",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "cff666c2-873a-4231-970a-a94981306b22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4837c1f2-a9de-4ee2-8e60-2b9279e330c7",
        "cursor": {
          "ref": "acb17b89-c94f-4225-b284-5c58d46f426c",
          "length": 244,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "1d197c58-58e6-4be1-ab43-18c17afcc873"
        },
        "item": {
          "id": "4837c1f2-a9de-4ee2-8e60-2b9279e330c7",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "2d7d640c-e3a6-407b-8f90-3610c60230f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddf30ecd-bbc1-4a0d-8255-10ac561bd6ee",
        "cursor": {
          "ref": "564b82b0-ac92-4d3a-8542-a1cd4de9d471",
          "length": 244,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "a5aa7aa8-bc0e-4f13-bb71-f899b50a0c4e"
        },
        "item": {
          "id": "ddf30ecd-bbc1-4a0d-8255-10ac561bd6ee",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "485eb79e-d6b0-42a5-9ade-b50580bba356",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a5078b6-ce75-4475-8c4a-a374c677f683",
        "cursor": {
          "ref": "cb6e25bc-0b6d-4f48-b2bd-7ba1be6c1aba",
          "length": 244,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "64666224-8f48-455c-bc7f-8f8458674797"
        },
        "item": {
          "id": "6a5078b6-ce75-4475-8c4a-a374c677f683",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "777b7f85-f271-44d7-aac1-1f561cbd3e51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5519c27d-b65c-42f9-b6a4-c7ef7d88493d",
        "cursor": {
          "ref": "8ef0c9ff-631b-4f31-b832-d825151e3948",
          "length": 244,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "22bf3d43-33fd-40d4-955f-ecc7a9ca7b1d"
        },
        "item": {
          "id": "5519c27d-b65c-42f9-b6a4-c7ef7d88493d",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "f7d6d55b-b8a2-4a72-a1cb-92261ec558a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc4a97f8-1124-4940-977e-e75596bf7694",
        "cursor": {
          "ref": "6d7e8535-501a-4a94-b5d6-0a542b4af0f6",
          "length": 244,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "4fcdcf3d-bf73-41ae-9b1f-4b97ced4640f"
        },
        "item": {
          "id": "bc4a97f8-1124-4940-977e-e75596bf7694",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "315ddc5c-d03e-4bed-8610-b31f7c40a0c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "449b2a7f-36f9-4dd4-96e3-95961fb320b5",
        "cursor": {
          "ref": "92a0b1e0-ed59-494e-af92-96358525dc99",
          "length": 244,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "435b7a7e-3eef-4930-9521-03dfa396d774"
        },
        "item": {
          "id": "449b2a7f-36f9-4dd4-96e3-95961fb320b5",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "f6dd4a04-74b4-411f-99e3-02b9a7f61b20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c718bad3-79ad-4615-bfa2-9fb0696a017d",
        "cursor": {
          "ref": "6e720e20-6b8b-453c-aa2c-772b45c7a94d",
          "length": 244,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "e3939ce4-ea8e-438b-b469-c8c631041d47"
        },
        "item": {
          "id": "c718bad3-79ad-4615-bfa2-9fb0696a017d",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "71a0e4ff-4e73-4be5-b77f-42d7e22ee01b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fab2cc01-8ece-4349-9dd6-7ef2cb742a31",
        "cursor": {
          "ref": "d039d4ce-6b5b-45a2-8808-b47d02a65a86",
          "length": 244,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "479ead6b-06f5-458d-91df-d60938898a1a"
        },
        "item": {
          "id": "fab2cc01-8ece-4349-9dd6-7ef2cb742a31",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "2ea1049b-6274-4164-801e-b59edee63977",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd189403-eba7-4528-86b5-5e659f526bfd",
        "cursor": {
          "ref": "c9cdd489-9a55-4214-bc33-b20734720ae8",
          "length": 244,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "5795cb73-c5e5-4c2b-a8aa-3e667c2a1bb2"
        },
        "item": {
          "id": "bd189403-eba7-4528-86b5-5e659f526bfd",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "d61982cf-12cb-43a7-acde-ce47d39a8019",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92f4a4ca-0d06-4e7c-9d74-ff28f02055e0",
        "cursor": {
          "ref": "aa2a7288-3693-434c-9252-2fb15f28f591",
          "length": 244,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "aef71b95-ddd8-4413-ab86-f0683e238d34"
        },
        "item": {
          "id": "92f4a4ca-0d06-4e7c-9d74-ff28f02055e0",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "ccc5dad7-8b52-42c7-b19b-9ac1fa2f8f30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "284b28ab-9062-47e4-bf50-1059f8a53dd8",
        "cursor": {
          "ref": "63f22792-4a10-4049-9fa3-61bdb2287993",
          "length": 244,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "5cc9e0ae-4dd4-48a7-becb-700255790f49"
        },
        "item": {
          "id": "284b28ab-9062-47e4-bf50-1059f8a53dd8",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "9eda7920-7db2-4073-99af-8bf7a15ee03e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81f40d67-0abe-43c4-9749-579432b6656c",
        "cursor": {
          "ref": "acc4f0fe-67b2-4c2c-a200-6aada7b857ab",
          "length": 244,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "e9f3389c-48e2-4587-a445-14f39774f66d"
        },
        "item": {
          "id": "81f40d67-0abe-43c4-9749-579432b6656c",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "f30bae79-e13b-4e78-9125-52e45700b39d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bfdd38e-4864-4737-b34a-de1c6cf6058c",
        "cursor": {
          "ref": "f3c1288c-6ab9-4815-b148-4eb5bbedc696",
          "length": 244,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "1164b130-407a-4a7c-a78e-1c059989fa56"
        },
        "item": {
          "id": "6bfdd38e-4864-4737-b34a-de1c6cf6058c",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "0d53e8b4-fcb8-46c8-ac6a-09ededd33471",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e93cf5c-2130-4ea4-8c47-558bc526a9fa",
        "cursor": {
          "ref": "c35d7ecc-0a43-40ea-b581-82ae262081be",
          "length": 244,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "9f6b58f2-6d91-4428-a737-9a3fa78387a3"
        },
        "item": {
          "id": "7e93cf5c-2130-4ea4-8c47-558bc526a9fa",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "abbc1695-8658-4e6d-b563-07eb1d24bc87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c50f01fa-0f65-4b46-ace4-1cb2a66fd357",
        "cursor": {
          "ref": "518e66e9-a2ab-4cba-afc4-c786a2628409",
          "length": 244,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "5bc79bc2-ee89-4e34-aa28-e5181294fb65"
        },
        "item": {
          "id": "c50f01fa-0f65-4b46-ace4-1cb2a66fd357",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "8d84428e-c38e-4bc1-b2d2-21c746bb5254",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06dbcc17-2083-47a4-aa12-e4b301482f74",
        "cursor": {
          "ref": "8b8a39d7-3afe-4491-9275-6e88c5cabdfa",
          "length": 244,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "188bdc40-a992-4fc3-bca2-078c0bec46dd"
        },
        "item": {
          "id": "06dbcc17-2083-47a4-aa12-e4b301482f74",
          "name": "credentials_issue"
        },
        "response": {
          "id": "96f46820-b9eb-4ba8-b629-2aef8da8125b",
          "status": "Created",
          "code": 201,
          "responseTime": 84,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ecf9c18-4dc3-4151-9821-046a09c72212",
        "cursor": {
          "ref": "4d5a35f7-ac14-4703-ac6e-ad39aca0573e",
          "length": 244,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "3d7d1bdb-f9c0-489a-ac5f-ef584259a871"
        },
        "item": {
          "id": "3ecf9c18-4dc3-4151-9821-046a09c72212",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "181262a5-f04a-439c-bfbb-35171b6cbac3",
          "status": "Created",
          "code": 201,
          "responseTime": 393,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e0349cf-a4a7-46bb-aa4e-4252334c5f50",
        "cursor": {
          "ref": "0d2e7293-35a9-4711-9901-03364d80cd6a",
          "length": 244,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "c40d32fc-542e-4192-a4bf-4a9b0e07381a"
        },
        "item": {
          "id": "5e0349cf-a4a7-46bb-aa4e-4252334c5f50",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "9cb64a02-b431-43e5-9070-2eb3c6d5c9ed",
          "status": "Created",
          "code": 201,
          "responseTime": 83,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4fd9d1e-32af-4aea-8592-4745882a1e27",
        "cursor": {
          "ref": "5fe139c1-9447-46a3-93de-5d7b47c77f98",
          "length": 244,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "743d7d98-ab03-4f51-9d51-f2dc0a61a4a4"
        },
        "item": {
          "id": "e4fd9d1e-32af-4aea-8592-4745882a1e27",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "cb3079a5-6453-4362-9533-8d847a032116",
          "status": "Created",
          "code": 201,
          "responseTime": 83,
          "responseSize": 926
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb4b1fa0-b341-404e-86b5-83cd503a6ce5",
        "cursor": {
          "ref": "5d45e49b-2d63-494c-bea7-78b953d8b383",
          "length": 244,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "b65b3869-0160-480a-941c-47f2093ae3c1"
        },
        "item": {
          "id": "bb4b1fa0-b341-404e-86b5-83cd503a6ce5",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "031ab536-5cec-450c-a0d3-592eda51eb40",
          "status": "Created",
          "code": 201,
          "responseTime": 82,
          "responseSize": 894
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "10233814-413d-472c-a840-09e3a76dc69b",
        "cursor": {
          "ref": "e9216c54-07e0-48bd-bf7d-797ca67e1305",
          "length": 244,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "9be76886-b2a6-4761-b137-136de0802f86"
        },
        "item": {
          "id": "10233814-413d-472c-a840-09e3a76dc69b",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "87f7f0cc-0da7-4a3c-80c3-c760310c4f0f",
          "status": "Created",
          "code": 201,
          "responseTime": 83,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b3c8932-70c5-4b63-b5bf-8c1ee8cdbbfd",
        "cursor": {
          "ref": "00795a38-0035-4623-9f8a-9e500f209e53",
          "length": 244,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "d5ef855f-1934-4680-b3bd-f7105c1b0594"
        },
        "item": {
          "id": "5b3c8932-70c5-4b63-b5bf-8c1ee8cdbbfd",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b8c76bf3-2e71-4ea3-8e70-f121569c8ffa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c85f7b80-e411-48ea-b36a-9882709627db",
        "cursor": {
          "ref": "b3019122-5e4e-4c23-9558-0ba2db129af9",
          "length": 244,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "3c8e4fff-60fd-48a4-a5a4-e74589f6a611"
        },
        "item": {
          "id": "c85f7b80-e411-48ea-b36a-9882709627db",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "fe4a43b4-80d8-4f2f-a42c-8aa9a6845579",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c06eef8b-691c-40d2-9000-792afc491fca",
        "cursor": {
          "ref": "d8a2995c-3b01-4361-9fa7-49b5017f9124",
          "length": 244,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "f0555b0d-e29f-40e9-a4a8-f2643562624b"
        },
        "item": {
          "id": "c06eef8b-691c-40d2-9000-792afc491fca",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "396b3969-e49a-4fe1-ac22-ba0ebd88f5e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd7b064f-d1e7-4621-93ee-def267807d2e",
        "cursor": {
          "ref": "e13916e9-8b6c-433a-bcf1-2a22f2eb2c0c",
          "length": 244,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "afed5193-d513-41f4-b40f-271ce3d6ba51"
        },
        "item": {
          "id": "fd7b064f-d1e7-4621-93ee-def267807d2e",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "36f03705-1d68-454d-81f2-f49547020fe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccaa7eff-6095-4a9d-9bff-32f122fdf27c",
        "cursor": {
          "ref": "4681dc2e-ac2d-48a7-b197-8dbc341f0956",
          "length": 244,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "76a30f62-a1b1-4f46-9c24-c4f2cbc0a324"
        },
        "item": {
          "id": "ccaa7eff-6095-4a9d-9bff-32f122fdf27c",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "3f782059-9ea5-48e1-9b03-2f9bf8924454",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2906518-6198-4657-84d8-40f05b175793",
        "cursor": {
          "ref": "d95f4ac9-be92-4a00-9b53-3d954bb81b02",
          "length": 244,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "f5ae2c9a-1a1b-4a14-9721-b881970c6388"
        },
        "item": {
          "id": "c2906518-6198-4657-84d8-40f05b175793",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "3e7639b8-f4b6-4535-aa3e-55a3dfd32992",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d916a37-cc02-408a-adb3-739f634ab20f",
        "cursor": {
          "ref": "aeb06096-3680-412b-a771-c76c71d171cf",
          "length": 244,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "2cf71ce8-5ada-41fa-9975-15fd17dd8335"
        },
        "item": {
          "id": "3d916a37-cc02-408a-adb3-739f634ab20f",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "1f49a33d-c154-4c67-b5eb-4e7c63b9ab97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "304e0818-b0f7-4ab3-ac5e-9a25853c9f2c",
        "cursor": {
          "ref": "3e0830b6-6294-44e2-8ba0-17432b2b592f",
          "length": 244,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "ebcf1011-f0c7-4367-8ef7-8dd4fa88a631"
        },
        "item": {
          "id": "304e0818-b0f7-4ab3-ac5e-9a25853c9f2c",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "02ff34de-7ba9-43f0-aec7-293b22a3e6ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "169e2ea8-75b1-4279-8856-761579b029e0",
        "cursor": {
          "ref": "c3dd5880-7d93-4f53-abc9-39dc3c807376",
          "length": 244,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "966a9c82-8c09-468c-94e4-460c06c7d62b"
        },
        "item": {
          "id": "169e2ea8-75b1-4279-8856-761579b029e0",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "42557373-8ea9-4736-9862-53f5df2da504",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7958152-512f-44b3-b61e-14aaa68bd13e",
        "cursor": {
          "ref": "e1c8b0cb-fc4a-4884-9ce7-07811b4a5e83",
          "length": 244,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "a02b6536-69fa-43b6-8fad-16a14abfbf3a"
        },
        "item": {
          "id": "c7958152-512f-44b3-b61e-14aaa68bd13e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "66d79be7-b1cc-4d2a-9f29-b3fc3b890973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c497532e-4977-466c-92c9-9613f47bccdb",
        "cursor": {
          "ref": "11882431-16e2-4252-a57d-c01fe571d58d",
          "length": 244,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "92127b15-0026-4ac3-9510-f792f4e29f36"
        },
        "item": {
          "id": "c497532e-4977-466c-92c9-9613f47bccdb",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "d70b5c50-cd03-4e43-9859-5009b2f12ae7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e421c4a-97d4-4676-9e7e-1233a9f1cc47",
        "cursor": {
          "ref": "73e73a39-4246-46bf-b520-557380f4dd37",
          "length": 244,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "8b0ff83a-986a-48aa-96f8-e5d53e9ff0df"
        },
        "item": {
          "id": "0e421c4a-97d4-4676-9e7e-1233a9f1cc47",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "ee7dfa61-b2fe-4224-b592-49e6955fc119",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9299e23-2cb4-4df1-900f-be881d71a999",
        "cursor": {
          "ref": "1678c3c8-8557-47a1-b2f7-2804d304a2d2",
          "length": 244,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "c4e673b9-aef1-4e08-bd31-c59f5ade479e"
        },
        "item": {
          "id": "f9299e23-2cb4-4df1-900f-be881d71a999",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "25bada3b-5a7c-4e76-8671-44b17a4482b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "711373ba-d18d-498a-b8a8-e3269a951a51",
        "cursor": {
          "ref": "076c3867-f621-4e4f-9fdc-99fb18d51372",
          "length": 244,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "731ee4cc-668c-4913-94f0-d4e212eced7f"
        },
        "item": {
          "id": "711373ba-d18d-498a-b8a8-e3269a951a51",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "9ad5109d-cb89-4f15-a458-7579cc5e6629",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f41c453-5d5b-49bc-8939-d4b16f0d5c3d",
        "cursor": {
          "ref": "a93d6bba-6db3-4f4f-9b54-da8f4c8e279d",
          "length": 244,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "b674f8ef-f31e-4960-8282-28fa4201b251"
        },
        "item": {
          "id": "2f41c453-5d5b-49bc-8939-d4b16f0d5c3d",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "4ef6d8d8-23a6-4e50-8542-ed503136fca4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01da7fea-2677-4a47-9720-5af1e0b2105f",
        "cursor": {
          "ref": "b4f70c2f-7d1b-4520-bf89-6b009c5a69a2",
          "length": 244,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "9d10c583-bc73-48e1-a0cc-3679956bd258"
        },
        "item": {
          "id": "01da7fea-2677-4a47-9720-5af1e0b2105f",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "79d3cf9c-1eda-4fb5-bae3-af623d2f3f40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97e749f6-9108-46bb-9b1d-e11853056178",
        "cursor": {
          "ref": "372450c6-5394-4464-8b3d-8ce9f319e7de",
          "length": 244,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "e95ccd41-787b-459a-bd3e-abefbad4a500"
        },
        "item": {
          "id": "97e749f6-9108-46bb-9b1d-e11853056178",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "86e80d47-138e-4d4b-ac12-a145b28c5096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8caa18d1-e2e1-4581-bf1a-40ea997ccbc7",
        "cursor": {
          "ref": "97a96367-ad0e-4203-9879-fa41549c8ae0",
          "length": 244,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "f6313ac5-1ca8-4e47-aea0-4e30eb0f6320"
        },
        "item": {
          "id": "8caa18d1-e2e1-4581-bf1a-40ea997ccbc7",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "b8a70ecb-482d-4345-9e76-0cfbc4f7ff25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9472d43-a4f0-48a9-bb1e-871d8ac1a3c3",
        "cursor": {
          "ref": "9534c5a7-9bd6-410a-b0a2-44d1e41cc56c",
          "length": 244,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "04e19b78-d6b7-4141-86bb-45e25ed87a1b"
        },
        "item": {
          "id": "a9472d43-a4f0-48a9-bb1e-871d8ac1a3c3",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "5b22785a-b2f9-4037-9005-ed95035bbfc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d12b678a-a124-43d2-a5fc-08796e945e55",
        "cursor": {
          "ref": "f3cb0ddb-2e91-4aec-9be6-8812b15f94af",
          "length": 244,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "91463d77-a5ed-4d36-88d8-c75e73b0e7b5"
        },
        "item": {
          "id": "d12b678a-a124-43d2-a5fc-08796e945e55",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "3f14618d-6013-40ab-95ac-cf16ada0c009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd9084a5-7272-4a0e-aa3e-2c405b640453",
        "cursor": {
          "ref": "1618cc59-6a9b-444a-a6fa-dd3574a0acfa",
          "length": 244,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "b048ae67-8cb1-4d32-b2a8-ab57a9fb482f"
        },
        "item": {
          "id": "dd9084a5-7272-4a0e-aa3e-2c405b640453",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "0e5ad45a-35aa-44f5-90ce-37e47ab017ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3580645-95e3-49bf-87c1-dc138cee3b74",
        "cursor": {
          "ref": "aa641d59-626a-49ee-8312-cb6216bab87e",
          "length": 244,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "f1eb259b-cc1a-45da-aefd-6edaaf84921d"
        },
        "item": {
          "id": "c3580645-95e3-49bf-87c1-dc138cee3b74",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "61b9628c-0d32-4be2-b4a5-00836e844497",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b5a6f53-a8b4-4df4-8d33-ad839680373b",
        "cursor": {
          "ref": "603e467d-2cfb-4965-b936-77e7b1e490e6",
          "length": 244,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "47f28567-d614-4eaf-9e6a-371f3244009d"
        },
        "item": {
          "id": "2b5a6f53-a8b4-4df4-8d33-ad839680373b",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "9cb5f55e-9026-4db5-8970-16348ca50141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61782e56-5006-4cb3-872a-f529aec9395c",
        "cursor": {
          "ref": "434de231-6ece-4879-9097-0f6381a39f85",
          "length": 244,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "e79ef2ea-1fd1-4c3b-b31a-4fc0b170b0e3"
        },
        "item": {
          "id": "61782e56-5006-4cb3-872a-f529aec9395c",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "8583eb0a-3b83-4603-b309-e1dcbe5ccb27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a679aca3-2970-48e1-8331-b390e110a693",
        "cursor": {
          "ref": "8809569c-ce52-4e2c-a611-bec2638d3526",
          "length": 244,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "5cbe93fc-466e-4b5d-bdba-b7df5c4cabe4"
        },
        "item": {
          "id": "a679aca3-2970-48e1-8331-b390e110a693",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "927d8205-29f9-4053-9c78-cfd04fda1d64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c4ec1b9-1544-407b-9522-8c1bee9905a1",
        "cursor": {
          "ref": "92462102-4dfd-417b-999b-b51b2a27f5c9",
          "length": 244,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "724bdf2d-22f5-4355-af57-fb1b7b591177"
        },
        "item": {
          "id": "6c4ec1b9-1544-407b-9522-8c1bee9905a1",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "8e90c9f6-7df8-48fe-8d4b-86850ab42365",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca951b09-e994-4801-aab3-07604739c715",
        "cursor": {
          "ref": "1a537185-20d3-4abe-bb41-be9f53496559",
          "length": 244,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "08c19f80-cadb-4244-a6b0-15c9552a9f04"
        },
        "item": {
          "id": "ca951b09-e994-4801-aab3-07604739c715",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "d51d2f8b-33b6-4ed1-a329-dde1931c7698",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd8b7104-f51f-4e2c-9a5c-0f2031466fc7",
        "cursor": {
          "ref": "94bad3b3-d523-4127-a7e7-658815164852",
          "length": 244,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "11cdf158-98f2-4bca-8dca-8ed4216fcc62"
        },
        "item": {
          "id": "dd8b7104-f51f-4e2c-9a5c-0f2031466fc7",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "0c8af9b9-04ba-4fbf-92f6-a3ed89c8efda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b992528-233a-4e95-ac43-a42335ca38b2",
        "cursor": {
          "ref": "cbc532d9-cb48-4987-9b8d-b6bde83797a6",
          "length": 244,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "8e03ac85-28b9-4d37-804f-e3bc3257a003"
        },
        "item": {
          "id": "0b992528-233a-4e95-ac43-a42335ca38b2",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "56de1ce7-1491-4dd6-b25b-43bc31cf84ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbbb3a90-0516-4d28-b4ee-b4a85003787d",
        "cursor": {
          "ref": "ae8df030-1e3c-457a-a20a-d212d9c5984c",
          "length": 244,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "120cd062-9ee7-4440-a046-e224d6add464"
        },
        "item": {
          "id": "dbbb3a90-0516-4d28-b4ee-b4a85003787d",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "4b541f5d-9972-4101-b8af-0f5076d9592b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdf5a9ef-e692-4aae-bdac-3be15aba1421",
        "cursor": {
          "ref": "ee719163-4ad8-497a-9afd-4b947fbf0f70",
          "length": 244,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "f8087ab7-6c77-4715-bb80-821772b9e2d5"
        },
        "item": {
          "id": "bdf5a9ef-e692-4aae-bdac-3be15aba1421",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "5bab07fa-e79d-4354-8bcb-9dbb06f89559",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7939a3be-74ae-4d5a-915e-66dededc1737",
        "cursor": {
          "ref": "3f9730e0-a547-44b6-b739-860d9da6649b",
          "length": 244,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "14050a13-978a-4dc3-8f60-8f990dcd97db"
        },
        "item": {
          "id": "7939a3be-74ae-4d5a-915e-66dededc1737",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "b68621cc-733e-49a2-9d95-e49556178c30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7bcb732-d98f-45ba-a5d2-75c018be9071",
        "cursor": {
          "ref": "5bf5944e-d778-4daf-9345-446b609f1418",
          "length": 244,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "63a5db75-c7ed-40aa-ac62-2bd8ba135272"
        },
        "item": {
          "id": "e7bcb732-d98f-45ba-a5d2-75c018be9071",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "06b81f9c-2762-4f97-8bdd-f09ec18b3041",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "268451ff-287e-481c-876a-94d3feb37032",
        "cursor": {
          "ref": "6f8b1f14-6a33-4e99-b264-a2a11767fa70",
          "length": 244,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "78b0cb9b-2325-4dde-8b6b-eab950e4592b"
        },
        "item": {
          "id": "268451ff-287e-481c-876a-94d3feb37032",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "15227077-cb80-4f34-8d38-2519677f417a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "119370c8-b2b2-449a-8166-2b3d9a8c3624",
        "cursor": {
          "ref": "4c1afe87-1e9f-402f-bc9a-89a673101d5d",
          "length": 244,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "127ea7ad-297a-429c-8769-e89abf65bf36"
        },
        "item": {
          "id": "119370c8-b2b2-449a-8166-2b3d9a8c3624",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "c554051b-b9af-421c-9ed3-ea20272b336e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2c3d95c-f32b-4bd3-8d11-3d481cd7245c",
        "cursor": {
          "ref": "9b419e8e-0049-434e-a2cd-a195f7132506",
          "length": 244,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "998f972e-5045-44a8-b1cd-4f88bd4c331e"
        },
        "item": {
          "id": "a2c3d95c-f32b-4bd3-8d11-3d481cd7245c",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "05c2c341-1b6f-449d-b96a-812eaa5e9b20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2acb8597-1d78-4c36-889f-564ee8a9fca5",
        "cursor": {
          "ref": "1084afe7-ce06-4855-8b35-b457a67ddb15",
          "length": 244,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "473a1c0b-54e9-42aa-9ce4-70b8eca54866"
        },
        "item": {
          "id": "2acb8597-1d78-4c36-889f-564ee8a9fca5",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "a5b2df26-ba4b-49c5-b7f4-826b59b66db2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "578824b0-6e2c-4ce0-a8fd-c37fa2d118a2",
        "cursor": {
          "ref": "876e11dd-5f4f-4a70-9829-248c34148b15",
          "length": 244,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "723c3afb-3bed-466c-953c-b73b83e2a756"
        },
        "item": {
          "id": "578824b0-6e2c-4ce0-a8fd-c37fa2d118a2",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "758512cd-1308-4a63-b5b9-7ab8c2d464ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9005f6e0-0516-4f9f-b86c-edbb8c1d15dc",
        "cursor": {
          "ref": "00c9fa33-2c85-43a6-b1d9-50591170667e",
          "length": 244,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "ca317d7c-1ba6-4ba9-866d-96fa0a57ce47"
        },
        "item": {
          "id": "9005f6e0-0516-4f9f-b86c-edbb8c1d15dc",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "46159361-d72c-4222-a99a-aa4c4b3a852b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ce08c12-86b0-4305-82f6-ae08d9270eb1",
        "cursor": {
          "ref": "8988070e-f1dd-4dba-bf5c-40276c1f1a00",
          "length": 244,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "4f88d042-6497-4159-96a0-8c7b4d3df19f"
        },
        "item": {
          "id": "5ce08c12-86b0-4305-82f6-ae08d9270eb1",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "c8ea2c45-4c3f-4435-a77f-3378238c34bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc2ea491-3ee0-4d28-a57b-6328d1acec1f",
        "cursor": {
          "ref": "39cc3ec1-8201-46e3-b6d8-adb7500308d4",
          "length": 244,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "5f6677b8-777f-40ab-a852-c13425e6a341"
        },
        "item": {
          "id": "cc2ea491-3ee0-4d28-a57b-6328d1acec1f",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "3306a395-cf34-46a1-8902-17de42b65e0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48be820f-e3eb-4a18-93e7-78b0f892ddc3",
        "cursor": {
          "ref": "61f9c124-f786-4fef-afde-61ed3b78ee2c",
          "length": 244,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "4e5a2bf6-fb22-4659-924a-c9eea70664fe"
        },
        "item": {
          "id": "48be820f-e3eb-4a18-93e7-78b0f892ddc3",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "765fa691-c4d1-4843-8a60-e513ca0740fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41d5d42a-cb42-4dd3-9d9a-aba1542a9307",
        "cursor": {
          "ref": "ffe20fcb-1f1c-4aa3-9b2e-8623db0a444f",
          "length": 244,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "7933309a-d6c5-49eb-8434-19caff63584e"
        },
        "item": {
          "id": "41d5d42a-cb42-4dd3-9d9a-aba1542a9307",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "8ee53937-ad12-42ef-a5ca-519cfb39707d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c51a473f-6eb8-49af-a33b-39ed1791ae55",
        "cursor": {
          "ref": "ceaa1157-3e91-4c33-b4ac-4db9f6de1df0",
          "length": 244,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "1f1ff3b0-ee94-40ae-a19d-79f072af9ac1"
        },
        "item": {
          "id": "c51a473f-6eb8-49af-a33b-39ed1791ae55",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "cb44241d-2f85-453b-b29b-29ae77e0177a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dba59c3-8021-4637-b7f3-4814e07b6dd4",
        "cursor": {
          "ref": "0496ef07-6797-40ca-885c-d19955875349",
          "length": 244,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "a0ebe7d4-2b62-4b84-8d1a-c884de8a8c86"
        },
        "item": {
          "id": "8dba59c3-8021-4637-b7f3-4814e07b6dd4",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "70038b1a-44b7-4dd2-bb0d-1287b9159e37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ebc9bf0-7887-4081-a80d-e37187272e9c",
        "cursor": {
          "ref": "c7a38428-3f5e-4b79-8ca9-32d3025cf32f",
          "length": 244,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "adfb0150-c856-4b04-a023-61030447e189"
        },
        "item": {
          "id": "9ebc9bf0-7887-4081-a80d-e37187272e9c",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "ab9d163f-5e2d-4f24-9382-d5142fa6f650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f87601c9-eda6-44ad-99fd-716cbabc2dc7",
        "cursor": {
          "ref": "d18f0c0f-75f5-4dad-8680-0a6507c48793",
          "length": 244,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "4674cba7-6f07-4aea-a0c4-92e99f15f311"
        },
        "item": {
          "id": "f87601c9-eda6-44ad-99fd-716cbabc2dc7",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "77521587-ce30-4322-8cf0-e018ed1b4bfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c69d2c1-06d7-43ab-97aa-ce0c3d99308c",
        "cursor": {
          "ref": "033e4a1d-b1ef-4ae3-a316-6419ef5da56d",
          "length": 244,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "e47dc3ca-265e-49f3-932a-e8d042175500"
        },
        "item": {
          "id": "0c69d2c1-06d7-43ab-97aa-ce0c3d99308c",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "f33faa53-2c4a-446a-9c1a-04bc8f9210d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "593df5b4-a80b-4910-aa58-bc50eb008a02",
        "cursor": {
          "ref": "57dabf7e-2513-4cf4-b858-0a14719df5f7",
          "length": 244,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "08c28456-78c9-4baa-b683-0f523e2f5afd"
        },
        "item": {
          "id": "593df5b4-a80b-4910-aa58-bc50eb008a02",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "618e569b-73f0-42e0-9164-7eeb48aa833a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11d4bd91-8781-40c6-a6d5-74b1026ef29c",
        "cursor": {
          "ref": "ce0d3bf4-61bf-4eb7-9ef6-d49ddfd2475f",
          "length": 244,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "864f594b-a35b-4170-a62c-03aec203488e"
        },
        "item": {
          "id": "11d4bd91-8781-40c6-a6d5-74b1026ef29c",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "7b9a8ce8-fb71-4d39-a75d-d0a27d204b5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e62b71e0-e176-447f-81ae-755011828b6e",
        "cursor": {
          "ref": "23935db3-25b3-4c68-93a2-ac21f23e3319",
          "length": 244,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "1747016c-41c2-48a5-aa3a-bcaa5d6b8560"
        },
        "item": {
          "id": "e62b71e0-e176-447f-81ae-755011828b6e",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "b7a4726a-ec63-4ad4-8807-5e017616013e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9504541d-36d8-4449-b003-687c6b4fef6a",
        "cursor": {
          "ref": "bc18de4e-488b-48d5-b514-ed17f554b353",
          "length": 244,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "10eeb5a3-4718-4c72-98ed-727688b7eedf"
        },
        "item": {
          "id": "9504541d-36d8-4449-b003-687c6b4fef6a",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "510f1e3a-439f-4e6e-b3ed-0e2d24a10424",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cb619d7-2683-45c1-96be-99208edf334e",
        "cursor": {
          "ref": "e2bba68b-80a6-4df3-a4c0-497039b255c0",
          "length": 244,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "6b1986a3-af63-4279-be90-74e0293101e0"
        },
        "item": {
          "id": "2cb619d7-2683-45c1-96be-99208edf334e",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "8902c2ff-e413-4a39-9f62-a30f6ce86021",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75f4ab38-3c21-4383-9f34-c002f9d36a49",
        "cursor": {
          "ref": "c3be15bf-6986-4cd3-8d5c-c16220365767",
          "length": 244,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "161bd834-d62f-4bd6-b0e0-524c3870e107"
        },
        "item": {
          "id": "75f4ab38-3c21-4383-9f34-c002f9d36a49",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "09ee614e-8059-4974-91fe-2bd5c5dc4f16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae24de3d-fa3a-4f6b-b30f-a8baa384f1cc",
        "cursor": {
          "ref": "2ef9c33c-2276-4273-83b4-a26554ee93f4",
          "length": 244,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "e6c9c4b1-9e80-407d-962e-443c35034b20"
        },
        "item": {
          "id": "ae24de3d-fa3a-4f6b-b30f-a8baa384f1cc",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "90238734-7df8-4d8c-b8d0-0e36ec6d9345",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a6758ab-0009-4d50-b17f-4cb81bb69014",
        "cursor": {
          "ref": "c87a790c-8d3e-4b10-ae05-f8c3058d8f5a",
          "length": 244,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "25cee5c0-85bb-48ff-84cb-f877441726e2"
        },
        "item": {
          "id": "6a6758ab-0009-4d50-b17f-4cb81bb69014",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "3f59a368-8d87-4773-bf32-5941eeddf548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44022e03-5c10-4ba8-8084-c78fa15d6f72",
        "cursor": {
          "ref": "4d3a1b2c-fe5a-49e6-b3dd-86451c9e2d0e",
          "length": 244,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "6ba5e2bd-c5e9-4971-9e92-201104d27ec3"
        },
        "item": {
          "id": "44022e03-5c10-4ba8-8084-c78fa15d6f72",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "93930961-6dc5-4c1e-bf9f-292a34562af5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "281a882f-5267-44bb-8873-7bd677cd97bf",
        "cursor": {
          "ref": "52a5153f-310c-49d4-8109-808fb7fb30f3",
          "length": 244,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "039d0930-b24a-4fbd-b9a9-ca62fc695eab"
        },
        "item": {
          "id": "281a882f-5267-44bb-8873-7bd677cd97bf",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "849c10eb-159b-44c5-872b-0c1e8aabd690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86d1bcc1-65f5-4e50-8253-8191b4fa9517",
        "cursor": {
          "ref": "9aa35aae-f42f-4c2e-b2e6-d06c8ffb9140",
          "length": 244,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "5b239a25-f732-47e9-b96e-3dedbf9fde05"
        },
        "item": {
          "id": "86d1bcc1-65f5-4e50-8253-8191b4fa9517",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "711401d9-9c0a-40a2-bd39-3cfc9e06f5d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35a73b1c-903d-4dc1-9021-a97f8f025a77",
        "cursor": {
          "ref": "5922af50-6c6e-43f7-be45-aace659c880d",
          "length": 244,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "156debac-bf48-41e7-9b36-d6f345e6b035"
        },
        "item": {
          "id": "35a73b1c-903d-4dc1-9021-a97f8f025a77",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "59e40d8a-9c24-424c-b3f2-21ee8589e7b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cb4cb54-2a71-4acf-b4d3-bfb76804e7e0",
        "cursor": {
          "ref": "ea0de71f-b97c-4910-bf9c-5251bd55806a",
          "length": 244,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "ad70bf69-b1d5-4be7-a437-1f48bd01411c"
        },
        "item": {
          "id": "9cb4cb54-2a71-4acf-b4d3-bfb76804e7e0",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "56bc5e7a-81d6-4b2b-b213-65800423f3a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b0b08e0-9913-4e39-b146-f42ee06e85b9",
        "cursor": {
          "ref": "a30750a5-0679-4618-943a-5f164f8af1d1",
          "length": 244,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "bd5ac486-7825-47cd-91e5-1be70f8cd695"
        },
        "item": {
          "id": "8b0b08e0-9913-4e39-b146-f42ee06e85b9",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "9dec8b18-f497-4ea6-a0f4-e0a552291438",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be3d3d25-d01f-489b-b481-5f5d99747645",
        "cursor": {
          "ref": "3eb7b7c4-67d3-4041-b7cb-8844c8b8cc5e",
          "length": 244,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "bdd949c6-3bb1-42d7-93a2-9f6ebe8a4d60"
        },
        "item": {
          "id": "be3d3d25-d01f-489b-b481-5f5d99747645",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "bb987c67-2cae-4f13-942c-a83d7bda884c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b1debee-f7e9-41de-902f-d0e653e84b56",
        "cursor": {
          "ref": "67bcdd2c-a5e6-44b1-bf3e-3f1cc626935b",
          "length": 244,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "94dd2548-0cb6-46a9-82c8-b535ea1db982"
        },
        "item": {
          "id": "8b1debee-f7e9-41de-902f-d0e653e84b56",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "b24fc7af-f911-4178-a4ed-1ab4a743877a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0646719d-719b-43c2-82ad-b71b7f860526",
        "cursor": {
          "ref": "98d1bab6-5e49-4bec-baa1-8687a6f1cbfc",
          "length": 244,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "a5116383-69fe-4759-871f-c5d82a2caf30"
        },
        "item": {
          "id": "0646719d-719b-43c2-82ad-b71b7f860526",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "9453f178-c483-42eb-b644-d4a07ad7e2b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36bcdd28-be49-4e01-8315-53e480a11b78",
        "cursor": {
          "ref": "36112d13-4a30-4813-94eb-6fbd5c858879",
          "length": 244,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "bdd9469c-9835-4463-b04d-78263ced9c8e"
        },
        "item": {
          "id": "36bcdd28-be49-4e01-8315-53e480a11b78",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "3f515402-6ca8-4abe-ba0f-783e427c7fa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61d7c870-3953-47a5-b227-b1bf2bdd69e1",
        "cursor": {
          "ref": "500aa237-a01e-41c0-8a25-7f34bf829f65",
          "length": 244,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "ab6693d0-8b37-4e98-8959-1769604e8dca"
        },
        "item": {
          "id": "61d7c870-3953-47a5-b227-b1bf2bdd69e1",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "0094dfc2-9f1b-4f7f-84e1-8c8ca92e76b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "433bca45-9b76-434f-91b8-d504ebbd25d4",
        "cursor": {
          "ref": "4ae3be88-3e8a-4366-9319-ff6da5dc399a",
          "length": 244,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "70831d71-cb88-4ead-ae17-e6ad6559e0a3"
        },
        "item": {
          "id": "433bca45-9b76-434f-91b8-d504ebbd25d4",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "b617d2db-e80a-4bbf-a42b-45a2a0c1a12c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9803df16-2cf3-487b-b347-9e1883c4f17a",
        "cursor": {
          "ref": "a2ad3240-2b6d-4f1a-a86d-767af90d6518",
          "length": 244,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "2a380b04-4aea-425d-b0e0-b7927096f31f"
        },
        "item": {
          "id": "9803df16-2cf3-487b-b347-9e1883c4f17a",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "0bf47487-678b-483d-be97-227b027d64ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "886c113f-37af-4cd4-b2b3-afb05a67ca70",
        "cursor": {
          "ref": "dc34f1da-c9c1-4701-b27f-d7165fd323a4",
          "length": 244,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "9959a19a-3298-4f0c-a977-c56a3fde8b1c"
        },
        "item": {
          "id": "886c113f-37af-4cd4-b2b3-afb05a67ca70",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "48a064bf-6233-4644-baa0-2e5fbfca54d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42c5706f-003e-4bf8-9faa-9bd2b18733ce",
        "cursor": {
          "ref": "64cc496f-17bd-4bb5-b58a-a3244b0f345f",
          "length": 244,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "4212e19b-78de-4f0f-9b7b-c5c335d3df46"
        },
        "item": {
          "id": "42c5706f-003e-4bf8-9faa-9bd2b18733ce",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "2b896ea0-4b37-49b1-92ac-fc6b68d414dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d93f7f7f-ce4d-47d1-86a8-df6ec9eb8e2b",
        "cursor": {
          "ref": "36e22ed0-ec98-4f58-9ecd-b5a7883fe40e",
          "length": 244,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "08d35244-255a-419f-8dc6-740c70085476"
        },
        "item": {
          "id": "d93f7f7f-ce4d-47d1-86a8-df6ec9eb8e2b",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "2f257d0a-3876-4ce4-9237-3c957137b742",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a568d11b-6bbd-40e3-a2b6-cfb24f4c3646",
        "cursor": {
          "ref": "74ccc0e4-f0aa-44b2-b6fe-4b7b91a9e276",
          "length": 244,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "c00ddfa4-fdcb-46a1-be8a-cfccefb85935"
        },
        "item": {
          "id": "a568d11b-6bbd-40e3-a2b6-cfb24f4c3646",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "be2d35a6-d847-4f86-9d7a-32424a46ba67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dc342a8-cc06-4f27-8809-197ca151370a",
        "cursor": {
          "ref": "74820609-ea8e-4d3a-9a15-af39184fca22",
          "length": 244,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "e6e2528f-5f5b-4588-ad90-b588dc70166f"
        },
        "item": {
          "id": "8dc342a8-cc06-4f27-8809-197ca151370a",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "940c3ed8-d7e7-4844-821d-18c972a8391e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff676601-d559-4365-821f-907191ee3984",
        "cursor": {
          "ref": "fc8e6ace-b43e-4ebe-afa3-30e6e21c62ac",
          "length": 244,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "9cc2f4ae-cf95-442f-9c19-c61f2b2a5772"
        },
        "item": {
          "id": "ff676601-d559-4365-821f-907191ee3984",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "38117ca8-b101-4fee-9082-153f5ceca4ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6d6c1f6-b017-490c-8958-4a6321348957",
        "cursor": {
          "ref": "937f49bf-8113-46ee-8a9c-cc2b8437d62a",
          "length": 244,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "998db73c-1cdf-4cb9-a75c-e0331816b78b"
        },
        "item": {
          "id": "e6d6c1f6-b017-490c-8958-4a6321348957",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "79cb5b8f-af04-4240-a481-c39c1281c35b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac0ba10a-5e86-4a05-b5df-bb099fae0c0b",
        "cursor": {
          "ref": "60ca2e5c-a590-4b1d-b298-760664fd70d0",
          "length": 244,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "60dbd4ae-ea29-40fb-903b-ada04a4967ce"
        },
        "item": {
          "id": "ac0ba10a-5e86-4a05-b5df-bb099fae0c0b",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "fa2c876b-fb63-429b-8098-b824955e2e02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cd97388-d26c-4c2b-b08a-d800d7215106",
        "cursor": {
          "ref": "05cfe356-1cfe-44af-b701-e2ffca6fd274",
          "length": 244,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "e624a959-603d-451d-8a5c-d04ddc581933"
        },
        "item": {
          "id": "2cd97388-d26c-4c2b-b08a-d800d7215106",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "ce646a8e-6a00-4abe-bb33-9776c1699618",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02120d1d-4621-40ee-a995-daa70075016e",
        "cursor": {
          "ref": "3924f35b-83b0-4c29-8fda-3f8f069d693f",
          "length": 244,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "c8f6447a-d259-4bfb-928d-51284a64c86c"
        },
        "item": {
          "id": "02120d1d-4621-40ee-a995-daa70075016e",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "56952ae5-20c5-4f72-8f9f-689e2933e270",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "650e890e-de51-41b0-b1c5-376dc9143d45",
        "cursor": {
          "ref": "a529461c-f819-4af2-ab4f-1eeaecefb9ea",
          "length": 244,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "6420d804-ef6b-4d2e-8b8c-892ce21ddc3d"
        },
        "item": {
          "id": "650e890e-de51-41b0-b1c5-376dc9143d45",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "d406971e-3c60-4c6b-bb00-5135ca78a87b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1cfb2bb-4b38-48bb-ac64-b1078484e93d",
        "cursor": {
          "ref": "d0f5608f-de36-4c49-89fc-bd6724470afa",
          "length": 244,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "cc910f44-b1ec-45fe-83da-d52f180c29f5"
        },
        "item": {
          "id": "c1cfb2bb-4b38-48bb-ac64-b1078484e93d",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "a492a1d5-1523-436c-9f33-8c2aa871df5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa778346-b041-44e8-a572-6f9bad2a649f",
        "cursor": {
          "ref": "af1d3cf7-3b11-48f6-86f5-7e846bc3de2d",
          "length": 244,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "50f61e83-680a-42ea-bc11-dc6b5efc1123"
        },
        "item": {
          "id": "aa778346-b041-44e8-a572-6f9bad2a649f",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "7dcb2744-6ca3-4c6b-a182-a01e6b02870a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8d46459-e0c0-4890-9744-3344414c5a52",
        "cursor": {
          "ref": "42a2160e-cddf-4dcf-8678-558f0d1597c7",
          "length": 244,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "e15f6651-d1bc-4f17-91b2-2ef3cfe3f770"
        },
        "item": {
          "id": "e8d46459-e0c0-4890-9744-3344414c5a52",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "30cc581c-1a4a-430d-be4c-45a3a48ee0be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aace3b3a-1996-4f22-9628-2515850e5eac",
        "cursor": {
          "ref": "e477719a-e8a3-40c5-a33f-d1f66f80b787",
          "length": 244,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "fbf9e312-d767-466b-85c1-8c26af7bcb86"
        },
        "item": {
          "id": "aace3b3a-1996-4f22-9628-2515850e5eac",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "0044cea7-a24c-4c9a-9b5b-3975f1058e36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c971b95b-c7c8-45f0-bf25-249346a9f3b5",
        "cursor": {
          "ref": "afdbd0cc-cb39-4e55-8ade-3c91c6643a3f",
          "length": 244,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "d82e692d-c95c-402a-b25e-f1665708d187"
        },
        "item": {
          "id": "c971b95b-c7c8-45f0-bf25-249346a9f3b5",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "9307c563-0a08-4ec4-8b7e-9156f330bd62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "374ab20a-4d90-44d0-8d29-596a4126cdac",
        "cursor": {
          "ref": "969f8a02-8ddf-4b1e-b65d-8a041d242f06",
          "length": 244,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "285d9320-fc8b-4fe1-a7dd-09328631ef83"
        },
        "item": {
          "id": "374ab20a-4d90-44d0-8d29-596a4126cdac",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "1f56930f-84c7-445a-bcde-9ba080e55e3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74a32eed-58e3-4c00-908f-8f1495cea5d2",
        "cursor": {
          "ref": "ec95ce26-8e84-4822-9bd9-c1d69d8a40e9",
          "length": 244,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "0bc5521c-5701-4931-8e46-db3b215e93ae"
        },
        "item": {
          "id": "74a32eed-58e3-4c00-908f-8f1495cea5d2",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "05de3d78-0599-4375-854e-16436761ce74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4788e8e2-ad45-4303-adab-d84449d9c1e6",
        "cursor": {
          "ref": "5a487f9a-f239-4907-a26a-12b0f7c5c937",
          "length": 244,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "35b7fd86-1a88-483f-bba6-99a432e46706"
        },
        "item": {
          "id": "4788e8e2-ad45-4303-adab-d84449d9c1e6",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "ddfc6502-a3b6-4fd6-bda4-3c7dd4c9f385",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8660a847-401e-4c11-9aec-ac29b46487ef",
        "cursor": {
          "ref": "6684d037-7926-4e49-b0a1-e2b8d34a7955",
          "length": 244,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "e25fddbf-6fdd-43c6-9fd9-2d2da75e1220"
        },
        "item": {
          "id": "8660a847-401e-4c11-9aec-ac29b46487ef",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "09c4b3ad-4fff-4bee-b825-eeb922baae85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e88db469-36bc-48b6-aaed-8df6db7a2c84",
        "cursor": {
          "ref": "ba85ed0b-2ac6-406f-a4c7-2af6146aab91",
          "length": 244,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "c28a3f44-ace2-47c8-a260-3e4581f92fd9"
        },
        "item": {
          "id": "e88db469-36bc-48b6-aaed-8df6db7a2c84",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "1def1f1d-a8e6-456d-9377-c7fcecba6ddf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a3d5907-5e29-47e9-9e7e-0e7e1b87c102",
        "cursor": {
          "ref": "7ac1469b-0ea3-404a-af49-15431be36a1a",
          "length": 244,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "fb0ee88a-a534-48e4-9124-fbb45adb18d9"
        },
        "item": {
          "id": "8a3d5907-5e29-47e9-9e7e-0e7e1b87c102",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "ed4f4cdc-b058-4ad2-8cda-d13d07445495",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e094481-9be9-49fa-a823-ef2fdb04019f",
        "cursor": {
          "ref": "549dccf0-c4fc-4dd6-b8dd-8ee905f3c3a1",
          "length": 244,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "9db6c53b-2e9c-4726-a9b9-b0487772b89a"
        },
        "item": {
          "id": "0e094481-9be9-49fa-a823-ef2fdb04019f",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "4f8a25d8-c3ba-4aec-b0c9-9515d4f7c513",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63d91e51-93e0-477f-9327-d901f68dde22",
        "cursor": {
          "ref": "f02007d3-c2c9-47a7-9a97-6ce53510174d",
          "length": 244,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "0d14c6f9-5883-41f2-8101-1ce02fbd4c38"
        },
        "item": {
          "id": "63d91e51-93e0-477f-9327-d901f68dde22",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "1c19bb38-1072-4893-b6b7-105434752871",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3de25572-6abd-48e3-8802-b6673e4edcdc",
        "cursor": {
          "ref": "2c50f3bc-068f-450f-9b41-583db072cb53",
          "length": 244,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "0ffcce5b-cd88-490b-b999-fe5b3813d9a1"
        },
        "item": {
          "id": "3de25572-6abd-48e3-8802-b6673e4edcdc",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "39cfbbdf-49fe-447a-95d0-f4fb6e8c7023",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25ced32d-8c31-431a-b305-ad33137db61b",
        "cursor": {
          "ref": "4b56edd4-0805-480d-bca9-edc53512fc6c",
          "length": 244,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "9c2d08cf-475c-4018-b7b1-27441ec52b71"
        },
        "item": {
          "id": "25ced32d-8c31-431a-b305-ad33137db61b",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "d068e61c-7536-44aa-9433-58af79b07a8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e299658e-2ddb-4668-857a-28c3649e66c2",
        "cursor": {
          "ref": "00207673-893f-44c9-9136-a8864d91d052",
          "length": 244,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "48d0648d-906b-49e6-81ac-9824ab03b57c"
        },
        "item": {
          "id": "e299658e-2ddb-4668-857a-28c3649e66c2",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "72f284b0-fd88-4743-b35e-fd3e691ea41c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 191,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17c127c2-ebfc-4f64-9711-6892975d7cc4",
        "cursor": {
          "ref": "8fbcdfa3-bf1d-4c33-85d5-7ffb977b7cac",
          "length": 244,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "83d592f3-6140-4ed7-b3c9-c95cf99a6aee"
        },
        "item": {
          "id": "17c127c2-ebfc-4f64-9711-6892975d7cc4",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "7af8a2a8-45e9-4b8a-a804-f5e132f8f6d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6137b64e-05b8-4444-9b05-10163a6af7fe",
        "cursor": {
          "ref": "957c7e6c-7aa6-4fdf-af42-813c0b89a87c",
          "length": 244,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "bf83e9a9-ce85-4595-b61e-603f67403107"
        },
        "item": {
          "id": "6137b64e-05b8-4444-9b05-10163a6af7fe",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "c3479d96-9cd4-4c4b-964c-288a353bfc98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42a1713a-7eea-4864-88d9-e61abb3c0bf9",
        "cursor": {
          "ref": "b2b698c9-8c72-44f2-b986-6a289d5f9aba",
          "length": 244,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "6bc66bef-2d6a-490c-9ac8-b0162f4e4d13"
        },
        "item": {
          "id": "42a1713a-7eea-4864-88d9-e61abb3c0bf9",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "3b1e1088-a17c-4705-8d95-07e4372de8bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f02b84ef-84a2-493f-8273-bb1be91b5571",
        "cursor": {
          "ref": "84c78476-e667-48bd-b464-ce4313551913",
          "length": 244,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "2fc2a6b6-cf22-402a-b79f-ac5ba860b068"
        },
        "item": {
          "id": "f02b84ef-84a2-493f-8273-bb1be91b5571",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "e9cbe6c8-2126-4602-85c5-7660fca449e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fb5b001-cb8b-451b-90b8-726e354bbf1c",
        "cursor": {
          "ref": "838f48b9-87e3-4c69-ab68-4ee05484f086",
          "length": 244,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "5b063cc3-688b-4a89-a6d6-35e1875eadc5"
        },
        "item": {
          "id": "2fb5b001-cb8b-451b-90b8-726e354bbf1c",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "f66f643b-4299-4977-ad13-cf7d836e17dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9002f623-6b4f-4c45-8593-1d7a14cd514b",
        "cursor": {
          "ref": "cac8279d-6933-43af-8a2c-d9881145c8ea",
          "length": 244,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "8fb4aaa5-cceb-4e2c-8042-65641ee50733"
        },
        "item": {
          "id": "9002f623-6b4f-4c45-8593-1d7a14cd514b",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "f5610c5a-a0e3-45ec-8607-d46be9f928af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8adb938c-838a-4c9e-8652-a5b306b0fce1",
        "cursor": {
          "ref": "8514049f-3995-426c-af83-6dfe15a7f81d",
          "length": 244,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "b0105bdf-5e74-4b1e-87be-b95eecb98a15"
        },
        "item": {
          "id": "8adb938c-838a-4c9e-8652-a5b306b0fce1",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "3d36db5d-ab2a-4377-adc6-ec49a8ccb1a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "736832a6-6ab7-4abd-8850-f30204c7b80e",
        "cursor": {
          "ref": "3b734fa3-11a8-4c17-a799-a7e63578f6a7",
          "length": 244,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "798ed2e9-2db5-41b5-8fae-9fb0b8b53c3f"
        },
        "item": {
          "id": "736832a6-6ab7-4abd-8850-f30204c7b80e",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "bc304396-60c9-47ff-8ef8-c02fc1d282a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a85c7190-cd2b-4f8f-bea5-078f0d2662b6",
        "cursor": {
          "ref": "bb9da109-3bcd-483d-9bc4-29d36ce0d2f6",
          "length": 244,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "184b86de-9655-4a5e-88df-6c4888e6ba77"
        },
        "item": {
          "id": "a85c7190-cd2b-4f8f-bea5-078f0d2662b6",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "3bd0d407-c527-442f-8919-91873c6fda0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ca3c368-40f7-4ce7-9564-ceb21a961eae",
        "cursor": {
          "ref": "98b98147-8197-47ae-9834-eae3b85dc998",
          "length": 244,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "4605d7f0-b1e5-4e54-8543-9688bc8216ec"
        },
        "item": {
          "id": "4ca3c368-40f7-4ce7-9564-ceb21a961eae",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "f39429e3-cb1f-48cf-94db-baeec8afa6a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b3e3815-5dcb-4bf1-8405-b4712dd000f6",
        "cursor": {
          "ref": "30b5c3ac-6fce-4160-9632-4092bafe365f",
          "length": 244,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "8da372e2-6620-4d59-820a-7b162658f911"
        },
        "item": {
          "id": "2b3e3815-5dcb-4bf1-8405-b4712dd000f6",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "7d246855-9543-473a-9130-fd3b5a3243c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "010eb1c4-11cb-41ae-a64e-c8849f545a25",
        "cursor": {
          "ref": "e8825994-f54b-4824-bab3-5c96143bb672",
          "length": 244,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "d4252a4b-8693-4ad5-8fdf-ec3313bb4d04"
        },
        "item": {
          "id": "010eb1c4-11cb-41ae-a64e-c8849f545a25",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "63a07c09-137d-448c-a177-3af41481a692",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebc6b8be-75e7-411d-95ea-06301028adec",
        "cursor": {
          "ref": "655c9e13-e026-4455-9d81-6d654db5e6c4",
          "length": 244,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "c3158dcd-dbfa-4ac6-baf1-ae40ae3fe211"
        },
        "item": {
          "id": "ebc6b8be-75e7-411d-95ea-06301028adec",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "f0f2bd12-9adb-47fc-86f4-6dbfdc9adab8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "216f5e87-c99b-460c-91b7-997e558ca338",
        "cursor": {
          "ref": "306bead0-69a0-4774-9236-73d5c5378f9a",
          "length": 244,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "f0485f1f-8b69-4aaa-bad2-123d255bcd9e"
        },
        "item": {
          "id": "216f5e87-c99b-460c-91b7-997e558ca338",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "abaf8e51-b1ff-4f63-a7a9-201c84e730ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45deb13d-c794-4763-af1c-c075215a59b1",
        "cursor": {
          "ref": "9d102442-98d5-406e-8541-dd0e76d79323",
          "length": 244,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "bf4de66e-04cd-45ec-920a-81302a9e42a2"
        },
        "item": {
          "id": "45deb13d-c794-4763-af1c-c075215a59b1",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "4f32f980-6553-4bf9-8cd5-effbe594ac90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ed54a7b-d277-4729-8d75-e2433187a209",
        "cursor": {
          "ref": "9b64d4a2-f1b3-4c9b-9043-6eb2b0c047c5",
          "length": 244,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "c62cd984-82e7-4348-939b-8af2a1d360eb"
        },
        "item": {
          "id": "4ed54a7b-d277-4729-8d75-e2433187a209",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "6ac58224-355e-434e-8594-cc44b047a75b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e75530a-a456-4b4c-80bc-ebef6fc26297",
        "cursor": {
          "ref": "0e3be9cc-8279-481c-a8f3-e4dcb1796325",
          "length": 244,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "0d5b1f42-1123-4c60-ae7a-56d7671eb70b"
        },
        "item": {
          "id": "8e75530a-a456-4b4c-80bc-ebef6fc26297",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "1199225a-4d92-4322-9e1c-7724e809234b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "177bf2e6-b8e9-45b0-9da3-2e258d24e761",
        "cursor": {
          "ref": "a3bc8a6c-8400-4b25-b48b-3908ae7766ec",
          "length": 244,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "85a73215-9b83-4f21-a81f-226fc2f53b3d"
        },
        "item": {
          "id": "177bf2e6-b8e9-45b0-9da3-2e258d24e761",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "453cc62f-a941-4d34-a64b-b1aee8e5c774",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0f837ba-b896-4fee-acd3-52c75fd1fbf4",
        "cursor": {
          "ref": "f6f67c8f-7db5-4117-86f0-40aa31de13e3",
          "length": 244,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "0d9fdee1-01bb-4605-93ed-870e56350389"
        },
        "item": {
          "id": "b0f837ba-b896-4fee-acd3-52c75fd1fbf4",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "5d691011-594a-4a5a-84b8-8a8dd02e9d9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "380715b1-948d-49f4-935c-61c03600628e",
        "cursor": {
          "ref": "c13e6f65-e619-4689-8bd1-ec944a06cd0d",
          "length": 244,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "7c5ba686-3338-4e15-aa48-6e9a33c96b8a"
        },
        "item": {
          "id": "380715b1-948d-49f4-935c-61c03600628e",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "f477e1a0-2dc4-46af-86c9-60d534851483",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21ea2fdb-7a33-480a-91f7-c599f6634778",
        "cursor": {
          "ref": "b1e0a512-f7e6-40e4-b13c-a00d02c581b0",
          "length": 244,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "fbbb60c1-17c6-4ad9-b029-70bceed63a44"
        },
        "item": {
          "id": "21ea2fdb-7a33-480a-91f7-c599f6634778",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "54c93acf-7ca8-4732-9c2d-98751263b53c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c863ac7e-30f0-4b1a-a038-d2fb978908a2",
        "cursor": {
          "ref": "2bde9304-c132-4689-801a-1a54002f558f",
          "length": 244,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "4fdcc002-4a72-4c9c-8d2b-ff65c3a503f4"
        },
        "item": {
          "id": "c863ac7e-30f0-4b1a-a038-d2fb978908a2",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "388e501c-1450-4278-be61-8f8127146406",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b62ce49-0c9f-420e-95c0-f9035712def5",
        "cursor": {
          "ref": "69848afc-e567-4219-be41-6f5868bc6174",
          "length": 244,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "9fc4cbf3-5c81-4a6e-86b6-a5d44f117a0c"
        },
        "item": {
          "id": "4b62ce49-0c9f-420e-95c0-f9035712def5",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "c6fb598f-8bad-4dd3-ab30-b3580e3a86e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a881e6d-b98b-48d6-a8fb-c84951e32464",
        "cursor": {
          "ref": "7291d55d-9644-4965-94f3-69206c631196",
          "length": 244,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "d5c4ac07-31bc-4e80-9c89-a81cff424efd"
        },
        "item": {
          "id": "1a881e6d-b98b-48d6-a8fb-c84951e32464",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "efc303bb-87ab-4c3d-bfdd-53fe15ce07c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "756f0106-4251-48f9-a3a3-4fb0af9605c8",
        "cursor": {
          "ref": "cfd65bfe-eeca-4bf7-97b5-511fb7dde544",
          "length": 244,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "fef52ae8-620a-4471-aa12-34b4a5477d29"
        },
        "item": {
          "id": "756f0106-4251-48f9-a3a3-4fb0af9605c8",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "4f1a0059-063b-4be2-863f-3dfb4525c083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "349ac57c-bdd8-47a7-b60e-82ce6a667ae3",
        "cursor": {
          "ref": "e84d691f-e37f-425e-8739-693c6ed20b19",
          "length": 244,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "50a127fa-9cde-4355-944b-8a74188cac1b"
        },
        "item": {
          "id": "349ac57c-bdd8-47a7-b60e-82ce6a667ae3",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "62690384-4590-430a-bdca-f0210f92a3c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65104139-ddcc-4e31-8cc5-33f35bc33b2d",
        "cursor": {
          "ref": "b582d982-e5f9-444d-9fd3-b6314f5804ac",
          "length": 244,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "ea427a16-7234-4f33-a030-294077d9be02"
        },
        "item": {
          "id": "65104139-ddcc-4e31-8cc5-33f35bc33b2d",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "5be680cf-93a8-45f4-ab76-b13d29d22980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca17aced-280b-4040-8fb8-7eb367b977ab",
        "cursor": {
          "ref": "79acbb88-a675-43ea-9dd0-2dd710abdf0f",
          "length": 244,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "51561176-c914-4e45-a25b-dea3248081e1"
        },
        "item": {
          "id": "ca17aced-280b-4040-8fb8-7eb367b977ab",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "252d118c-8d7b-44c6-bbc4-f137e3f024e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "058fa9e7-dfb0-4442-b609-e1a05a32f78c",
        "cursor": {
          "ref": "5034d6f5-18cc-4f1b-92be-250571eed5fd",
          "length": 244,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "7fd42481-e38a-4d05-93ce-e0d5f60eb8c6"
        },
        "item": {
          "id": "058fa9e7-dfb0-4442-b609-e1a05a32f78c",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "93945736-2a18-455d-9de1-0b1505182aab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d9e3639-0b9b-4e46-92ba-499316b4d7da",
        "cursor": {
          "ref": "6737b25e-07be-4c2f-81ca-202aef9efffc",
          "length": 244,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "d80b8586-e12a-4904-95e0-6bf62bc7489f"
        },
        "item": {
          "id": "1d9e3639-0b9b-4e46-92ba-499316b4d7da",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "1b22e81b-a596-4d43-9a5a-30c813eda0d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "864f61e9-b4e3-4989-86cf-6919f165ec81",
        "cursor": {
          "ref": "7b00cd58-70f4-419d-9cd4-d4ac3a1dd0e6",
          "length": 244,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "eae98150-baf7-4453-b2a5-ac297797dcfb"
        },
        "item": {
          "id": "864f61e9-b4e3-4989-86cf-6919f165ec81",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "7e7cb179-2bd3-491a-8f3b-12826a8f626e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a0d5bb7-e39d-48a4-af4a-c098afdf0c8d",
        "cursor": {
          "ref": "165d13ab-7919-4ecd-b771-75195d639668",
          "length": 244,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "9e8cf6da-abfe-4d06-b632-ceb5e4014083"
        },
        "item": {
          "id": "2a0d5bb7-e39d-48a4-af4a-c098afdf0c8d",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "b885e264-5c8c-4cac-9d20-eaa3f4b0a2b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd19c05c-9f3e-402f-8e4e-6de0128cca45",
        "cursor": {
          "ref": "b174e371-a4e9-4bdc-a7fe-9bd321de1e0e",
          "length": 244,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "acd74e70-e1bc-4d1a-8ee8-88690c639fe6"
        },
        "item": {
          "id": "cd19c05c-9f3e-402f-8e4e-6de0128cca45",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "469a9ce6-cfe5-4c5a-8f12-57d404f31279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9ca40c2-4968-40dd-acc2-f522e54e734d",
        "cursor": {
          "ref": "dfc41fb5-c9ed-4b4f-9ea9-a73cdc6e7e47",
          "length": 244,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "510bf656-9ec8-4f46-af08-44df66dca9d0"
        },
        "item": {
          "id": "f9ca40c2-4968-40dd-acc2-f522e54e734d",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "f91113a6-c0e6-4791-8625-5fa8b69250c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f34bcef9-dfb5-4042-b98a-52672ca78a1a",
        "cursor": {
          "ref": "9e36a0eb-c948-4964-bc28-96d670b91627",
          "length": 244,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "eb351da6-15f1-4e33-8e87-2ad992b6cfad"
        },
        "item": {
          "id": "f34bcef9-dfb5-4042-b98a-52672ca78a1a",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "70ce184d-edb6-4576-a040-ab8db36edd32",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4298d555-6f29-42e2-a37b-b701d1fde4d9",
        "cursor": {
          "ref": "a743804c-b6d6-4825-806f-1e4fd3c094cf",
          "length": 244,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "b17e7b2e-5627-40fc-8e88-bfe0da5ea2c9"
        },
        "item": {
          "id": "4298d555-6f29-42e2-a37b-b701d1fde4d9",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "c9c06dcf-a345-4dbf-9b7e-6c3a614ca76d",
          "status": "OK",
          "code": 200,
          "responseTime": 65,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "54b19817-89b2-4afc-8884-51b65b957035",
        "cursor": {
          "ref": "45113bf0-42a1-4516-9aff-025ad3a3888a",
          "length": 244,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "0e70bbf1-960e-46f5-8fd7-b58442e70524"
        },
        "item": {
          "id": "54b19817-89b2-4afc-8884-51b65b957035",
          "name": "credentials_verify"
        },
        "response": {
          "id": "b99b4d63-fb3d-4605-9f47-723f553cffb8",
          "status": "OK",
          "code": 200,
          "responseTime": 79,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f68f08b7-bd52-46c6-b522-96ad419fbb57",
        "cursor": {
          "ref": "43b78d52-bdf3-4a42-a816-8c86e95fdfb8",
          "length": 244,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "1c192b18-3f4e-4fd6-9735-1058a8368b93"
        },
        "item": {
          "id": "f68f08b7-bd52-46c6-b522-96ad419fbb57",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "3ff5ac95-cb73-4130-a41d-24d9a56118ba",
          "status": "OK",
          "code": 200,
          "responseTime": 83,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e5671de-d32a-45a2-9ee1-5b0b2f1c7f7e",
        "cursor": {
          "ref": "54897ba3-b2ac-4c29-9da4-eccc7351f45c",
          "length": 244,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "e3cba5f4-60c8-4910-8cac-8eb80a345519"
        },
        "item": {
          "id": "5e5671de-d32a-45a2-9ee1-5b0b2f1c7f7e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b1c54cec-0482-4b41-9364-646b3c9b0d0d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e5671de-d32a-45a2-9ee1-5b0b2f1c7f7e",
        "cursor": {
          "ref": "54897ba3-b2ac-4c29-9da4-eccc7351f45c",
          "length": 244,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "e3cba5f4-60c8-4910-8cac-8eb80a345519"
        },
        "item": {
          "id": "5e5671de-d32a-45a2-9ee1-5b0b2f1c7f7e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b1c54cec-0482-4b41-9364-646b3c9b0d0d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5342e4a8-5890-4548-9d8e-86796d9ef207",
        "cursor": {
          "ref": "46cefc86-d2c7-48ed-bec0-5582223a9e49",
          "length": 244,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "12ed2e5f-5b08-4968-955c-87a3cf5ec194"
        },
        "item": {
          "id": "5342e4a8-5890-4548-9d8e-86796d9ef207",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "56f4262a-c169-421e-a1ab-f809593b8ddd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "732c7305-a07c-4b61-b3a1-102b2b478d29",
        "cursor": {
          "ref": "c14a746e-c060-4343-b039-9973f8e5b1d3",
          "length": 244,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "b5891b16-2d1b-4b0b-b491-d4597e867379"
        },
        "item": {
          "id": "732c7305-a07c-4b61-b3a1-102b2b478d29",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "ede26286-0c5e-420d-a9d5-7a9b7c5eec72",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}