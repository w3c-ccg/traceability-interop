{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "ea8c40a9-1380-4e57-b87e-4dcc2023f0c8",
        "name": "Clear Cache",
        "item": [
          {
            "id": "b51e76b4-96be-4df6-9c15-cb806451ded9",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8f95b332-0d1f-4ffe-8ab6-2fef453ef3f1",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "1790da21-963e-4df7-9b83-fc586680e8a7"
                }
              }
            ]
          },
          {
            "id": "de488e44-c918-4ca1-a0e9-ec4c1d56957d",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8ae15ec9-ba25-4bae-9806-44356bd30b9d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7fef460a-75b3-433a-a0f8-e8983ae9ea31"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "6c45aa8a-808d-40a3-97d8-e06ec71247fe",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "5393c607-e061-441f-abc4-cbed840ec9e8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e06e9ca2-ead9-4a33-8626-5ea66db02179",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3a5b4bd4-eac8-4da3-a826-c23854592109",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "00030516-4aee-4397-8438-46fddd72a6dc"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8c07ed58-3a9a-4393-9b8f-2c359b6157e2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c75b7fcb-6020-4930-ad8d-a47ef93b4032"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2f9023eb-0326-4851-8616-78a3f6047277",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "78788529-a982-4aa6-8958-82488bc5ac26"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f18d5d90-160f-40cf-91d8-cd8de184e4ef",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "48d21c4c-0df6-4253-b951-e1f7f8aaf861"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c0f3205a-e125-4139-bbd5-e03e0cabfcfb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "94a9a2d7-d9dd-427d-ad0a-a7c61d2ce005"
            }
          }
        ]
      },
      {
        "id": "484a72e2-d8ef-4bc6-b3df-e6633cf76e81",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "189d3c35-1fcc-4c7b-bfc0-cd981748181b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e2d10d19-4a78-4321-a288-7d35698ff501",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3e65c454-a1ef-4272-8951-0db0b9258b03",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63678bc8-db94-4f26-996d-4a6d90668df9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "06330baf-04ca-4477-80f4-81c853eb6cde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d242d9c-6680-408e-b4e3-9cf596903d56",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbeec025-38e8-49db-a57e-5ed2554f95bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bf086600-fd4b-4104-a6ca-d29035681a6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62d9cfce-ed88-425f-9efc-1f962b76cbb1",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cf6c5c9-da45-481a-869b-1236a00abd77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7ba18c89-35ed-4bea-8404-7aa044af270f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "56a979e1-d0e8-481c-b837-454b5cebb474",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "45d4e603-2cfa-4a02-9aa5-97844e36f1e2",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f14ee58-031b-4933-90ea-1588e02784d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4393e9ae-6919-4f1c-a39f-79308703e64b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84285346-da37-40f4-9f5e-d8812ef6cf80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcefeb24-6538-495d-afc2-ce9261310c1e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "528617e2-249e-4ff2-acd2-f590957c3ba5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "33ec7bea-3fd5-4088-877c-ba9abdba886e",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "40af61f5-deec-464e-a4c7-f281dc91a90b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "9a5ab501-a997-4758-8e17-f2275f90120a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "da830292-c6cd-4ddd-9052-6c198d5ebdfd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "7df24570-1de9-49ee-b85b-ab60e9443fcf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "eb980b8e-25d2-4ad7-bfe0-0ac405b7e64d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4df821c8-8698-42df-8a88-40cac9f9e94f"
            }
          }
        ]
      },
      {
        "id": "e11ab4da-68c5-461c-8131-b521fd4f5729",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "235178a7-6b48-4ca7-a942-3e072bc314ca",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b0fb4948-d7b1-4e4d-94fb-70341170628c",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "0f5387bb-069d-4ac0-9d67-46f5e98226a2",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07b52601-93d3-434d-9f4d-805df4604526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "140f946d-e221-4ec9-a7e8-675f27765776"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bd98ca7-cf0b-4b00-8357-3c132d0c943e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "23fc57c4-1816-4920-822f-a75ea87a34f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55ffc04b-32f5-45c9-a5b8-68ac5ffa9e7d",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "426e7aee-71b3-4973-96c3-1f037d728090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "977ad524-884c-4433-8f78-5299a11e46e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42e5af45-33b1-4c71-a02b-eefd1abe02ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ceefaa39-5e2d-41d2-b3ba-3f2347bbfe6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bab8157c-c298-46fb-9757-38acbdcc5036",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd61dc7a-22a0-4ec2-a58b-c8bda9bc2a9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "706676a3-6a9e-4645-b3f2-a312773c82b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7f41627-3bff-43f7-98b2-cb75de3e3a02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "14ba2c52-0195-4b97-b508-73f3216f130e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d581f71a-85f2-4623-b881-ec7b9a4ea9ba",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33b270dd-95fa-43b3-9654-9b16b48473a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94bb27db-de18-4e6d-95ca-e342b970ee8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6404494b-c841-4614-b419-9a7931f95ad3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "910e9009-3e57-4a35-8885-fb503cdd1246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "766396a9-6efc-4723-a4d6-57000c592a08",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bf80414-1cc7-4a1f-b1c0-bf39d1605992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a01277e-e76f-4e5d-8396-3e824e1be0f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "038f0a56-2cfb-4bbf-ae0b-c9d9e129426f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dc6ca805-00bf-47ce-8867-12b467fac40e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f790b49d-c633-4a77-ab94-28a38c10420c",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da4cffcf-0882-4c06-85f2-0994aed2190d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "645a54c4-f660-4da8-b21e-a3eb19dc3e31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d60ffa6-54e3-48a6-90c6-3d3a9def589d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a48c7000-a5e4-4505-b306-747871c30eb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc99bcf7-0692-449b-b936-fc4edc076403",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58459b1a-fbe4-42e2-ad3e-dff3b5195873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cd1499c-1e4b-42fd-a49b-b7eaffc970ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ac4906c-2dc0-49f2-a562-389f8a31bbf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f5e32f2-6140-497c-9ddf-1a97484165d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31fc179d-3d4d-4285-99e4-1f55de3caabe",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fdf12da-e3b4-434b-910a-e39dd425cf67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "199f60da-f0e7-4de6-8fb9-dd3ca1905f7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b88357d4-c596-4f7d-b0b3-36724e97b72f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "78190862-2e44-45ba-ab71-c69034f2f496"
                        }
                      }
                    ]
                  },
                  {
                    "id": "106c5e44-69ae-4878-896b-0816ca8249dc",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4749df81-be8a-4407-a43e-1f6eb7f18996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d4a1a96-90fc-4ed8-aa0d-ca9a431da9c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0976d47f-0636-4308-a496-abfdfad319f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e77767ce-6651-4d09-8a1f-63fb381fffa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "026097f9-2f05-47fe-ab12-29cec7e3ef1a",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2301f2e5-65e5-42e9-915b-60b7a75aa6ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d6bf22c-9a0f-48e4-bda5-ad1f8bc422a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4db1818c-5b20-443b-8139-1ffce505c962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "938be921-a8e7-4b4c-8ef9-400f95ea78c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c974137-6f2b-4739-bee8-a8b7da1a0530",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dc8981d-e203-443a-b895-a5bf4c314db2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2a25519-34be-4f7c-a447-9374e8ed8b3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69bc3f86-3c21-4533-8517-0416f92aacb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "22dc5fa1-79d5-47f1-98f2-bc3ea061db87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78d15f29-145b-42fe-b5b7-5ef837c3b984",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbd53939-b018-4050-b41b-b986e7cfd808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65981422-222f-49d6-9211-94fe733b5b4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d32d67b-baf9-4c2a-9b3f-4aca018015a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5f186f0c-da6a-410e-b97d-103cf2472882"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b5f9c1b-14a0-4bf4-95c1-63a8b040ca9e",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bec8e49a-ae70-4a84-aa28-aff02498c679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "955bc1a2-0fcf-4428-a665-cc025e531b6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8faf0db-d500-4e7c-8c93-36623cb47b33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2a6aaa72-f246-4d8e-8f14-45d232b0da06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3844010-f7ef-4038-be7f-bb3a63fc048c",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49ada18d-7f8f-4bd4-af18-ec75204b8539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2743e8d0-cb06-4936-a05a-bfefef09ac02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df795cf1-bdb7-47c6-a1aa-e2dcce1d0e43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5a6c0531-035a-4475-8b1d-5d4b53cb9c59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f7a9ca7-939e-42cd-affd-726bc5b694ab",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8977e556-b153-472c-b4d9-1891aa5e92f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22280f1f-f138-416b-807c-c939c20bddd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db541b20-998d-4743-8218-9cc3cdfb2a0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "55a1a328-f3db-4b35-a546-25dfba9638a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bee466f0-6d2a-4477-a3e2-90a5e2c2877f",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "694ac422-39b2-4552-b0f8-94188bc95f04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0ab67fe-8ab1-4c58-ab69-d270580e9061"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8725b7c3-c1fb-4ac5-a002-b8b70619aa94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "616ff577-bd5b-46de-9589-d329845177a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7b9356e-9a46-4260-beb9-295ab23d8187",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4610a12-545a-4fe0-a15a-0df01e095bd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "618374d5-b09c-493c-b8f4-c11c2b8ca6bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5008a4a7-2fa0-484c-aa09-54e3741b9e2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bff2c1ef-7c33-4ac7-907e-8233a99c64da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91dd0e5c-7658-47f8-b48f-1bd1ef37b7da",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "030478b7-212a-4d0a-bd30-b427b2f1f1aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28c37bac-749a-4aba-a19f-ac171e1deb21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc8d19f5-9c89-49a7-931a-0d23ec281b6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "13536ee4-91aa-4e10-956f-068d5cdda3e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cdb7af7-2ead-41eb-89c7-5acb489e7974",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee838088-eebc-4231-b980-3cf667fe08a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "764a4e24-354e-4377-b6c8-9bba50d641eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eacc776c-d82c-4e8e-8bc6-8a0d2800c4fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "85faa84f-67c6-4ecf-96c0-8854dfe22091"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3ab34ff-f21a-4819-914a-c85a464fb43a",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b15e8cd-8285-4694-8f4d-116713038ec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e83e24f-8b39-43bf-a437-44001695939a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdad05a2-51d0-4b17-9ccd-5701b84ffba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd6408bb-fe05-4b13-84fc-1071b45b96c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92263837-c471-40e2-9090-cbccbd16c470",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "734f684b-4c8c-4a4e-b7c7-b943ff029bb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec185974-547d-4ea0-9c2d-e7b2d55f6928"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "633f566f-7d21-4e37-adcb-e74db265b8a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "64ccf328-8679-4b91-8da3-116f2415d540"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc236e2a-f988-46ce-9afe-87e485921907",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60158d6f-7245-4df5-b76b-8de054b834a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79440170-a2a1-43dd-85e9-5f5c89aad65c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7739e187-f0fe-48fe-8cf7-1315e31710b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "93c660ad-abcb-48e1-8486-3b54d5a74d20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e6c781d-f345-4768-b6da-ecea05743060",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e88e7594-1e79-4a45-baff-d4febd45e850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34032d54-aef8-4dd8-a097-31d98a7c08ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "815d2d3a-7564-4a81-b216-06e116b915b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "83a5aafd-5169-49fd-be4e-6f9446d5afa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c25100a7-3e85-4dfb-8103-2cfca478bb26",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96735fea-8c7b-4d50-99b2-fdaf4fc0d9b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19792387-e62b-4f16-9773-270c9f069409"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6281425d-78be-4f03-8ae5-f33cea2a7db4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "42ffbe51-0cef-4e65-be24-c23bfdfa796a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37bd8f47-3055-44a2-8b63-7cea6e46f453",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db1b284e-4793-4804-ac69-029686d73183",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de518f1e-0965-4fed-853d-0f3b441d6f1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e07980c1-d5e6-401d-b808-f7f88cbf9448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "63a33b25-b227-4294-84e8-b36c1a8b7a75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c24fb8e6-b97b-4116-a321-67dab57924c7",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bc6905e-7fa2-4aac-8d6f-e7f36bfabd53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7045b94e-a09e-46b0-ad33-414007fd0c26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3864bda-dd1f-4b75-a654-1ba14024450e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "43d08fe2-21e2-426b-9bfe-e64b5ddbf5aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d10ff18b-b414-4ba4-8e01-9025938014e6",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ca2c09c-7438-492b-838e-ce98502afb4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea9ea680-47bf-4908-991c-ee81063fc0d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e53bff2a-ca1a-42eb-8fc7-c4971e069fbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "62a7e074-91e8-4548-a39d-f728beefa7d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee7e3e60-bd44-47ba-8135-a0f2ec796bd2",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d852e74-bc3c-4f58-a536-ba21a5928988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dc30430-56d5-4b68-89d7-dbbd06569ea2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9f93bcf-0a7b-4664-a858-f2d388a6f834",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9f51aa9-1105-4811-a361-708ef2afd1dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eac28af-d381-4c91-babd-7641508d25d2",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81e4326b-e5b9-4d46-85d9-a3a149a1bf87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e25037a6-b7f7-4f7b-8c37-b6289ab47001"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9fa912c-6a00-462f-9915-7f674e2f6372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f07f28ab-bc5a-40bf-8ba5-ec6387eb87cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fbd570d-4e48-40f0-ace2-3b7b678af10a",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "316e59d1-a0cb-4094-9f14-8e496c44b583",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97d37d88-9b3b-4b98-9c4a-d176ea74bebe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "010c27e2-4e01-4c82-b7a7-456bc6978395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "12b19af5-d5db-4b7c-9a52-b892df6f636a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4486d64c-3fae-41f1-879f-e6c2b44d0c7d",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46d8fc5a-d214-4bd9-8af6-5c7cece9c67f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41010e76-b57b-41a2-b9c8-7fd600955e21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de0ed40a-466d-4626-91e0-9b36b68d8651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4254d8e-b95f-498f-973a-e9da791d4011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1ecfe98-99d9-43f3-ac2d-bdd1b7a71588",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a229d50a-0941-474f-b9e2-370f3eba9506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9b11966-6090-46d8-bd3b-49a5fe4ce321"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19acfcde-8c68-4680-a906-9a263a5e4f33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5bb8102b-608a-4cb3-8413-437fe6b1fe64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cef5808-6e52-499f-9818-78e4cc548fb7",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "563f8e52-8f52-4df5-9259-acf5186896f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "389f71e8-6d22-47e8-8efd-2343f1484e04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4984f81-2d10-45da-b506-8ae3685ad24a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "26bbe05c-ecc0-4155-a4d6-403110593925"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98f5cdb0-4128-43ee-802a-6926d0dd64a6",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8796509f-8647-4793-8ea8-87565593f113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44b31b25-82de-43d1-b8b5-b99c928bb257"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "658ed5bd-214a-402d-9c2b-cb595c710b5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "64d622c9-7b42-4e40-83bb-8ab9bb57bc13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44cd4e94-69a8-4807-94b3-a0b817477104",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03e64bb2-fd0b-44a2-b59f-e86e24228475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5849f6e6-bcb8-446f-8d2f-9d3a4175087f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "239bdff1-31fc-4934-bbd9-292645f8dc04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "ef58b401-bd67-4762-8a51-bc9e76750f7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a0e238b-f3b9-4ce0-bfbd-df4015172adb",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e61f653d-f6c5-4030-83eb-1e5d385f0531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0160dfcc-35d5-4e0c-b66e-588633152718"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22f5b698-a390-439d-9418-8e0b498e68e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "93487101-98ae-4795-b5cc-470df539b232"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73e557b8-2c23-449f-8617-a871794be20a",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56f6f57a-3c36-44af-a615-e8afc5ffd0a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b352ffd8-74f4-4ffb-b012-aa55d30dd0ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffc368e1-6c2b-43e8-a31d-44cf20b14fb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2b6537cf-e1ab-4676-b40c-c033a3c63776"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8ee11bb-83c4-44ed-903a-4ceda2b421b8",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21934ada-b0ec-4a97-8a31-6e572fd81ba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75afbe6b-84b7-4330-90a4-f9aa71732d89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4f88410-6589-4b6b-941d-5b56eb4a7bf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2defb9a2-6b38-4f56-8f77-96ffbfeaf62c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e346c6ae-5da0-4f79-9550-4ec81af14076",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42673d4b-27ee-4139-836e-d81c92ee2d9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bbdc4b0-4c3c-4a73-8722-a2d85b674b16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8509245-a1eb-4cbd-a5c8-b0a43a482629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e0f31b41-f1c9-46c9-bb52-df1afa3f1b42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cae4807-01e2-4dcc-ad83-f8cb1ab3d8d8",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9dc8289-098f-4724-b01d-00a3b5980006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "776c5d0c-9a64-4f9c-84e0-786de81e0c4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9f84811-82c2-435f-9c95-96687bd5b5fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "21d19bb5-095f-4d33-828f-2674699d4720"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eff96c68-0a19-457c-af2f-876fdec22d15",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96601101-dc95-4bfc-9247-58b9a4a12344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7499dab7-8c4e-4099-a686-6e9e18ca05fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "059e1d5b-5785-47c8-9733-d17850552ffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9471c536-01df-4cc7-b720-4c283789336a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd67abce-1b2a-4037-ae61-67bb9b3f6361",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1545e547-93da-4511-8d84-50c758112858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbb83cf6-9f35-41a9-befc-ed3cea0f27ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4df81968-15fa-4817-84c9-1269cba35dd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "379d3fdc-f936-45bd-81f1-bce2e66b5297"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca0a9cd8-b090-4552-853e-47ae44280c29",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1b7cb23-a2a4-47f3-85f5-ec9d87873a88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f20e679-c76e-42a4-a7b1-c980178f1f44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "275a76b0-e556-4355-a525-da8803e04698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f0bfdbea-8363-4118-9cca-cec5a0cd431b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f002c039-c28e-4dda-bc69-4c79901b589e",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40dc5fa0-3cd0-4abf-aa30-e4617c6fa19f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b668a8b-e4bc-4bed-9898-d5df0acdb5db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4d0b66b-a34f-426c-b19a-25886c4b052c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "7eae76c0-e959-43f7-bdff-764944af0a87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccb6fa8f-1904-4788-9950-5d0f6c1abf79",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea4a17f6-c9be-4b51-9da3-fe88a6064759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e53a092-6c0b-4ca4-ab93-80f607017354"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49a67fae-64b4-48e2-bcdb-93337f86fc2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5189196-98d8-4aa3-80c6-187e20a04983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98f859f4-50ce-49a4-9ca5-3c3ff0b832de",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae0c7a4d-61f3-44a0-aba5-ca42b70dbc25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c72cada-d0ba-4a34-b0ce-5a9824b18f85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0159a35-7a95-4581-bb48-ea0af256314f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "14b22d0e-e2ce-4fbf-8936-0493c52cf49f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b1f3fab-5e8e-4e60-9067-4c76319d0f58",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20207763-fbaf-434b-a541-0ec59dbec5c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1001231e-279d-4cf3-89b5-5a1adef9e792"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69427121-e0fe-4218-8605-d613d4cb20cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5844494-fee1-4aef-9a40-261b2d2ce3b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51c6df7a-3d82-40cb-a177-ee125661a959",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "723e59d3-4d59-4ae9-ba4e-e447d2689f52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c44b135b-8dd0-4e77-beef-4b2cfcda1d5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bb0cc98-abbe-4fd6-b42c-a741361e8077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8be1446-9b65-41b1-a01f-f880c8957ab1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e476d61a-ec69-44f3-9ef6-de7499af299f",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cbbd506-f27d-4234-844d-df8fab027234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f54f3799-e042-4ba2-88a4-61184f640232"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55015cff-fc42-4977-b387-844d6b5c6d69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ac9cfa25-c19f-456d-b317-9672323e35cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5feab245-af76-4fbd-8b1f-db278b035551",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5fdc1fd-918e-4625-8775-adfafa9afca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8c52c56-d9d3-4b0d-b252-6d22ef07ba1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4892fb8-2730-457d-b455-bcc4f4d8cfa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "142752b5-916d-4792-90a7-e39702dfe6d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "805f966e-41ed-4b1e-86e6-34c26955c5f1",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd6e9ec5-2961-4493-875b-6c0a1040aa10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba0aa740-c43b-4838-8d77-d38b60c8485e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64eadd2a-3543-40bf-89cb-5545ea2d7e25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "793401e0-3880-47c9-aa69-0fd70e2a768f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81375c3f-af01-4aaf-aa52-a09c819f1dca",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70a0641b-df10-42d9-97ab-1d4812fd4e88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f616d46-a436-4931-8694-4aca9b4f40ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74a40163-0331-4f0e-aa15-d907f6edb971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "da70431d-76ce-43dd-b5e0-7a39da3c97f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b7ed841-0086-4fa0-96fb-ccfef91e232e",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b5f084a-fad4-42ba-bac2-3325c2fdf8ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "365b542b-6f57-4312-b6d1-dd6de5ab7edf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cb32e61-475b-4496-9186-e1a48b9b7d8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "20b90ed5-89d8-4b06-b551-82a90e0bb53f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6bdfe81-0c76-4421-ad28-f1dcf56510b6",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d60bd8ef-0268-4a96-b098-6f6f5ba8ef6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c35ae33-0dc7-46f7-9156-c96d89721fa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8380522d-3da2-4332-af23-05168fd10131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "582f0777-16c9-40c4-a48d-c2c669fea315"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b07375ad-5b77-4d1f-bcc7-2f713a234c91",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c46093ad-5f2f-4e47-a564-97b0aba9bbb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d15bc7e-f023-479d-a74b-46aefbda50d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ef5df00-ca76-47b9-9d5a-20add07f9196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "399b7f31-3570-4b96-b12f-53fc8dcb8c72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0d668b7-62a9-47cd-a1d2-af766d21b5ac",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b179d57e-7559-4fcb-aa52-214618dfd8d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1595e73-4212-45b5-a000-1e1c3b675a74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "017cf022-d607-478c-b566-190b7a9acdcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "1c33c72f-2d2c-4ba2-837b-b42861bfd0be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5def62a7-389d-4478-9a7c-fd46e1681b57",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e05378d2-2fd2-4edc-a992-3940a16b6a9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09e57be9-f55f-4594-afb0-e68ad7c16a8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cfddfb9-e3b2-4d51-b830-08a1d84928b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "75fcdba7-5d21-4405-b4c3-6d81d6914470"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf7e7606-790f-4451-92ca-14f069b4404d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "626aa273-768a-4ae7-bc70-c9064a98dd43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9663ebfa-92c6-4d04-b408-76441e752832"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb513a81-1705-41e5-92ac-08c2e2701d84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3b8a1378-d8b5-4dd0-997b-c8be31014c77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a27e6d1-b290-4cc8-9259-cb71cff81cdf",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a42903b4-b21d-4eb0-8f49-f565533b923d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05e99c0f-af2a-4d41-b215-4b6d001ebc5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d1eff08-7f09-4371-8491-2e7dae181a2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0ba79fea-0836-4147-beea-4bce83db370c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "874cbf62-f570-4446-ab20-22117949f601",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a808706e-75b1-464c-b38c-71fe12a7729d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca9303f7-6007-45b4-a467-ec82a0fcec52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c876605-7137-4d21-aa3e-5c741b9b796c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f0e4b235-0cd6-4bd2-832f-4c6d919dea73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f989a69-e1d8-480f-b8c6-f94c0de32a29",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f521ef1d-c0a6-4610-829d-bdad404228ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53502747-c323-43b8-8d13-071251d6a019"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80429fb0-a8cb-4a2d-b539-f09737eb4f8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "5a59c67c-1220-4830-b530-39a9bc67ae4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bef8e651-a211-43b8-b2ec-587fd50f7d03",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1f4073c-9b99-4fef-81ef-04dd2ab9ceab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "612e2d42-3c1e-4307-acd0-8e7b5f4f26ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "489ee2e7-bde1-44c9-be26-c0fbe2d6433e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d2b42ba-75c4-4d1b-8863-c24cb29627c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f49e337-4893-4f57-94bc-9f35e3992843",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3145ca7-b2ef-43bd-a092-0a46fa58047b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "976bd080-a507-47c9-9e3a-e402b5b60159"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a971d156-2e83-42a2-84b5-c9b878dcf4bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c2be9a8-5c16-42e3-a524-967e0e3529b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cb07baa-27fc-485e-946a-28f7ab0b2637",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ac95eee-7695-49af-85fa-7cabde077dfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a0901c4-dd60-456b-886a-e7c27052aad0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cb692b0-7070-4afe-8afa-6344976f6593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a2b0ab5-7444-41db-b8f8-d7710faf2055"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3057ccd-9fee-40cb-8ae1-dfac908e617f",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc7d9c39-a441-4ed6-a339-1c114cbfe714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d991ded7-5ccd-4328-a931-174cbc9e570b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46f760d1-76bc-44f7-b9ba-e69b3306894d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5df81e1e-5233-4c4a-ba1f-69e31734d3c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67b19853-0f81-43e6-9395-0866813659e6",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddd5269b-21e3-42ff-b679-1e4320b2f638",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ce9661d-cdfa-4149-9d72-ba914b4b626c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42398173-aebd-4a4f-8627-a18929381b78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7abe3aff-f8bb-4950-9918-8f6e5bcd25cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6406e4c2-293d-4746-9976-ea9fd45f02fb",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "810535f7-914e-49bb-a1bf-62261880ca2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c98f66b2-8108-4d5f-8cab-5f995f542827"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c427b232-9506-4985-86d2-ba34c2ea212c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a2242dea-a828-4ea8-86f1-beb7adcb429a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89786ee6-4bce-4ed9-ad9f-6a07a818adf9",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e13f820-9250-4da4-b28b-03754f8c5cca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23f6e7a8-1a61-4343-9395-b2d0b161bf67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bde19569-701e-495f-b720-b221b073a69a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "88653f5f-2c1d-4cc2-8209-e9ad69f74981"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecd6fe50-ce51-4385-9b59-b073dcc8e58e",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29f32d09-7dc1-442e-a9e5-d97bc365d579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27aaeb24-3d31-4583-8cab-c8e0bfffc46f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32693e1c-8507-455e-bbc8-6492eb80c8fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1a2615c-6e61-4c20-9776-97686581a3f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aece91e-73c1-4f3f-b209-38eb8ec13b30",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fac8a820-966c-4320-938a-17381e65ce64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "094a8964-7342-4269-9af9-4ecea159d67c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "661f0cd8-79d7-4a18-9b6c-d00140b206f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "12a83a45-be71-45a1-baf1-855a8bf792ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43a6c839-dc34-492b-8468-83a9b167b67d",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51e8f665-ae96-44f0-ad23-6bffd4f40675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd9e8ed6-e7c8-409e-838a-d8a5a20555f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb7d8915-da73-441a-81ca-204203294469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e0baefc-711f-4013-bf1c-24af9c2139df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0caef0be-2c47-443e-9890-4c5663fb48b4",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa5e975a-c343-4987-b8dd-518d4d661054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5158127-c405-47b5-804d-a548777d7693"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1007e683-6a40-4d47-a3ac-da16c377d30f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "86381636-66d1-499b-9d6b-5a7e0b7fc179"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60fcfb94-9c31-451d-8abc-e7cba7902f1c",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "329df77b-5cfe-4c06-bbde-87d2128b2134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a39ae83-d6cd-4cc7-983c-5b43993e47ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfbaa958-b795-4bd3-8470-c68d04417209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a698c387-9b39-40ad-8690-51f5858b0ee9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "766c70d7-a337-43ef-ab08-4bdbc94a3ee9",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a292748a-b28a-4a22-8283-b0bfb6812c75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d095d76-515b-4bee-8a6e-503805142c6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb696f31-e958-470a-866b-56eb00fa93ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ef381c08-0caa-4256-9abc-8b09c9a61a76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40e9ab85-804d-4a0e-92ce-531607dac350",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03ea0f2a-44cf-42ed-bc8a-0adee4ae4031",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd6217ea-2e13-4420-a7a7-114b0b31dd4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ececfcd8-d560-4fcd-aaac-abbc6fae2968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f90522ef-6296-4a37-a2a4-40f00a139466"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4a38ce6-a4e6-48e2-b6f2-5933fbaafe3a",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ade0ae77-2484-40e4-8744-8b2b9f28cf25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d1a013f-a9c0-4315-b37e-44796c2bb5ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e3ce1a0-e2d2-46b3-b3da-a93c798571bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "76292560-4d13-48df-a322-e0aba5f317e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a64ee5f7-ca42-4e5b-9d92-64db461ada63",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76599955-5a98-4121-a75e-23da4eaaa050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edcca50f-a6d2-40e4-b8d9-6d037f6f87ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca8c355c-0c93-4b62-82e0-1d5887f7b152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf529923-682a-48b4-9890-596abb2f9dd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58d25f8f-3e2f-4f4b-b696-3ef6bbac60fb",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0beba651-c4d4-40f9-88d0-277e7cfd8d9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "829b28df-05cf-4ece-831b-01a5c06a8146"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d4f558d-66a7-4cd0-8a1f-6b73a6dd48e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "048d85de-0975-4e21-b147-7d689f9a4b4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e324425b-ef9d-4a55-8a9a-a2ab15be01b6",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5566ee39-5125-47bc-82ef-6926c6b9016f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afb92171-92ba-45e1-9554-419b83e73c8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "280b761d-039e-44ea-b1a6-73ddb3345dbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4043514b-b7df-4309-b7aa-a8e3d521ba1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56743847-e85b-40e4-b509-2e62fe68a963",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8480c23a-f218-4e2a-9b36-c55177e3ad5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cb7046e-6ad0-4bcd-a4c0-337600412d50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4da2938b-08a3-4402-85aa-7e0353c900df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7d78feec-2572-42bd-bbed-98d6ea74da17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29e82ec0-2b71-467b-8509-31f4037e6081",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b06b50d6-dd6a-4cf7-98dd-fde6e1d95006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7a39a12-8d91-4de6-bce4-f8ebfbe78341"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1b4f213-87f2-4bca-967d-6d1e983b5cbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "80759da7-5da9-47c2-ab86-3fc7b53c5d19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db56a931-6819-4ebb-ac21-6ef5cc191cde",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b575c2a5-5a08-4169-bbae-02cc2f55a3e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29b14e7e-19f6-4857-a8c2-2dc715cd364e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "344b83dc-d65d-45a6-afb5-65845e9455e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d499726-11e0-4f99-8a96-e5d68258bc21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f4ecd3b-fc35-4bdc-991b-29e87397f788",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58d02469-214e-48aa-b0cd-d435093c06b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4af7d209-e0cb-4d9a-bd22-d9d7b5af4d98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09751814-95a7-402c-81b1-69b3b9398651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "72ba0a59-5bfa-40f4-9208-3eaf8f777f5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f52e5db-8f2c-4780-949b-c0877d81581f",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc1132cf-9ca6-4a3d-ba54-610382d00d9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64f7dd67-ed45-4c38-be5d-baa6c78dc80d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22bcb40d-7aa5-433e-b39f-15fde98f06a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7bd18dd5-4cea-4b67-8581-7bc74db40e6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fb45f39-642f-4be2-bf06-b282fc7aed75",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b91d33af-09a8-455b-bfd5-e260d03d61c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ef5e574-b6f8-4968-b953-54345a4809b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a264fe5f-3dce-471e-b59b-291b71d02a0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ef985d3a-fa52-4bfe-9097-289222b5251f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a874e74-8a7f-4376-b39b-4aa44c97b788",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e866570d-6250-4f3c-8036-1c226e5a27c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a7d98a5-aa3a-497b-9766-835bc176a177"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f059fc1f-c54c-4495-aefc-c557aa9c79ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1eacb611-689a-40c7-8b30-7d7a7593ebe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0009b7e9-33c3-4626-8519-1c78d0ea9717",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c562ef8-945c-4dbb-80d7-5136492b80e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15540ef0-1d18-4807-a35d-65d568bf1d4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b1f2f18-b427-4efa-aeb1-2178f50aec79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "fcc35117-9cd5-4f95-9c58-833b2e2d4810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "711541b4-df43-4f65-8b6a-36aefbc25aa1",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b71e4200-35b0-45cc-ab40-f868ab82a55e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0ff13c6-dc5a-4d5b-a3e8-116da27b0dbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aac999a1-e0fd-4468-8333-83d3a75106d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4b560fb3-a12d-4566-bba5-69c63cabbfc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0974d67-aef7-4985-b394-6d382b0d31b8",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00b3ed53-ecde-411d-92e4-63ad15b4192d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0abab6f-a6fe-4282-a6ee-fc48c2d69ce3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ce9e36b-a0f8-4865-adf4-9ad35b18fb8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e7d1c439-fad0-4876-a110-92abadc33c44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56cb34f6-6b50-498d-a21e-3f1997825307",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c1b1f31-49dc-4aa9-bb8f-046a790222fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "913ae3fd-4875-4373-9f43-fc3511638781"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14823345-462d-41d7-a794-769657d180cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7a841329-d842-4ae3-b4a6-e4a6321347ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d14464bd-ddbe-42af-b2bc-17d6b8693d32",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abc2fc82-60d0-4779-8e84-20df5d320310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dd2a06d-3f77-4e9a-8617-17a1db63c37e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57aa9479-39a6-45e4-82b4-e61f89be2023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "dee3d45a-0055-405f-a0d5-ccbc1a364b03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be5865d5-8962-45ed-aa09-48ab25041a78",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff975a2f-adb9-4e17-b782-a1a01f138902",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "042e578c-b2e1-4ffd-b972-1d2e23875426"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aa7e2ab-ffcb-4499-8267-481568aa7437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d2ffbf15-b55e-406c-8b28-e803f8ac356a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f900bd0c-e0d3-4e93-a898-f83892e54979",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5734faff-24e6-4415-afaf-7458a70ff88e",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c958025-7f94-46bd-b974-9ab07bd07fd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c647393a-a3f6-4664-b3e2-75bbf9d2c162"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaff532d-d14f-4430-b3d1-ab27193d9627",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b38ae479-ab4f-4448-9f2a-398cd67a269e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f64587ed-9d6d-4f89-ad6c-340c7383209b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "63d086f2-a3f9-4ab2-a343-6574802c0e4b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d1f0e200-b35b-4513-acdf-3cb8310b8d98",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d27dd4c8-e783-4e47-a727-9a16e44345fc"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d53e3b23-f18d-4dc0-a39b-257ca90fc723",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1fab76d1-fafe-4977-92ce-677bea760817"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2323e935-1c79-4d8a-adeb-68c18487f248",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1af22a3f-7f7c-453c-a208-e8ef53666711"
                }
              }
            ]
          },
          {
            "id": "42021665-8e55-40a4-9be9-b220fc310143",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0c337b6a-2d19-429d-89b3-45e781cca88a",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "5b79b4a2-0424-47db-a3c4-8629d050dd25",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc4167f5-84b2-4aab-b8bc-85ae72b18ee4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "e6166687-c852-4dae-9a48-8f8a64b2fc8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68747720-5b32-4ef0-a01f-39d773da145a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e51149d7-d1a4-45dc-88d9-4fc0cc7b4ee4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4d83bee8-0826-4e53-84f9-54f0da26a26a",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ed9977a4-1bc2-493c-b7ce-c654c83a4086",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "be457761-b69d-49a0-9099-2814abaf92a8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "40366f70-bdae-4b35-99b6-c4a835b0959b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "22599cbc-d631-4044-b9a0-bb143664f0c0"
                    }
                  }
                ]
              },
              {
                "id": "76698769-e5c7-454d-8959-2763b2ede564",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c0b31a7d-9372-4209-86c2-2b4bb62c94c8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f35f7ac6-f65c-4478-a5f6-e905c8e855c2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f30eae35-8550-43d6-8ad0-0c2434f26020",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5174659a-e734-4bd8-89a5-5ba493df67ba"
                    }
                  }
                ]
              },
              {
                "id": "1f1bda48-8b10-4a39-9f58-d542e76485e0",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a28d662d-c6f9-46af-84ef-eaee7aa89eb8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "80291c41-9db8-40f0-917a-3b00de86244e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c6fb2968-8e8a-445d-9536-c00f0b6964c8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a75e9242-b6bd-4a4a-8206-e8ecfea97c8c"
                    }
                  }
                ]
              },
              {
                "id": "a6f2428f-fcc8-4260-ae46-af718d5356f9",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "80e3a3b2-a045-4101-8e03-7dc505e5c932",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "60b4a5ed-e37c-49e6-9791-0915ec3263e3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "43c64a4b-38e8-4ebf-bb44-6a39fb714e26",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "09f64e9b-9b22-4cfd-90fc-6b3d2f8e6dc2"
                    }
                  }
                ]
              },
              {
                "id": "24d83f4c-9d5b-4e92-8799-7b939b9c9cb8",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1777a6fa-c86c-4711-bf9d-a03da0faeff8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c262ff73-3d8e-43fb-895e-1cf3bce93852"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "10edb7f5-8344-4317-9dd3-09c1890110fa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "eb64cd03-5a97-4c70-a19a-5be3e3eaaaa1"
                    }
                  }
                ]
              },
              {
                "id": "b1434780-70b8-4aeb-a11a-6e3370c84be7",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "242b15b0-f5df-4528-8c58-186f3a191a47",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2e32bca8-21ee-4145-b86c-3d6511dbfb8c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f49f74ae-e6d9-4d34-91f0-e942f855f788",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "dea07a5e-a08c-41b3-8942-d8bdb581090c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e9496b07-b399-4e99-b02b-3387540be982",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3e3395a3-3132-4b31-a816-141a8d29d541"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "167ac0ce-82fb-4d43-a135-f2d72a10cb19",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "93f69e9a-9ffa-4834-87ff-90766c226115"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f400c795-448c-4cfc-b9a5-f6a35ed2544b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "98ea0608-a40a-4809-9ade-d9c7d7860058"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cbd6f028-d3b6-451b-a6a0-072899d3ffdc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ddc25e35-e7ba-488d-914b-cc5779523217"
            }
          }
        ]
      },
      {
        "id": "720939c7-8207-49e5-aeed-d2e6f856b059",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "39d3be45-72b0-4955-abe2-565daf328b92",
            "name": "Negative Testing",
            "item": [
              {
                "id": "56c549ba-b149-411c-ad22-b58ad1e1824b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a744b3f7-7d08-4251-bfa5-94332dd56891",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73a84650-54d8-4079-b1c8-88ed10785fb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6a2345c-4bca-4d82-be9c-00e43bb49d40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75ad153b-69d7-43b3-89e2-5697d3b16642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "034641ef-3ce8-4385-8066-eee521a51130"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c255a562-f604-4c20-8102-65c498a8c0fd",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "deffc14d-d47a-4f95-9cd6-115c614ab616",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02c31b8c-9cbc-4715-a312-e42b5d5f2197"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be89783b-f758-4914-8b2f-6fefe2663906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec1bf5ef-a463-46e9-8e47-1008b5a4f89c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "614c1798-564f-4e3e-803d-3a8af9f95b4d",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "123f553b-8d65-489b-9e4a-cff913562a35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64cc2b88-bb06-493d-b44b-c80284c1a86e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ce5152d-5c90-4597-b125-b28db9fd72ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a6ee366-c948-4966-a4b4-db95202714fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7b8790d-51b4-451e-afc1-5f9f841d3ffe",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06e5c068-843e-4a5b-a578-b80d0a82b69a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73320183-7f41-4d7e-9839-bd1f9d6f8968"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d37be842-02fb-4591-9f21-95f6c1cae275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c9fe04f-e02c-468c-a693-f69b1c6be80a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf45a337-b0d9-4f79-9037-441e25279b3b",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c856bfb2-cb22-478a-8329-3e290812fd05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "988ddee0-ae82-4830-9aa9-1935ba7e7a9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "575dd93e-d528-4abf-b912-bff3550c3d91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1de88f8-836c-4107-9f58-82c589b79cdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24c7606d-1c6c-43b7-84da-6ea360c3016b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1d5fd36-3c7f-4da8-add4-0b84e21dab8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1797769d-083c-4274-a7f3-af94cc1c5c37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3582514c-951b-4623-9b5d-91b00415e005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7ec12bcd-e588-4e9a-8754-312772cfd14e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c106bf74-72cf-4d21-ad24-5ee71381bb8c",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2688f2f-bc52-41d1-bbd8-0b4d73a89894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e46e7a2b-a76e-4674-88bf-7852847fc62d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3144af9-c935-47e3-8037-38faaa2a5224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "31c69ca4-2162-48b9-9eca-bd5ca6addb1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f4bfefa-aa46-4a8a-845f-475fdf348088",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "785b0e69-0d2e-4331-9790-a8c07cac3cad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0462c1b2-6085-4bc2-980b-532abc7f8870"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93dd3371-fd74-46a0-85cf-5ca646cc731f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "efc07ba7-967c-4d45-b2ec-bb90d05cd2b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9467b630-d1df-41cd-8df4-86de68d73019",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30700997-1cb1-41ee-8ec5-38002c7ab74e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7b8fd11-aaee-4458-8bb1-f3b3b0201919"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9d6497a-eec8-472e-9c86-f89a163f84f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "588c71a1-8e84-4282-9571-1def7093459d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80b5037a-4435-4e2a-8a04-3b67d5fb39b8",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4841dd09-4c7c-427b-bc9f-50f531995dc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb245c59-8587-48a7-baa8-1ea9f787d150"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20799e0a-5b0e-4711-8125-e83cfc85f8b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ded952b-7064-4b40-a6b0-2b92a70c3bc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d5aafb9-7238-4189-9a9d-e9e82b41d831",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee94d119-eccc-4ff8-8cfa-b3fd1c930626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23cbb123-5b7a-4c41-8a9e-0fe849c89de2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5ee7477-1a70-4c5a-ab27-fce1e41aca5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "faae90aa-d609-4a6d-a35b-f637f5069daa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e44bf32-1d5e-4795-918a-95df726d5af6",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ee3ef0f-ae96-47b7-9e39-c42bca3fcd1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea2532b4-7a9c-46e6-8f5c-938487834dd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb60b4d4-7db7-441f-95e9-cbfe15cc7d77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "955651d7-cbc0-4a1a-9d04-e29631d4bcd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9bd0e48-4fc8-4215-ac4e-2cb260754dd8",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4ef6299-d43b-4ef1-9597-0a216bb34bc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99282f48-f93b-4f5f-88b2-2015ec140d8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91714e83-a61d-4646-9056-cbf2d639faa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a8dcb16-c692-4cb0-9caf-d91da101ee55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7235f69d-e7c0-459b-8d3a-783be49ce348",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "920e7a45-f7f7-44a1-a9b2-a113e2c0cc46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ecf463d-8a52-47b1-8f1b-52c24328f776"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f66df8a4-0e8d-4201-a9ee-9a2b236d3435",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e0ba61e-ce35-42af-8cee-f1ab875dcc67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e72734e-d3ac-42ae-9e92-6aaa0da1b675",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "165d4b70-3757-4335-8fab-13f71a2b88ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce9f70ba-95b8-4236-afad-c6fb699de0e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cb8038e-5d95-4899-b471-75ff5c3d34fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "de87a86d-81e9-4e72-b3cb-8aaf1f4c55c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9206c76e-ebdd-4b7a-a6cf-91349fcc8ffc",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f990a5bd-51c1-4e2c-80f0-1b8528a0720a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74ea81e6-7cac-44e6-b746-c3965576a18e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b2e54c0-c1f1-4b8c-955a-cae4de9795f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd8027aa-3500-48fb-bd0e-0dace35d033d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65073b99-7ad7-4a65-9eb8-cbc956ed01e6",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7204e161-e3fa-4948-bc6b-e6e7d5379d9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06401a59-74e9-4364-895e-76a503fcd718"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3c2131f-b89a-45db-8794-a04325504524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "c45730a1-4f81-461b-b38a-9be09dd2933d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f7f328a-a289-4121-bc2a-e156f22b9f62",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eb80ef9-cbfc-4ac2-be69-e9ed86b1fa0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39026b10-5bbb-4c36-b154-de51672f3d14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faf6627e-16ab-486f-a955-62b89b99cfea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a57f27d0-1ffb-46d7-9c06-60ea22cacda0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1372e435-e3a6-4bac-9d02-65da9703b0b6",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78f11f93-8d47-438f-bb18-dd274bb0b6da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a159739f-892c-4a7b-8f96-4526906e2618"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eda2fdc9-5cb6-4e26-9820-724b65b166ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9b6f071-7e71-4946-8bba-70edbc34c6c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d129a259-caf0-4b65-90aa-9fb3c87be72e",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eb0c917-2b38-4e43-9885-6d5f1b0db864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34a462d3-7d0d-4f8f-91d5-e36cbcefcb2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14e183a9-eed5-440c-9164-2f6917115ec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5916d4fd-15c5-4913-85c9-d4ecbc264cf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4101c700-3cef-4c80-9689-69703ea5dd17",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72b47520-0d63-4509-92ec-e609cb857f23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "986da9f0-3de6-436c-8da7-8f3931388df5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5968d446-94b5-4c0b-9114-0c6fcc3bf09e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8927ce45-d624-4d9f-9f07-a84779baed98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62cea72b-b254-4e06-bcc1-4be50a7def4a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "625fcb75-7397-4731-b0a6-61c2c875151f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "291a6536-04c2-4204-88f6-6be468da8c9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7b5241b-96c4-4060-b6c6-85d5cff0fde8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "55a6669e-2f2b-40cd-b0d1-c7db942093ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e172d18c-08f4-47ea-9ff6-090128486468",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66dce5f5-1a2a-46be-8819-69bfe97764cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e877a363-9544-419e-ae05-e378498f1a0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1047557c-d515-4db6-bb2b-61ab97b54fc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "831ee70f-6d22-4ebf-9c27-27cbe72c967e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9758b323-d426-4928-ba9b-d8fde416bd4b",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01b09739-682e-4b5c-9049-5ae3d5dcfd87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84f94399-fb9a-4734-9f02-701dac340868"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75b8573f-f120-4ff6-aa2d-93cf2a0c2a22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4a14d07-3e29-4b8e-8f2c-4e573bb359cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1b59ae7-ccab-4c52-a105-ba61c0d12940",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c26b1dd-be78-4d37-9de2-faecba4667de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab5c9689-9eb0-462e-94d1-4ebfec9bea22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cf97a8c-bf97-4fcb-8e15-c481fe6e3677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1cbd46b4-a0e4-4466-880e-46a7951855a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "294a2757-3a68-4e67-9005-96606f85561c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b4ad841-b687-4247-a8f8-6776081d7131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa49c456-347d-421a-a0b6-373db2a80402"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5225ea67-d667-4117-bcbf-47939856cb34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "56751214-1434-4553-8467-ac01a70466f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bd45587-0b15-4d86-9960-e5a32133f63f",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a17c42ca-9dd1-4374-8a22-9f88d4791d85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "009d0d28-f2c4-4ba5-9e3c-504484616c92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db3daca0-dcc3-4535-9565-2a028a331cad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "131b6a47-9f78-4323-9032-0df43e21e316"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0788e2c6-3511-495b-878b-4b4a3660b263",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "240cdad2-ae36-403c-b75b-0932c36095d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19e6a4e2-9bc1-421f-bccd-700f2c6dc49b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb6dfba8-201f-4246-8db4-28c754c83506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "02649415-8834-471c-9a19-65929c5c07a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d2645ca-cc75-4dbc-8e90-2823e128abfa",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b262522-633b-4d82-9d20-e11eecc1adfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d5b922b-27dd-4d1f-a4d2-d5b4a26ebf84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "250c19fe-6b2a-48ff-baa2-3a941340762f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "61047bfb-6f41-4c46-b19f-fdeb245ce365"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e201a8ec-c1e9-4e45-8dae-da49b1b3fb99",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7303534c-c119-4094-bf92-7b3bc1a02703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "402223c2-5083-4459-a53e-ee78f7913182"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "361c9bfe-8d4f-498a-8706-3106f44cbca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2d5fd15-703f-4c31-985c-d4bfb25e14a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b73f4f1d-1d9f-46cc-a5b9-7b5bf5377169",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40bab088-a9b1-4c6c-99f0-ec15e3dde088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cdcee66-9566-47c0-a5d7-0366b7ab1a36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "711edebb-59ce-4bb0-ab8e-af022cbd1aaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ea6a02d-2a7b-46b0-a0d2-8b5663af7187"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fe9194d-31f4-4b2e-8517-219c0cb6d1f4",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9df450f6-2094-445e-ba7b-551d6152ed16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c311bd9-0791-489c-be71-d5318f600f8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d940f7b0-fa7c-4f7e-85c4-5c832d2f5d8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "482be02c-5a2b-4a28-91f3-aee2ed8d15c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39124cdd-2ab6-4113-87dd-93ef0020c610",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbf0144e-b227-4794-ab50-58a31bd72b97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3338c6e3-61b2-4539-ae1b-d4e80d2e9ec1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7934dcd-9ee4-405e-9316-d14e20967803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "595ddb06-cdda-462c-841c-5b5f9cd0318a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeb2cefa-5bbf-4da2-adf0-3684a57d0e44",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75f22ecd-ae06-4522-89a7-722a74a390a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5574832b-b943-4e2a-82a3-0e9f6d06fbf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c769ea62-3fa2-4534-8cb3-5ec881203793",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "32335f9c-4abe-4a6c-a6b1-6a1ef48fe29f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe5f9d39-20bd-425d-988b-8ec95afad9e2",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27d351b7-d116-4182-9c20-80f4bff85349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e8eb01f-e355-42b4-8a95-dc4c31535007"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12dd49a2-51b1-428e-b46a-c592645666ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8f04295-012b-434c-97ce-e46dc3ff5c92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cb745f3-2273-43bd-abfb-5ef20619af79",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e659ff32-8982-494b-83ef-32490d045962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "852ac61e-bf42-4601-a500-13dbdb63b231"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e036b019-f41b-48e9-a884-bb694ade428c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "934b46c9-5506-4af5-b4d9-5f0cba2b9187"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4cdb8b8-c3fc-47ed-a231-ad32954c95f8",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3c55755-afea-4a21-85a2-442eabb71347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98275582-ce04-4a80-a09a-5fb95c401132"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ddd104a-3033-479b-8adc-004480795dcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "05f970bf-d365-4c49-99b4-61c48d6c2000"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9b104dc9-dd0d-4e60-ac64-b6a7559475e7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8c4f6025-8d2f-43c1-8733-d932be5720bd",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9bdca2a-4c6f-4ab6-9b20-2b75c66fff6a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "de35ab07-7917-41ad-8651-2287ebd6a31b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e878ac41-2bdb-4c96-a6b2-656420d66cc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "15cdcae9-ed45-48a8-969a-835eea1f0332"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0b1c4ee2-6acb-4897-a2fa-4f02e47acf17",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "930a06b1-39ab-4823-a086-8090435390f2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9d4dd73a-0b96-447c-9042-13c1e9c734f8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dd4f72c2-c8ca-4e16-9f68-ee5522b2de4e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "670d35ee-f67b-4040-ae9d-547426c49ba9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ff8707a6-e855-4f52-9fa9-b18c12f6033a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2778c33b-a9f5-452e-a747-107faec75299",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fdea7dde-0204-45b8-8eb5-b4a6ea619efb"
            }
          }
        ]
      },
      {
        "id": "a76934aa-7842-4215-9362-099a444b2e88",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "9bcf99c6-4d67-46eb-9904-6ce6c3ea75a1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b7a2b57a-7538-4542-acad-ac19466fab90",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6839748c-e970-4e51-9594-45e4ff381d1a",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f65c30d7-eb53-4236-8789-e49cb11de2c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "296d7229-ca90-45ea-92ca-530fe3ee8298"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34cb8f2b-f9ea-41bf-a139-dd64d7a70926",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "642eda07-45d5-4a2d-9abc-80f19b0da151",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1d0ed98-6934-4ef2-a840-51ee9464aa00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4746d2b6-461b-40b4-abf8-cd274b83c77c",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e67477b-5200-483d-8962-fefb8bdbe2d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2f6b3eb-3fee-4cc1-94eb-a6c817c73767"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc198dc9-5c3c-4a82-8966-e553fb574b67",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8c8d774-4663-4774-93f6-2bb95b75ddef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1b49813-17eb-463e-9981-82ac22c716de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17b3809a-03e4-4cc8-b0d5-8a3db6123539",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "598b9847-3c46-4ae3-b489-bf394d9fe39e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f20c093-7c79-4022-9563-427278a1b83b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b957d45a-0b7e-4ea9-8d6c-30973572be1f",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33f85770-5440-4e7a-bc0b-6d582cd8f510",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d04c6c4-ed50-4cb5-ab73-512942655be0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "557f5435-6a3f-49f8-9e13-0f6195a10c3d",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f77f83c-8cab-4a81-81ee-ae341b9792ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b07ea167-af15-4caf-b190-8148da764bb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1b8cc71-fd7f-48a8-9aaa-cc2fa699cf04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "798dbf77-1b37-4257-bcf7-432719b8c469"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e179660c-175e-4abe-bee3-5d6ed2c75fda",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2732b0fb-3f50-40b6-8b83-3f08f7a256fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31fefd1f-1f74-4eae-851c-e9db180c7651"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d35ab12-8239-4a8f-9add-9c8bfb3ec3f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4576ca15-9edc-4631-9d60-364a1416182e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f42755f-f0b2-401d-937e-b1349980b519",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0648126e-1e90-47c5-949e-8f337967ef09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f000c85d-d5f8-4975-b0b4-4549139ad850"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b922cb10-6213-4acb-9f5a-4181d845996f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee0f43ad-e8cf-4518-8b0f-e5395d12237a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f481cb38-1121-4de0-9982-071b5aee45cc",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e38e7e9-317b-4f71-a8ab-a3074666d44c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e8f3ea7-faa9-4ab8-b659-e4bf8b6b0232"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "197d1cee-7772-426d-aead-219e61affb57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f589096-9f08-49aa-9979-94714cd2372c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef4a2727-00a3-4a83-8a4a-ef6322198902",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "686a493f-d5c2-4107-9e74-65f13f2849c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12a6b181-8c58-4c74-83fd-eca19039f250"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "876255f4-e11d-492a-b859-d7719f94111c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "980e931e-4b3b-4fa1-a6f9-10486c76a5b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39ac824a-3073-45c5-9379-bbb83c95da75",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e966a6d-a7b1-443c-83d7-fb66928d42fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3d89e65-6047-4b06-9347-db66ca04aa47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ba4b8b8-a597-4a81-975b-8695fc277bd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "721efef9-b96a-45a0-a163-a737fa904884"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c7c3419-af0e-460d-a075-306ef7e1466f",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f70af1ec-d7ea-417a-9025-1aa558a0a132",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4b54303-402e-4701-83b0-b81ff092106c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2a3444e-a6c7-46ee-b155-61128b633745",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "711160f7-2ac5-428e-a8a6-18ef78799402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75f998d5-4569-43dc-9677-37a5e49f96b8",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "790e4efc-5651-43d2-a857-a146accc7f64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "047a579c-27ec-400d-b1a5-c4a127739234"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48faf26f-f421-4121-90f3-c0d13db4f25b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7cbdaee-2584-4ac6-ad93-514787df58e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c41236cf-dea2-406c-928d-575e1f01fd28",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdfec1e1-51a3-494d-bfc3-d206760002de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39f2b005-944c-4cd5-821d-0b717253609f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2285daf6-2b81-4af5-8bcd-d67b58368594",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fb08cd8-05eb-46ba-854f-d996ace87696"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da8d9d03-e620-4d4a-ab35-0017e51b406b",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0743df5e-299c-4152-b331-1f5b9662a7c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c020190b-d949-4901-9f1f-5e474d29f40f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "807c5d11-fc7c-4420-9dde-efff07519393",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65d4e3b1-fc49-4022-bbcb-5c119c6d56c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abeb392d-3421-454e-8c8c-155d13ee5fb5",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48ba946f-cb58-42ad-8975-85286db5040b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98677c10-9094-49b0-8831-2b748e7d71b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ad6108d-777c-4bfe-8ebd-9d257cb0493d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23c8703a-6cba-4e99-89dc-6e9b5b4f6f84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5d49b57-4702-465c-9460-6751d78c47cb",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ba2bca0-a071-4177-8223-9041e143a82f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "478e8b0b-88aa-446f-b8ca-8ca52bc16f7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35d02f14-cb36-4893-ab2b-e6ace1d95b0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85b1cd7b-ae84-4e06-a67f-c4d7598bf998"
                        }
                      }
                    ]
                  },
                  {
                    "id": "829225d5-b47e-49ab-a3bb-2cd2c9cb6e46",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4149a048-02a5-4d63-a99f-01a351068bc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5062b226-dd0f-47a7-ac42-7019bcf2e24e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ba24d63-d6ce-4170-a4d4-940a4ae91cec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "999894a7-c4c4-4615-a894-9c3d0941f2cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffca8af2-c875-4308-828c-8c0d5f374e83",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55165e12-d646-4e33-99b1-948708a0119f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "470eaae3-3f3e-4349-b4fe-4d941843b41c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e542c0f-4c7c-4c87-bdd4-df5b419f3dd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aebdf5ff-0a35-46e1-b64d-76cd8aeaf6f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43851089-1e1d-4d23-8779-23e94a015383",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d91f1f4-fa7e-49d5-929c-37a927288fa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0eb1214-8cc5-4322-9fcd-dcee7cdc123f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9f72d53-063f-4db1-9fec-2848413d5a52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79ee6f8e-27ff-4429-a7bf-900e3edfd797"
                        }
                      }
                    ]
                  },
                  {
                    "id": "489a1df9-79fe-4938-b569-5706b038dd9f",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3484ba5-71e9-4079-b2ef-fa9d228e7e43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b57e0d47-924c-4d8e-97a0-31382c356b0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8522d4a1-4810-49c7-b8d2-1913b5d513bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7026c4d-3c20-44ae-9e75-d059cf960c54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c990369-f72e-431e-876a-e99f9128534e",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5804fe62-cd37-4a72-b765-ac1b5a9c00bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74aba3ad-3f7a-4978-91ae-e5cdf93afe22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00d3726c-1897-4cbb-9a04-3f07a5370bba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8f669e3-48c1-43fe-af18-e9ce1a88741c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c24286f-b6eb-4975-b5e5-7797324de475",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9ad5118-dc33-4829-83e8-c40582af61b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41d86604-e2f5-4ee1-90aa-c5ebfe01ca8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b09344a-93ba-43bd-b13e-951b61fc94dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6d03849-5e52-435a-9d44-847175d05779"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e09ef33b-565f-43e7-a692-2bcdddfb6b80",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb8f7505-06ae-422e-af01-0efb637fea89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2dd35c5a-f22d-46ec-a514-64e1527d2f09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b9eb755-cce1-482c-9413-060105367462",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3db10fd9-2d17-4c61-9313-31e4a096e410"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ace1e63-7a6b-4bf3-896c-82dba128986c",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c05a35a8-3e7c-43de-8b89-188f44c8bd6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ba474c7-ef39-4c89-b64b-520b25e161d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1203c762-e04a-47ec-b597-1fc43f024ed8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fea1fc6-0b61-45d1-8e24-3a6a04cacf76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76fac7fd-03ab-4e03-a829-6379061358a2",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6d0e62e-e776-4640-a511-d6d56f02ae36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26afb45b-fc2b-4ad1-aa7b-9d98e44b8124"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64da1591-a7ed-44aa-960a-e7f84d71db25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9258eba-47b9-4bce-8d1c-e67f62a41af7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d23d977-7520-4b49-a234-55c30394064f",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25cb3745-5ea3-488b-8b6a-fa3159954404",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb23d478-f410-4fbe-a019-94a7d30d87e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0e5ee39-3654-434b-a3d9-5f5004beb79d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ff848f5-57e3-452e-8747-e00ef45e97f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "369f2f95-ecd0-48d7-a801-f99d3874bff9",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "389e81d9-a6aa-4757-969b-a282e2cab069",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd3d88dd-e757-4186-bace-dea5cb510e21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dacb325-c301-45c3-bebc-f94d611e2e8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d362cec7-ba13-4d22-942e-f2b7c8c6770d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81ec73f6-15f4-4f5b-94f4-c2097ac72ce6",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95ade26d-e128-4378-b84f-c69378eb1fe2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2f8cffc-fe0d-4118-b8f4-07aebde07411"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a039596-18af-43a9-9a07-0bc2dd8ec116",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b05bee81-8e11-43a5-a594-f13c4bf9aebf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45340065-48e4-4187-9a7c-23aa2dad7937",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef5e1f08-13ff-4981-8d42-d9c0f77ee88c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a248e3b1-8b66-41b2-9ceb-a72f8e59eedb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62d2c01f-ad23-4fb4-b92d-1daf912f9012",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "295450f6-8651-461d-997d-9bf12892b793"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fea3546f-5be6-4dbb-b822-8967f1c38493",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb239c98-d60b-4c65-874f-98833f244ea8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e9e2017-0799-4408-8d10-6447069eaba0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed425725-cce3-46ba-aad1-9421ef120541",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5b3b97e-ac2d-4a97-a238-ed66606aa74f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90c644ea-a5a0-4f84-a000-c567d002e250",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc7e48bd-c970-4bec-8f9b-6444dd2f545a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ecb37b41-0731-4494-9a0b-93d44cc51200"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94c84038-d8cd-436b-9037-abde9d72e2fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1526ba20-6fd7-4147-8a1e-2886f1cdbccd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5767580-7757-4e13-8180-4b892710a109",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92eea676-6f97-4541-8120-17127eac8064",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d91b370-8ef0-472a-a486-e96a1982899c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1f2a868-8b8e-444a-85d9-6a55bbf83717",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a393945f-1e51-48a9-9e24-ea61d7964f7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d62f6f0-9048-47a4-9c85-120e7af07c47",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a6aa981-61d1-4f9d-8879-812259610adb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "948d31da-4723-47dc-b683-bb2e30328004"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a17dfd16-0b1b-403c-9caa-de18f633be06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67e4b577-d6ba-4e3f-9b5b-293ce2fdbda0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e85152e-cb05-470e-938e-f34fba55da9f",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dec48be3-15ca-4e46-afe4-b8cf79b96288",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd68d0fb-0ed2-4310-a2ea-1b4f00b94c3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa666284-dc96-46f0-8c82-27bc8d63bc65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "112c559f-a675-4984-9f9f-6e55c9b99a5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b385179e-0cf6-4312-90c7-75a9aae9861a",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb593701-30c8-4162-a326-5af756c988bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09a3b409-c834-4a7b-9868-7599f59df379"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b23b145e-d513-4861-9341-b305da309f51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd6a0275-094c-4836-9467-f3d6eea60100"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cce0bbb8-3601-4683-944e-c4f3b68aa489",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "723a88fb-b087-4d4b-9eb8-1b38e32f406a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1d2d5d5-070d-4182-a73e-b368ab1b33e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a2be320-7635-4059-9ca3-260fe500084a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a44ce59-63fb-4d46-a905-1719aef235c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2331f51-63aa-4f9e-9b58-d07ad19db0a8",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efb698f7-05e8-43dc-bb8c-df8891267544",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9f71db5-217a-4733-b2ac-48e7164f0420"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15e5d03e-733f-4fa4-9778-9287c347361c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3225fbc1-0652-402d-ba02-15e15c47a7b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b07a3a5-97a9-462a-8aa9-5bf1902b9ab5",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e47bbf9-8bc0-4e54-ab60-bf0ed22f3758",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2df6c5b-1364-4272-b26b-e1c6c3da5574"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3bc87d7-0e01-4177-b9c6-a2d09eff6e30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a8615be-5ce2-482d-93c9-0632583d6959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d14b968-8015-4114-b8c3-39c50d15b90a",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43fe979c-d821-4ce5-8c3f-ed8ae9063c57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a52e03ae-940f-41ef-b9b8-5e395b2d9df0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50a1580c-bbcf-4789-9d17-c766fcbd2809",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6742ecfa-4294-4a4d-bf7c-770bc16e2083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3a95e09-01ab-44aa-8a2f-31dcf52a7146",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "047382c6-6173-4180-b954-065ad0492f57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d395fe3d-a660-48c6-bca0-55584d9fd943"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fe07e03-ca40-4081-a220-fc1398ed1c68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c3fb7d4-024a-4583-8e4e-d7cba8ff86c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cfb1379-7436-411b-85dc-be6b72b223f3",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "012a41a4-1f5c-4782-b3e7-41aef505dfe3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9ab6437-b1a8-4b7e-97f8-cfd0d4cc6b69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98b1a16b-708a-454d-91fd-1d7ada5e7faa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f357f75f-744e-4bd2-88d5-847a71bba85f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5da44170-af4a-4292-8bec-ecbd76f66045",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05d1fd35-79a4-45f1-b681-e1d7631a4ce3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c53b002e-5add-470a-a0e0-f767b31e79e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9b2a3b6-3743-4855-9f25-4e74e40f2f23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1430b1e4-b3e9-4ba8-ae49-aa42004d2f93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e91241b1-10d7-4efc-82bd-888561f591cd",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b72de8d5-0843-4183-a5e4-2d7c85d268db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b90cce6-fbb0-400e-b9f9-26f493f13887"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3fea74e-35ff-45d4-86e6-5490d1e56cf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62633ccb-5613-46e1-9b1f-51fd338f0db5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feb5c63f-7ebe-45d5-a4e9-5ceda1a8eab9",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9f71253-9a5b-42fe-b478-2097f445f411",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a25bc4b-d839-4c69-8705-4b6dc2b2b822"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad1c5408-bed9-427d-895a-e3b1b4ca07ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "438f9ffb-ef94-4f74-9950-0cdac9d94ba1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "648cec1f-3dde-4f80-9174-89cf5b0615db",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ed5d25a-202b-4237-84d3-34ace71c6f2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aabadda0-6668-4048-9181-a9d3dc3df36a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4664d22-2e81-49bc-bef1-215e22a62e5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed42f32f-19ec-42a2-97fe-0057a2d7a673"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5b44325-62b5-4aee-b53d-51a907796303",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afa2d315-d904-455f-ba98-c76d81c48d50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0315407c-16a3-444d-98e8-4b30b5a17ba6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "685d776f-73ad-4177-9543-dcdc66919e82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1a50dc9-a5ee-4d4b-aad5-570da11bee11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cb37310-49ce-453c-b8e0-93fe94e8c57d",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb25f9bc-ee7d-4f34-977b-605831602cfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67951a28-f238-4bb6-9b9a-4b300aa0db91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4257e281-b1c6-4b90-bac0-d0f59c881ce4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dccceb00-e281-4b46-ae55-78013e6632e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30b6e11c-8c62-4fae-b5d0-7c09db7e71d0",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db600596-9ce5-4f45-82f5-f5cf6c535e33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0d888b8-7081-4e04-b40b-c6a9731aa74f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ee1500c-d30c-4005-9885-5747722ac68e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a538590c-ab46-4a5f-ae7d-ba9054dbf5c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baa63c01-74ea-478d-9978-940582749469",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab3a90d6-8af9-409f-a3ab-34a56c9ea794",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a81263f-8042-40f8-b9d0-a85dfe531633"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cb223f2-a238-41ec-b827-5e1be3411e6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "275a18bd-1544-4d64-990f-e6c77d4b09a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e78eabc6-cc50-4aa5-808a-39e69b7f665e",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "106e7b08-cdad-404e-a7c1-f64da69f7b62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3edcc51e-d1d1-4f18-a7e4-e62f654b2914"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65a4dbef-d4c8-4790-b499-cd92a58f56cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a86b2ee4-cc71-4a47-a8af-c1a73fd6df14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12c3c9ae-5574-4eff-8973-61ecad00d627",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9582c0e1-ac98-4aa8-82ee-70a63b1a1655",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f24aa607-4a39-421f-b6d6-1d3ca6b02da7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ef91f8e-7780-459c-9196-635f02c7be83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e9327e3-4106-47de-9819-a32b38c7a3f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db1b2a65-9e67-4449-ad83-12495b843364",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db545989-b7c7-44f5-abb8-24134ee5e189",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "660e2e3b-30c4-4349-ac22-f127018f16d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49770015-f127-4e3a-a461-740149e55929",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3746c3d-f9ce-4f88-b852-ec78539ed563"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87762e86-ec6d-4927-b950-c45177ec6587",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb6a0a3a-bd58-4746-ac97-d89a00d66f8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7415f441-ac36-47b3-bc1f-af15f38331c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21ee7ec2-5a89-4fd0-99db-31c84b972734",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b63ef18e-7b26-4c0a-b9c4-683ce1a5efe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a4180ca-a763-46e1-b20b-957b8979581c",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa86bc47-f37b-4856-92d8-ea4c5279c4d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cfedcc4-c2c8-482e-b14b-43c87401a0c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e41a3e27-dece-43d4-a48d-b33c1d226b9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "897ba6ff-2994-45e0-a9e1-3cbc40c8d6f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b2cd1fa-02ff-4070-abbc-28eecb165565",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59f7e9d3-37a8-44e0-a566-b9ef835c7187",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dd069c1-6376-44cd-b572-4e6e106f8ca0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fd502bb-2b80-428f-828f-612b320b7d97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45edbb88-8d68-4790-a804-190ee6062d65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9efffc66-3a47-4e9a-ad13-5c471556b796",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04298335-3aef-41fe-9ad8-e43ee445994a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "483258ed-adef-4b9f-8b2f-564defa66d35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2df0c80b-91ce-404a-9dd6-e79c3b258c4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ebf487e-8da2-44ff-b1ff-ec3ed0ad0571"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8094a232-bb2f-4bb2-8b00-9050a3ef746f",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5285f2a-6841-49f9-803d-6e22718df8c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74c080ed-e476-4945-88cb-44563e12bdc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41317f66-ecc8-449b-a49f-484adcf7ac2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d705c1b-9efd-46d2-8e14-8025f945f830"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4958cbb7-fe9d-488b-94a0-6978b4d1ddad",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0fe9b42-e8d9-4610-9225-eda800be3ddc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f59f835-bcbe-4c9b-b329-91639013dedc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "882a406e-e05f-49f6-b958-3086c402ac86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03e68daa-56a8-430a-9d27-341522321307"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d0458dc-7270-4554-982d-8d582cfb7443",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "464bfe95-72f8-4adb-9c6e-ecbbc0962ba1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21c07a2d-aa63-424a-a55f-71408e398c4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "087f0598-2cd3-4402-80a8-0f40661a2c9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57db0f08-7597-4f39-b000-5453844c4d4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de7d4677-f425-400c-9287-68c62bf178bd",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3473ea1-3ff6-4420-900a-3877d5630822",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19aa4b31-13d9-4d89-a4ea-c1fccce0b708"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb68ec49-d8b6-4443-8487-a810e3f3cddf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39d0eec8-7929-4a23-a6bf-f97c6f51ba98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31278c9a-c666-4a15-8f44-8550750683a2",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cbe7f30-1746-465e-9695-5d3f8f9fa7df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3db8497-8f33-4914-bf9c-4769a180827b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9abbf46f-d230-426d-9352-44b7871f2e53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d111e1f2-f251-4aff-a494-9c0aa6300b7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3f91e7d-dc56-406c-9fcc-bdbc6b20c81c",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a815c99-4173-48a4-b0e5-dd3c93324fe7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5052b2f-a311-4d2f-a273-4762b43c7f2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6f8b1fe-5292-4ffe-850b-efd3ac9baa66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb134a34-3522-403d-83c2-27509cab80a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a869fdda-0392-4310-a842-5027aad41760",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e67b4b7e-4cc6-437b-a191-8c93b353e78b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52c59638-7af0-4578-a209-5b61f2635f07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a775f29c-e1a0-4f2a-8a55-1029814fb7e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89aabcce-7966-4fb2-98aa-8303211ab5df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "690a7bcb-d01d-4f74-9940-2b86b358b543",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77cb8c60-726d-414c-b6f9-f3b045e177d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5913a29-563f-4da2-8ed6-b8b4ac6db606"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85d8555b-a202-4536-9b02-09684efb11be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2864eec2-1747-47ee-b206-025bae7c7275"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dee67080-015d-43c3-ae34-4963685394c6",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b9cdf98-3f48-477f-b5a9-4a23aae23bad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5011d13-6d58-45bd-a147-4a9f76724f11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43c3d09e-3560-4e09-b84e-cfc917a520a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4fe3173-cd23-43b1-8dde-328d98707084"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bfb84b6-6ab8-43b0-95a2-648359f7a583",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75e59fb1-3e20-40e4-86da-d2ac37624f18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88d20ffe-ea80-4b11-8143-8491da03b795"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aabd1b83-57ca-4055-a2d1-dffb4372bb41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eeac4da8-7109-4cc7-ba2c-861e46ac0c31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ded375b-c978-4ea9-ba3b-558957f7a762",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9366b82-6e39-4758-815b-9fe4dcfe34d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4074de9d-1e29-4112-8957-c177b5776f67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31edba23-e9f6-4891-92f6-54f3abeb375a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4533b0b4-a8a0-42d7-b4a8-789994a1ae83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5c05719-25cd-42c7-b4f4-74edae6798eb",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bdc4440-f22d-4614-8b3e-968040122ec8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "934b70bf-06e5-4245-86ea-8acb882f6fff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69840637-2f7f-4cdb-ad06-f0cf86a2efb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7156686b-afc8-46b5-b562-3626add5ee27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c37a589-3259-4fc2-b899-6b9602f05bb8",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39f53d6c-5a42-488a-862b-f1d5637a4ef4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b1fc23f-2e50-425b-aea9-c144b0309b20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b17ae6f1-0bc6-4566-a957-93e1a4d8a165",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ae751c9-0403-45b0-addf-be7898005750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec633174-b93b-43f3-b58c-052952d9161d",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9da4fd1-87c9-41da-a360-8a104b17acb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b9cf6a2-b9f7-4450-a953-dee81b6e4049"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57855fdd-76cd-457c-bd5d-536693248171",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65cf6251-85fa-4035-9ff4-96ed3a5423af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9437b14-2c06-4c7a-b391-98e27cd3d14a",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97baff9d-7db6-41f6-bb7b-98ab0989f541",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de846d80-4029-472d-9c78-d32825d7e6fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee80f8f2-0d80-43c0-b0ec-5cb1f908a9cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25aae253-2e3f-44a6-8a44-1e7a11a245f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8a4688d-c447-4adc-a319-1410b4d7ad58",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a86dc88-c6c3-4020-8c16-0357be234d0f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21824992-fb2c-47ac-83e8-6d9a907705b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f3c5c25-48cf-40d2-8733-1f04da6b784c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "373bc6ae-d645-4936-9a67-e2be0c618f38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "debd3928-980e-4be5-aa40-9c8deabf9937",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3639519e-31da-4a7b-a934-bb919d9f8ef7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f11b5cb-e2a8-44fd-b1fc-5a235af50a0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fb78529-0a68-4982-a911-571b70f62748",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84700fdf-c347-4ae7-8307-4a1c3c519af3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b598506b-4ed0-40e0-bbbe-6465bc011eac",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5057656d-9273-4e8c-8acc-00fe32cbc545",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dabdea36-bc4c-442a-8906-e448c56e48c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36b9db7a-8db5-47f4-b0b4-8083f3c22ba4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90bdcd9f-24a7-43d2-85db-f7ac6ac6922c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b124112b-d120-4423-b7ac-5dba62d91c05",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ee07ed2-768d-4924-b882-addfb7247fb4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3296e96d-c004-4270-a3f3-c8d32b2c459d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cd61301-95cd-4a15-842c-96d8f6137826",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95b4472f-bf76-4965-be90-370f0b3002e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9699b69-45af-4740-b1fb-e017f1d779f1",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d4622a0-63a5-46af-af01-0063385a1b50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0e3089d-88a5-49e8-b0e1-078be2166b01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25565093-ba16-4af8-964c-84e0b5836520",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5422b6b1-8b77-4a35-89c4-8c3cf400bc4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19b01cce-f823-4aa9-9177-55dc06f16733",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90906097-ffb7-4afe-9db9-d91eb86e3b22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b5914cd-9108-483e-a340-bfff6d683570"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e939511-516c-4f31-a1d8-376315e103fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d4565e9-3a74-49ce-9432-a05ba0670827"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f9cea1f-a76d-4280-9b4a-2a62ebcd0845",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d56badd4-df30-4940-b8dd-6bd0d1183ea6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7356be0f-574a-467e-b084-a821fe395aac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ca3c637-42a1-4758-a93c-cb3af12b3db7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f994af4-ab13-4c02-a710-3659fa197202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8d09c48-ca1d-468f-b909-0faefb14008e",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "464e052d-f054-4130-8caf-58cbd1d73427",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68a141a1-846f-49b6-9956-9fd7ed08ae35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69d9f951-58c3-4d1d-97c5-ef9b13230323",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39f45203-539b-4e3d-aea7-fb056060de09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b88c5430-afbc-4958-89ad-fcd62e9f62c7",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68ef4923-c1fe-46c3-b38c-620401b1d871",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6445b1cb-559b-4996-abc3-dbc193b2b9dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad7f9ff5-2c5e-4bf2-bfc5-8c0bfac8c980",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a0d3727-42ee-40a5-8420-e534b96ee9c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9910cbc9-da04-4ccb-b17a-2489e59a4a16",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8cb4bac-d5aa-4e7b-a63b-ed49ca090815",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "225ab72e-a274-4c4a-81c9-5f3425b4fcb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e953c7b-09a6-4413-b1cd-14c116b1015d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08c8555e-7a3e-4d67-ba07-b4f056ce8c04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a10b81b-bfdd-4b89-bab2-941726fddc41",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7c64bd9-16af-4465-a30d-8e12444c3fb5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2755e5fa-ba74-449f-bb27-b6263c433f66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94e12e0f-63a9-457b-aa8b-7a3477b9d642",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b62fb2d-6c58-4e28-905c-e5ee8f4ab660"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee8b3a18-7f3f-4821-a3ed-7e753e48e236",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5bb71ed-0587-4134-8510-0e647d5a692e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8dd2fb34-eb51-47f8-813b-5fa399e56e56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59871fd5-1539-4cf0-851e-8d8373c23e5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74fd2a44-77c6-44d1-9a83-cc930a7db678"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a41eb023-7da3-47e0-b13c-93f073ed320b",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bebcd14-d09e-4fd6-a805-914ba009c451",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69988b20-765c-42d5-b04c-58b3a3418577"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a34a0ec-c681-4f5f-a7f3-935d8fda49be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7375432-a628-41d4-9f5c-b5c65173c611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c372cc7d-e9ee-412e-828f-b7616e6db79e",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab386bfa-93cc-4a0d-9065-860acc089a10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc92ddff-a9a9-4418-a6e2-99a0659c570c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f66bcac-0e5e-4ab8-841e-968608f71593",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f926e68c-7b3f-43e5-8f92-1c33c20dd776"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49aad941-27e3-4f56-9f95-49699fc31b8f",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40bf2083-3a6d-4688-8294-dcec8e5990f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b912126c-4b88-4516-804a-1b34befd69f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f26eadcb-e9f0-49ce-b505-3b33af91b8d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7462714-9747-4685-b74c-afc3fcc0a53b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ee49c48-632a-48a8-8cf5-f7bbd5d4d8c7",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7f1ae77-e90c-4b8d-a27a-7ecd3387a7f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba012121-61b2-4021-8444-02bb894dde44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f32ef243-078d-4cea-9ad8-de79748ae93b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83d2c206-c748-4dc3-9e27-b0c4c8e848de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23f0f6b5-bf34-497f-b756-4ba1441430a4",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe646964-efb7-4a32-a649-b0ee79a4d636",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16de1db5-d42c-4601-995f-315fbbbdd0e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c026b7e0-139a-4534-8b5f-daaa26939735",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34fcb8d5-cdc5-4dc1-aeb7-68876af0b9b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c41efa7-4a06-4445-a956-c0ce1d289d56",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca2f8d41-af5d-4d7a-8e2b-3c9ccb1579c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35fc7b7d-5675-4758-ad17-7a474d747c2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9416604-e9ee-4b3d-a49e-6f9f091623e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5229409c-4273-4cdb-a030-e5072f041c0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cca3723d-652a-45ea-b436-e8056b4b3871",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9a264af-42b9-4618-b43c-270c4f240258",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ebcb9dd-e518-4ec9-8da0-2edc0e33ad68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f885a5d-728a-48c0-9035-4f1b31ce7411",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b53ad73c-94b8-4579-96e6-6c981ba0a9bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b168671d-85e4-4c3b-9ecf-cd6dcbc16e20",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84ce9922-56ef-4e95-a5e4-4b940813badf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "195f9448-cdf1-4641-a9ed-650fa32894ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a18acd6c-fc6a-44a1-ae36-e70241cf612f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e21ad3c0-e608-4418-bce2-b0a10f823965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cf49e2d-902c-4ea7-ac30-a506f8856979",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc54e89e-3dda-4755-a253-cc91ba753311",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6b37590-4723-4737-8462-cfed3f186cf2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44faa5b6-b85c-4ab8-baea-a6b9fce862fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9c70a30-77a1-4cfc-bc69-6f9af70598ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb1b4953-8fba-4656-824c-51464fc68e08",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c41c9f8a-3621-4304-9106-e07ee0cc4087",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "791fbcdd-62cf-4714-b352-435e6e6008a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbeb4291-5031-4800-8eb6-13fe03b84fd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c812247-74e6-4830-9be3-859207b13492"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a72c223b-5c26-4089-87e6-360f10a91e2e",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01b9c832-461e-485d-b6db-3f4e8b98f58e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea1df704-c693-403e-859a-c7c97e78be67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f6fd717-8c60-4277-8960-9f93c49ce9e6",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a10bb676-93e0-4767-83f3-e50964bda424"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e127551c-516d-457c-8516-94db7712bb38",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df8298ab-0982-4018-ab03-19e2737983dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e9398bc-cdd4-4637-8c61-bc300abe2816"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad2ea052-c3ab-4317-831b-80984fa3578b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "958f8d27-c7de-4a50-ae4a-9db80c65e5a7"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "db0aa93b-5ce3-42f5-ace1-d90fd74492f3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1f1be67e-036c-4ec5-a781-313d193ec7f0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "771a23cb-6541-4098-9f04-8952cdd456bf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cc166b55-a2fe-455f-9446-96ec27d5fd0c"
                    }
                  }
                ]
              },
              {
                "id": "201df299-1d58-4e73-94ca-f1dd4d7fd97b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c06a894b-e547-431a-b9c2-6f1ff9f2ce0a",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "607e42e9-151e-4029-8b15-ec8f305818f9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "e9f27de7-8145-4be0-95c8-42194e7f5677"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddd00124-dd45-4b14-8ac4-3787896a2b87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3dafca34-1681-4ce4-af60-8ae377ca0f3f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "323946f5-d366-42f3-b8fb-3635e041ae57",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bf759672-8fa8-461f-9093-f0b38fb5ffd7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "49c5d068-6c75-46c2-925e-cbec3142afdf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6f715975-2ed4-4475-a91f-726d7f938dfa"
                    }
                  }
                ]
              },
              {
                "id": "1e15cc26-1724-43cc-84a5-02b7f45ac701",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "58411b0a-5d95-49d5-bab8-e08b2d55b23e",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a484670-e82e-4dbc-8112-ee5715b094b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "7ce6b08e-7041-49b1-9477-4840184de6b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec23466a-6251-4ed7-bd7d-58644b50ab28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f82c6660-4745-4bc6-9038-e964676cfe43"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "43d022d9-9fc4-473e-9d3a-e7b8fc042e94",
            "name": "Positive Testing",
            "item": [
              {
                "id": "84867d02-aedb-43e5-9a05-6113006e17f1",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e3cd7a01-b94d-43f6-a29b-3debf126da65",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6d777c60-5d08-4dd1-b278-6317d085ce60"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c57b7014-ebf8-43c5-870e-2ef21a6e650c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0950d2a0-0403-493e-878b-c61c11933aab"
                    }
                  }
                ]
              },
              {
                "id": "a8dd5631-bdbe-41a4-8bad-97773fec6c3f",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "20058f5f-2b98-4720-af78-cc8d6d9bcb7b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "66da5f63-03dc-43c1-8b50-b2cd26a95471"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2b4d8782-7026-40eb-9a0e-da0fa53febbd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4a97b524-add5-4f51-860b-098b297760b8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0462d98d-8663-4afa-a086-20236e119f76",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "e928eebe-50b4-44e9-bc4e-ce8b811a6be7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6e7ec944-4f10-4461-b5f0-a231a6027a22",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "31571e16-077c-47fd-b1dc-8b601b1ec376"
            }
          }
        ]
      },
      {
        "id": "d2bc082f-045a-449a-8924-73cd676e9e24",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "65864f90-bf77-4370-80b4-78dd07f0bf24",
            "name": "Negative Testing",
            "item": [
              {
                "id": "411035eb-759a-436f-87cd-f350d150f4ad",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d9ff9331-ecdb-4581-a75a-e48d84c98d00",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "290cd3df-79d9-4293-98bf-c31f48253829",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "98a2cd79-18d1-43b5-9b75-c923e96c8ed6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ae2da17-a729-4f23-946c-14e53cbbfd98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8cf7ac3b-48ca-4ef5-a286-f8626c8f021a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6bd74c25-6479-4ada-8997-1189d5ddb09d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b7da046c-12f5-4ea7-b03b-a8b38be3f689"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b386dd8a-e7f8-40d3-803a-ca55e3e88c81",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f2d5d862-550e-4ab2-927c-6682aa437c5c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a199dc33-a37d-4904-9fa8-d837ab319a45",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "a13e9eba-a457-4cc8-bfce-f0e804d01bb5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5556faf8-0d6f-44c3-a7af-a9869a0e934c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f275abc7-f32b-4aaf-8177-ae4b235aed04"
            }
          }
        ]
      },
      {
        "id": "f44753ea-f61b-4c74-96da-6d0f4e82f1f4",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "f21ad0a5-075e-4aac-aa44-086ebb0f306a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "82656615-615a-4109-b6fb-0c8c9f7d62be",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "76e20ad9-48ed-4d71-b0dc-6b90ed174e2c",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c9284af-350e-4bf6-ad37-a4e2965383a5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "885cc9a8-5f77-4bd3-b16b-938a700c8a98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41e64a59-3cbf-4f26-af99-6043a101803b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4ffc620d-5920-4540-87c8-24b6c8d9c712"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9b2d9e15-d235-4b45-9a3a-4f5f2c05858d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "30493d85-c351-47bc-9309-fa1cf9e22f6f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b1596d5f-d4fc-43fa-8e81-71b405748c69",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3450525f-3440-4c55-8240-a2ed517b39fc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a6b5950f-b905-401b-9e40-e42944d72aef",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "03e919dd-58b3-42bb-82f9-2684677cf21a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4acbb38d-ddd8-4f4a-afe0-0cb075773faf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "656cdf9b-0799-4395-ba21-7d740ea2e21c"
            }
          }
        ]
      },
      {
        "id": "e9989701-aec0-4b20-b4ce-b93997569fc4",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "d9919960-af0a-4e76-a345-4ca8ecb6b3c1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "194c004b-2d75-4cf7-8196-9161f821bea6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "11d0d7b6-fc8a-4330-aaa3-7899166c6f18",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e49311b-39ec-4171-9344-7e73e351d0f2",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "adaf6084-5bc3-4e9d-978a-37e04a8a638f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66496dce-fe03-4656-9ae2-e979eea30344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b57973ea-e2bd-48d3-a639-dc44cf586d16"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aee9d8f5-aad9-4103-83fb-9f048ef35a59",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e052b465-b564-40ac-82f6-04aa408aa29a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "03a4fc3b-d0ac-4e29-b9ef-05c467aef748",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "487b5843-1db8-4e48-b564-f4b67b67caa0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "305068df-2204-4460-a817-b0328c1a573e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7a28bd3f-387f-4dff-a39a-c08e940dc0ac"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "07fe404c-d235-4ae2-ba06-14a95d8f3bb2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c3958ea0-263c-401f-a8e0-0dfbdbfa5953"
            }
          }
        ]
      },
      {
        "id": "94fb0d57-95af-4777-8371-7383e36d4f62",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "81861648-0edf-458a-bf6c-74db54d46d6c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7b9bea62-1e0a-4a4a-83b9-f16c5a788f3c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "1b66fc31-b002-481e-93ef-d19c43c98024",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5f496845-6dfb-46f7-88f3-3777e73c417d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f608aec2-6d24-471e-bf40-f12e32a94259",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 161.61904761904756,
      "responseMin": 5,
      "responseMax": 11492,
      "responseSd": 786.2567925074933,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1726361389150,
      "completed": 1726361438092
    },
    "executions": [
      {
        "id": "b51e76b4-96be-4df6-9c15-cb806451ded9",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "9f337092-4551-4aa0-999e-f350e402a604",
          "httpRequestId": "ae2fec59-4d72-4659-93f5-66d6e9c356d9"
        },
        "item": {
          "id": "b51e76b4-96be-4df6-9c15-cb806451ded9",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "be477203-7e6f-46cc-9fe9-c3ef15ca1161",
          "status": "OK",
          "code": 200,
          "responseTime": 45,
          "responseSize": 0
        }
      },
      {
        "id": "de488e44-c918-4ca1-a0e9-ec4c1d56957d",
        "cursor": {
          "ref": "08bfda58-cf58-413e-beb8-806622e5f958",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "f76bbeea-647c-449f-bfed-d9b4d32738a0"
        },
        "item": {
          "id": "de488e44-c918-4ca1-a0e9-ec4c1d56957d",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "27727e80-7667-446d-910a-3aa7578eef99",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "e06e9ca2-ead9-4a33-8626-5ea66db02179",
        "cursor": {
          "ref": "6acecc5c-d3de-44ee-9c3e-6015070dcff3",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "a5b43af6-6b54-419e-ac6d-669174b2dd76"
        },
        "item": {
          "id": "e06e9ca2-ead9-4a33-8626-5ea66db02179",
          "name": "did_json"
        },
        "response": {
          "id": "d2a627ac-e203-4fdd-8f85-fddfa24084e4",
          "status": "OK",
          "code": 200,
          "responseTime": 388,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e65c454-a1ef-4272-8951-0db0b9258b03",
        "cursor": {
          "ref": "73547180-162b-4bf9-97ae-99c45db0f3c4",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "cd84dba8-772b-4da6-a42c-d528e2fe10c6"
        },
        "item": {
          "id": "3e65c454-a1ef-4272-8951-0db0b9258b03",
          "name": "did:invalid"
        },
        "response": {
          "id": "677dc3be-02d3-4f1a-9761-eafba1156713",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1805,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e65c454-a1ef-4272-8951-0db0b9258b03",
        "cursor": {
          "ref": "73547180-162b-4bf9-97ae-99c45db0f3c4",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "cd84dba8-772b-4da6-a42c-d528e2fe10c6"
        },
        "item": {
          "id": "3e65c454-a1ef-4272-8951-0db0b9258b03",
          "name": "did:invalid"
        },
        "response": {
          "id": "677dc3be-02d3-4f1a-9761-eafba1156713",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1805,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d242d9c-6680-408e-b4e3-9cf596903d56",
        "cursor": {
          "ref": "3c9e30c9-0949-4488-a996-5e0dec501fce",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "e3da16b9-0b97-4035-93f0-cd0ec3c83a7e"
        },
        "item": {
          "id": "1d242d9c-6680-408e-b4e3-9cf596903d56",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "99dc6573-12b4-4ee4-92c5-ce5f3751dcf0",
          "status": "Not Found",
          "code": 404,
          "responseTime": 81,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62d9cfce-ed88-425f-9efc-1f962b76cbb1",
        "cursor": {
          "ref": "824a3c80-0540-4920-ad34-696829da1231",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "2432e41f-4d4b-4b82-abb3-65accdecef0a"
        },
        "item": {
          "id": "62d9cfce-ed88-425f-9efc-1f962b76cbb1",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "78bd814b-f76d-415a-a579-6a6da6a622d1",
          "status": "Not Found",
          "code": 404,
          "responseTime": 69,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45d4e603-2cfa-4a02-9aa5-97844e36f1e2",
        "cursor": {
          "ref": "cd5e8d65-c875-463e-82d6-6c384561d861",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "dd569048-7912-453d-8ee4-99a031da169b"
        },
        "item": {
          "id": "45d4e603-2cfa-4a02-9aa5-97844e36f1e2",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "ce630ec4-c13a-4381-aca3-e37424da3bba",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 58,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33ec7bea-3fd5-4088-877c-ba9abdba886e",
        "cursor": {
          "ref": "58d676e2-58f6-498d-be8d-c8de654c3db1",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "acfa6392-6be0-4687-9f75-4d3331a0aeab"
        },
        "item": {
          "id": "33ec7bea-3fd5-4088-877c-ba9abdba886e",
          "name": "identifiers"
        },
        "response": {
          "id": "1cae4718-471b-492a-9b58-28815651207e",
          "status": "OK",
          "code": 200,
          "responseTime": 164,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f5387bb-069d-4ac0-9d67-46f5e98226a2",
        "cursor": {
          "ref": "42dee964-6adf-45af-ba7b-26b275d1d255",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "6b3fd72e-6f43-48bb-a975-4fe2210694f5"
        },
        "item": {
          "id": "0f5387bb-069d-4ac0-9d67-46f5e98226a2",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "c50627bc-002f-4e87-9a4a-1acedeeb4474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55ffc04b-32f5-45c9-a5b8-68ac5ffa9e7d",
        "cursor": {
          "ref": "f4b5abc4-d8a8-455c-882d-fc32e7841204",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "b4459bef-e3f5-4c81-a4d4-2c91ebf52dcd"
        },
        "item": {
          "id": "55ffc04b-32f5-45c9-a5b8-68ac5ffa9e7d",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "993e81bb-97ca-4568-9b4f-e6bcca75bd42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bab8157c-c298-46fb-9757-38acbdcc5036",
        "cursor": {
          "ref": "9998ec23-6d10-4464-b0c5-38b9cf577f71",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "648802e7-51ce-4d0f-a238-aa98159fa78d"
        },
        "item": {
          "id": "bab8157c-c298-46fb-9757-38acbdcc5036",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "609b3929-4f38-49e9-bffa-912fb4aece19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d581f71a-85f2-4623-b881-ec7b9a4ea9ba",
        "cursor": {
          "ref": "a2e2229f-b763-451d-8802-3000e69b98d2",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "d81e19e0-c685-480a-9f81-928baa391dca"
        },
        "item": {
          "id": "d581f71a-85f2-4623-b881-ec7b9a4ea9ba",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "8c773316-0905-477d-ac3e-02bbe40ae3f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "766396a9-6efc-4723-a4d6-57000c592a08",
        "cursor": {
          "ref": "37e4fdd2-f95e-459c-98a9-2609430b1755",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "26f208bd-23e3-4a7f-9fee-c006c4d60f4a"
        },
        "item": {
          "id": "766396a9-6efc-4723-a4d6-57000c592a08",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "ec021312-81d0-4eb6-9980-1c7ec92a3a33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f790b49d-c633-4a77-ab94-28a38c10420c",
        "cursor": {
          "ref": "b634a84d-bc5b-49bc-a8a8-5b6d61a4ffcd",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "0d872d60-9de2-4424-9de5-244d7267804b"
        },
        "item": {
          "id": "f790b49d-c633-4a77-ab94-28a38c10420c",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "75a53b44-84ea-4e30-9d58-37829f71c861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 120,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc99bcf7-0692-449b-b936-fc4edc076403",
        "cursor": {
          "ref": "76ef21c4-0092-4d03-bb14-e553a77f6324",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "cc317776-94a0-49a6-b898-d40e9d48e0c5"
        },
        "item": {
          "id": "fc99bcf7-0692-449b-b936-fc4edc076403",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "dc316b50-40d6-4e92-bcdf-4db3490ccb40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31fc179d-3d4d-4285-99e4-1f55de3caabe",
        "cursor": {
          "ref": "785e553e-11e2-40dd-9c2e-2dccb80efbf1",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "fa3779ab-03c3-4e8a-ab51-023203e687fd"
        },
        "item": {
          "id": "31fc179d-3d4d-4285-99e4-1f55de3caabe",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "65019ad9-67c5-4b87-887c-d6a868f44dab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "106c5e44-69ae-4878-896b-0816ca8249dc",
        "cursor": {
          "ref": "4749eb63-7604-4573-b694-a12298b171e1",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "9a442e53-8d0f-4d15-a22a-f7bd36707561"
        },
        "item": {
          "id": "106c5e44-69ae-4878-896b-0816ca8249dc",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "cff2ae11-7a4d-4257-abfd-9231b93228a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "026097f9-2f05-47fe-ab12-29cec7e3ef1a",
        "cursor": {
          "ref": "dbb8c4a5-e656-49e9-a1db-f525fe11cde2",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "e8a5bc9a-e750-4d94-8124-f3f857fb6aa5"
        },
        "item": {
          "id": "026097f9-2f05-47fe-ab12-29cec7e3ef1a",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "cc8e81a7-d241-43f7-b8a2-d4f583137fa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c974137-6f2b-4739-bee8-a8b7da1a0530",
        "cursor": {
          "ref": "09d2861f-9644-4bd2-8d73-c701cd2b6c08",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "4a7d59fa-1467-4ee0-9e40-017e443149ae"
        },
        "item": {
          "id": "6c974137-6f2b-4739-bee8-a8b7da1a0530",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "6910a761-70bf-41a1-acca-ab2eae1ab6de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78d15f29-145b-42fe-b5b7-5ef837c3b984",
        "cursor": {
          "ref": "06de54d0-df75-462a-bd26-0571f677c975",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "6f9f737c-fac3-4c1c-95d6-c8126fa2684d"
        },
        "item": {
          "id": "78d15f29-145b-42fe-b5b7-5ef837c3b984",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "6d753f8e-372a-4d38-a78a-e1afeffeec29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b5f9c1b-14a0-4bf4-95c1-63a8b040ca9e",
        "cursor": {
          "ref": "18ad5819-8bbf-4853-9fcc-365976c2eead",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "1e1fc623-4f85-4f22-b3b7-37708bfc00d1"
        },
        "item": {
          "id": "3b5f9c1b-14a0-4bf4-95c1-63a8b040ca9e",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "9145a87e-7379-4c17-a169-a65db85a80ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3844010-f7ef-4038-be7f-bb3a63fc048c",
        "cursor": {
          "ref": "69dd2b8b-7bb3-4bd8-97e7-8cdff72859ba",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "ccc8ee7f-4df5-4639-b5c9-6a27e1aa1e36"
        },
        "item": {
          "id": "f3844010-f7ef-4038-be7f-bb3a63fc048c",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "f5365ef5-a4fc-494c-807b-9241b644b0cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f7a9ca7-939e-42cd-affd-726bc5b694ab",
        "cursor": {
          "ref": "24b0fccf-075e-4f64-afe8-0d34667049a5",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "bb2c12de-0c7c-45d3-8481-463400a7fae9"
        },
        "item": {
          "id": "6f7a9ca7-939e-42cd-affd-726bc5b694ab",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "29ebd21f-2117-4aa2-b0f9-1999329e0cca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bee466f0-6d2a-4477-a3e2-90a5e2c2877f",
        "cursor": {
          "ref": "75d58af4-ed95-4550-a0a8-27450dd69101",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "9326db39-090b-49e2-9e1b-86ac0836d3c2"
        },
        "item": {
          "id": "bee466f0-6d2a-4477-a3e2-90a5e2c2877f",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "8ea1270d-35cc-43a2-89a8-6d207fbf25fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7b9356e-9a46-4260-beb9-295ab23d8187",
        "cursor": {
          "ref": "11c3582f-82d3-47d0-9ea3-6c60ba2cb685",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "c86118df-9be6-4634-b8cc-e3d0dacd30d8"
        },
        "item": {
          "id": "a7b9356e-9a46-4260-beb9-295ab23d8187",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "c7debdaa-b4a9-404d-a911-a895459fd64b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91dd0e5c-7658-47f8-b48f-1bd1ef37b7da",
        "cursor": {
          "ref": "75ee2807-9aa6-4717-89ab-1a281e6f9d8f",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "6d05dae2-3fbc-4685-ba53-ed2fac9e9da6"
        },
        "item": {
          "id": "91dd0e5c-7658-47f8-b48f-1bd1ef37b7da",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "559d86b2-5832-4543-a01e-c08cd71af3e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cdb7af7-2ead-41eb-89c7-5acb489e7974",
        "cursor": {
          "ref": "f89a6d9c-9698-49ca-9f8c-40758d810c7d",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "2d393fb2-720b-42bf-be2e-738afdbb3a0b"
        },
        "item": {
          "id": "2cdb7af7-2ead-41eb-89c7-5acb489e7974",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "22ffc853-a272-4bb9-a61e-a7a07c585a12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3ab34ff-f21a-4819-914a-c85a464fb43a",
        "cursor": {
          "ref": "332948f4-52f7-4bfd-8b35-c5d9ff957b50",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "52d4fb0e-2866-4a2a-a7b5-bd44dcb9577e"
        },
        "item": {
          "id": "f3ab34ff-f21a-4819-914a-c85a464fb43a",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "8ba9ae46-199f-47ab-809e-51d0a3569921",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92263837-c471-40e2-9090-cbccbd16c470",
        "cursor": {
          "ref": "42ab1f06-237d-4201-a0b0-8df565344f0c",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "3402aa7c-fbe8-47e7-932e-0ef637fa0632"
        },
        "item": {
          "id": "92263837-c471-40e2-9090-cbccbd16c470",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "3b512625-caba-4e0b-809f-fadf0b04696c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc236e2a-f988-46ce-9afe-87e485921907",
        "cursor": {
          "ref": "76881e12-9b29-44dc-ae8e-26703ff1f230",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "c9de2d64-f98b-4fc9-a325-bb302ec16acf"
        },
        "item": {
          "id": "cc236e2a-f988-46ce-9afe-87e485921907",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "f4d7d26f-74eb-4f96-ba16-2320e9f7ad5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e6c781d-f345-4768-b6da-ecea05743060",
        "cursor": {
          "ref": "3202c56d-5a33-40ee-9863-b27c15750cff",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "89488984-1925-4806-8332-c9dbe48ad286"
        },
        "item": {
          "id": "1e6c781d-f345-4768-b6da-ecea05743060",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "3e3baa61-2032-4a6f-998a-af4a54b4680c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c25100a7-3e85-4dfb-8103-2cfca478bb26",
        "cursor": {
          "ref": "b36c396e-cf04-45e5-af79-9151d6d148a2",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "bc0a796f-2399-4769-b1f1-bab35e346149"
        },
        "item": {
          "id": "c25100a7-3e85-4dfb-8103-2cfca478bb26",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "1450b016-9eca-49a7-b9b0-9bd679364157",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37bd8f47-3055-44a2-8b63-7cea6e46f453",
        "cursor": {
          "ref": "acfd6c63-c573-4b85-a331-302cf1c200df",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "b59369ea-587e-4734-9f36-637dc2ed7f0c"
        },
        "item": {
          "id": "37bd8f47-3055-44a2-8b63-7cea6e46f453",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "673561ef-f68d-4ec0-85d6-bd4283df9186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c24fb8e6-b97b-4116-a321-67dab57924c7",
        "cursor": {
          "ref": "45c64593-6073-45c8-ba30-f6ff58c7adb3",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "2feea03f-e59e-49cb-9ffa-13f2d1103f3f"
        },
        "item": {
          "id": "c24fb8e6-b97b-4116-a321-67dab57924c7",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "f5cba169-6fd8-43af-8db1-022ee747fa18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d10ff18b-b414-4ba4-8e01-9025938014e6",
        "cursor": {
          "ref": "900aa327-148a-4d18-b44d-4b55136a2a07",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "88e2c5a0-d4ef-4a7f-b5a9-6a96aa8b5815"
        },
        "item": {
          "id": "d10ff18b-b414-4ba4-8e01-9025938014e6",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "4fbf10d9-b3bb-4963-a7d6-bcbd4ade1177",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee7e3e60-bd44-47ba-8135-a0f2ec796bd2",
        "cursor": {
          "ref": "f3ab72c3-83ab-4632-9480-ad91115c7ecc",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "4e6a1ac4-065d-432b-bf2d-a71ce6c7cb66"
        },
        "item": {
          "id": "ee7e3e60-bd44-47ba-8135-a0f2ec796bd2",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "fb9fedf6-8440-4ca5-bc6c-59b4588cc2c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eac28af-d381-4c91-babd-7641508d25d2",
        "cursor": {
          "ref": "8247bf71-6a27-44f3-b48d-4ea9a2963702",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "7e71e972-ceba-4947-885b-1304955a7a16"
        },
        "item": {
          "id": "9eac28af-d381-4c91-babd-7641508d25d2",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "60fb8c9a-930d-4542-95bb-ea65c57e9019",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fbd570d-4e48-40f0-ace2-3b7b678af10a",
        "cursor": {
          "ref": "f3ab3220-568d-42b7-89d4-24661b3d5d3e",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "e93017af-2d9a-4df1-b6c6-ccf58f86dbaa"
        },
        "item": {
          "id": "6fbd570d-4e48-40f0-ace2-3b7b678af10a",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "c541df7c-77a1-4e00-b69b-939a33ed5f39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4486d64c-3fae-41f1-879f-e6c2b44d0c7d",
        "cursor": {
          "ref": "2d3a21e4-7228-4375-a6c5-700d8672f757",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "002022b3-9eaa-450b-ab0a-61d6caf6b861"
        },
        "item": {
          "id": "4486d64c-3fae-41f1-879f-e6c2b44d0c7d",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "c87cd1ed-9cb2-4dcd-a068-ab0f318136e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1ecfe98-99d9-43f3-ac2d-bdd1b7a71588",
        "cursor": {
          "ref": "bc9b22d9-1f34-422d-9c55-202b731b875b",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "65a0479c-bbed-4efe-a6d5-628f5704c215"
        },
        "item": {
          "id": "a1ecfe98-99d9-43f3-ac2d-bdd1b7a71588",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "2064f536-e73a-4a82-ba8b-93ce7c4b774d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cef5808-6e52-499f-9818-78e4cc548fb7",
        "cursor": {
          "ref": "8094480a-adeb-4591-9e60-6cecc302a9bc",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "9a888948-e77d-4fbe-ad76-fb9f012324b5"
        },
        "item": {
          "id": "4cef5808-6e52-499f-9818-78e4cc548fb7",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "b2a8be99-1cf4-4538-a880-a134edec7942",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98f5cdb0-4128-43ee-802a-6926d0dd64a6",
        "cursor": {
          "ref": "e681c79f-caa0-4cdd-8977-69131793f835",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "f1fc4bf0-962b-4d40-89c7-d76ed21a6d30"
        },
        "item": {
          "id": "98f5cdb0-4128-43ee-802a-6926d0dd64a6",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "5ba1ef71-77a2-4b3c-8124-0a15721d9116",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44cd4e94-69a8-4807-94b3-a0b817477104",
        "cursor": {
          "ref": "d596d833-5f7a-4a5c-8f47-6378d8fc78d2",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "4210b945-da77-49be-ae43-eb5e597b9449"
        },
        "item": {
          "id": "44cd4e94-69a8-4807-94b3-a0b817477104",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "d23f2943-5e2f-40c9-8c77-e0ac99ce1c22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a0e238b-f3b9-4ce0-bfbd-df4015172adb",
        "cursor": {
          "ref": "9791202c-ced9-482a-998e-38735d64449e",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "256fc743-ba0b-47ad-853d-ca483c1aad72"
        },
        "item": {
          "id": "6a0e238b-f3b9-4ce0-bfbd-df4015172adb",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "ae9777f7-5d78-4548-8b05-7699911a9243",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73e557b8-2c23-449f-8617-a871794be20a",
        "cursor": {
          "ref": "967f24aa-8dfe-4e5e-8465-665a4e1cbfcc",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "6f1e1510-6dda-4b68-b5a3-02fd68374ca3"
        },
        "item": {
          "id": "73e557b8-2c23-449f-8617-a871794be20a",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "fbc5e39c-cacc-4b3f-ae97-6a61c454883d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8ee11bb-83c4-44ed-903a-4ceda2b421b8",
        "cursor": {
          "ref": "cb65e297-ab3f-4464-a409-70a7d5efe7fd",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "6ba818f3-8262-4fb3-985b-4b379203219a"
        },
        "item": {
          "id": "d8ee11bb-83c4-44ed-903a-4ceda2b421b8",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "e8398247-9115-4508-969a-791308178dec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e346c6ae-5da0-4f79-9550-4ec81af14076",
        "cursor": {
          "ref": "434afe20-590a-4ca1-9b08-c84d0dcf8e2f",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "6895a5ea-68b1-4a6a-86d9-e02e46515ffb"
        },
        "item": {
          "id": "e346c6ae-5da0-4f79-9550-4ec81af14076",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "df038ebc-3474-4e7c-8bf7-01169960ae08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cae4807-01e2-4dcc-ad83-f8cb1ab3d8d8",
        "cursor": {
          "ref": "a0e4e5cd-0fa3-4b66-8ae4-bf32e254d920",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "a4096528-0d46-4f3a-9f2d-b3b1797770c9"
        },
        "item": {
          "id": "0cae4807-01e2-4dcc-ad83-f8cb1ab3d8d8",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "7e9570ab-a78f-4efe-bcba-a835f21c8e3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eff96c68-0a19-457c-af2f-876fdec22d15",
        "cursor": {
          "ref": "ac36476c-54d2-45c8-b829-e4408f6f7f71",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "af3234f4-df7c-40cc-9a26-cd78a6f7b14b"
        },
        "item": {
          "id": "eff96c68-0a19-457c-af2f-876fdec22d15",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "2652d76e-11c0-44e8-b399-5c02ee95ac64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd67abce-1b2a-4037-ae61-67bb9b3f6361",
        "cursor": {
          "ref": "1fbb9d2a-6289-40c0-bcf2-2db8d24e29ea",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "1804a92c-869b-4ee0-8388-cefb39709f07"
        },
        "item": {
          "id": "bd67abce-1b2a-4037-ae61-67bb9b3f6361",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "7602e66d-bf8c-48db-b6a6-8edd43b8879c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 153,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca0a9cd8-b090-4552-853e-47ae44280c29",
        "cursor": {
          "ref": "8f8af25f-6a9c-40e7-9fed-c1c3627488ff",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "e1be7ed7-7cc8-4040-83db-a575f17b66f8"
        },
        "item": {
          "id": "ca0a9cd8-b090-4552-853e-47ae44280c29",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "171499f4-a771-4882-8e54-2acf54a3b18d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f002c039-c28e-4dda-bc69-4c79901b589e",
        "cursor": {
          "ref": "67ac3fa0-16e3-4d4b-aa1c-efdada923066",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "e251a0bc-4b36-4336-a1b7-0e2c04421e9f"
        },
        "item": {
          "id": "f002c039-c28e-4dda-bc69-4c79901b589e",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "54687541-c857-4d79-98c1-fa23eb0fb867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccb6fa8f-1904-4788-9950-5d0f6c1abf79",
        "cursor": {
          "ref": "15d6c529-a443-4e34-b9b6-69431dd558c5",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "5f695324-0148-4ea7-83f6-46d249106e6a"
        },
        "item": {
          "id": "ccb6fa8f-1904-4788-9950-5d0f6c1abf79",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "cc888b44-7d6d-4be5-a066-5dc14038fadb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98f859f4-50ce-49a4-9ca5-3c3ff0b832de",
        "cursor": {
          "ref": "922a6240-299c-4399-bf1e-924a3d190d1a",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "e0acd34c-b557-42c8-88d6-5823196f7172"
        },
        "item": {
          "id": "98f859f4-50ce-49a4-9ca5-3c3ff0b832de",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "04177a73-6ba3-41d0-906f-079967b898b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b1f3fab-5e8e-4e60-9067-4c76319d0f58",
        "cursor": {
          "ref": "f85a4ffc-ba3b-4082-9ef4-cd81715e0827",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "c6f6000c-ff48-4f1e-86f9-275504967bcb"
        },
        "item": {
          "id": "6b1f3fab-5e8e-4e60-9067-4c76319d0f58",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "04d86866-e4f8-4069-ba83-446e32ffb074",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51c6df7a-3d82-40cb-a177-ee125661a959",
        "cursor": {
          "ref": "ad6e2ed2-9102-4213-a4de-50c358a9fe96",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "d7209e49-dfb4-4d52-a5c4-d93487453794"
        },
        "item": {
          "id": "51c6df7a-3d82-40cb-a177-ee125661a959",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "4715a040-05a1-4b6f-91b1-217dd593ede2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e476d61a-ec69-44f3-9ef6-de7499af299f",
        "cursor": {
          "ref": "0532876d-1cc1-4926-8f5c-3aafead5580b",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "8156992e-cd36-4588-b805-c3bcfd90b5fe"
        },
        "item": {
          "id": "e476d61a-ec69-44f3-9ef6-de7499af299f",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "21e61008-de02-456b-a2fa-1950a0eb8332",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5feab245-af76-4fbd-8b1f-db278b035551",
        "cursor": {
          "ref": "ba9b3249-edd7-4647-8d45-21077b392363",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "b580faef-e47b-4abe-bc90-fb3a2a235d47"
        },
        "item": {
          "id": "5feab245-af76-4fbd-8b1f-db278b035551",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "d0c02f65-fd82-4de7-9a2b-9ec6386161b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "805f966e-41ed-4b1e-86e6-34c26955c5f1",
        "cursor": {
          "ref": "2e8554b5-3309-4d9b-b951-ab4d7b7b2e1b",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "82da294b-6d9b-4918-8182-1ac037d6cbef"
        },
        "item": {
          "id": "805f966e-41ed-4b1e-86e6-34c26955c5f1",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "845b914c-3568-4640-8a05-f16f2f1122a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81375c3f-af01-4aaf-aa52-a09c819f1dca",
        "cursor": {
          "ref": "9d73df40-b2d9-4911-a3ef-60f624b49a47",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "2ba5acd2-3011-42f1-8cc0-c10ab8814ab4"
        },
        "item": {
          "id": "81375c3f-af01-4aaf-aa52-a09c819f1dca",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "d2665cff-62cb-4618-8540-88ad7214b24c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b7ed841-0086-4fa0-96fb-ccfef91e232e",
        "cursor": {
          "ref": "1eda5ee8-1ffb-40a7-b048-41096b4aab87",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "ee352d60-06bb-4bcc-a784-325e0709f199"
        },
        "item": {
          "id": "1b7ed841-0086-4fa0-96fb-ccfef91e232e",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "9078781b-0d94-4f11-8cf0-cfd73405625f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6bdfe81-0c76-4421-ad28-f1dcf56510b6",
        "cursor": {
          "ref": "d1387595-139c-4d71-86c5-1b3252e69226",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "5fdda919-3ef1-41ba-9a81-8e8ae764b3c8"
        },
        "item": {
          "id": "a6bdfe81-0c76-4421-ad28-f1dcf56510b6",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "377292f1-c10a-4cd0-a22a-bd10c244a830",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b07375ad-5b77-4d1f-bcc7-2f713a234c91",
        "cursor": {
          "ref": "bff9c1d1-e5b3-4feb-b2cc-ccc2f5862f63",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "ad278753-f84b-494c-8fa6-8886068eb175"
        },
        "item": {
          "id": "b07375ad-5b77-4d1f-bcc7-2f713a234c91",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "d97fc9cf-fe4d-4a79-8be8-3944fa55007e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0d668b7-62a9-47cd-a1d2-af766d21b5ac",
        "cursor": {
          "ref": "60a75d21-bca0-44a0-a94a-df7c8c9fc683",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "a77d49ec-4795-4336-a9b6-271f18c9e310"
        },
        "item": {
          "id": "b0d668b7-62a9-47cd-a1d2-af766d21b5ac",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "a07abc95-0c9b-439f-b97a-72a879d4e040",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 125,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5def62a7-389d-4478-9a7c-fd46e1681b57",
        "cursor": {
          "ref": "b65153fb-f15c-4707-9e91-912df0ec879f",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "a14d3f3e-2e7d-4b7d-9a69-31bb3a18011e"
        },
        "item": {
          "id": "5def62a7-389d-4478-9a7c-fd46e1681b57",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "b0305acc-b061-48db-b7ff-645b0170a94c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf7e7606-790f-4451-92ca-14f069b4404d",
        "cursor": {
          "ref": "3b24c2b6-fdf9-434d-bb2a-e2a33e13d69d",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "84d9f620-6b2d-4760-9a4c-a63af5e299dc"
        },
        "item": {
          "id": "cf7e7606-790f-4451-92ca-14f069b4404d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "fe7ededb-3ee1-45b4-aad1-c8f0d02644f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a27e6d1-b290-4cc8-9259-cb71cff81cdf",
        "cursor": {
          "ref": "5621908e-c083-4b00-8206-7b19019c7803",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "ab6c6cb2-e520-42b4-a944-5df0e5796a0c"
        },
        "item": {
          "id": "7a27e6d1-b290-4cc8-9259-cb71cff81cdf",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "355add04-765e-4a11-b72f-93e6a87d9204",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "874cbf62-f570-4446-ab20-22117949f601",
        "cursor": {
          "ref": "6ebc7873-057a-45e9-b84e-772677211949",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "1ef492b3-ea8c-4c5f-b3a3-a0d38624588c"
        },
        "item": {
          "id": "874cbf62-f570-4446-ab20-22117949f601",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "409e10ef-b11e-402f-8351-8d0f511d8c88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 121,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f989a69-e1d8-480f-b8c6-f94c0de32a29",
        "cursor": {
          "ref": "ea84abef-78a1-43bc-9ea6-13b36d9934df",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "fa5a77d8-a8a2-45ec-9af6-5e72e679b3eb"
        },
        "item": {
          "id": "3f989a69-e1d8-480f-b8c6-f94c0de32a29",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "306e5d3e-0f4e-4178-a7a3-a820350aad72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 178,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bef8e651-a211-43b8-b2ec-587fd50f7d03",
        "cursor": {
          "ref": "5ac5f21b-3fd1-4b5f-8a38-5320eef87e97",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "e6fb605d-aaf8-4ddd-acca-5e4cabb6dc66"
        },
        "item": {
          "id": "bef8e651-a211-43b8-b2ec-587fd50f7d03",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "a1363a93-5140-462a-9518-58e13ea47497",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f49e337-4893-4f57-94bc-9f35e3992843",
        "cursor": {
          "ref": "dc292b72-08b0-4aa6-8f9e-83a7e13abd0e",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "3e05a0d5-53c4-4291-8e54-dcb3d696892c"
        },
        "item": {
          "id": "4f49e337-4893-4f57-94bc-9f35e3992843",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "57b66d7c-3d9a-456e-a399-986f7944ec55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cb07baa-27fc-485e-946a-28f7ab0b2637",
        "cursor": {
          "ref": "3e2604c8-a2b1-429d-9c52-e98ea5e87472",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "5580c462-cf62-48fb-9431-64818bc78440"
        },
        "item": {
          "id": "1cb07baa-27fc-485e-946a-28f7ab0b2637",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "4a6a664a-ef7c-4b04-9be8-1bba4426180e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3057ccd-9fee-40cb-8ae1-dfac908e617f",
        "cursor": {
          "ref": "82d48d53-ff34-46d1-8d3f-ad6818fe98e3",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "1b4e4eac-5497-45a4-a937-a890fd83616d"
        },
        "item": {
          "id": "f3057ccd-9fee-40cb-8ae1-dfac908e617f",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "282c4cf7-49c8-4e76-bb9b-158190d483e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67b19853-0f81-43e6-9395-0866813659e6",
        "cursor": {
          "ref": "f617c5ce-d28e-4c44-9347-a071140adf9c",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "a59bec52-bf11-4b2f-8e95-546f38f9c533"
        },
        "item": {
          "id": "67b19853-0f81-43e6-9395-0866813659e6",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "84ea5a32-0f52-412e-8c8d-0ca64785c961",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6406e4c2-293d-4746-9976-ea9fd45f02fb",
        "cursor": {
          "ref": "1498cd24-ae5b-4187-869d-49da39d4dd99",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "8dea9680-57f0-4f74-82a1-d926681adfcc"
        },
        "item": {
          "id": "6406e4c2-293d-4746-9976-ea9fd45f02fb",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "44cd7849-94a7-402d-a256-bc5544bef5bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89786ee6-4bce-4ed9-ad9f-6a07a818adf9",
        "cursor": {
          "ref": "d8b634aa-21e3-4c6e-83db-94ebf8a02cdb",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "d86227dd-06b9-42a3-8ea6-d8afadf55f41"
        },
        "item": {
          "id": "89786ee6-4bce-4ed9-ad9f-6a07a818adf9",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "b0b8988b-d107-4c91-bf13-99006ffd5cc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecd6fe50-ce51-4385-9b59-b073dcc8e58e",
        "cursor": {
          "ref": "bf486800-2782-4e88-a839-6494d65738e5",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "3f6d6ac6-873e-4131-bb8f-7ec62e6c29bc"
        },
        "item": {
          "id": "ecd6fe50-ce51-4385-9b59-b073dcc8e58e",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "1aa018f2-a52e-4afb-a6b9-fafde1e2ddb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aece91e-73c1-4f3f-b209-38eb8ec13b30",
        "cursor": {
          "ref": "505884fd-7afb-4f3b-9b5c-8a8a5ae8402d",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "92230fb7-cdbf-45bf-a665-56d4c44d95c5"
        },
        "item": {
          "id": "5aece91e-73c1-4f3f-b209-38eb8ec13b30",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "42d16bc6-bd9b-4a75-8bba-5f1c04d99b2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 117,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43a6c839-dc34-492b-8468-83a9b167b67d",
        "cursor": {
          "ref": "4dd83f3f-d464-41b2-bb29-bee1c68ae0c7",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "f7eb833d-d789-4bf0-a03b-31b6c680a827"
        },
        "item": {
          "id": "43a6c839-dc34-492b-8468-83a9b167b67d",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "2d21ea30-9c07-4217-87f8-aca3fcc45c33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0caef0be-2c47-443e-9890-4c5663fb48b4",
        "cursor": {
          "ref": "45fa195d-6e29-4359-a6c4-cd4e57674ae3",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "60631847-fd5b-462b-912c-8a016684d6c7"
        },
        "item": {
          "id": "0caef0be-2c47-443e-9890-4c5663fb48b4",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "45e4ac19-bdcb-406f-9bbd-10a4ed3aad2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60fcfb94-9c31-451d-8abc-e7cba7902f1c",
        "cursor": {
          "ref": "b7112839-bd84-44cd-9e77-4f8fcb042669",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "2f0e0dfc-663a-4a3d-bded-2a7080181e95"
        },
        "item": {
          "id": "60fcfb94-9c31-451d-8abc-e7cba7902f1c",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "3f57af12-fa3d-4f59-a1d6-dd3f6750c983",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 130,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "766c70d7-a337-43ef-ab08-4bdbc94a3ee9",
        "cursor": {
          "ref": "4ca2d149-81b7-46ed-9496-9f948cd0d594",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "de56c7d6-aace-4dd0-a238-7779e20b3f71"
        },
        "item": {
          "id": "766c70d7-a337-43ef-ab08-4bdbc94a3ee9",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "22ee8b6d-bc08-4ef0-b3f8-f22586da2b1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40e9ab85-804d-4a0e-92ce-531607dac350",
        "cursor": {
          "ref": "0840d7f6-2f8e-4e2f-8fe5-fc1cefe3e8e0",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "0e45c10a-4636-4789-b3a3-5770e1a066fb"
        },
        "item": {
          "id": "40e9ab85-804d-4a0e-92ce-531607dac350",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "cc13b9dd-649d-4387-b67b-ac3ee184b959",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4a38ce6-a4e6-48e2-b6f2-5933fbaafe3a",
        "cursor": {
          "ref": "f75a1d0b-1023-4e4e-bb52-a80e4844d155",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "edba29ee-5828-4467-bfc5-56890453b779"
        },
        "item": {
          "id": "d4a38ce6-a4e6-48e2-b6f2-5933fbaafe3a",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "deff23b7-1aa9-4d76-8fd5-fe43b234630c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a64ee5f7-ca42-4e5b-9d92-64db461ada63",
        "cursor": {
          "ref": "608f2e4d-59a5-4eb2-81e8-cb4e2da20701",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "ed3ea90d-7e3b-4c82-9867-35f1f008ad26"
        },
        "item": {
          "id": "a64ee5f7-ca42-4e5b-9d92-64db461ada63",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "d930cf19-23cd-4a4c-811b-6317a93b62e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58d25f8f-3e2f-4f4b-b696-3ef6bbac60fb",
        "cursor": {
          "ref": "6ff7cfc5-35db-4fda-b361-aca06f50c142",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "d7521416-ffa2-4852-8ac2-c448436a24a9"
        },
        "item": {
          "id": "58d25f8f-3e2f-4f4b-b696-3ef6bbac60fb",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "b7e332c4-4916-4b10-8aef-a864f5335e48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e324425b-ef9d-4a55-8a9a-a2ab15be01b6",
        "cursor": {
          "ref": "4c45b26a-a038-4c67-90c9-ab1340bdf8fe",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "3a64e826-8242-468e-9877-a91449fd03a1"
        },
        "item": {
          "id": "e324425b-ef9d-4a55-8a9a-a2ab15be01b6",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "23bbba76-79dd-409a-b7b4-0fa8681fc808",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56743847-e85b-40e4-b509-2e62fe68a963",
        "cursor": {
          "ref": "cb6cbf90-cf6d-4df0-8907-50d0d91becb1",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "92eeadfa-4c31-4cd3-b1e1-ff881bae20de"
        },
        "item": {
          "id": "56743847-e85b-40e4-b509-2e62fe68a963",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "70006edb-b8c4-46d8-845c-d0a15146d77c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29e82ec0-2b71-467b-8509-31f4037e6081",
        "cursor": {
          "ref": "8766fe8a-b07d-478f-9a2e-423ec636722a",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "b87fcbd3-5164-44c6-837a-a14ad3f66bfa"
        },
        "item": {
          "id": "29e82ec0-2b71-467b-8509-31f4037e6081",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "a19ee258-ea37-4a11-9941-1c327a30fb77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db56a931-6819-4ebb-ac21-6ef5cc191cde",
        "cursor": {
          "ref": "9c83a9e1-7f9d-4cf4-8528-3de63f62a7b4",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "867b4041-0027-4b5c-b35a-a4349a11b1b4"
        },
        "item": {
          "id": "db56a931-6819-4ebb-ac21-6ef5cc191cde",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "78886e48-a9fa-4ea1-81a1-102accc4b81f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f4ecd3b-fc35-4bdc-991b-29e87397f788",
        "cursor": {
          "ref": "e81b4045-574f-413e-bc2a-649f52461877",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "ff4a8206-9cc7-4ee8-aa80-ed3cd608deb2"
        },
        "item": {
          "id": "2f4ecd3b-fc35-4bdc-991b-29e87397f788",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "9b001eb0-49cc-42cc-b9da-78e7015ed72d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f52e5db-8f2c-4780-949b-c0877d81581f",
        "cursor": {
          "ref": "9bc15ca0-5350-425b-b344-21b267eb3142",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "8f9f0fc2-00e3-4ca7-9f4b-d21b7e2fdda2"
        },
        "item": {
          "id": "7f52e5db-8f2c-4780-949b-c0877d81581f",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "fcb2fa7c-acc3-4574-ad3c-31c1b64f6aa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fb45f39-642f-4be2-bf06-b282fc7aed75",
        "cursor": {
          "ref": "a2687f53-3ed7-4a80-9397-aa4fa49747d7",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "fbcfb0b9-28e0-4011-9b1a-a85fde2137d7"
        },
        "item": {
          "id": "6fb45f39-642f-4be2-bf06-b282fc7aed75",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "7ff44483-0d93-412c-81a9-ae7e283464c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a874e74-8a7f-4376-b39b-4aa44c97b788",
        "cursor": {
          "ref": "24c798c1-a7ab-4fdd-a45d-986d5141c3a1",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "8f2d530c-b9f5-4cfd-a287-b4796881b83f"
        },
        "item": {
          "id": "3a874e74-8a7f-4376-b39b-4aa44c97b788",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "7c8146b6-8b12-4b30-a66f-4dac8dcfd902",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0009b7e9-33c3-4626-8519-1c78d0ea9717",
        "cursor": {
          "ref": "0883097c-6a3d-4572-b2b9-1494ede72df1",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "804c6e47-2f97-4762-8930-f9780f44ebf9"
        },
        "item": {
          "id": "0009b7e9-33c3-4626-8519-1c78d0ea9717",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "fc4b226b-213b-4628-98db-3deb5e91b5fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "711541b4-df43-4f65-8b6a-36aefbc25aa1",
        "cursor": {
          "ref": "8394059e-2a87-401a-ab73-395945e4be35",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "ac2d4c34-58e4-4b68-b80f-242d58617f8d"
        },
        "item": {
          "id": "711541b4-df43-4f65-8b6a-36aefbc25aa1",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "ecc524fd-6fc4-4a13-ae37-facf07e4e9d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0974d67-aef7-4985-b394-6d382b0d31b8",
        "cursor": {
          "ref": "cad0fd55-c728-4ec6-b2c0-481f7b53f4ec",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "5db34512-d83b-45d4-8a38-009cdce1004b"
        },
        "item": {
          "id": "f0974d67-aef7-4985-b394-6d382b0d31b8",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "5da0b164-ffab-42d0-9505-32cbd8422c1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56cb34f6-6b50-498d-a21e-3f1997825307",
        "cursor": {
          "ref": "c2aadb36-1ba4-4e38-834f-48656fd7023e",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "55adba4c-e026-4ff8-8b47-025d3d7950e0"
        },
        "item": {
          "id": "56cb34f6-6b50-498d-a21e-3f1997825307",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "51b4f958-1045-4652-a4d9-9eadf024ef98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d14464bd-ddbe-42af-b2bc-17d6b8693d32",
        "cursor": {
          "ref": "c3f332b7-73fb-4c03-93be-e51a71fa3f08",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "c1ca6c7c-b907-4623-bf05-4f9b1abfabd8"
        },
        "item": {
          "id": "d14464bd-ddbe-42af-b2bc-17d6b8693d32",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "56032d9f-0ab1-4732-a7cd-adfd875c4ad3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be5865d5-8962-45ed-aa09-48ab25041a78",
        "cursor": {
          "ref": "1a67a925-509f-4144-a3a5-76da619fe499",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "fdbdd0c1-3e1c-482f-a90d-39da0b6ce7ed"
        },
        "item": {
          "id": "be5865d5-8962-45ed-aa09-48ab25041a78",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "8b4d367b-4aca-42fa-8782-0d737f2cbe80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5734faff-24e6-4415-afaf-7458a70ff88e",
        "cursor": {
          "ref": "a52d2fd0-9549-4040-831b-950e6d015e14",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "4153a6ab-d8f6-49e9-958b-d0625f4e519e"
        },
        "item": {
          "id": "5734faff-24e6-4415-afaf-7458a70ff88e",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "065f0694-b035-4001-ab26-50f5fbd031aa",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 58,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b79b4a2-0424-47db-a3c4-8629d050dd25",
        "cursor": {
          "ref": "44e81987-7e39-41f5-a7aa-d2e6f7faa0c4",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "bf9e32ed-523b-4205-8d95-e0386109b16e"
        },
        "item": {
          "id": "5b79b4a2-0424-47db-a3c4-8629d050dd25",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "4823b4a9-f917-408d-872c-1468202835a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "4d83bee8-0826-4e53-84f9-54f0da26a26a",
        "cursor": {
          "ref": "ad325318-70f4-4454-ba5b-af04620010c8",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "fc4de105-6671-4e8d-9f21-be32c01e4eb9"
        },
        "item": {
          "id": "4d83bee8-0826-4e53-84f9-54f0da26a26a",
          "name": "credentials_issue"
        },
        "response": {
          "id": "7fff6c78-1681-4401-b551-3b57bad3f1b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "76698769-e5c7-454d-8959-2763b2ede564",
        "cursor": {
          "ref": "68d4a644-f117-4a27-b71c-8d49e3a1cd28",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "d80ae018-81f2-4b3f-b8aa-07453604fc50"
        },
        "item": {
          "id": "76698769-e5c7-454d-8959-2763b2ede564",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "ded5b77e-4d74-44e2-a126-cd87441b8fc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "1f1bda48-8b10-4a39-9f58-d542e76485e0",
        "cursor": {
          "ref": "f830d5a1-fb50-4c8b-8df1-5dfe1acbddcf",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "cc3a6d75-416d-45fb-ab89-ebec260cb1f7"
        },
        "item": {
          "id": "1f1bda48-8b10-4a39-9f58-d542e76485e0",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "47dc376d-8c4d-4559-89b1-576fdfa00ac1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 191,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "a6f2428f-fcc8-4260-ae46-af718d5356f9",
        "cursor": {
          "ref": "07a213f1-2baa-4a2d-b973-c78c4d3549ea",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "1f4c2245-be1d-4e7f-b366-ddb3b3e2b37f"
        },
        "item": {
          "id": "a6f2428f-fcc8-4260-ae46-af718d5356f9",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "9bbff8f6-4fb8-4713-9702-3da36814e2ae",
          "status": "Created",
          "code": 201,
          "responseTime": 11492,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "24d83f4c-9d5b-4e92-8799-7b939b9c9cb8",
        "cursor": {
          "ref": "45e102da-4a03-4d54-bc7b-7dab3525bd08",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "475801da-532b-497a-b530-0c90c43ad09d"
        },
        "item": {
          "id": "24d83f4c-9d5b-4e92-8799-7b939b9c9cb8",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "96724e42-8a34-47ac-b0bc-2ce40ace2259",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "b1434780-70b8-4aeb-a11a-6e3370c84be7",
        "cursor": {
          "ref": "2b8dee08-5cce-43eb-8ab4-c1e82eacf4f8",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "e3e77cd2-d3af-4529-b4a0-62e4df24662a"
        },
        "item": {
          "id": "b1434780-70b8-4aeb-a11a-6e3370c84be7",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "efedd417-4d71-4897-86da-8017d5038b6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "a744b3f7-7d08-4251-bfa5-94332dd56891",
        "cursor": {
          "ref": "4c8f49f5-cb94-4b1c-8981-d4fdcbe4d986",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "a10e33bb-6cc8-4df6-b3c0-2f8e1dc6106f"
        },
        "item": {
          "id": "a744b3f7-7d08-4251-bfa5-94332dd56891",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "0dc3f4b3-753a-45fd-acde-d945fc62dca0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c255a562-f604-4c20-8102-65c498a8c0fd",
        "cursor": {
          "ref": "07499690-5c6b-4605-81b6-aed467ac98b3",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "06cb1ca5-24f9-4033-991e-4bafcfb57421"
        },
        "item": {
          "id": "c255a562-f604-4c20-8102-65c498a8c0fd",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "3e9b90c2-bcad-46d9-ae9f-7e2d1271effb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "614c1798-564f-4e3e-803d-3a8af9f95b4d",
        "cursor": {
          "ref": "eb32a17f-0483-4d03-9be1-6ebd76401c29",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "3a9e29e4-a4ac-45c4-adb2-dca7b9f94c9b"
        },
        "item": {
          "id": "614c1798-564f-4e3e-803d-3a8af9f95b4d",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "b448455c-c605-43d2-908b-8fb626a07105",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7b8790d-51b4-451e-afc1-5f9f841d3ffe",
        "cursor": {
          "ref": "fd126a8c-dc49-4b72-8bd4-243579558f42",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "e95b2be9-5c70-4f7b-bc38-e615ca680af3"
        },
        "item": {
          "id": "c7b8790d-51b4-451e-afc1-5f9f841d3ffe",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "0c450525-c557-4b52-a25f-ab51f0464d9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf45a337-b0d9-4f79-9037-441e25279b3b",
        "cursor": {
          "ref": "6afa1207-ed2e-4b13-88b8-5542dd13f7f8",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "088bc602-1347-4e14-ab56-c80b9467285c"
        },
        "item": {
          "id": "bf45a337-b0d9-4f79-9037-441e25279b3b",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "51b298b3-84e1-4e9b-97ea-9acd01fd6302",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24c7606d-1c6c-43b7-84da-6ea360c3016b",
        "cursor": {
          "ref": "4c0cef7b-55cc-4fcc-805e-8581676591f2",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "329f5c7a-8254-4963-a754-31f1df999aa5"
        },
        "item": {
          "id": "24c7606d-1c6c-43b7-84da-6ea360c3016b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "c910ec89-b19d-467b-bd65-bc8a51e60d3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c106bf74-72cf-4d21-ad24-5ee71381bb8c",
        "cursor": {
          "ref": "c4be239c-4dc0-469e-aa26-1064f87179ff",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "c3e1c381-2003-4291-a80b-d81b401159ed"
        },
        "item": {
          "id": "c106bf74-72cf-4d21-ad24-5ee71381bb8c",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "62702c47-d3d0-4261-813c-1253ca967f82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f4bfefa-aa46-4a8a-845f-475fdf348088",
        "cursor": {
          "ref": "c213259c-bce3-443e-bae6-b31fd2a242a4",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "6a385423-9338-46ba-96cf-f7a8301455f6"
        },
        "item": {
          "id": "6f4bfefa-aa46-4a8a-845f-475fdf348088",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "cca2a14d-b9aa-42cb-a7ff-a0fa5dfee95e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9467b630-d1df-41cd-8df4-86de68d73019",
        "cursor": {
          "ref": "2d2dfe27-e8cf-4e15-b2e4-ef393e49b0ca",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "55df4f10-dd30-45cd-9dc6-e25ec7831f04"
        },
        "item": {
          "id": "9467b630-d1df-41cd-8df4-86de68d73019",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "4b12fb89-76cd-4b3f-aeb6-ae28fcb43c29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80b5037a-4435-4e2a-8a04-3b67d5fb39b8",
        "cursor": {
          "ref": "25a7765b-a462-419c-83b8-4feb937c2c3a",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "e3659222-f975-4e20-bc56-1af698a767d6"
        },
        "item": {
          "id": "80b5037a-4435-4e2a-8a04-3b67d5fb39b8",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "affd6cbc-1458-4964-85a1-a5c50c5d7944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d5aafb9-7238-4189-9a9d-e9e82b41d831",
        "cursor": {
          "ref": "b08115b8-a6ed-4565-affa-4968817426a2",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "b82229ca-dd4a-405b-b8f4-08797bc35816"
        },
        "item": {
          "id": "6d5aafb9-7238-4189-9a9d-e9e82b41d831",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "11377b03-4532-42c8-a355-01e128d0eaad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e44bf32-1d5e-4795-918a-95df726d5af6",
        "cursor": {
          "ref": "e8e1f228-6670-4fa0-87d1-e4c439f67cde",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "11486768-1445-45cc-8324-202720efeeb7"
        },
        "item": {
          "id": "4e44bf32-1d5e-4795-918a-95df726d5af6",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "fb0138db-1fb1-4c95-9ea0-d59a4f1fdb96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9bd0e48-4fc8-4215-ac4e-2cb260754dd8",
        "cursor": {
          "ref": "72dd050a-06e1-49ce-b1d8-e7231ef38518",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "aa8ebefb-76cc-4955-bf29-7333e2ecd0e9"
        },
        "item": {
          "id": "a9bd0e48-4fc8-4215-ac4e-2cb260754dd8",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "28072a6f-0080-477f-9747-7486b9e0a829",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7235f69d-e7c0-459b-8d3a-783be49ce348",
        "cursor": {
          "ref": "5839936c-fc97-408d-9c22-0f27c8ad7425",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "c7107f01-fae7-4b49-a700-ca1474e43100"
        },
        "item": {
          "id": "7235f69d-e7c0-459b-8d3a-783be49ce348",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "62315275-42c7-4e21-a573-6584a2d0cd7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e72734e-d3ac-42ae-9e92-6aaa0da1b675",
        "cursor": {
          "ref": "7c0545a8-d6d3-45e1-93fc-166eea730571",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "3e549b59-d56d-496e-a2c3-2e698740a128"
        },
        "item": {
          "id": "6e72734e-d3ac-42ae-9e92-6aaa0da1b675",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "40c0ac87-cf60-480c-8667-0cb54d8174c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9206c76e-ebdd-4b7a-a6cf-91349fcc8ffc",
        "cursor": {
          "ref": "ee227966-19d5-447a-8a36-0e5c3c133775",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "844c8180-9c26-40cf-86a1-6ab71762e77c"
        },
        "item": {
          "id": "9206c76e-ebdd-4b7a-a6cf-91349fcc8ffc",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "7d7de6e4-5ef2-4fcd-86ee-36bf450f8f3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65073b99-7ad7-4a65-9eb8-cbc956ed01e6",
        "cursor": {
          "ref": "7f6cc1df-006e-4e26-8bf3-aafb858a7adc",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "8bbc33f6-389d-4080-be69-0e489b7536e9"
        },
        "item": {
          "id": "65073b99-7ad7-4a65-9eb8-cbc956ed01e6",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "a9459302-4daa-4849-9afa-d6b2fbd84325",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 69,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "9f7f328a-a289-4121-bc2a-e156f22b9f62",
        "cursor": {
          "ref": "fa8dc60c-e972-44eb-9418-79dd4d494f86",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "3f354fa4-9383-4378-9b95-480911090841"
        },
        "item": {
          "id": "9f7f328a-a289-4121-bc2a-e156f22b9f62",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "069ff385-7cdf-42a6-9d42-efefb76f3779",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1372e435-e3a6-4bac-9d02-65da9703b0b6",
        "cursor": {
          "ref": "494e2e96-9f00-4cb7-821d-042432f177d0",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "b3f9e70f-bef2-4f11-b9c9-f4d4eaf69404"
        },
        "item": {
          "id": "1372e435-e3a6-4bac-9d02-65da9703b0b6",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "0ca4b478-c71c-4af0-8997-06be07bbcd7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d129a259-caf0-4b65-90aa-9fb3c87be72e",
        "cursor": {
          "ref": "d652209d-54ed-4716-aff6-338a2b223ed4",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "69c08d01-a66b-4696-aaf7-c1954d773f21"
        },
        "item": {
          "id": "d129a259-caf0-4b65-90aa-9fb3c87be72e",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "1e1490db-3c34-4948-9f69-a308c42efdff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4101c700-3cef-4c80-9689-69703ea5dd17",
        "cursor": {
          "ref": "eef42d48-2a78-45be-b289-6153a94230fe",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "2bad87c4-6aca-43f2-812c-09dbb17ca1ba"
        },
        "item": {
          "id": "4101c700-3cef-4c80-9689-69703ea5dd17",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "8e614d89-9227-4ec9-8fa3-ae38587e7b91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62cea72b-b254-4e06-bcc1-4be50a7def4a",
        "cursor": {
          "ref": "bb57b455-e34d-4c10-a0da-c29482fd674f",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "4c6ab3e7-6c7a-46aa-a65d-abf81f213eb4"
        },
        "item": {
          "id": "62cea72b-b254-4e06-bcc1-4be50a7def4a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "6171f71d-34d8-4a37-8130-e63275263aa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e172d18c-08f4-47ea-9ff6-090128486468",
        "cursor": {
          "ref": "c39e0f5b-0695-40dd-85c3-2a3deda3d211",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "f76c7dcb-3b98-44d0-8d8f-aab894989107"
        },
        "item": {
          "id": "e172d18c-08f4-47ea-9ff6-090128486468",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "bb7789b7-a811-4d95-a160-a88c15de15ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9758b323-d426-4928-ba9b-d8fde416bd4b",
        "cursor": {
          "ref": "f13c5056-7f19-4cbb-bc1d-298f15d62954",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "22cf1e58-adb4-4107-bc33-7c1c0829967e"
        },
        "item": {
          "id": "9758b323-d426-4928-ba9b-d8fde416bd4b",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "310ca26b-0553-4ad5-8d97-e00790a19986",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1b59ae7-ccab-4c52-a105-ba61c0d12940",
        "cursor": {
          "ref": "c2267282-773d-4f41-b79a-ed39a3f068b5",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "b3d33124-4c3e-4405-aaea-a764617b5e2c"
        },
        "item": {
          "id": "a1b59ae7-ccab-4c52-a105-ba61c0d12940",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "9a82b20a-70ec-46fc-8bc2-a7ca0cebbea2",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 85,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "294a2757-3a68-4e67-9005-96606f85561c",
        "cursor": {
          "ref": "6f3cd8ea-4c52-404d-b220-0b7cbf64088e",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "30c6e9eb-5c10-449f-b6b7-0e4960c70ee6"
        },
        "item": {
          "id": "294a2757-3a68-4e67-9005-96606f85561c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "49024a77-e049-4222-a5b9-465dc5ee1b34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bd45587-0b15-4d86-9960-e5a32133f63f",
        "cursor": {
          "ref": "80bb4cbf-d292-434f-ab6d-1f41f635bf2a",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "f886c7c8-2592-45a4-bce0-a03710f08a4b"
        },
        "item": {
          "id": "5bd45587-0b15-4d86-9960-e5a32133f63f",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "e9fba007-8ac3-45db-bdb6-8f600a3cb048",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0788e2c6-3511-495b-878b-4b4a3660b263",
        "cursor": {
          "ref": "5ded7859-2c1f-4f0d-b60e-72facb13d01b",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "d8b513b7-f4ce-4b8c-ad1b-2ad18684d8c0"
        },
        "item": {
          "id": "0788e2c6-3511-495b-878b-4b4a3660b263",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "fffd370a-78ef-4a6c-88f7-cd859667fa84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d2645ca-cc75-4dbc-8e90-2823e128abfa",
        "cursor": {
          "ref": "4cb76d55-e89f-4355-900b-8635f3bb4b1d",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "7b83f943-821e-4f99-9a46-08b15b0ada7f"
        },
        "item": {
          "id": "8d2645ca-cc75-4dbc-8e90-2823e128abfa",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "7cbbbf04-01e7-4e50-9871-a776d5cdecc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e201a8ec-c1e9-4e45-8dae-da49b1b3fb99",
        "cursor": {
          "ref": "5e35fc01-b4d8-4d53-807d-bfc028b23854",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "947aa8e3-bb70-4d18-9eb0-087f07677eef"
        },
        "item": {
          "id": "e201a8ec-c1e9-4e45-8dae-da49b1b3fb99",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "205841e6-2188-48b1-aa22-ee1977063a54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b73f4f1d-1d9f-46cc-a5b9-7b5bf5377169",
        "cursor": {
          "ref": "8f32d0d8-73a1-45fb-8c08-75f6b901e93a",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "d91d66e4-1afa-43a0-9818-07f706e318d5"
        },
        "item": {
          "id": "b73f4f1d-1d9f-46cc-a5b9-7b5bf5377169",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "4c484662-ad51-4ada-933a-fb6cac4aee14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fe9194d-31f4-4b2e-8517-219c0cb6d1f4",
        "cursor": {
          "ref": "c82abdf9-748d-4174-bd0b-77c63a021458",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "cc1c6a4e-456e-439f-a95a-152d3e155c7d"
        },
        "item": {
          "id": "0fe9194d-31f4-4b2e-8517-219c0cb6d1f4",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "411d4945-a12a-4e35-9846-0d34ca428914",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 64,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "39124cdd-2ab6-4113-87dd-93ef0020c610",
        "cursor": {
          "ref": "87089699-6cfc-44c2-a205-bcd7c85183be",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "baa1fa54-55cb-40f1-94b2-8abd191ac56e"
        },
        "item": {
          "id": "39124cdd-2ab6-4113-87dd-93ef0020c610",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "2345797b-1087-4226-81fd-17c9b46d3fa2",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 63,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "aeb2cefa-5bbf-4da2-adf0-3684a57d0e44",
        "cursor": {
          "ref": "fe171a10-7049-4574-b014-1f7ac09096da",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "4e007941-8d66-406a-9fd3-91cdd83bf7b4"
        },
        "item": {
          "id": "aeb2cefa-5bbf-4da2-adf0-3684a57d0e44",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "bef3ea95-5edd-4b53-984e-afd18a82dd72",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 86,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "fe5f9d39-20bd-425d-988b-8ec95afad9e2",
        "cursor": {
          "ref": "d0e0a601-10cd-44c8-ac28-8083bdbd48e0",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "55673227-fc1f-4c2b-9b39-04f96f9dfe45"
        },
        "item": {
          "id": "fe5f9d39-20bd-425d-988b-8ec95afad9e2",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "ecba0fc5-eef2-4545-8d66-7d2f1866972c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 64,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "7cb745f3-2273-43bd-abfb-5ef20619af79",
        "cursor": {
          "ref": "2d82e693-0552-4291-b48a-38774315d269",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "d13fee17-16f6-4b43-b503-8ac6de2ff50a"
        },
        "item": {
          "id": "7cb745f3-2273-43bd-abfb-5ef20619af79",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "f5e845b0-3cb9-491d-82c8-ecd9bd4c4800",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 64,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "e4cdb8b8-c3fc-47ed-a231-ad32954c95f8",
        "cursor": {
          "ref": "a3d8dd6b-af68-4f48-aa48-0f9919bd5495",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "03b7b5bc-1e98-466a-9694-aff62d7481ee"
        },
        "item": {
          "id": "e4cdb8b8-c3fc-47ed-a231-ad32954c95f8",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "6de8821c-1e1a-4ea6-b0b0-955f801b2380",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 68,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "8c4f6025-8d2f-43c1-8733-d932be5720bd",
        "cursor": {
          "ref": "f43431c0-9545-4c62-9ef6-c14ba2bebaa5",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "dbb752d4-68a8-499f-98ab-82f19d385022"
        },
        "item": {
          "id": "8c4f6025-8d2f-43c1-8733-d932be5720bd",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f7a49591-9019-424d-8e31-3bef6a79bce7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6839748c-e970-4e51-9594-45e4ff381d1a",
        "cursor": {
          "ref": "cc3b434d-6ff5-4fec-9d6d-9df5f9faafd1",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "d71d008a-7552-43ff-9027-53276880b45d"
        },
        "item": {
          "id": "6839748c-e970-4e51-9594-45e4ff381d1a",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "cc856a03-3eb8-4893-a02e-4ef94d2bccb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34cb8f2b-f9ea-41bf-a139-dd64d7a70926",
        "cursor": {
          "ref": "5d202631-f840-48f5-8dd7-47ce1ffcb4c9",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "c2ab77e5-0d21-48b3-a58e-c838d45be5f8"
        },
        "item": {
          "id": "34cb8f2b-f9ea-41bf-a139-dd64d7a70926",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "f0bd6bd8-0018-44d5-8397-e6fdc06ec049",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4746d2b6-461b-40b4-abf8-cd274b83c77c",
        "cursor": {
          "ref": "cca74894-0fb1-4897-aef8-8bd1e98a679c",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "84fbcd5e-a4a3-4de6-a193-3030103940fd"
        },
        "item": {
          "id": "4746d2b6-461b-40b4-abf8-cd274b83c77c",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "25441c6e-c791-4950-945a-5aa3a601f8be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc198dc9-5c3c-4a82-8966-e553fb574b67",
        "cursor": {
          "ref": "978b8b38-3d27-4830-86fc-b7f4c4533a99",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "725619c2-71df-437a-9ca5-e4fe55082159"
        },
        "item": {
          "id": "cc198dc9-5c3c-4a82-8966-e553fb574b67",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "55debf0e-9c16-4b9b-9473-8aa6563f6599",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17b3809a-03e4-4cc8-b0d5-8a3db6123539",
        "cursor": {
          "ref": "e979fc12-2633-4fcf-a894-b9c7edbc5645",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "29aa1f3e-770a-41c7-b043-6736f135d303"
        },
        "item": {
          "id": "17b3809a-03e4-4cc8-b0d5-8a3db6123539",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "6dd886bc-0e1a-437e-9e41-d5627b477e57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b957d45a-0b7e-4ea9-8d6c-30973572be1f",
        "cursor": {
          "ref": "4399af38-de5b-442e-bf86-554de4c00bd0",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "debdcbff-6e01-4f15-becb-e8859594d55f"
        },
        "item": {
          "id": "b957d45a-0b7e-4ea9-8d6c-30973572be1f",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "db270bdf-bd3e-4b83-b710-83fde91bed09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "557f5435-6a3f-49f8-9e13-0f6195a10c3d",
        "cursor": {
          "ref": "9ac2c725-70dd-4218-9ca3-cc5364486645",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "b2cc5ec2-54ff-4114-8ee9-379b77272144"
        },
        "item": {
          "id": "557f5435-6a3f-49f8-9e13-0f6195a10c3d",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "fd273020-243f-4d03-8311-35fe2121a6eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e179660c-175e-4abe-bee3-5d6ed2c75fda",
        "cursor": {
          "ref": "4a9ebaa0-43b9-4200-a876-3ebec11f6fcc",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "3f186bc7-568f-4363-baba-b220f60b3c05"
        },
        "item": {
          "id": "e179660c-175e-4abe-bee3-5d6ed2c75fda",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "87187bb4-b127-4190-9c39-a2a04cfcbb82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f42755f-f0b2-401d-937e-b1349980b519",
        "cursor": {
          "ref": "168cbe4e-71ba-4be2-b24f-db0b7bf68f03",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "8d6d9e21-6bc8-4f66-8b9e-8b6749228890"
        },
        "item": {
          "id": "5f42755f-f0b2-401d-937e-b1349980b519",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "6cb3310d-ffd6-4828-82ce-c6145b7e8c0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f481cb38-1121-4de0-9982-071b5aee45cc",
        "cursor": {
          "ref": "1fb74487-c80c-4e3c-8d52-f1039ba2b66c",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "f32961ca-0d5f-46ce-8028-67c725ee221d"
        },
        "item": {
          "id": "f481cb38-1121-4de0-9982-071b5aee45cc",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "5f4433ec-ffad-44a2-8861-310d52a1a4a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef4a2727-00a3-4a83-8a4a-ef6322198902",
        "cursor": {
          "ref": "3b5bb769-7cc9-41f2-bf71-28f2c517a277",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "641e3e79-02d9-40cf-b65e-5d3d39a876a6"
        },
        "item": {
          "id": "ef4a2727-00a3-4a83-8a4a-ef6322198902",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "3344ce6d-3ab7-4d5e-bd6c-7f1eb15d1eee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39ac824a-3073-45c5-9379-bbb83c95da75",
        "cursor": {
          "ref": "05748a59-a36f-46c0-89d9-6c8489bcb60a",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "75d93e58-5827-4a44-a0db-fb902a7301b6"
        },
        "item": {
          "id": "39ac824a-3073-45c5-9379-bbb83c95da75",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "08b8ea1c-923d-4975-a931-2d9d413a10b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c7c3419-af0e-460d-a075-306ef7e1466f",
        "cursor": {
          "ref": "cb093aa9-fb2d-4181-ae0b-2c046a1528c8",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "04e0fc15-7419-4d53-b2f5-80ba936526bf"
        },
        "item": {
          "id": "4c7c3419-af0e-460d-a075-306ef7e1466f",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "5359e664-3ac6-4fde-b76d-abb0b47cd565",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75f998d5-4569-43dc-9677-37a5e49f96b8",
        "cursor": {
          "ref": "20afead9-1c3f-4c25-afed-00b779a7916b",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "c4468074-aac0-40c9-a291-ff7ff4e0dc0a"
        },
        "item": {
          "id": "75f998d5-4569-43dc-9677-37a5e49f96b8",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "7549fd8b-3296-4758-b265-1a1c0d38ebf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c41236cf-dea2-406c-928d-575e1f01fd28",
        "cursor": {
          "ref": "d5185b49-5cb8-486f-943a-9f6f0fc1d6b5",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "4cd11726-0f97-4b38-ada2-37d6d80b5174"
        },
        "item": {
          "id": "c41236cf-dea2-406c-928d-575e1f01fd28",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "3ddc03c0-3670-4983-8de9-21bf870947d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da8d9d03-e620-4d4a-ab35-0017e51b406b",
        "cursor": {
          "ref": "bddbde4b-110c-4f83-b764-437d3632e430",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "56566670-851f-4af1-bdb1-d9be2489b2f4"
        },
        "item": {
          "id": "da8d9d03-e620-4d4a-ab35-0017e51b406b",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "6616fa59-1b97-4d39-94d2-1425ee14683e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abeb392d-3421-454e-8c8c-155d13ee5fb5",
        "cursor": {
          "ref": "2a437fef-cd4b-44e5-942c-f1555b83259b",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "6fc446cc-a88e-4a2b-bb6f-51a83aaa5b78"
        },
        "item": {
          "id": "abeb392d-3421-454e-8c8c-155d13ee5fb5",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "989ab3e2-2f66-46fa-bd63-ce22b57a7739",
          "status": "OK",
          "code": 200,
          "responseTime": 98,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "b5d49b57-4702-465c-9460-6751d78c47cb",
        "cursor": {
          "ref": "ac1fd703-6699-4a7b-b906-a7648c1d682b",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "9107107c-1f46-456a-a5c2-bb96f147cfc3"
        },
        "item": {
          "id": "b5d49b57-4702-465c-9460-6751d78c47cb",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "88db12e3-0c2c-4963-8a37-949bca848fda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "829225d5-b47e-49ab-a3bb-2cd2c9cb6e46",
        "cursor": {
          "ref": "d7490c89-ca6b-4945-a04b-b2b49c16ac17",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "3978c2ce-53a9-43cf-9516-597f5b74fac7"
        },
        "item": {
          "id": "829225d5-b47e-49ab-a3bb-2cd2c9cb6e46",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "ef294700-65b5-4adf-a3f8-c4fda65cae72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffca8af2-c875-4308-828c-8c0d5f374e83",
        "cursor": {
          "ref": "fcc3de27-dbc6-4353-b21c-eaff3e400f37",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "db08cb94-1ebc-4aef-83be-7e01cde86825"
        },
        "item": {
          "id": "ffca8af2-c875-4308-828c-8c0d5f374e83",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "ff69f8d4-c6ea-458d-bdbd-aa79b7f20be2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43851089-1e1d-4d23-8779-23e94a015383",
        "cursor": {
          "ref": "b8bff1d1-b89f-4cda-b782-5e9f55c14bd0",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "aa534519-c56e-416a-a045-a64f4f49843f"
        },
        "item": {
          "id": "43851089-1e1d-4d23-8779-23e94a015383",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "d61a12e3-e001-43ba-8947-5a8ad6491df3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "489a1df9-79fe-4938-b569-5706b038dd9f",
        "cursor": {
          "ref": "9af10522-96d8-4d8e-a2e4-06defc9a88fc",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "c9fb1b57-453f-4f9f-a2ae-d79b76a978f9"
        },
        "item": {
          "id": "489a1df9-79fe-4938-b569-5706b038dd9f",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "cd778af7-49ca-467f-bda5-2c7f72d49bdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c990369-f72e-431e-876a-e99f9128534e",
        "cursor": {
          "ref": "cecb7520-acf0-4797-bcd8-38708bd71e26",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "7ae8fed8-d434-4c82-82b6-bb98af8d87a4"
        },
        "item": {
          "id": "6c990369-f72e-431e-876a-e99f9128534e",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "d7e4ee83-c80f-4851-bb1b-836e27140bb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c24286f-b6eb-4975-b5e5-7797324de475",
        "cursor": {
          "ref": "ecbd282c-dac0-47e8-a4be-7cdb14834211",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "2916d880-8783-4b53-9539-8667d35546d8"
        },
        "item": {
          "id": "3c24286f-b6eb-4975-b5e5-7797324de475",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "4c63e0d9-fda4-44ee-80e5-f68df245fe4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e09ef33b-565f-43e7-a692-2bcdddfb6b80",
        "cursor": {
          "ref": "935ee677-8543-4fe4-9787-3428974a4949",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "4ce87b31-0a17-456a-b1f5-f91a8dba1d3e"
        },
        "item": {
          "id": "e09ef33b-565f-43e7-a692-2bcdddfb6b80",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "c373f284-0f73-4d4b-8b71-c8d09ae05cca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ace1e63-7a6b-4bf3-896c-82dba128986c",
        "cursor": {
          "ref": "c2940406-7631-42da-ae4d-972b88e4b0e1",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "04c1efb0-4025-4417-a40e-7107da56c5cc"
        },
        "item": {
          "id": "8ace1e63-7a6b-4bf3-896c-82dba128986c",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "086356b5-0832-45a1-a486-0005854b5981",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76fac7fd-03ab-4e03-a829-6379061358a2",
        "cursor": {
          "ref": "4a4399b0-3fbb-4796-a00f-77e04d9810be",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "d6b2bbf2-19b2-4df6-b4f1-260eeba0133c"
        },
        "item": {
          "id": "76fac7fd-03ab-4e03-a829-6379061358a2",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "beb25414-3e39-4675-bc43-d3a335a4c2b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d23d977-7520-4b49-a234-55c30394064f",
        "cursor": {
          "ref": "955656ae-ae9c-4b41-a951-b70e5ef37cef",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "54b452fb-01e7-4f0c-9e79-b19f4fa1cc1f"
        },
        "item": {
          "id": "4d23d977-7520-4b49-a234-55c30394064f",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "0f2ced62-4652-4550-b3aa-27bc15934a26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "369f2f95-ecd0-48d7-a801-f99d3874bff9",
        "cursor": {
          "ref": "f5dabce5-12cb-4657-93dd-a9bb073d4564",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "f1b2d413-6428-40c5-82fd-7deaa55f91ba"
        },
        "item": {
          "id": "369f2f95-ecd0-48d7-a801-f99d3874bff9",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "4bb8e95c-4cc9-42a4-ae5f-40702c15080f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81ec73f6-15f4-4f5b-94f4-c2097ac72ce6",
        "cursor": {
          "ref": "f57ede8f-f134-4b88-ae66-eaa723776895",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "3f7c5100-89ee-4bf1-9a21-2dc85a6f0ad1"
        },
        "item": {
          "id": "81ec73f6-15f4-4f5b-94f4-c2097ac72ce6",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "6566c1e8-2f97-400a-b7a0-3f113886ebb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45340065-48e4-4187-9a7c-23aa2dad7937",
        "cursor": {
          "ref": "89dedbd6-cb55-4551-b417-208311ba7228",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "f09516c8-131f-4271-8c79-8e40ef9db643"
        },
        "item": {
          "id": "45340065-48e4-4187-9a7c-23aa2dad7937",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "b84cbcc5-c71d-4328-b018-0a9c38725917",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fea3546f-5be6-4dbb-b822-8967f1c38493",
        "cursor": {
          "ref": "6a651739-3ddf-4e5e-ada8-95291191b1e2",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "e2f0fef3-a6f8-4165-86ad-4187706d4f77"
        },
        "item": {
          "id": "fea3546f-5be6-4dbb-b822-8967f1c38493",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "7880db38-0a49-4dab-a948-6f6f713a358e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90c644ea-a5a0-4f84-a000-c567d002e250",
        "cursor": {
          "ref": "0f8cbeb1-fd3f-4336-83fe-9d33ba6ee8bc",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "a1ddf6fe-de9a-4528-bad3-02702ab67399"
        },
        "item": {
          "id": "90c644ea-a5a0-4f84-a000-c567d002e250",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "9838b66c-cfad-4a6b-af02-0af97758e89e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5767580-7757-4e13-8180-4b892710a109",
        "cursor": {
          "ref": "df038553-8f77-4ce4-a55b-f5138cf18ad6",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "042bb293-ba7a-4aa3-97cd-f013d332b01d"
        },
        "item": {
          "id": "a5767580-7757-4e13-8180-4b892710a109",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "3029664e-60c8-4b9c-b51b-5c3f9dc982d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d62f6f0-9048-47a4-9c85-120e7af07c47",
        "cursor": {
          "ref": "3150d5b1-d0a5-445b-9428-368766a308f2",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "b8427ab8-322f-497a-9f11-5e2b969211fc"
        },
        "item": {
          "id": "3d62f6f0-9048-47a4-9c85-120e7af07c47",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "79a5c7e2-1670-4b61-8c61-47d15dad3547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e85152e-cb05-470e-938e-f34fba55da9f",
        "cursor": {
          "ref": "1f859260-cc7c-4a71-a5a5-0cd26d2ea3e4",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "56510945-51ad-4862-b904-fe5cc6b90b4e"
        },
        "item": {
          "id": "5e85152e-cb05-470e-938e-f34fba55da9f",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "5bb66627-0428-4d3a-8d7b-ff8ece240c14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b385179e-0cf6-4312-90c7-75a9aae9861a",
        "cursor": {
          "ref": "7f5f8c39-5d72-447e-bbc8-b5baa3c200c4",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "6b61450e-1cad-4e10-9de7-b46253337963"
        },
        "item": {
          "id": "b385179e-0cf6-4312-90c7-75a9aae9861a",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "f70a20cf-57f3-4ef7-8d96-8b7dbb59a542",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cce0bbb8-3601-4683-944e-c4f3b68aa489",
        "cursor": {
          "ref": "ab0cb181-dc36-4b9f-806f-4111b1d718b3",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "0d002254-2d99-4df7-ac93-981e3cdb8f38"
        },
        "item": {
          "id": "cce0bbb8-3601-4683-944e-c4f3b68aa489",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "6b170f76-8696-4f98-adcd-cfa7e9795fff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2331f51-63aa-4f9e-9b58-d07ad19db0a8",
        "cursor": {
          "ref": "88ecfb9a-00ea-457d-83e1-81a31da0f21b",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "b4fd0331-7c9c-4b18-b444-3ad4a9283986"
        },
        "item": {
          "id": "b2331f51-63aa-4f9e-9b58-d07ad19db0a8",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "851761e3-bf54-41b3-898c-1fee4f9efe4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b07a3a5-97a9-462a-8aa9-5bf1902b9ab5",
        "cursor": {
          "ref": "27ff3607-d7a5-462b-92ff-27cf9db75285",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "c8ec4dcb-a5f9-4cb3-852c-bd89208dcde6"
        },
        "item": {
          "id": "1b07a3a5-97a9-462a-8aa9-5bf1902b9ab5",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "420d20ca-0c8c-4ccd-9d52-08ca6610bde1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d14b968-8015-4114-b8c3-39c50d15b90a",
        "cursor": {
          "ref": "5561d804-5db5-4725-bed5-a5904900cd95",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "d7a116b6-f7fa-47f7-acf8-42aa38804e0b"
        },
        "item": {
          "id": "3d14b968-8015-4114-b8c3-39c50d15b90a",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "85f99d6d-def4-45b7-b6ca-f1fcf9a7288d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3a95e09-01ab-44aa-8a2f-31dcf52a7146",
        "cursor": {
          "ref": "150d6807-e44a-4776-a5a9-b1005701e3e8",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "166ca5f9-67ce-4ad3-af0a-0e24f59e6c32"
        },
        "item": {
          "id": "c3a95e09-01ab-44aa-8a2f-31dcf52a7146",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "df1b97f3-0f79-43af-a4ae-7f241bceed82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cfb1379-7436-411b-85dc-be6b72b223f3",
        "cursor": {
          "ref": "394c0938-8233-4fbe-b53d-b30003c0df3e",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "fd3dfe23-41d6-439c-94bb-72353426c6bc"
        },
        "item": {
          "id": "5cfb1379-7436-411b-85dc-be6b72b223f3",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "dbbecf14-e689-4d7d-b94c-8eb43c8e1d99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5da44170-af4a-4292-8bec-ecbd76f66045",
        "cursor": {
          "ref": "5e919366-e52c-472b-a59b-f17f61a1349a",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "0019edbb-062b-4076-a94f-707646ecd092"
        },
        "item": {
          "id": "5da44170-af4a-4292-8bec-ecbd76f66045",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "c87f54cc-319f-493a-846f-a7c380d83e4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e91241b1-10d7-4efc-82bd-888561f591cd",
        "cursor": {
          "ref": "2b1d2ec6-ff30-435f-a33c-ce6ec4ebbf39",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "627751a6-df6f-4e5f-9c57-458ca9f34a47"
        },
        "item": {
          "id": "e91241b1-10d7-4efc-82bd-888561f591cd",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "6d3387fc-7f27-44a1-a30d-be29f0083b13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 114,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feb5c63f-7ebe-45d5-a4e9-5ceda1a8eab9",
        "cursor": {
          "ref": "2d036277-0895-4f1b-81a3-1d8df3c31930",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "d95a4b49-1d8f-4612-b596-68a645426a55"
        },
        "item": {
          "id": "feb5c63f-7ebe-45d5-a4e9-5ceda1a8eab9",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "5e1bac32-99d4-43e8-9e3f-c845338bd74e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "648cec1f-3dde-4f80-9174-89cf5b0615db",
        "cursor": {
          "ref": "8bc586cc-2332-4fd2-95e4-9328b2226797",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "e83e536a-18ff-4d47-8d2c-76c850ae06b2"
        },
        "item": {
          "id": "648cec1f-3dde-4f80-9174-89cf5b0615db",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "5b9029f7-eec8-42ab-a68e-61b5b3ea257f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5b44325-62b5-4aee-b53d-51a907796303",
        "cursor": {
          "ref": "ab0e6794-e782-4382-b1fc-ff157496b979",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "645804a9-0ba6-42ff-b00e-51f75198028f"
        },
        "item": {
          "id": "b5b44325-62b5-4aee-b53d-51a907796303",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "8161c43f-20ad-4011-b84d-b51e9084d732",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cb37310-49ce-453c-b8e0-93fe94e8c57d",
        "cursor": {
          "ref": "0847dfdb-13df-44c3-b693-9c054693b8b9",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "4064c26b-660f-4564-8be4-3db208721035"
        },
        "item": {
          "id": "9cb37310-49ce-453c-b8e0-93fe94e8c57d",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "758e4392-8882-4ef9-b8a2-4cff7f87ecb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30b6e11c-8c62-4fae-b5d0-7c09db7e71d0",
        "cursor": {
          "ref": "9b6d069e-653e-4e83-8b3a-9edf29758008",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "daa0426e-a1c1-4bda-afb3-0aa0fc349d70"
        },
        "item": {
          "id": "30b6e11c-8c62-4fae-b5d0-7c09db7e71d0",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "8d481648-b3c7-4378-8f16-2fc76aefaa9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baa63c01-74ea-478d-9978-940582749469",
        "cursor": {
          "ref": "2bfde3ae-6917-4119-8d77-d9bb0f52bcf7",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "3dee3268-c4e3-4841-8d27-980735145727"
        },
        "item": {
          "id": "baa63c01-74ea-478d-9978-940582749469",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "b3cfe3f6-ae4c-4728-b93a-f38251ef8cb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e78eabc6-cc50-4aa5-808a-39e69b7f665e",
        "cursor": {
          "ref": "91b22353-7108-462a-8700-cea8254fd803",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "5cc8bac1-8fe6-4bf0-88ed-6bb481d06ab1"
        },
        "item": {
          "id": "e78eabc6-cc50-4aa5-808a-39e69b7f665e",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "bb886d95-89bf-41a6-9d68-4848a1d2d385",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12c3c9ae-5574-4eff-8973-61ecad00d627",
        "cursor": {
          "ref": "f506ddcd-29cf-4eb1-84b3-1d39c1a72d38",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "8b6fd43f-bf55-46c4-a3b5-753e3a7245eb"
        },
        "item": {
          "id": "12c3c9ae-5574-4eff-8973-61ecad00d627",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "95d7ff7e-36c0-4936-9986-5568bdc08760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db1b2a65-9e67-4449-ad83-12495b843364",
        "cursor": {
          "ref": "b77b11d6-e3a2-4eea-afd4-4cc0937e09b7",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "07dc19f6-c3a2-4966-94c2-b445da45a037"
        },
        "item": {
          "id": "db1b2a65-9e67-4449-ad83-12495b843364",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "a0d75bac-0c08-4c73-8764-fcd8a6afdaac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87762e86-ec6d-4927-b950-c45177ec6587",
        "cursor": {
          "ref": "5f9bd453-6a05-46af-8890-215e8a2d99cb",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "ca75dce9-69b4-4307-82ac-fcea3f7d16cb"
        },
        "item": {
          "id": "87762e86-ec6d-4927-b950-c45177ec6587",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "ffc60d8b-e91f-4d67-8483-0b32779fad34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a4180ca-a763-46e1-b20b-957b8979581c",
        "cursor": {
          "ref": "1181a242-9c10-4ec0-b081-01ba305d8bb6",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "7902fc74-1377-42ca-b3bd-5a6421324fae"
        },
        "item": {
          "id": "4a4180ca-a763-46e1-b20b-957b8979581c",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "23205e57-e8ee-4085-b077-4c9d13b27eb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b2cd1fa-02ff-4070-abbc-28eecb165565",
        "cursor": {
          "ref": "61ff458a-75ad-46a9-a59d-924e151c81a5",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "6de301c6-f78d-4c6f-8468-686e3cd84121"
        },
        "item": {
          "id": "8b2cd1fa-02ff-4070-abbc-28eecb165565",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "950359c0-8a32-4797-b073-c26adc7155eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 166,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9efffc66-3a47-4e9a-ad13-5c471556b796",
        "cursor": {
          "ref": "6d8e1a0d-c58c-4d1d-945b-32c950b67253",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "60ed9c70-8088-418e-802f-a24231e62ad5"
        },
        "item": {
          "id": "9efffc66-3a47-4e9a-ad13-5c471556b796",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "0bc7f5e6-c296-4a23-a85d-e5b3fc3cd34f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8094a232-bb2f-4bb2-8b00-9050a3ef746f",
        "cursor": {
          "ref": "99931f69-a084-454a-85fb-b3dd1f941399",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "aa6a271c-12b2-469f-adcd-f25eba568987"
        },
        "item": {
          "id": "8094a232-bb2f-4bb2-8b00-9050a3ef746f",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "137c7227-7379-4295-9410-f665bc494211",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 151,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4958cbb7-fe9d-488b-94a0-6978b4d1ddad",
        "cursor": {
          "ref": "1139de61-7d9d-4046-89a8-b8017ece9824",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "b8917caf-5f58-4963-96d4-d73385aab0c8"
        },
        "item": {
          "id": "4958cbb7-fe9d-488b-94a0-6978b4d1ddad",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "bf9f862e-a274-4a26-96b2-481d49020b2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d0458dc-7270-4554-982d-8d582cfb7443",
        "cursor": {
          "ref": "ed2b0ddb-664c-4c7f-9845-1c79f84dd3f8",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "abb9a5ef-43af-44b1-ab0c-5bd64cc163f4"
        },
        "item": {
          "id": "2d0458dc-7270-4554-982d-8d582cfb7443",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "ed8afb16-a41d-4a20-afdc-802113ba8152",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de7d4677-f425-400c-9287-68c62bf178bd",
        "cursor": {
          "ref": "13715690-97d0-4fe0-a1d3-e6b87c6377af",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "28819cfa-086c-4234-8a69-169b7202c4b8"
        },
        "item": {
          "id": "de7d4677-f425-400c-9287-68c62bf178bd",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "49d5e709-ae5a-4774-8a53-a870b94c0e67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31278c9a-c666-4a15-8f44-8550750683a2",
        "cursor": {
          "ref": "e1e66001-1dab-4892-baa7-cde0929b66b9",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "5ad48c6d-0d4f-4637-a311-e23146280134"
        },
        "item": {
          "id": "31278c9a-c666-4a15-8f44-8550750683a2",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "37b3cfb1-6918-44a4-bbe2-de00a9bc1bb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3f91e7d-dc56-406c-9fcc-bdbc6b20c81c",
        "cursor": {
          "ref": "851f9fb5-f847-481a-8de1-8c4d3a996276",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "dd4e7b17-c467-436a-b941-612210cc8f49"
        },
        "item": {
          "id": "a3f91e7d-dc56-406c-9fcc-bdbc6b20c81c",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "7603dfa6-a9e1-4619-8b69-38f87313f74b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a869fdda-0392-4310-a842-5027aad41760",
        "cursor": {
          "ref": "2010d67f-8f88-482c-be04-8b02b61802d0",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "ee5bba2c-6aaf-4f3f-a85f-5ea86aa11700"
        },
        "item": {
          "id": "a869fdda-0392-4310-a842-5027aad41760",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "810cbaa6-38e4-4496-b905-7e7314370959",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "690a7bcb-d01d-4f74-9940-2b86b358b543",
        "cursor": {
          "ref": "9c495fe3-ea8c-460d-ac24-d9a07620d414",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "2cd6e58a-43b5-4b6e-abee-e27d00f3558a"
        },
        "item": {
          "id": "690a7bcb-d01d-4f74-9940-2b86b358b543",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "08917925-4e1d-4313-ad5a-3c7f0ec52412",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dee67080-015d-43c3-ae34-4963685394c6",
        "cursor": {
          "ref": "7675af6f-9bd7-4a66-ae16-8e27bae500d9",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "7ea8acc4-51fc-4ed1-b5f0-5b9c08ff5a69"
        },
        "item": {
          "id": "dee67080-015d-43c3-ae34-4963685394c6",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "942094a5-f4a9-403d-b6f7-56ccbc21910a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bfb84b6-6ab8-43b0-95a2-648359f7a583",
        "cursor": {
          "ref": "d7cf0ae5-e730-47d8-9387-498d1c6dd474",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "f31c71a9-77a4-4bad-9362-c7a15448f3f8"
        },
        "item": {
          "id": "5bfb84b6-6ab8-43b0-95a2-648359f7a583",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "359a0262-a919-4261-ae63-0dcca545a224",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ded375b-c978-4ea9-ba3b-558957f7a762",
        "cursor": {
          "ref": "beae28f7-3f63-41ae-b50a-e827bfb2b118",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "5615887c-3a37-4fc4-a8f2-6d8ff454554a"
        },
        "item": {
          "id": "2ded375b-c978-4ea9-ba3b-558957f7a762",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "3c3ce1dd-240f-4f85-9af1-293b3e21bf9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5c05719-25cd-42c7-b4f4-74edae6798eb",
        "cursor": {
          "ref": "da80b305-70b0-4c47-8881-e8af6a0a8f0e",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "795cc846-df3b-4e70-b7d8-4735ce27c439"
        },
        "item": {
          "id": "d5c05719-25cd-42c7-b4f4-74edae6798eb",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "e077d88d-975b-47a8-81f4-ffffd41804f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c37a589-3259-4fc2-b899-6b9602f05bb8",
        "cursor": {
          "ref": "e737671c-8b0c-417d-a151-d49a8947654e",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "5be2e036-6990-41f0-ae6f-b0f2291bd8e3"
        },
        "item": {
          "id": "3c37a589-3259-4fc2-b899-6b9602f05bb8",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "8d7b666b-9995-4024-9b35-e9ec5ddaca45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec633174-b93b-43f3-b58c-052952d9161d",
        "cursor": {
          "ref": "6e8347ea-cbd9-4aab-9b8f-60ec0c416727",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "24a85e39-844d-4648-a886-45b2328fad3c"
        },
        "item": {
          "id": "ec633174-b93b-43f3-b58c-052952d9161d",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "6d73c279-cb1d-4914-878a-c6d7c88667bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9437b14-2c06-4c7a-b391-98e27cd3d14a",
        "cursor": {
          "ref": "a289a309-b511-40bc-8ea0-062a2307af06",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "25605002-2310-49f7-99bf-12d632db7cdb"
        },
        "item": {
          "id": "b9437b14-2c06-4c7a-b391-98e27cd3d14a",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "d08d740c-4a8c-4083-9ff7-8dd12771147b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8a4688d-c447-4adc-a319-1410b4d7ad58",
        "cursor": {
          "ref": "7d362dab-6e74-477b-a13a-c63fa00554f6",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "0a19b5a6-38e1-4e59-bd0e-c78237b75aa8"
        },
        "item": {
          "id": "a8a4688d-c447-4adc-a319-1410b4d7ad58",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "a1efc274-924c-4f92-9b88-a615c178c81d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "debd3928-980e-4be5-aa40-9c8deabf9937",
        "cursor": {
          "ref": "e511ed36-8900-45f9-bfb2-ea3f38b10e9c",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "a9460dd6-cc6d-4ba0-bb5c-b8fab048315b"
        },
        "item": {
          "id": "debd3928-980e-4be5-aa40-9c8deabf9937",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "e9209a32-515b-4f0b-9de8-76985202c315",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b598506b-4ed0-40e0-bbbe-6465bc011eac",
        "cursor": {
          "ref": "323a3a5a-f7de-4926-bd56-3f91515f51bc",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "bd325a2e-d93d-41b7-91ae-12db26d48b5d"
        },
        "item": {
          "id": "b598506b-4ed0-40e0-bbbe-6465bc011eac",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "d9d7e962-40af-4b9f-b8a9-375d10fb8e2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b124112b-d120-4423-b7ac-5dba62d91c05",
        "cursor": {
          "ref": "d3c3d06e-f6a2-4b25-bdd4-ea69e8345397",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "6c00299e-95c4-489d-a7b5-45d0cb17eacb"
        },
        "item": {
          "id": "b124112b-d120-4423-b7ac-5dba62d91c05",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "5bcd22b4-0f60-4929-af9d-63b77726a13a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9699b69-45af-4740-b1fb-e017f1d779f1",
        "cursor": {
          "ref": "cfded8c4-9542-4fc5-8f1b-0d081e32bcaa",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "d50bf523-6c90-40e2-8c47-7261b86433bb"
        },
        "item": {
          "id": "f9699b69-45af-4740-b1fb-e017f1d779f1",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "54598e5e-0105-43f7-be8b-186250950e02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19b01cce-f823-4aa9-9177-55dc06f16733",
        "cursor": {
          "ref": "e3621687-adab-4d79-9b89-e29bd5ff7749",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "d64dfc21-16d1-4e9e-9649-1297c89e037b"
        },
        "item": {
          "id": "19b01cce-f823-4aa9-9177-55dc06f16733",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "49d89ec9-9912-48eb-a961-f07c4308ceec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f9cea1f-a76d-4280-9b4a-2a62ebcd0845",
        "cursor": {
          "ref": "8051dd97-aa5a-4784-8e62-54f697cc9631",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "581a969e-e745-4b2f-a936-d2c60a8d55da"
        },
        "item": {
          "id": "1f9cea1f-a76d-4280-9b4a-2a62ebcd0845",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "a5679184-4625-4af3-ad3c-d9583441be6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8d09c48-ca1d-468f-b909-0faefb14008e",
        "cursor": {
          "ref": "ba696ddf-baa6-43ad-9518-f65d2e5b16ac",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "b5f460d3-e07b-4c88-b1e6-6e2075392b55"
        },
        "item": {
          "id": "c8d09c48-ca1d-468f-b909-0faefb14008e",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "bca4ae5a-f9d5-4f36-9471-14fc0598efaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b88c5430-afbc-4958-89ad-fcd62e9f62c7",
        "cursor": {
          "ref": "dba091ab-421a-48a2-88a1-ea5cc9dcad4d",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "a28d65c8-489f-4703-a2d5-8a1cb4bf5ea9"
        },
        "item": {
          "id": "b88c5430-afbc-4958-89ad-fcd62e9f62c7",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "8e757dfc-4512-4521-b0fa-b52660ae4ac5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9910cbc9-da04-4ccb-b17a-2489e59a4a16",
        "cursor": {
          "ref": "3038df5f-1c5e-46bb-a0fe-2ce4086b9d66",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "7e29a730-8180-4e00-982c-48a87fccf9b3"
        },
        "item": {
          "id": "9910cbc9-da04-4ccb-b17a-2489e59a4a16",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "3fa3ec4d-fefc-4da7-a033-ffbea4c21d9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a10b81b-bfdd-4b89-bab2-941726fddc41",
        "cursor": {
          "ref": "4ab2caf3-af40-4207-95ff-72577f5f25fd",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "fb141f65-4c4b-45d5-a17c-8463e215cd09"
        },
        "item": {
          "id": "5a10b81b-bfdd-4b89-bab2-941726fddc41",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "8f54d503-19d1-4be4-b3a8-1d4829601442",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee8b3a18-7f3f-4821-a3ed-7e753e48e236",
        "cursor": {
          "ref": "a97b7a3f-bfcd-4946-98a1-3af1f86372e1",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "395006e2-587e-4313-95d3-15ef67363840"
        },
        "item": {
          "id": "ee8b3a18-7f3f-4821-a3ed-7e753e48e236",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "5f78f9a2-d154-4d8a-86fe-377e4482b729",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a41eb023-7da3-47e0-b13c-93f073ed320b",
        "cursor": {
          "ref": "b45a7be4-e133-4a01-a7f6-9066d0c456c4",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "3b883aaf-e58a-45b1-b8cd-411d628e55bd"
        },
        "item": {
          "id": "a41eb023-7da3-47e0-b13c-93f073ed320b",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "8c90bd7f-a2b3-4305-9066-b8d540ab58b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c372cc7d-e9ee-412e-828f-b7616e6db79e",
        "cursor": {
          "ref": "eaf8ad15-44c2-4e18-88b6-ddc4070dea83",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "de832623-a90a-4ceb-8f27-a8bca5c29bee"
        },
        "item": {
          "id": "c372cc7d-e9ee-412e-828f-b7616e6db79e",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "d49212ed-e768-4abe-9230-96bfc30e1692",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49aad941-27e3-4f56-9f95-49699fc31b8f",
        "cursor": {
          "ref": "0babf258-f029-46c2-9983-13f6e754c481",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "21c59b96-139c-4b85-9522-7aa7549081c5"
        },
        "item": {
          "id": "49aad941-27e3-4f56-9f95-49699fc31b8f",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "484f3433-e2c0-43aa-9c95-47c60d9dfe9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ee49c48-632a-48a8-8cf5-f7bbd5d4d8c7",
        "cursor": {
          "ref": "2215e810-768f-4036-bbcf-b29746fc1184",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "d4e8a8ef-3ca9-477e-b415-549b3cee63d9"
        },
        "item": {
          "id": "6ee49c48-632a-48a8-8cf5-f7bbd5d4d8c7",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "e40890b8-414c-4420-938f-c1acfbe45093",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23f0f6b5-bf34-497f-b756-4ba1441430a4",
        "cursor": {
          "ref": "0faea685-e876-47fe-a49e-3b22c6cd13e3",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "49474bf6-de5d-487d-96a4-e3e171bfbeb6"
        },
        "item": {
          "id": "23f0f6b5-bf34-497f-b756-4ba1441430a4",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "7fa03632-1db4-4a89-96d6-d040b993784c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c41efa7-4a06-4445-a956-c0ce1d289d56",
        "cursor": {
          "ref": "cb4e46de-534a-4ba6-a9e1-2817aa7e0486",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "8f9eee72-d858-4138-969e-4e6efc4d4272"
        },
        "item": {
          "id": "8c41efa7-4a06-4445-a956-c0ce1d289d56",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "3a50bb28-c5f3-4354-a231-4b5874a078db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cca3723d-652a-45ea-b436-e8056b4b3871",
        "cursor": {
          "ref": "f064b326-fc61-4634-8a9e-ef156901167a",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "401aeed3-ea4c-40d0-a536-9252bcd26042"
        },
        "item": {
          "id": "cca3723d-652a-45ea-b436-e8056b4b3871",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "2f235e24-cc6f-405a-a16f-2c99ddfb810a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b168671d-85e4-4c3b-9ecf-cd6dcbc16e20",
        "cursor": {
          "ref": "5630bcdf-b4b5-4149-8ad9-5251f4cb657e",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "6e84b52f-f7e7-4757-94d8-93abd6ed590f"
        },
        "item": {
          "id": "b168671d-85e4-4c3b-9ecf-cd6dcbc16e20",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "6108c0d0-9ca1-48aa-986b-da21050e1f30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cf49e2d-902c-4ea7-ac30-a506f8856979",
        "cursor": {
          "ref": "1dd43401-1392-46cb-9fa2-c4e0e3a851ad",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "13b9a3aa-07a9-4615-b590-9c89710d12cc"
        },
        "item": {
          "id": "5cf49e2d-902c-4ea7-ac30-a506f8856979",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "84cb97e9-9cd5-4de9-96a1-8f4df66233ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb1b4953-8fba-4656-824c-51464fc68e08",
        "cursor": {
          "ref": "14fbc53a-2c0c-4db5-bf02-e4be97b8a8bc",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "f5fc8f53-ceb7-4695-81b2-73920e873a00"
        },
        "item": {
          "id": "eb1b4953-8fba-4656-824c-51464fc68e08",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "e1ba3979-8eec-4008-9029-ead46c517116",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a72c223b-5c26-4089-87e6-360f10a91e2e",
        "cursor": {
          "ref": "8b46aa6b-92ce-4ca2-b6e0-1ab7a4187d30",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "fdebce67-c9a4-4477-8a7b-64ee23a2688a"
        },
        "item": {
          "id": "a72c223b-5c26-4089-87e6-360f10a91e2e",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "40bd49af-d962-41f8-8fb2-761b775de52a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e127551c-516d-457c-8516-94db7712bb38",
        "cursor": {
          "ref": "eff54937-2b1f-4882-abdd-9b56d3f9ff59",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "91ede6c2-c35e-4387-aa5e-1ae2fe54c8bf"
        },
        "item": {
          "id": "e127551c-516d-457c-8516-94db7712bb38",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "5746d302-97d9-4781-90c3-40de134cfb23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c06a894b-e547-431a-b9c2-6f1ff9f2ce0a",
        "cursor": {
          "ref": "f0510793-d9b1-4f2d-9e0b-109fd29b6fcb",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "5269e5e5-9e07-4bad-9d34-c8729ba1e378"
        },
        "item": {
          "id": "c06a894b-e547-431a-b9c2-6f1ff9f2ce0a",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "c809dd2d-245b-4080-844b-639fd2129609",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58411b0a-5d95-49d5-bab8-e08b2d55b23e",
        "cursor": {
          "ref": "2809a6c0-11dc-48f9-9702-4fb253360d13",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "c14796c3-7293-4693-bc25-4a5e792aa2e3"
        },
        "item": {
          "id": "58411b0a-5d95-49d5-bab8-e08b2d55b23e",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "12d73da0-46ff-4b72-852d-3a88090e4ada",
          "status": "OK",
          "code": 200,
          "responseTime": 85,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "84867d02-aedb-43e5-9a05-6113006e17f1",
        "cursor": {
          "ref": "7fc4670d-3a11-41e5-8986-11b0dd92abf1",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "2979437f-7099-42a6-8084-8266eb672299"
        },
        "item": {
          "id": "84867d02-aedb-43e5-9a05-6113006e17f1",
          "name": "credentials_verify"
        },
        "response": {
          "id": "b50edacf-ade3-464f-b928-71aafab5227c",
          "status": "OK",
          "code": 200,
          "responseTime": 2749,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8dd5631-bdbe-41a4-8bad-97773fec6c3f",
        "cursor": {
          "ref": "6401fdab-f262-4f1a-96bc-d2991ad6c4cb",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "bc1b3d49-2aad-468b-84e2-a3fc6afe4fad"
        },
        "item": {
          "id": "a8dd5631-bdbe-41a4-8bad-97773fec6c3f",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "ce111b41-b685-45d6-9dc9-237a22bb199a",
          "status": "OK",
          "code": 200,
          "responseTime": 3013,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9ff9331-ecdb-4581-a75a-e48d84c98d00",
        "cursor": {
          "ref": "c58c1a48-e7ba-476f-8293-b6423048d058",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "44935c48-9b85-4bdd-81db-032d80becc34"
        },
        "item": {
          "id": "d9ff9331-ecdb-4581-a75a-e48d84c98d00",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "867cd3aa-0dd4-4450-8d33-001fe1b2fd86",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9ff9331-ecdb-4581-a75a-e48d84c98d00",
        "cursor": {
          "ref": "c58c1a48-e7ba-476f-8293-b6423048d058",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "44935c48-9b85-4bdd-81db-032d80becc34"
        },
        "item": {
          "id": "d9ff9331-ecdb-4581-a75a-e48d84c98d00",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "867cd3aa-0dd4-4450-8d33-001fe1b2fd86",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76e20ad9-48ed-4d71-b0dc-6b90ed174e2c",
        "cursor": {
          "ref": "61691e64-db2f-4749-8e9e-eecb0b420a19",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "d7a76860-39d9-4dcc-9833-ba8486efaeeb"
        },
        "item": {
          "id": "76e20ad9-48ed-4d71-b0dc-6b90ed174e2c",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "5098d4e8-c778-4ec0-afcf-8e62623f01e0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 123,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11d0d7b6-fc8a-4330-aaa3-7899166c6f18",
        "cursor": {
          "ref": "4c833a10-8203-45e9-abdc-71acc28be0e4",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "3c6a3d19-58da-43b4-875d-863dfd9aa31c"
        },
        "item": {
          "id": "11d0d7b6-fc8a-4330-aaa3-7899166c6f18",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "a88038e1-1a57-4e4c-959e-e57409a65735",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}