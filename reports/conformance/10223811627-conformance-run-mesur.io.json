{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "73f41e09-8aa9-4a81-8926-4f356525acf0",
        "name": "Clear Cache",
        "item": [
          {
            "id": "6ba936a1-82cb-485b-a011-3039ab7962ac",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9032084f-3f4d-4e65-adc2-b8138f964806",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c264691d-fead-426d-a83a-4da5b2fb5c9e"
                }
              }
            ]
          },
          {
            "id": "d75465ad-3d75-4a93-8c29-b2d33a238c1a",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "88abbe8c-d642-47ac-98ad-8026886d051f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "77d69070-e357-4c01-b6bb-9c5b649a1b34"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "336bff0c-caa0-49cc-9bde-4e804c1926a4",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "9dcc96d4-5803-4218-8370-db0d891bb781",
            "name": "Positive Testing",
            "item": [
              {
                "id": "44d826c1-30e4-4132-ac89-c95a68ebf6a3",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d3c59dc2-d2e4-413e-ade7-3a35e0ea3268",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "82920720-03e7-493d-b93d-a78605b19a21"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e6106855-b1ba-40a8-b8b0-0097860e71dc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e17d5adc-5d81-4f8b-9856-9f8e6514d906"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "cb896a58-5507-4834-90c6-92c84cdf815f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9f8b998d-9455-4c26-9323-e9d926181a02"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "af7c34fc-f0ac-4416-a4e5-7285ce0986f7",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "bae3792a-c58b-46b1-a4bb-ef72a5d20161"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b41dde87-5c6b-4906-a08f-518ae8879024",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fc6aacea-0fc6-4f93-9d6d-a9434ae3d43d"
            }
          }
        ]
      },
      {
        "id": "b658df44-8905-43b5-a52d-a74de6e49205",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "15401f95-cb55-4b62-b98e-ac7aa8b8c7c0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d792610d-5e6d-445a-93dc-adc11a5b9c67",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c3334eb0-1f58-4c80-9c01-e61a4c364f76",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "129a5663-545e-46ab-906e-59d5fef49f23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "23b9dad7-d929-4ece-91fd-6739b1186874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8185c4c6-5a64-47e6-a99e-1e43b380e8ed",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63f3a5ec-6ed1-4f77-820b-8bd807c078b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "812a98b5-aa97-444e-ae94-b8f327f201ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "679ba9c7-488b-4bf5-933d-cc7d8197b1ee",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "850d81d4-0584-4d45-a509-01048f132e1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6a458641-3b63-4847-bca6-ecb5980b5cf7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c1fcb4dc-3f1e-446b-91c3-542ef3bd4404",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2b387c64-005b-4998-a69b-6e0b30d5b4d6",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bf30ec9-b22f-4cdb-a25d-8000c1fb6e82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "520f878f-d25d-44ff-995d-7cdc6353c37b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef8b0ff8-7ef1-4f51-8f39-b75b41ea6317",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9099e2ae-c0ce-4b5f-8e70-a98b3baead09"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "75295002-0d9b-4065-bbac-331c88efe276",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8ac35ab4-6bb2-4efb-9819-5fd251ef782c",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "327149ad-dbb4-48cb-b8c6-93ed7244b953",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "7b700c6f-aeb6-453c-a87d-eca404552069"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d2aa2a31-1376-4429-8bc5-2c337a850b64",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "86193113-b374-4424-b8c5-cc9d4de3e9b2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cb648560-6bf5-4f3e-a7fb-67dec262fc9f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f6573cc0-dc0f-4c5b-9ea1-e580f5e3586a"
            }
          }
        ]
      },
      {
        "id": "908c81fa-2f2a-4c24-8a0c-dbc3bd0a2345",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "3f51100a-7705-462b-b9ec-9a649f45a797",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fc85ef1b-d984-44b7-ac2a-bd16c477f10c",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "7e1c1daa-3f06-4f96-a351-12694a8fb705",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d854746-b943-4fe0-9ca1-995e1f4fb925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "973e93b5-3429-4e8e-bd73-79e8dffc08b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2cacb6f-57ea-4687-b979-4ab9d4e129e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "77aded6d-fcc0-4e84-a9a6-27aff5f3bd85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35ab8553-5cda-4842-a5eb-d0691a4a603b",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "960ec32a-281d-4b2e-bf4a-57501d551388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d710080e-c8d7-406a-a732-51f2b2874f30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e26e8c7-d95d-4c26-b6e7-1f2709f75d57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ca2b81af-3628-4cdd-bb52-e5a2abd005db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0632a8ca-e6cb-4e99-9a92-eb5ebd32528c",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d4c9f90-3a25-4b8e-9b57-e58bc374a5d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dccd9498-1bbc-4797-8906-3d689bfb86be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91ba6fe6-a2f0-497d-8c10-529cfce48175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f29db0f8-3c73-4ab6-9192-2e74aeea1fa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cdb45f9-8ff2-41e7-9930-ab092474370f",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a164252-2dde-459b-8bdc-70f30bc78d88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d501139c-bf1a-4137-bb3f-17b22a79b167"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ed2fa06-55e8-4ba7-b873-193c7237555a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d0bc8e74-158f-46b0-b815-f08c78a400f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "520554e0-0017-485b-970d-b3d6c044099b",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cce9a583-a3c0-4a2b-9583-b5a6de77ef91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8de223a-e7ea-4b28-81d0-59340c20505f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07771087-9106-4996-8ccf-6409ef5c35dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c435a677-0f68-4f0d-b710-298ef9347490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b053225-a8a0-489a-9d9f-83c41f9a0beb",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f8da31e-cc2a-4faf-941e-99ba8d8ea35b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f54c7f20-7c47-4a62-bbb3-bacbbde7d720"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea24a6ef-f0d4-4968-9b95-5c7fbac13bff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5e745e69-3b42-4507-b05f-71a15b46d223"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23b3f459-8cf5-4a8f-bdd1-6a0c9ec804e1",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "996ccf04-62c8-4b77-9831-3af823e201b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0a1e896-9540-42d8-8223-13e7669f3edd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5760c43-9997-42f6-8c33-cd20c3b0df70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "737036a5-3dca-43ce-9d29-44e4c9b3a12b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "571abdd7-e188-46d3-9c44-417fedb01eaa",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35f44aa5-6c64-44cb-bc35-4276138806e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f21c46a-b605-4331-8d25-e7a8db7c5634"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "310a89c8-d7f4-4b9a-95fe-d18d6a2734b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "88b89c30-ab9f-4cc2-8886-f94640853f83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39dde617-3e7d-49ab-862b-f771397e1a80",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e79b8d4-81fa-494b-816d-2ae9b1016b14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1f7e232-7472-4a0f-af1d-aecad3d8dd2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cc1f533-984c-4b8c-9cf0-1066c1ede959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "010a84de-5fcf-498d-b21a-f50b325b345c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c70b3dce-4838-4d2d-8a80-c6383d17b6f0",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6baccda0-5d94-4eba-a419-97a6b3cac976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ad833f9-1d2f-41a6-9211-03560d5b1cf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "267c649d-4b8b-464a-9f08-9a74fd150b87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dae998f8-438e-4a2f-bf31-88056493d18a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d3923b5-67fc-4b50-ba3f-8b64e0b1f22a",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16fa5684-2948-4495-be7e-bd78d387863f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "693b8eca-7801-4937-bb71-e6ee0bb79bc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4bfd743-9d2b-4c7d-85ea-ff033fea1d26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "67642f9a-72b3-4456-b23f-dd78b03208d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e85aedf3-3f27-47dc-b891-d2555a5c39c9",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45cbd2bc-1eda-45d4-a445-183bfc5aa2c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76558744-1e41-4905-a8ce-772673a60d96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f1d78a9-a82c-439b-bf1f-d0ef673381c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e931db01-a9f9-42a8-8d67-4c40d77f0c11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "468f0190-1f42-42c3-b732-82065c4751b4",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbef1e68-27ae-45ae-b6c9-a9ad27d0c55c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89d39a85-0369-4a02-9c0c-7c2209437e6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b490c140-698f-4c2f-9a05-44a763011bed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5efbab3d-6441-4b36-9c1f-8376c8fb1b84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb410594-594f-4328-abbd-2fe1df0edddf",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aae7f3b-dc1d-4f79-878b-8bb5d4c42100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "689b438c-1ba2-4ce0-8438-ec94fd7f7b5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13c01f38-d4f2-4e4d-9c19-0cc4f315aa62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8a98c0a2-ace3-4672-8186-55781884937b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1437985-2a5b-4cea-9992-148548ad0c84",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeaa3357-88e8-458e-9321-1c01af33199d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc2ac525-ab50-4e21-8b8a-c23d05251b33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a779c8e-4e57-455a-a922-726f35635dcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "181d47a1-8b04-47bc-a179-f0b2e7b7d7e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "955b2c00-6a38-422f-9a1c-97d6491cf7e3",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e661ae04-032b-4f7f-aa00-02cef2f4be55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87e7d8c1-446f-42cc-a8b6-855ccdc1515b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9d77aa0-dfb7-43f3-bc43-8adefd64241b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "834e6cf8-87fa-4f42-a6d9-e4a55f782b26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de696afc-2c96-4e24-80d4-88174a07d70e",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "876d26cf-c4ce-4d6d-bb4e-33cf6c949888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a533b8c-7d42-4221-ad85-41ea4fcb8f49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06048f52-4120-44f5-8d6c-67690b240aea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fa0675d8-ff40-47e1-876c-b392198f085f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2ed9c45-0d14-4b63-b25a-cf7f872ce2f0",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78b6755d-f8b6-446d-8f0d-48b5ec8b8282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f898902-9fa2-45c2-a862-cd0012408905"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77e67ffc-c520-42fa-9926-65ef47a50889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d43f1d5-1e23-4189-abc1-f7b26bc4ad7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a41fb414-cb01-43ec-bfea-8bdce0966c02",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6be9396-851c-469a-82cb-ba2434a9c47d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e80b9901-de8c-4dba-b7ec-105b8f6e7481"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbb29030-278d-4c7f-b9f5-980fe948a1d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d8344ce-56d4-4b30-921e-1f0aa4d59733"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e662a81f-b593-4a29-a423-2707a118cb0a",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88bdc0b4-afac-4dc6-ac19-cb5e2d21386b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcb8c805-3a7a-4a31-bdc1-31617207d195"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f28812cd-0178-4584-aabf-600c140a1c54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "270a4dbb-87f2-4d28-898a-9567b10fbd75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b8c6aba-9e9f-4215-8740-f0db5cff47f9",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03b28c90-60ae-4e30-af35-8973fee2480e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d35d0fc2-e5c8-4275-833a-45a7de174250"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e0db322-ae1b-49e5-9d37-d728b947ef29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "02fd5cdc-7f71-4442-be7e-035127730e48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e808849a-530d-4fdd-aafb-812220f6064e",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f02627e-7d40-4fe1-a3de-5b52ea52a7b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "146a0661-ef30-4679-beb6-cfee6fc5c5b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68542ef2-35a3-41d7-a1a8-2584bfa82b93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8086be5c-87c0-4df5-a366-ab6529431903"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97db746d-503b-4863-9efb-2f2b08512308",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40a70197-ff49-4488-be87-db4b14fafeea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f22e6c8-2321-4a8b-b020-7c615a28a752"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7e87ae1-a2bc-43fe-a810-68acbe02c92c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "45ed199a-a029-4794-bdbd-1dfe1f9f815a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "653522cb-5c84-4811-add7-596553bbea29",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "526e910d-7f4e-43d8-8032-324708349c1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1949e78f-c09f-47df-8a12-d7eb1f12844b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "601a60c3-55fd-4646-afab-a6807cad95ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a993b221-59bd-4683-a633-32d6cab573b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e15ccde-e938-4864-9586-7b6d0767dcf7",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3790ba79-a66a-4e92-9493-e7a7bbcd843c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e66a364e-4559-4c32-9ecd-13739b03f449"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb6c7ad2-77d4-4b51-b841-c19c89997a8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "85bf73ca-7715-4239-a265-cf0519ec501e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6699442d-66c6-49f1-bfc1-9909fd5f6492",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0971d8e8-17e0-434c-8749-0a532136b3c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "755105cd-a220-4ad8-9e5a-b8300405e73f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1715d175-9ecb-4578-888a-8346f9b24ed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "715a4827-8804-49c0-a8eb-7170f41b07b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2b5b284-e885-4dfc-b33c-c00dcb24b9c3",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f62a876a-483a-46de-be0c-1e9ea18a0b09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b91da615-a436-4463-a18f-45305e2a7b00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3208b07f-bf62-4143-beec-f1516794f312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "392dc338-cce5-4a44-a480-bbc80ee3c6ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "802b40ad-e012-4bf5-90ec-0158f2b8b01e",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58358c31-6d4e-4bfd-81e4-79c226e1fe49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa2bdbd4-e64e-4793-a8bf-a9188a3d59ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d54ec874-7846-4757-a3cf-5b46289b6122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8afb3857-feaf-45f5-aa0a-311509000d57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c4708c8-b064-4e92-8855-70b23874ba16",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b4b1c42-86e6-47d5-8774-5a8548a23a4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e63d596d-f08f-4801-bf5a-5bb245e168c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "013e1bd3-13e9-4da6-9df6-122ce59c53e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "476e34ce-e0ba-4ebd-a679-64d63b14aa65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9343f33f-2661-47e6-95cd-2b89237d35d3",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4f54437-747c-4aa8-b039-9582c81afd60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1234bcb-9542-4550-b552-3fe94a17633d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff6c5618-9a97-45fe-91b4-ae40e258d0e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "9771f3f1-a72f-4193-a4ad-b4fcd0deccce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97200188-6875-4cda-8dd8-f833066a72db",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "636c42de-8935-4a2b-bcd9-5b2780ca13f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90ff2a1e-d057-4600-9780-640c108f88d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d54069d0-b35f-445d-a4b5-31db5209c447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7cf69cf5-1013-4a65-8d9f-2b6837fc7054"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a8d567c-285a-444c-a3be-d0a1e1c5e1da",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5573fe89-5524-4d9f-b3c0-d04ea276d2c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e4d9854-58c6-4ea7-8d5c-36e9c46aa064"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7acfe2b2-a874-4625-8926-61a1a6c6a964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "12a6a2ac-8c9e-4115-bf96-82ef06969db0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a979d5d3-6c28-4b1f-8562-20f4140094f0",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44aa48c7-7e63-4324-8108-a5ad06c0d013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0b71962-4a70-4319-bfcf-3b6b6fccc1c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2170fc7-75a6-40e4-ac35-3b6b57ae78eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a19a564d-2520-4c52-a993-6cc45ab0b7d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94bdded8-0bdb-4b51-8053-b013f22a181b",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48aebcf0-0566-4b91-9274-94409b53f396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0677ecf6-2021-4c10-ad79-b65aa223e9cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffb5dcb6-cce8-48ba-a433-f85ecd9160ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9ef6b34-f0f9-4f16-83a4-6086769f74a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "031c27fd-c8ea-4dec-b72c-22708c50af25",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a927cc36-4006-4614-a6dc-76f8cb1b74f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79f958a8-bfbb-4eed-b8fe-d78c1e0aba48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0dc76f4-99ca-458e-a79d-9a332f4c2367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "97937782-48ee-42b3-b00f-c8dc50c7c553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15b4b90f-77bd-4c13-a66a-dd1a2947fd79",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d017e7cc-d878-4b70-974d-09a44f2e6cc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "600cfd4e-f1c4-4f1d-ae45-1476d2f6bd1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38133c58-e696-4820-92fc-3d0f15f1f92c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b7173a85-2010-4233-b377-dcd4406c9b49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2faa8e86-371c-48d2-85e5-8d2ace387233",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ebc473b-3d7f-4213-93cc-82e8b639d41f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "488def15-810c-4b42-b08c-072f33bce32e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "044436f3-4abf-4a5f-82fd-372dc89103db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8f6d6f1e-49df-43c0-9831-0a0c71fdfcd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85594ba0-2e76-4b6c-8792-c413f03a6954",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29e14ae2-d011-4918-a70e-95b0b956639f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a974437-9317-46fb-af95-12c95910f77f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f58145f-3d2a-42bb-b84e-9d7714ff1b09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d94383d6-3767-496b-a063-ba9d544786ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56ff10bd-029d-428b-bee5-b3ead6857c67",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d31dc286-74ae-44a6-87fe-cd0dddb3d437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20893ab9-a957-48d8-a20a-f02fad58d5df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7072b67-bad2-4b95-bde6-913eefcc3d2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c73e4651-0f87-42c4-a02f-4decbca3f50b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54a12874-40a0-4621-a1a0-c812377682ad",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0606be80-bf46-4752-a05b-86fca86364a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69b0e6a2-340a-49e5-90ca-a79bedcec13a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "415feab3-93da-4749-93ec-f6bdb3f99c35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ab35c700-ed0d-4091-a467-4ef538fe0ea8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9988e79b-7829-4968-9d6a-8c2ece0c4d81",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae4fa090-5b4b-422f-8ca2-e19a6353d0fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4f851c0-7b8a-43eb-b7cb-fdc872d8bd26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55822ca4-5bda-4137-8286-3cd830890d4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f422045d-df67-457c-83ee-4cb7017d1633"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d459669-faf0-418c-a718-22ac1e7ada51",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c62f7e7b-1582-4173-9500-41e90394cf7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fd7b4ce-a1d3-4868-ab66-ba0b03395d58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dcdc64b-b73f-4e3d-a358-8bccc3560adf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "b88a042d-b9e3-4dca-a1f5-11aefcc2ff3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3e4deb0-6e2e-408f-a59d-d36b84785480",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e1796df-16c0-4070-83b3-5b70b31736d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fecd4373-edc5-47df-a628-2d45bc7fec1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82a4fac1-22fe-4243-8220-f296f19f0922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "cc045c18-9a21-4e93-addd-8fa957646d5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "608be129-2f75-4762-bb24-37073b1e5349",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46b94185-4f13-4d86-bd29-52f9ce3f51e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6811e9de-af78-4b85-a4e9-927a29ae20cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42d1623b-1fa4-40c9-a679-712da6c7e421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "672295e9-d4f5-4689-9003-898329729beb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dc12797-e5fd-4b8e-bfff-b02cc06f6ac5",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d406bbaf-1c96-411a-a4ce-2ae4f5499c81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb3a622d-607a-420a-87ec-cd7c683d6a43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "face74ec-a6da-4679-b133-186a69591eb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0375d136-c433-46b5-89b3-718053c6a099"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b87c47bf-36f7-442b-84f9-829a92e7009a",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2236272-6d2a-4031-a48e-b74d441faa5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "303940e7-8fd5-479a-b440-5748bc9b610d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d435476-937e-4f5b-98da-0e7aca96effa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7bf8b879-ca56-4730-9059-af5897a1ec08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5a70efe-0fac-41c6-9810-6c1af85077e6",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c92e432a-5b85-47f7-a480-9c8d80f9c4c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3672dfd-7aa2-4091-bfc3-e5dbbe67e1be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f328682f-24e5-4b95-b4cf-b80b56f9b075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f37d4088-0580-404d-aa0e-5ea5a8ec3196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77bcceb3-b412-4808-a0a7-f07256d53553",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6788fce-5fbc-4852-9048-ab435a192275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c290dc23-46b3-423d-95cc-4d2bba038aef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "930ee061-b073-4b6a-82d8-1642a63556fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c8abc96-92c8-42c5-8382-53b18724e528"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f697d31a-7e93-4818-975d-718859d35afa",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52f54cf1-4883-48fd-b78a-a707d46ad59c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e87cdc1-8a4c-42ad-ba21-89008bd5d936"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32be385a-d655-42a4-aa7e-cd68f0238cf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9328a4b3-e998-4889-8510-1bd1d3fcd6fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90f9120f-64f2-4920-9170-d852c0e11533",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2e3b8e7-d6a8-4036-a8c6-fd905e8738eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a36a3229-1d54-4376-9215-dde8ccc8b9f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "003b213f-5b62-4da0-af72-cb5dfd92941a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6db98c3f-3e65-4b2e-84c0-e004dca8bb2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ff3197d-2008-48dc-a2ed-f12091bce1be",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2994cb06-de5f-4a21-9eb1-350033b5a207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "239c8377-f3f6-4280-bd54-220a22a9d115"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e4bbbe6-f443-4630-87b6-77e7784c042a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "981843cf-597a-42d0-a854-ffc56913e522"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37f0e27e-3f6e-4263-925f-c16a994593ad",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "395971fe-416d-4ee4-88b9-c70baf1d806c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1810ec66-5817-44f5-b911-799425041d84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d06d212-cb57-444b-9d8a-69f47701ec75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a85980d-624e-4312-b170-19831b8500e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc80c6e3-6faf-4a8e-94a6-133f2aed537e",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1cfbe3d-a21a-4281-a952-2775d36d6224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59d7f13c-5f5e-45bd-af41-9a7f5c63d155"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d73964c-79f2-415a-b5af-8ed4efb9c801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0d10531-4cdb-4371-a55e-2f2704c1cc61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ae65150-04b4-4bcb-a978-0b5f3f3b3536",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb5558b3-02ca-4b2d-85e3-050a28d8eb22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4a53123-a913-4a00-ae98-78a6a33bbbec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b041c025-8cbb-49b1-b370-7ebb82f7cc72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6da0ebd1-25f5-4fa0-9526-1992bbbb7611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd3ed52e-5309-4a21-a5fa-4c3203190b2e",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19a24d0a-6ec3-498b-aa97-2b15bcb7c17f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55605c06-90e1-4d0e-a196-1208101495b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a2dfeb6-22b2-45cd-a5f8-8d7a85c12567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b944d1e-0ec4-4766-a699-3cf60d8c0656"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3a002fd-4ef1-442d-9e65-af787026324e",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc764c86-e085-4b98-86da-5e07d75bba26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "958eb5ea-d684-46eb-9c1b-ce9553bc6b29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c562417f-2c6a-488a-87f2-77857c3aac2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "764e73eb-8923-40e4-9fb7-efd0b1bbc408"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41f091c6-7229-4383-957a-ca3a5c64d4ee",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be97b986-9472-4f90-8784-c23e65dae710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf863d25-2ff1-4d8c-b587-3e703496a53f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db0c1090-4561-4583-8d2a-68395211032e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8680aa60-858b-4948-a2dc-7c960208e3f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9544c23a-9158-4ddd-91c6-da12ee3da182",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de2b227c-b198-447a-b4f0-6f4e9fc375ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9adf7c20-2a7c-4958-a222-5328c2deee24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "833d60b7-2a61-484d-9c40-028e83003a56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "161004e2-c340-436e-b64a-c258ffd48501"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c5368b7-fe39-4c07-a5e2-87f73235e4ba",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "528c69dd-a047-4e38-9a8b-a7d38a48e661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83c12066-46b8-4beb-999d-1934b4dc9338"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d246538d-56aa-464b-980d-75cb03ff0b82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "908b5226-a479-48e6-a912-652875c6146d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fcdb000-4667-4d32-aa44-84a70d2f53af",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f3c2a81-8e3a-4e66-a750-930bd36e7d39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a31b120-450f-4f06-89e8-7f6a4659115d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4faaf475-8bd6-4208-bb75-420d1a33dc78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "da4a0957-470e-43d7-8acf-41212b068a67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6212f594-9972-4532-bac7-d5d578d59dd4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2e5fe70-3ffd-42d8-843d-84f90c00c002",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "118eff6a-41d0-4dcb-b958-d7b9be1faf41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "911d2932-fffd-4d20-9fcd-688d526ccf6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a0aa5197-87cb-44ff-879c-cb16edf7cdb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0abafd2-d7fa-42ab-8472-4bf63da015a6",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "450d4eeb-e1f1-44dc-abfe-2068052ffa4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "521e5050-2834-4430-ba9c-75cd0035956c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "891b6d63-435d-4159-ba55-8cc0af39594c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "6bceabd4-6445-441f-9940-1afcf3e506fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48338dd5-f761-4465-bd74-0dfbd8d10045",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21c35f4c-b640-4479-b98e-6efe9cb10177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05272b0c-f720-4528-90d4-b72852a7c233"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5887f428-a3bb-493d-9249-20e2ce30157e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "96537495-4d2b-4d37-b380-674980b52327"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb6f304a-5813-4b9a-9f1b-25d486937cfc",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "258a89a0-3537-44ba-850c-31ff7524168e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "177848dd-a2e1-4ad4-8b59-15a57b87afb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94cd2088-8c0b-437f-ac05-45ad3f55e67e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c47d8f58-a5e2-4488-b7d4-8612f1b5e577"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f63ce59e-d208-4de6-b44b-cf3bea70449e",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6df24158-e613-423d-8005-c837118ada87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c172581b-b7cc-4e7a-9eae-85297bd4165b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6121687-9d37-44a7-af7c-74b7e9c2ba6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0bdfe37a-3595-47c7-b132-e6240dd6679b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bec6646-8c19-414c-8607-d99afd085b6b",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "162110b0-1a90-469c-8397-bea99da2407f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b82afed-bd50-4a3f-bfd4-c6dcd793fe5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb30edb3-e639-4a58-b91f-707afb954cfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "72d08443-9da1-41c8-92dd-aabf21902a86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "349b1df7-6462-4e8b-b138-c634da66e69e",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4624293d-e8b7-4ea4-bf0f-4755018cc0c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bca6989c-f9bb-4587-9e95-91e23c94237f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25b2bb91-d0f6-467e-a701-692f10bc69cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "76962e44-89d6-40fd-af3a-caebf9a2d4d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76b7e63a-e0a5-428a-b16d-edf0e1488832",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f374b46-30bf-4567-8998-349476d7485c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae0d01d1-79a0-475d-9a36-20953c22ece2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a628a785-f669-476d-9901-9b2bc09a2e4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f020fb7e-42b9-4c58-906a-b419e959ac84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fabc2f3-3b68-4864-be9b-27a0c0cd8b4c",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ee427d0-b5b8-460b-b5d1-33c2ef16cab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "530cc7cc-33ec-417d-950b-98bccd48b982"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77f966c0-3ae3-4c0d-ab54-74e26252e127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e7a3650-5eee-4df7-8224-290769711536"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2285110-4fdf-47bd-bf98-51f689a34b86",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33bb0eae-5ebd-4017-bb8c-008553a77ff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "410a0ebf-98fc-49d5-b7c7-a3975107e0ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6f66c71-875c-49af-a8c2-8d4483fe3270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "daca02d6-4b50-44b1-9da9-a088140fb423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c2ad3c6-57e0-4a9f-9a45-04c1c9a7a76a",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d859d07-0575-418c-a8ff-079079d8c4a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "487f2cd8-05ba-4e4d-b7f7-b02664d855a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f6e3786-d645-44f8-a34a-b215fa00a0f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "222bd11e-24dc-48a1-a15d-6853874102d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dfe11e3-9f32-4de2-8d1c-226f89fe6da5",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba633652-d845-48ba-805f-c73fbcf30262",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b10046b-d4d9-407b-9383-f0e9974cf6b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43372232-0dcb-452d-8746-d53b10850b31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "80bec5ab-67a6-4f54-b1b5-62aa93c0a339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb3a2948-f91a-4be3-b4d4-15730052afc2",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0afbffe3-afd2-44fc-99e3-10b75574c3a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f21f21b-b749-4562-b499-f3b5583b44f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbeeb2cf-ace2-4ff7-899c-6027805ad7dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "402154d7-a302-4d50-980e-3080bc15d34d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "800cfcdb-b63f-4e1c-9941-c87bdfc929b0",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "effd4c7c-7de9-48f3-856a-ec4d41cbd906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5a380fb-f847-4a34-84d2-249d033774ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06df1140-dfa6-4b43-af58-dd2911a5852b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0402177a-7698-4b84-85ff-853fa18c4649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1c40558-913c-4501-87a7-975011ed1621",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6108c3be-1164-44d1-a459-61d5a3809749",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92dde8b7-6e43-4658-98af-8dbe25f22e15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29865c13-fac7-44b1-9091-150da8615020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0753f686-2317-4d28-afef-c86a895d55c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "380320f7-3ff2-4472-93da-1afad0042529",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20eadbcb-b0a0-48b8-8ed0-6e8b66e7d0a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "480d5d2f-f227-4e60-a440-537c86d591e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "179cb555-2c98-4a5d-8d6d-f2707d4fb21a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9893f74d-b6a6-45fc-8e9d-f725e834cf81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b52dfda-aea7-4666-92c9-5518a271c651",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6413e9e1-0597-4478-991b-7f7903119bbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8764e0e-f82b-435e-9e42-05a11ea40372"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e056c45-25bc-4cc5-af96-575901463cf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b4cb007-0de6-4aa4-b8bb-1d5d37aa764a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "650c47cb-ba28-4140-a422-49e4eb476a58",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5560dea4-0664-4cff-9a38-a4031e22946b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8ae9e93-fbb9-4df6-b00d-b30183d16ccf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b88307d-9aab-479a-b9cd-4fbd61e93a80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ba8307f-e2f9-45dd-bded-20e5806cd3f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2b5cc7e-5488-4788-8546-161581235864",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66fe57d2-9105-43ae-b06f-ed851246ec13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8cbcdaa-896c-4cb0-ba3d-183177f33784"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb190cb0-1b5d-459a-8178-0be341b749d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "243e484c-8905-4026-b3a0-4180b188261e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "332e918f-72b0-4d8a-828a-c73e4000c175",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bae28eb5-9a58-428a-ab69-77748c9082d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb0bfcc4-1f73-4b9c-ae64-cf4d5d584b64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21844c91-0a69-4ca5-8fc0-610dfbdd0b36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0ba1d153-75ed-42a9-a442-1a9b06dec8be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94afc9c2-5f8a-4e45-b3a7-62aafdb2e5ce",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c162de63-1995-4847-9194-e6c3b66c0145",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7e2f4b2-9418-4764-8eb5-552b2976924a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af7c9574-9541-4239-9f89-efaddb2ec548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9c9f548-30e9-49ca-85bc-581f1082f17f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d98579a9-85ac-4954-9bb3-4db67dce8c99",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "103dce24-28b1-4e78-a8bf-54bbd37d877d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76191247-347e-4a94-8a74-16864900ee24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5825139-b85d-4126-809a-bdaaf485b936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5af946a6-3a91-4749-b815-9282beacacac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0ce4793-ef1c-4fbe-b638-8675248e5d26",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acfdfeec-54fe-4d40-acaf-7d085b1b588b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e2584b3-cfa9-4541-b7bc-90497570b5bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7d06f1c-022c-4b7e-8b3d-2fc496f05579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c15b2de1-945c-4358-af69-a2e02b5eb5c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd78ad2e-b14a-4e5f-a69f-83dd43a3ce8a",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c5ace4e-a252-4735-ae51-29bbd02a6c78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a423a9da-e748-4f4d-b2da-0433e22c5f6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4494be8d-74eb-4302-ad36-580690ad19e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "436fa64b-5b66-4e2a-b887-7f19f9ee23b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a804531-a257-4132-8b70-1ba54fa0ad9f",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "968e894e-e581-4813-a9ba-dccb277da7c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaea19de-38d8-41c4-9a34-f3994c5ecf4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "845651a6-9079-46bd-80b3-ea12a357dddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a7f1b0d0-1cf1-4a37-b3e0-d8d1063832b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "957b7fa5-b308-4489-9fb0-47f95965286a",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d42368a7-d627-4ab4-be0d-d603a6ba6e0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "246faec8-2e48-4513-b014-88375fd4fe9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53ce882e-69d6-4990-940a-cc543997a3d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a5c1fe81-9bfa-4412-a241-ff56751a1f2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe70848f-5252-4c49-95f5-733bcd6e5eb0",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79f0f568-fedb-4ee6-95ba-aaddae5fc501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69053070-962c-4977-a10d-6b0ba16d965c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "925b3f75-54a3-4d80-b705-1e2a57bf6429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "563fe8a7-ac7b-4ea3-896b-7b55e6659f47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55e6f49e-31db-4e3d-bd62-9b3ef11c767d",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7093f561-f8a8-4361-bc36-182ef0fc1a97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fcf9a18-a430-4762-b1b3-bd9e34436518"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5afea110-db4f-45ed-8e93-6f88b4417ec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d9dbb2c3-19eb-4757-ad30-98cdd312f3ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4840bf5a-f9e8-4042-b199-8a9483e2a20a",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c62345d4-95f2-449d-b96a-2eeeef800c5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06bbf0c7-59c3-4be2-915b-e279828667a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68cb562a-78e4-4d45-b37f-e62370bdb33b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "89277190-1ca7-45e5-a284-76cf698b9050"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd6acee5-ba85-4f04-aa53-1cdc425fbd35",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30cd3498-b342-4f2b-8171-2da563fd925f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "831d7d68-24d9-45b4-9672-8451a7fa9159"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43f51608-7be2-4b10-b9f7-d36abc85762f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1309e3d0-1f1d-4a98-a71b-eea79ae3e131"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d4ba975-6d10-4b18-ba39-8f017629da89",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62963ae9-eb44-43c3-8cbb-d49ec015398b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0415306-7639-4621-915e-8111552bade4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24750989-19e6-4e5f-92f5-68409fdf8507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "6646596d-4476-4adc-8ca4-7d60aa6a8308"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e71f760-80c4-4f28-b8dd-516c9e18a760",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2659f194-e17f-45a7-b2c1-8a1e5fa535eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "f3d4f830-91f8-4091-b3f3-dffff22edaec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f427f94-d0d3-425e-8003-4773548b39e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "518a97c7-d5b5-4bcd-9b55-422a4e29f417"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "015007b5-c8ce-4013-b4c1-5219b525eb84",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fd63f140-f98a-4928-82b2-97cd7d005f71",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11a6cc82-32c5-437d-b59c-a788a99d64ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0de22486-f334-474a-95df-6627eeff2718"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f54b169f-b1f9-4eea-85b7-08e85ad9ff04",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "080df6a6-415f-4d12-955c-2b3b8bfffc2e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "21164297-5263-4ec4-8bd1-ca731e498b7a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0152918d-5324-48cf-b584-284d4e3d0bda"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0ea31081-5bc1-4f6e-a69c-26936ed01d81",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a8e91357-d6f0-4073-bf14-82fb0d1a1339"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b177cf57-85ca-4f2e-8bf4-4f7713a37185",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "93c412bd-d4cf-4ae5-a57d-72053d60f53b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0310ca09-fc83-49b2-ba42-f4c213218920",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e886acc6-d864-449d-8c9c-fb13a092ff32"
                }
              }
            ]
          },
          {
            "id": "d79b71df-5440-4e0e-a6e5-0d308c56ac86",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9ff9bf68-465c-450e-8061-a8cf0571b649",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "9843977e-47a9-4611-a876-6e0b49d136b1",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e960e338-ff60-4e85-a1e9-e22d7b42ff63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "a01f1bd7-72f5-4fc1-87ce-16939dc5a628"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d234735-1e3d-467a-a3b0-52e9e20ed441",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3815fc66-1869-461f-bc5b-0166b567029f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "aef2a3d2-2449-4f21-9347-af332b4ebd7f",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5f3cd7c1-f078-453d-b048-e790b6539c9d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "28f70ba2-bde5-4387-a072-2496447dd0c8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "07ba6b0a-7d24-4133-88d4-e89e4da0b300",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c1489ca2-4baf-4365-afca-906c41e3f0d1"
                    }
                  }
                ]
              },
              {
                "id": "9f074a27-5d99-470c-b492-aa7157750eb8",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e106544a-e4f7-4565-81db-6ef367c92b17",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "44a3a6fc-ea7d-4826-8607-2dbc2417d775"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0d189c0a-4a2c-484e-b8d0-f33973d9bb03",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e9d2c666-cc71-48e7-befb-44a9b91848ea"
                    }
                  }
                ]
              },
              {
                "id": "fed14c1a-d53e-4367-a6b7-b40fcd21115f",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d5f60c32-3eea-44f4-a8a0-21a0c9ba5876",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "edc2c4a9-36d4-4b47-a409-69a169b6003f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "93a5cc07-12a0-4c14-b9ab-ec122c22292a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "76e1d9d3-28f4-42ba-bdd3-cebdedfeb7c2"
                    }
                  }
                ]
              },
              {
                "id": "149cb5a1-0a2c-4f6c-b55e-b8c55b0ed47d",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2bd2b0fe-6ff2-4275-b1ef-fe220a620f54",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "db13c69e-1809-4cb9-a375-afa11894ab7b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d2a5351c-0a28-4bd6-8ba0-289f9ce1a654",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "80ebc11a-ec9a-4ae5-b43b-c54efcc03185"
                    }
                  }
                ]
              },
              {
                "id": "deb43bc4-440d-4304-aac7-a94e3327274c",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b81a3fcc-6e4c-49fe-b8fd-3528f3d1a97a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fa1e2d58-c1ba-4244-a695-4ffa59c22790"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4839ba2e-1c13-420a-bc06-1a9fa57ff7cc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "ca42777e-0c2c-4474-ad34-16bf9f8481a4"
                    }
                  }
                ]
              },
              {
                "id": "fee63758-9e80-49f4-973b-ac264c3676d0",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "66ba82d6-3ec1-4c79-971e-140230a82348",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bf009262-ddc2-406f-a62e-af47e5b0ef60"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d09fe3c9-1958-4197-a8d0-4a5d20266d65",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "43d14143-ca59-4345-93e2-c48139393d2c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ca62ee3c-928e-499e-8c5e-a2c1d0901a91",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1beab628-22d1-4d2a-bf3b-836878a75f31"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1526ec49-270c-4ee5-baf7-813964a38553",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "06b95783-6900-461a-938c-4f027f02e33d"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "93b2ddce-7344-47b6-b026-344bf751f79e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "6d5c3eee-5828-4f9a-b108-ebc780321707"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "53830c85-72a4-450c-b851-f25d6edb5d4f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "68aa92dd-334b-42cc-90a4-41ed886171f5"
            }
          }
        ]
      },
      {
        "id": "963dfa09-51fd-415e-9b0a-40148eca65ca",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "547ba727-114e-497c-ab24-a06848c8592a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a656acbf-05f4-4a02-af8a-4d25f185eb04",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4602f1a0-6233-4935-92ec-d1d7f8f406f2",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61e3d757-fe31-4c97-8604-41f206c2ee65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e783d0cb-e896-46af-9c9d-ca57ca5cb4ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e93b045-f05c-4879-bf82-c7b97055c3b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f2aa597-8194-4be8-8dee-1f76d53ea8a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beca6442-e919-4f10-97f1-8426780efdce",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca89998e-4d52-4131-8076-676ac580b085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0776c1a7-d322-4833-93e0-2813b75dd042"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eabc98db-c65c-4582-9ce4-b2a991bf576b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8cfce7d-2489-4e5b-bd19-86f9b5095a0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85788e62-1549-4188-b9d4-80f48c2549f1",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2948a021-4ef2-4b5a-8eb3-d2bef01b3505",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22b2f20e-88e8-4f6a-b915-d88736c4835c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c8eb8d8-d910-4e90-a23f-b7a3ba5d2256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff73710f-a3d0-40d6-a39b-3071a11944e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89d9a6c4-548e-4f91-805a-7ace31fa7b5b",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce55012e-25ec-4c81-8b79-4758be402543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5637da7a-e6ac-4d60-8d68-24268f7e49e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50735596-7393-48af-b642-d8901e472266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b583ede5-e83c-4771-9b05-6ca3cc661368"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa82fde3-a55b-4fba-a5df-4dfece59d8f0",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94b4c560-f64e-4311-8d54-50eefa9db593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aab5789c-f6b3-4f8d-9b06-e1363d0cbc77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80fdd668-ded8-47a6-9d99-2a67d5e283a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bde59ed8-2c3a-4605-9683-aa1afca6d54e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7944d11e-a726-4320-820b-b0ca53016677",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4d73305-aa5f-4011-a72c-03bd93c3e90f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c78c140-f544-43e6-9c59-b160b344f805"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99d9b82d-21fe-4c67-97e6-ba02d6b89541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "817c2075-5e6a-44d4-bae6-52a35a861825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9cfc806-547f-4230-8c19-d264ef5b94ba",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0549576b-177f-478c-98e2-6ee56f6c6b88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c76ac12-e417-4a3c-bcd1-4a72e698b961"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbc149c8-e5c6-40b1-86a8-537978981785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "8fd596b8-b1e9-41dc-b91e-9bfb33b40ac7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f7522e7-39d0-4f4e-b21a-270e42227934",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5e11868-7149-4c3b-9691-a8194abde8fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01f85a43-48cb-489f-b0d2-9608015365c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "335e1ed2-0dbf-4a74-a675-0781e5251b60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bda84c9a-c2b7-4dc6-a60a-8f77ef913ad6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04ed92ed-72bb-4aef-805b-dfa55d9fb652",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2e1cf63-80c6-49e9-b584-8714ef1d3d23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7240196c-771c-4a1d-9887-229bc6b73338"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a16994b-b11d-4483-9fe1-4950c096f0f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a374ffca-bfc4-41a2-bcf1-5f604cd147fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4244efc-e93e-4350-a942-d7f7f2238375",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3bd4c9e-6d8a-4ee1-b20c-268ce9022d65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb29ed3d-0892-4f69-a062-e41cbacacc59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2d3669a-d021-42d3-9e0c-3328fd1ee855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d8aed75-d67e-4366-8aba-d1c5be66e403"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa0b4f1c-9d9b-42f9-ab76-49164c67e85b",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5b5ae3b-c0a2-479b-b3c9-5b466a7946d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1ede606-db9f-41a5-94f8-422b345c80a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccd6a608-6def-41b4-bbd9-01de10bd1058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "5188e605-9b9a-4e3b-879f-975c29bfaa64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a9af75a-3b85-491e-81bd-763a921ac4d7",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43290a32-e574-4bfd-9df6-156a034231fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d429158a-fcbc-4ca0-934d-8256b11f5728"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3be2323-e313-4b7e-9eab-23a7e2c22567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5dea6e73-cad3-42a2-9c13-cb9fde3095c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ecceb94-01b7-4e28-8c80-dacf65e10d3f",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a16df80-d8b1-4c00-8db3-bd8bf311de0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d2daac7-bea6-4e15-bc06-35e93851ed24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baf58c39-faf3-471b-971f-bc7cc396467c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e590f03-8ba6-480d-b9b5-cc7bb04f8e85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c1bec7b-1366-47a7-ac00-fd2e2b48bf82",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0d28cc5-dcae-49cb-9d96-94942fbb724d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51248ad7-cf42-4db6-af7a-43fc08d87434"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b154be9d-e1ee-405f-944a-2dce397462e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad4ebad5-be72-4681-92f2-cbaf3da3e770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa5f37bf-ca33-46d8-aff6-3ffa41ba15bc",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3746dc79-ecc0-42c3-8ae5-085d5d3be962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a851ab7a-ff49-4e9a-b03f-a95be471ddcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "885c338d-b196-43f0-a1d3-2361a0c47718",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "d03f27cd-a2dc-47c9-997f-49324d9c6cfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd0f5c4c-2b2e-4c5d-891b-14ca5cf7558e",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ec71ab7-52c3-4dac-9baa-033deb30bf9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5326e824-0bb5-451f-af05-5468195be208"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69528caf-d135-42de-8406-9e1db5a9b941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "8be3795e-60a8-4c17-aca2-98b5b75237d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d73215b-abcb-4a95-a1a7-ecf999387e61",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecb2759a-0173-4e82-a52c-be6e28e30f10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a15f3047-82e6-4f3b-9dc3-18f2527ff1ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8c9455e-3444-4018-b414-7f5d03d32ad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b00675e-4f7d-4587-be3d-73fa8bdc4ecd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "931fbd95-fec6-44af-abab-9026d155c72d",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5089ac74-c61d-4038-ab0c-bb6798d096aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d6c66eb-f28b-45a1-94f1-cf1751c82b28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2653c843-13b4-426a-aae4-f4bc5dbae302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c2b1be0-5c02-4761-914d-3737876c2d87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9048bf1-fc92-46ae-b609-5d6c7850f3c5",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3701eaa-9336-44ca-bcca-a3a57843b8ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36477c84-c28a-4d2c-8aef-cc7ff841b24f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58380a0c-2135-420f-9388-30b29a1e7369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f49e047-5b30-4561-960a-8320e40133cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af358467-e937-48b6-a6c7-6dea00d13339",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bbe8ba4-3cc1-4c5a-ba95-029828daa235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff89fba4-aa8d-404e-bead-f7381ec9cedb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2e8291e-da96-4c93-b518-fde47ca8ea16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a743f74-53c8-4fa9-8a00-5ac76a09a5a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ab5c438-a28c-44bd-a1ee-0f9ee778a136",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ab1812c-af4e-4698-88e8-87e7eec1d9dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a2b1225-2717-4cff-b031-44a7afe0907a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8b136c6-cdee-4d78-a588-8e7c7d3d9b96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "13a09fbe-1229-4586-935e-60a279c4f89b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6244a2a1-63a7-418b-b3fd-20c1b6e8a856",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08e517d1-5b5c-4880-8d10-9682384ce6c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d07101bb-6288-4468-8ce7-30c06b8c53d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac287fa7-52aa-4e7f-b6a9-a52589c214c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "49e2c637-5353-4319-8866-74bf126f9e43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a7fd7ca-bd37-4875-bfda-83d231042045",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "536585a7-7456-4507-b61c-851d72110010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ae526d1-aba8-4052-9d1f-f23b38624689"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7101614a-e885-4c67-ae8e-2277370c0a6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "58158812-1e1f-41ef-86fd-6448d4ef9403"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4233e6e6-40c3-4a06-a178-3f2a9b1f8caf",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da44fd8e-38bf-435d-8c6c-1deb8d0355f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e68f955-49e0-4618-8000-34a65e282ac1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98cd32e7-0ad8-4344-8fea-04ed2f8987f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "835f4b3b-d98a-4f0a-ba11-60ec296c9a3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c9904ce-27be-42fb-b804-a39577249f60",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a80fe9d5-411e-4c7c-bb47-ecf11a1c874a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b67b0e42-176c-4a12-8584-17ca8d2d7db9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b8a4397-4f7d-418d-b4df-f4ea38c09a0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e172751-0d6f-4de8-907f-a45e5b114c30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dff2af7-90f4-4403-ad3e-5471c7272ede",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10dd2af0-d06e-4003-abe6-382bc05ac3b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed044b8d-b2ac-402a-a66c-572507b76346"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96aa26f4-370e-49a0-94d4-30d72246f10f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cbad9c30-7c20-494b-b463-593994e0ea74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8022760a-08f3-4e26-9632-60fc28c3b1a5",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "271ec4c4-15c6-4785-8a88-e4590605502d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8ec852e-6654-464e-82dc-a61035c7da10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcf376ea-4286-4354-9b7c-a65a32c20ed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d069e06b-1b17-4a4e-a485-023fb292b305"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dedd9804-00fb-4ed6-9dda-067a7071a1e8",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fda95e2-0a9f-4886-b9b6-15e640eb4af6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67eafc30-6445-4e78-bbdf-57e3f8075ba2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59777d4e-46d5-42e6-bf2a-dd08a929b8fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "80537205-bbba-40ec-bb09-610aa2d0b162"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b14da0d0-4b6d-49f3-af5d-1e233ec07226",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4342a29-c87e-425d-9e22-bcdd729de8c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a489033-d9b1-4fb3-9575-c308fa22d9e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57105f3a-c1d6-49f4-b838-f94cb089e4bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7df268e5-6690-412d-b134-6d2a2e4054ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c16df06e-0b0e-4754-8ddb-0da65d8d5045",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9387687c-4d0e-4e1f-bf1a-cbe11fcbf931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4c6b027-abe2-477d-b421-a6413f6a440a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16b2df51-3512-40eb-91e1-6d5eef5111cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8cd9cf5f-3ebb-4cb6-ae26-60ba8f22c0e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "202c1115-efbf-4dee-bae4-330f84c25059",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5598617a-5f12-4ba1-a722-e113883ac382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83eea4fb-2c5a-49c1-8d92-415c62317905"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1608a852-c765-4d64-8c0b-b501b0e8238b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "70cb2d64-5d7f-48ef-87e0-0123ac4c613c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cd983cf-5069-406b-b669-fc479ee2f8fc",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6f08dbb-91ee-4451-8554-89e99968d58a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0e12d27-382d-4354-90d6-3ffe34972d72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cf52c3e-7813-4cce-be77-e9e1b465c2d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "01bb3ede-b727-4e11-a5b6-8513e866d43a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b2c373c-7b13-483a-b8cb-b9ffe2888dce",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a26465c-20a1-408b-ac02-e851c614be67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93ba45b3-8a7e-4c16-b764-e42eb144f2cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4c9d93f-f308-40e0-879e-d87b4f50ee28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dde33d18-42a3-4d7c-b1b6-2023e3b5f550"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceb724ad-82cb-4f64-8f49-e384a9d07a42",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed1bb7ce-6f05-42cd-aeab-f39ffd3db085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e680237-d91f-40c2-b454-51d8d4b33a24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "939b00d0-dcdc-41b8-9247-4ae78d8b1814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ddc4cb98-3397-479d-95a9-a48f985d7b94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67ca97e0-497a-4021-b956-c106339d4834",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8739a7d7-d47b-453f-8acc-2791d91aabf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc01afdd-1c46-402a-8d81-b9d08326695e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6ae7601-97ef-428d-9e8d-15f17baa9980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c94320d-d68c-4545-9ba4-7f372a282a76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c65aca94-bade-4d19-9c89-6508a9ccf50d",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82fdbbd3-159c-4a48-8e3f-8547a57dc963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cfd4431-d720-4d05-b84c-59f8bcc52bcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a4b776c-89b1-49a3-8461-28ceb3a78d6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6a08d4a-a990-4380-99a3-86a68095030b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "793b5cbd-0ee1-40d8-88c5-2c8e25041107",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cb47cc5-6131-443e-b1b6-45557dcf97d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a249aea0-003b-4186-802f-fe8f349bd979"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38be49b1-15fd-4ac2-af77-9cebeab9829c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "857c38b6-1b77-4369-8cc3-bfb28ef52d67"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a55b2531-af8b-4a0c-9c33-1fb784dbc061",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d4b05d01-20bb-4fbe-ade1-2f734c7727b0",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "380d1607-b7af-49f6-942c-ceb76ad1dc64",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "79275700-5c67-4249-916e-769fe6cdcd5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "945b5721-96a4-4d37-b7bb-4a51aadc12d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d6931dbf-7fe9-42c9-88c1-33ba8aa4cf79"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7f17b9d3-22f2-43f6-bb09-440f02bb9fc9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d093ce3f-296b-4fe0-811c-d3aa883b0269"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dfbbac76-95ae-4028-ae8b-99f139bcbdbd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8bc1213d-6867-4c27-92b2-d734e7e8addc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b93b7ca8-d36a-4581-b977-59076de4c81f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d6684639-fd2a-4cfe-84ad-a7d057ee2a3b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "921d6252-e2a8-4900-a755-5a5a1aba4344",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "339f0586-fe94-49c9-bdaa-dd976ec633e3"
            }
          }
        ]
      },
      {
        "id": "679a3ec5-41c6-4d6f-a656-60ee1e7f5c27",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "8b451a68-5e37-4528-8fbc-4ad05b2aac08",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d746bb48-d6bb-4fbe-b335-f5b617c9e60b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4377c02b-f922-4c1f-b526-ff87f847bd9e",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e1ce44f-0a17-4e8a-983a-49e51ce13c68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8b5f02e-2999-4482-a4ba-d0b17b0853ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0ca8543-e6f8-4171-a067-fd0c8fa63f18",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2d1a5ce-d70f-492b-a512-68d71e599922",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e98f36b3-366a-4f4b-99fd-67b603c6bb11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "215d57b4-4cb7-4d16-9723-5ba7d3b24b27",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af9447d9-43e7-486c-8e6e-185ee7ebcd92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e61c5c4-1563-4a03-9be2-f7b2d6343f10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f22f267-d34b-4ca5-af01-1b5e091a1b37",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee592619-dd79-469f-834c-b1802a03965b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fa4f4e3-d91a-41bc-991e-43a06509c786"
                        }
                      }
                    ]
                  },
                  {
                    "id": "668e3e37-9cee-4e85-a71b-a47af3b6bb04",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ca03d2f-7c5a-4b77-944e-f04377a43c14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "948f7764-3283-4afe-ab45-dfe3369f2e71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f108fd2-67e5-4473-917e-e9d9c82d6326",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b804edc4-4a10-4c11-8b3d-876aa8f3509f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ec4deed-c414-4ead-aa3d-6cfafeec2931"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05af9318-4acf-4bb3-9cf0-afd572a0f028",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bc14696-8fa2-4c54-acf9-fba5b0525b25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8412a091-0033-46d3-9577-08393fbc3a1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3845c0cd-7bca-4f22-9ac8-568b0241eb9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39cdcb7a-309f-4736-84d9-e116edb28542"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a315dac3-9755-42f9-a6bc-77749adaaaaa",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62e3d620-9e92-4160-af5e-0509a9d8ff72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93600f2e-49c8-4bdf-8de1-4263fa271c5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0a48c82-d2f2-4b63-ae2b-773860e31bd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b7be7d6-f0ab-475b-b0c3-f7943ce43831"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5577ddf6-70d0-47a4-a532-59f936740f31",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a07a43e-8073-4ef6-a134-2165aee47b87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abe91ccd-706c-4811-8d21-fd212866c53f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7539389-699a-4489-ad06-b193efee34c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "810ff30f-423c-446d-b7d9-1958fec5cc2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7f50ff7-3ab1-4599-b34e-fb593d00057e",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad631cdc-c04b-4ebf-bc6d-3b9174ec8b51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18740e41-b7ee-482b-b287-6243e5ea2845"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e328d58-fcbb-4145-9f58-831d5eb630b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5143adbb-a806-4d3c-83a1-f379cd8424bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d099403-a7cb-4e26-a88d-f45004586299",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22dc6cc0-00d8-4ace-8b6e-da458af1a7c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d296c062-3fab-4974-be14-2e86eeb22e62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe20712d-0dcb-4131-a2eb-8640331becd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "313c6e01-b493-4827-983e-c4d64cb2eb36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47fd4c4c-746d-4f8d-8afa-84d277089778",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63cc1a1a-f95b-467f-a2aa-2055d21d45df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec23fc2e-688a-4ae1-83bd-061bdcab9396"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2c1cce2-8d1e-452d-9ec1-6b66d202ee8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "011e7b31-2ef3-44c3-bddd-0dcee87393c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93da66f4-8906-4373-9359-9592eb8d3cbe",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aca6f958-e0ad-483e-a1aa-dc7e1ced6248",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2b8ec26-ecfb-462e-a6c5-d3e923bde63a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18b7b38c-c05c-4585-b7ac-b1c70303f643",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01f5ab45-f647-4c22-bb2a-9a0b979c9004"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b3fe3c0-748e-42e5-9fac-8e153abc13d9",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97a5fc31-aef9-4857-a942-58da20561297",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70d7e7d8-ecdc-47fe-ba7e-48b0b43b7efa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33672c83-96a5-4ce9-83af-0eb43be633ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5a0e5be-5927-44fe-8e71-6039576219a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cdceba3-c467-4094-b357-b9eaccbf38c0",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efad20be-2427-43ec-a777-9649bd0945e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90d53ccd-31da-4441-9ab3-9a33b7b0f4aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a07f0720-0c6e-4050-85ac-ad685bb30c32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa616ead-f696-4a06-a6ee-b60c29d495fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "300e94ac-1d85-4ac1-b8b0-80e83caf260f",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "943079bb-ea43-4922-b0ce-79f88a21aa4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d501cfc3-cc47-4027-a700-5c3301a153c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88371e80-872a-418f-96ea-b9dfa8b0db4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d118f264-4bc6-4046-9946-a91a26b989c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd007f6e-8385-4cc9-aa1c-c3e87e902256",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54a1e9da-7a05-4afc-8be3-7a848a89ebaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17ab140e-fdd3-499a-ad1d-3c5f9ba6ed4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db635bf4-fd1f-44d3-b4ba-c09f507306f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36687140-359c-4ddb-9cd0-635807921f28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1135d9e-f181-4c35-b65b-23fb0f4bce5a",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb176e5c-6a17-47f3-9a84-5cd5fffb45cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "600dab2d-a6d7-47d1-b651-8fe39da37d43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "989766ad-7104-45a2-bcd0-d74da2f701c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f947d82-8737-403e-81ac-b482e03f30bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8488b13c-4da4-4cad-98a8-da817a5485ce",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40c7db2c-09fb-4d94-a730-178864f3cee0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90227f43-62a4-4c68-a0c0-3e8ff83c98ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4a5d0bb-3a23-4b21-b069-46adac182d89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2928dfb1-5c7c-48a9-be6a-38aa6155cb47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24c8a0d9-d95b-43ae-a909-f73665321e45",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfa7ef73-031a-4280-8e71-0cb0c8a187c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1ff54df-9924-45a8-8b69-a56eb2336281"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46c2b710-0b61-47f3-9eb1-f7bb52cc157c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbf13ea4-f9e7-4bca-85c2-c451a149522a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6bf117d-4bc7-4977-bcbc-609eb4c71c44",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0718930-04ad-4787-913a-c9477a13055b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "315a5b15-5970-4c52-997e-9ac29c265c46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d02e3f9b-9a7a-459d-8b74-2c8646f57a30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6007816-4976-44f6-870e-19d349d07728"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e318b5d-2a5c-4fc5-b34e-e7bd4637ec14",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "154b499c-7b4c-4fb6-941e-aa0acc4e7d7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7c1b1e4-f16c-438b-922f-51f1e21f263f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf122fa3-96ef-4ffa-aec9-991a59aec9fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ae27b5c-2fab-4a13-8a0e-b52c31080113"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65b0ed0d-8ecb-4aab-a323-c639cefab90d",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a773c05-d291-41ad-83a7-a360a641b8a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6ab61aa-f31b-4c9a-aca8-6c3d427a55ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76cb6f72-6710-4dbb-9bae-bb46a310647d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "434582e9-c37c-4499-a8c5-571b8d1792e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd2716b8-d803-4a47-a00b-81b648557797",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7096f60e-daa0-4f1a-a7bc-973c7baeb75e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fcbde5f9-dd7c-4153-b38c-92ad718126a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7f15532-70a8-45d5-a2e0-f41d6524d351",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cf6c46b-bf10-4ee8-96f3-61dfc0c5ae52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b48d5c5-3f8e-4804-8dc0-753091f87d10",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84b0ed9b-5e51-486b-aee4-21dbe592d99b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae003a00-9aee-49ba-a62b-d6fbc8ec338c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba1d4ce7-da73-4c48-ab15-c1b6b1ea98e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22e2f8b0-ec64-4380-a6fb-70916cf9d79e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78fa9044-7588-4a74-8e63-caccfb5ca8bc",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92075700-4408-4068-8d0b-460c89ea1ecf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67a2aa39-a8f1-418d-ada9-0a4476d81837"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef0c61ab-a2fe-42ca-90fb-73a7f6a02905",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7082ee8-06c2-4a81-9a3a-823265da661a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c4cecf6-4c51-47a1-9c72-a88a7e703946",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d1bb6cf-cd28-4059-89de-5c7226a315dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8892b18-a970-4472-a29b-94c6f8c63815"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff309489-cfc1-4b41-952b-2bf5756ee5c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "744bad19-82b9-4d08-828d-5a26ba52c3a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e723a52c-781a-4849-b9f9-bd8068dcc5ff",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55e7e719-a540-4b5f-b6bb-c5c65d1b6c9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5d049e0-4246-431a-80f1-7e342252d6dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "250ee314-cfae-465f-8ec4-ac78852ee4cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07fb2ff2-7bef-495a-afab-74172d3a0031"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a07db73f-5f35-474f-b099-b232aa60a5d6",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b37f827-375f-4948-a938-4237e1bfc3d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "679d6994-8d07-421a-b0f5-1530ae159ef3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42f0e6c4-156a-4b50-ac1f-0c0621902ae8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7d6a688-37b6-493c-9443-67e6444dac70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "659e03f3-f376-43b8-a2e5-90c96a0a8746",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a39eb061-e18e-458a-9cbb-04653fd79cf5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ec07390-c498-404c-9816-e7189e8dff5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "651aebc1-e144-404a-9a77-975c3093fd28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c0ba543-ade4-4430-a8bf-571ad844946f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89d17406-b0df-465c-8e45-e2a7be3dbf5c",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ed46407-16c8-4077-979a-a92f991fca52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9adef285-ca30-46fb-8e70-378345f1a4ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73f19e8d-dd50-4fb6-9e20-fd52d0728ba0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca2e93a9-2d4e-4eb3-b713-69e8a6e110fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b009123f-2207-443c-b614-c59d8e13d480",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64bc1a56-8a0b-4e57-9a15-d48054890370",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5968e18-eb09-4753-a9e4-2ee814bf8513"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "107a2a67-2545-436e-a0c0-dcb2f174eeb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9241a300-33bd-4f51-9561-433c9315b4a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "627835e5-9e3d-4906-aecd-3029ca74a164",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9328ca94-9352-4d16-bbc1-772b244241ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f8fe051-b7d0-414a-aa85-682111e16aa6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c422273-90cb-44b9-a74d-3790daade030",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8e8e31c-6e55-454f-a11f-0acf887f369f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bcd560c-084f-471b-aa96-4132cf17ce17",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1dcfee3-07e5-43d1-be66-8eeaa69dc51d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a70f456-5f15-4b5b-820c-51ab4507aeb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c47ac1cd-c6d4-452f-92cd-500a2708148b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a4d30f3-127c-4609-9a98-3fdf3c0b4a57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f01f10ec-7b0a-4368-b73e-c9010a8ff72b",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5a05849-7275-4c7c-9643-5b5beec359d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a03ccc7-cda4-405a-afd2-44022078710b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d0f3c22-f366-4cc5-9acc-b42d69b7d0d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38cbbf65-d563-4457-bb65-6cfcbf9211ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "766f0c4e-bb2f-4073-a90e-ab5a221b75cd",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1784e661-ac71-4d63-a9a8-a5372e136786",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27281cfd-b592-4a47-bd85-e31265fda709"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ea6db2d-5160-4599-b465-c52d6a15f982",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5505e66b-e2e3-498c-922a-0a0724381d92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a21c506-920f-4f1c-80ea-12fc7c84bd80",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3c54376-c76e-4b43-8ded-897457603ad5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "820b4d0e-7bfd-42e0-8e5a-93989019d1d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01619bca-220d-44e8-a7f8-fe78fe5fb681",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d3620be-b485-4b96-9663-40c09ae6f333"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e4f6189-077e-44e6-ad07-2b43f1d36d06",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "281a4ad0-01f8-4122-b524-4fd5dae4fd96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2855426e-e187-437c-b86e-fa6ff7b55965"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c248be24-ed64-47ca-acd5-bcc17c2733d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43ae2942-0cb2-434d-8492-7d858f3313c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08665c3d-04ad-495f-abb1-2cdaec45003f",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa68b204-879d-40d1-8527-2effe1514415",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "282b4eb0-e542-401f-9345-c24f83a50d9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0be2ee54-faed-4ab7-ba29-36a1eced7994",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "660241f9-a66f-4793-9e8f-2fc386aa8935"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8b83f2f-6d79-4b59-a876-f57046f09cf7",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9654d131-86e3-4270-a473-64144054840b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8036399-b1ab-4d1e-ab52-cafa53c8f86d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60c5ab9a-9491-4af2-943a-95109ead0695",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8d72af6-17b0-4b7c-a29b-c9e324873f6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76a5ea1c-ea74-4d16-92aa-d19f8289f024",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a347790e-b181-4546-b1d6-f2534599f055",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b66089a-c1c1-42f0-b768-a82905342c4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa123ebd-7bee-47ab-9a45-c90b0955425d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b7afc08-340b-4e67-993a-554d0fe12d1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19c326de-4f24-4700-a083-2f4439fe5a28",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76539d14-4673-4f7a-a623-524d8de6f7a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e998e9d-c223-4ae7-8765-852d0ad343b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25600640-79ad-4c97-b5a7-cddd6c41811f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22451bb3-5666-4949-a2eb-53969d1fc830"
                        }
                      }
                    ]
                  },
                  {
                    "id": "971fe132-6a4e-43db-90c2-5f2d08ecc8ff",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf8aac1e-11ed-4b3e-94ba-c67637744d14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cd3fca5-6c31-4163-bd70-27bda28c5631"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5059d44-ae31-4d01-9ecd-3874822aab81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "346e4d18-31d1-4658-bb81-94e420cc1520"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca4868a9-8c09-47e7-a768-8d6edfc710de",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4abe6f5b-c085-4998-90ec-84c4bd51d886",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cfe8634-09ba-4986-9742-9a18db55a4f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fa75a06-b7cf-4b8d-bb6c-5d0b23dac768",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b580fcd-ef8a-4f00-ac73-9af951eddb28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14954131-9643-479e-bf7e-4a04bb933cff",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c216693d-a29f-41e8-82a4-6d4fdcee5a56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27c0dad1-614f-4067-a25b-8c119214a38c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a7e4ff7-6816-4d67-a6bc-8c13876ebde4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8918693f-9ff7-4482-beac-c532b1017495"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ca06d83-1ecb-4489-8021-4fa084176447",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b1a63a5-3523-4dc4-b01f-f1e48808d543",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96226bc0-ecdf-4491-9200-53501649d820"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2ec3be4-b070-417d-9ce9-7b242b5b2aa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a51a32f5-9731-4ca9-8456-021d3c3032a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae048c81-5233-4826-85b3-91eabf36e518",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f13c6766-2c9b-465f-995f-96d4ac483677",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62116d21-3cc3-4a6b-98f3-dfb66dc86baf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e560ddc-6a92-440c-a63b-58ce8fcad282",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d04c98ee-2859-4679-8210-413b92526045"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0e0f471-ed27-4001-8507-5a407dd7ecbf",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceaac789-af7b-4a39-9bb6-eb3e02e8095a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36b346c8-c78f-49fe-9182-c2b0f9ea37f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc132178-f404-4097-a85d-746b98a37488",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5acdb6ef-6113-4e46-a829-a6e0d9a08700"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a972786-603a-4492-9a14-d75b401b3785",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ac0475c-a275-4ecc-9ac0-76a752f653c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac601c5b-2e70-4018-9ffd-e5b47453ec4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ac629e3-a3be-4fe5-a3fb-a156006d5ed6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bab7c05a-d199-4b0e-902b-a656e6c54b06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "845ed912-8e87-4482-bba6-f0dff94e19d5",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbd701de-a91d-4a13-b7ff-6917a09add4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83d51361-2748-46b8-a1ba-e4fa5000b47c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e0628a7-7f32-4d8c-adef-e67a4d529fd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd551f75-5e15-4741-80ed-43305a2fb203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7177ce1-a263-461b-8a50-ea0dcdbeff7a",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9995f213-aeb0-4a2b-a425-e2833c8fc048",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1482a68-bbad-4e45-82e3-2f6d1ee825a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32c3370f-fefd-449b-a256-39d5f1de9ca2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d794f138-a998-4a47-a2be-8067bdbbd44b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04e23de2-64fa-49e4-b368-dc4135b19227",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5ae866e-ae37-454c-a4dc-ca4c09d8e060",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bc83461-dcee-41e9-9a49-8cc9c50d1887"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d8c05e1-ac45-4aa0-98ac-5c34065ddf49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a041045a-33fe-49d4-b998-7be44ceba8d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6462748e-a384-4642-a9d0-a6cdac240637",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbb60c1d-4df3-4760-b5c8-ff8d3712adc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c3ff2b4-661f-491d-903d-adebcada07af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26561b4d-e188-4c1a-8ded-363933cc6201",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7708002-bd95-4ff7-ac82-388fa117b367"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8399cad5-7b85-470c-b400-e6d60221e836",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c602caf0-a7c4-4bc0-b45f-cff9b6da897f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8796743-8537-4d85-b525-23292dde19fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d535616-4b0d-422d-b2f6-bee371e09107",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a92f3fbe-f29c-44da-96cb-73d91e6134c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ee84832-3810-48d9-8895-4bc5a5a608a3",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95aabbca-f4e1-427a-9247-c80de531cf57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f15d7b85-4764-4f33-8655-5094dc345584"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "273bf2f1-2baf-4012-bbe9-c12797a8c371",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "035da58a-c1c3-4e7f-a970-9fd7720e1fdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "797d54e0-fae4-4a87-befd-6cbce8f748cd",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26694704-1f1a-4290-801d-3e501cfc38cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53bf649c-f0f6-429e-9c09-20114e7e8d08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "324d45a6-8e15-458e-afba-bac6edfa4975",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e72abd1-ad14-4d08-8b4b-b0618036d0d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa5d58fe-fc29-47b0-9ef1-ca893dfde869",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c70d01a-263f-4e60-9d74-a380959b0500",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39af8f7d-d58b-4100-85db-e9c4c406dabd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b255dc1-075f-4cd7-ba29-e87188797750",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79fbaef7-32ea-4f4e-a153-c4ace2c20de2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d0922d6-b412-43d0-9d10-33989003b797",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22670cc5-3b30-4f32-bc3a-f1b6d8e24c43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40802b05-b678-4b07-aacc-a391c820d841"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6476665a-f3f4-4e56-8f41-4ec9cad6dfa2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b2317b9-0f1e-4842-9158-70ab869125ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fa3ab5a-e84a-4201-8a5a-56ccdbabfb1f",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3480cbf9-c63a-40bb-867e-bdc728617584",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d85e3b2-62e1-4f3a-897c-5ad4d31669d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9153c55d-2f71-48b7-84b8-7a3b8f4f905c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32f445f3-3375-4aca-9bdb-b36ee92f0fd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17e1e15d-4d1c-430e-ae2e-32021859adc5",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e8df09a-7109-414c-a227-cb1ab718caf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f5f96a3-4383-40a2-a157-538300b9ff09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "142f4077-4c1e-42c4-bac7-df3cab41725d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "473bf336-c7e1-4ac4-9a41-2c62905f1a34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cee49ad-a7a8-4c69-9b01-528ed9e004f8",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ba7bbcb-f2e1-444b-bba8-9d00020815a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c76d726f-265b-4674-807b-55975b830d3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbdf4269-b884-4b54-8e40-af98dcec91d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7306710f-7cdb-4919-b057-0ad4b473a13b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b58f808-8c06-43d2-939e-5aa137bff9cd",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce660e81-075c-40db-b15b-0f25146e15e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63400daa-9e9f-4933-9e70-4777c6cb39ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5fd7fce-53a3-45a8-a4e1-e7d4fac3dfc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9aaf0001-2cdc-4f1b-b21e-17ddeb3fbb10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b54cfd9-10e9-45e4-8f94-95b17c7e32d4",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f84fd5bd-655e-4aa9-95fc-1f5afca39588",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "702f5b9d-5d29-454e-a5bb-9294a90d2c72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41cabb11-070b-47a5-aca4-08ac4a656b43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "416e4365-0dc3-4c2e-a1b2-8f0dc06995eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82ec71d7-6258-4ae7-9879-71ea6f28da90",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99f0a1aa-267b-4da2-ad80-52829bfbb92b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0170ad05-0729-462d-b0c5-72ad1bb4f81f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9738b56-606f-47cf-b88d-e356558d19ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1f9cb4d-42d7-4d76-8014-c1fcfc856cb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c3be610-1af3-445f-a238-c101e5f80950",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b71ef1f6-1672-4af7-b266-10b3aac6a1ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75139bc3-d081-4492-9126-3962d9723ea4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9858cd6-b7c5-46fc-aadf-de4a3e4fab99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "131f8099-71e1-45fa-a641-2fbd4d69ae94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "569fa1f8-0606-451e-b7a0-6febb6c11b8a",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cd161e9-d8f1-4825-924e-5465fff55bb6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe2989f5-965a-4977-868b-9d2b7c023dbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "049b0ef0-aa60-4f3c-aa8e-7c0b7b979b0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ba3969c-8f45-4308-b593-fb20c758545e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9db9ed6a-7b80-4cfa-9362-4acc6b279de2",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98817211-47b9-4065-bee4-1f1233d78ef3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b3e5c82-5d1d-4013-9818-f7e64fb7f273"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c93dcade-f3fd-4029-9baa-fac7c924243f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7acd5fca-07f6-4a67-ab9b-ac6a00e377c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce15815c-9077-4ce7-b661-793033ceffaf",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c420de4-3907-4393-8573-ae5e56243aba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd72f1e0-e09c-435e-8580-a57a407f5315"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8c89b71-5161-4f5e-994a-fa05f7223f44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5e74fdf-a888-4d3d-bafd-3a24f30d183c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c433583-d488-4d5b-a733-3e317b07a392",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34263ee6-7d1e-47b6-8ac1-2ca6922d000c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a841f79d-81b8-4963-9945-4c7636846e6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c02a185-0e92-44a4-bd33-77efa9499ca7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11e98a14-85ce-4773-ab80-b208a8b24048"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cdf0248-f533-40c0-b481-627168039937",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e0d663f-873a-44fe-be03-18ae4e1b1bf9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b577149b-a52c-41ae-b0b1-cf0b1e5b27d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a892d37-8d04-4cbd-99df-d6fc79a509e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "197815d6-ed33-4774-b798-dd7a377302cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d465886-9499-4fc9-a906-c397be3b920c",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39724e53-06f7-4d07-b6d1-9f234fa940b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3eb4c638-2b17-48de-9dda-3717f1b21c9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ac9cd44-c509-4a99-bcb3-28409d1503f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30b53c4a-599d-45e5-bafd-062af4e548c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95360d6c-e1fc-44b7-ae8e-e834ab339b6c",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eae65ef-d7a7-41b6-9dac-c8a322ae0b2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c214746-e289-481f-83ae-cf8e0d3d8c95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5948c15-2078-47bb-a433-b647d1f87b54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fab33e67-d4ef-419f-888c-58a0e9e0b0f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3069f09e-b6da-474b-a0a6-ded0d3f3e6b2",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "835607ca-4fd4-4a91-a848-9766557cf36d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b793e5e5-8ffa-48e3-97ab-639e819ca024"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06cc58ee-cb59-4319-b49d-a82ba82ebdce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20517e2f-a932-430a-b852-5ea972c3bd12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34a3fd96-bbbe-4696-bff6-4e691ca1a892",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efb2e898-25e2-4e55-8ed1-e3cf8289291d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "713fe5a4-3851-4f48-ab51-fb97fd6f6109"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e50813a-1d2a-4653-b3e1-1bb96d13e24d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5025b184-071a-4635-8aae-3c4378436735"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57c2beef-60b6-448a-8a25-b245cc552ba6",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d3d7b55-73a1-42d6-8ec7-35134f222854",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89aa8ff6-4732-4ff6-b119-47013b29e7c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d60a0e2f-baf0-413a-895d-03f93203e530",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "039b4f3d-119a-4772-8d62-3663a7aa8995"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79a5a2f3-09c8-40f1-b1d0-cae92bc5c2f8",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89f33144-991d-4350-8863-e90b06dfc0b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b641768-ca2c-4252-909b-034099d54b64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0b9b607-9a17-4dac-ab47-c1d7e7b4d486",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09d28dbe-48b2-4515-ac71-4f3f58c4d9e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5db421fb-93d1-4f2d-93ee-68d2811ef7aa",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f493c97f-d40a-4970-8202-6bad263fcc2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8d7cc74-5d8d-47a9-9415-0135ddf86741"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "620b8e25-66b4-4307-a765-d571c7f82cb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16059611-2b3d-4a3f-9b47-005298dbe1d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60dba5ce-7053-459f-9e51-67814f4dab46",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24d02e28-9967-44a5-b08a-6f2cc4742980",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6101fa95-eb7e-469a-8a65-fafa0091cc89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7b92979-ca61-40ea-af9a-0d031faaabc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58eca7e0-3ca3-48b2-bec6-2c51f78b1041"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a433c156-2184-4bfa-a722-e4630d524adf",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bc59fd4-2e18-4efb-9635-b4752ea252d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55554e1b-0c8b-4058-92d7-9e7a1fc29c46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3460648e-ebf1-407e-8415-72ca92c00e92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6297653-1371-4d60-b02e-791c8f44c6d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68f64d6d-ef63-4401-a83c-d78fa3ee729e",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc0750f3-e19d-4be5-907a-2dd590969cae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53d47547-67d0-4483-99b2-5537040396c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2281ac0c-7692-4864-9c0b-95c16a94f06a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7af2840e-ef5b-4791-ab1e-42d0bb096a9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f77602c0-658e-48d0-ba0b-ab8552a90d2e",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10ac946f-47cf-4baa-936a-5a9d44ab5a43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "afaef85d-ffbe-4258-9cf1-d1d6eb431acf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65ee2709-617e-4abd-9424-ec73191dda77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ee7a812-73f6-406c-a2ff-04549e200a90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f61a0ea-945b-496e-ab25-3c260b9555e0",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "903f8418-1003-4b53-ac32-5a3485f7cd7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c8c765c-2ee0-43fc-a480-67b241ed2173"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1198bd86-e64b-4010-a5d5-ca2aa8ecb349",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8dbcf5b-9480-4541-a13f-d5229bd90cd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a1e86cc-97d8-4665-943c-3aead5c68f16",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9d4bce7-3fc2-4db8-804c-2da6045293c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89819dae-dcf8-4b20-8851-c59a9f1aaeac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c650486-427a-4d48-9e87-4a6cdefcc86b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "798f3e06-26c1-4933-a277-29b8ea196213"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2572b862-f233-462d-a05c-2b79dffb001f",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f299e2a-6928-4fcf-b4cc-061e9b9fdf18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "090fc445-4fce-40bb-a166-5495a3b8483a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2531ad3d-887f-4015-a255-0e56663226c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97e722eb-ab91-484a-8eac-c4facab198a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8ec1ee1-472a-40cc-8c9b-6916a61216f8",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "490689b3-80f6-449b-94d4-501a209a1eff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7107df2-ef09-48f7-bb3a-3ee5830e2639"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8f2ef27-6580-463b-8439-2fb65190b7da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0151ed6-3b79-4d03-9a0d-2c0d66f925f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19017f43-c420-4878-aa52-77e66c50ac20",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70d26e05-d969-4ed2-a063-e2eaf19834ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9fa0fdad-506e-4a0c-afe8-f04849b83317"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d235a0f3-66d4-47eb-be27-32994b0813fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "622e6a7d-eb3a-46f9-bc4c-74ed162a4763"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fde4177d-28d2-4000-bf88-9131e2cddfd0",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4977506f-7afd-4693-9dc6-d898cb598860",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31c7a021-c3a0-4cb1-9d3c-71a2b21ee54c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e48b1f0e-6c1b-487a-9d8f-f5dac58982b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86aff4ca-e950-4cf0-9438-8b61d6fb4f91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c549d395-d983-4348-9ba3-c75fdc29d7a1",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3321c69-d81d-41e2-8c6e-653be7bbe6b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "364a78fd-e09c-48f5-8aa9-61febe8e1517"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9a991f3-9262-423c-b937-b175b22daa72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1ce3de9-9872-43a3-bbde-165ccbdd8761"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8319db22-d41d-4ed2-b44e-cae5561ad683",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f2fc7fa-d3d0-4555-b328-772ac9529894",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91273843-982c-43b3-8ac9-c50f9601b3b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cfa726c-d3b2-4aac-b824-7509b648ef75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e75abc2-2700-43d1-b513-a5a46c3b963f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfc59677-5f61-4106-8e56-93876cbced49",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e96e7e94-d580-46d9-9aa1-795c224e5056",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6aa76fd3-089d-4843-90cc-ed6b0df56604"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ccbc4fb-fc25-49fb-a8e7-7992402a9eff",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb9eee08-e8ac-4eab-8478-a84168dc973c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "816f60cb-46d0-4c77-8f27-67c790556fd5",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24cccc9b-d374-4b60-a9e7-2a3af71e303e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "316404fb-0772-4dab-8c0d-6fa671e256bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eab0d341-67f6-4bef-880a-ba80192b351d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a5bb849-ee84-4d32-a571-1a262f51327b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1363b22-7d2a-4ac2-bccd-141701bf2b60",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3581d656-db69-4a41-816d-c706c4d11084",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5fc10bf-2271-46ea-8459-4e9f62e327ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2902cfdc-9b97-444b-815a-dc62df684bb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a48241a8-af32-4e28-9d6b-5c884fc76ca4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5717e7fa-54eb-47ab-8348-b07a919d7a49",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2e138ed-ffa5-4799-b616-8dac63a9a056",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75d01352-a21d-4ca5-8aa8-b9dedfc56171"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "343f148f-1d4f-49c7-826b-f6ae428ef815",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa62f836-f3a1-4d03-be34-04b513ec4510"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de3fc4ec-5135-42a8-8df1-d71911e643ca",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71285ccf-bc5e-49d1-b609-f3b1fcc90dd5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef433a24-c77c-4392-87d4-75e3255dfa05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76259b98-e60a-4c33-b8c5-95142648b8ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "885f3a78-2aaf-44fd-bc3e-eb66ed5ab3ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ae9edd7-17d5-4dae-8aae-66e5a6748a9f",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7a65283-9af4-4717-8625-5a07c3dc6f3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ad8b094-56d5-4a2a-a9ae-517ce17bbebf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a509c94-b245-467a-ad43-92900388a0d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af80c6a8-ebfd-4c91-b730-78be9e351235"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdb82710-5830-4d9b-a057-01292c8bf83b",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07af2d67-9af5-446c-b99a-59514f87fc47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3633c90-4eed-4fa4-a187-615835a86dd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22fd4a3a-1489-4097-bf80-725224531d4d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ed37ba8-b951-479e-b80a-5de22e2f3d2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bbdec0e-49c3-49c5-b2a3-dcf28113ae4a",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3e67203-c585-4ad3-9d9e-2ea54b92eed2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ec4534f-0d47-4814-a7e3-ac6d9f4a744f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cec27c6-ba69-4a3d-bbd2-d956f4bc4990",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fc4d75b-dfdc-4c61-a750-2c834c6d07ab"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "22c7b0fb-4795-464c-8124-ab0c2614c61d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fa226057-ec53-4048-91dd-59612cf971b8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8ec14672-76b1-447a-998c-eb643874d317",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ea8a908a-08a4-4cb9-b9dd-5a98c0bb5a92"
                    }
                  }
                ]
              },
              {
                "id": "a1d06eab-a3f1-4f26-bf34-0957ed7837ec",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bf490f97-6b50-4a21-b2f3-0def2ad60c6c",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e307e3d-e2f5-495f-bd8b-7e27499a6de5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "3dfc82fd-4cba-4ce8-aa62-51592667882d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5288bfa8-9a44-4e92-9012-5e8c450a2cb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a3334f38-c999-40a8-8c6e-70f7653a31b5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3c8f5d29-603e-4ad1-a2e2-cc26570d574c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "46ce818c-ee8f-4408-9d83-42a9bb0004fc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f1d362b4-0c8b-4d39-9dee-272c0fdd8f67",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "73361998-a0f2-487b-b8b4-c048f3bca020"
                    }
                  }
                ]
              },
              {
                "id": "00c0f522-3b64-4a83-a3c8-a638c318dda4",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "21d95616-cb9d-4428-8ab5-b5516c7dbd7b",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb3b93a8-f8ed-4f88-a524-3ad691cfee58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "0a606572-3b6d-48e8-bf41-988d5ac8d3d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2417b8b9-3ce3-4b82-b491-ba1d44fc2dba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dcb1539-37f0-400d-8624-a9e4276b1a5c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "9158e48c-1054-4ce5-be54-5662f9dc5b04",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1e6c78cc-91ea-4c1a-96f3-35da2d14719f",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2ae0c1b0-80c2-471b-917d-c52a8c4be7e5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "8b666970-3427-4026-933a-9ad18e6178a2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c5115fb0-4ee7-4427-90a2-6d644beec647",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2d7ced2e-156b-4890-950d-cf37bded8612"
                    }
                  }
                ]
              },
              {
                "id": "710407fc-04d2-4407-91e8-25a176236935",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8fa88fa2-c051-436d-8116-c5de98852aeb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "9b57eaf2-7990-441c-8e69-01afa5abf0c9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8f0849e1-b507-4194-bd37-8a559ae2b879",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "16752dae-5038-4720-8c04-6001fb04e69a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9bf59a9a-eacf-4226-b0ce-1561e4900e7f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "127c50bb-05bd-486c-956f-0cc6ee048a28"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1454cfca-561e-4fd6-8fd3-08ce6ae2b163",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dcb1428f-17ef-4841-999b-175a77003860"
            }
          }
        ]
      },
      {
        "id": "fd29c2d9-c2a6-4586-8f7f-3dc16a3c5a9d",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "7a6216ef-6d5b-47c5-aed2-a870a95d4184",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c9be601f-99f8-47c4-b988-f9c34d5c971c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4f4bbe60-8bd3-4a25-982a-79ca788f1b1f",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e00adf16-87b1-43fd-b1b2-796635b3645e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "5e9328ef-d504-4aeb-b7b5-54a3a8adb9c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5846a98a-8e42-4cb6-9b57-a6f0b8990715",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b8acb394-2ed0-4748-ba80-7c0fce9641f4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ed3b76ce-82d0-4fa9-a664-2052358c2e2b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7d57d15b-fc30-4e0f-aba9-519407000fb3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "19b8b263-5ceb-4d08-a4c0-9e59d72ca4c2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "87f4c1c4-2871-484a-ace3-fda6ad876809"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d54e6a9d-6214-4a84-96dd-87698e3e7108",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "623b813e-3cd7-492d-a1e2-89022e29e85d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a5fd05f2-2697-4bfc-9df8-ddb4b47b1e47",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "41b8f990-8a60-4024-bf02-bca7c9eb2054"
            }
          }
        ]
      },
      {
        "id": "152fdfa3-d4ff-406d-b2e3-47f288b7d1fa",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "b50e001f-bebe-42ee-b655-f49dc6c7661f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fda36ce6-8618-4d6c-9baa-394bfa791c2b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "88f2c5fb-9574-4802-911a-eb4f8dd8a980",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64d56eef-5050-4258-8c26-fcdd440a1e84",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "01f5f885-9185-435f-9054-3656063c08e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47947c5e-7145-45a5-b752-1278b3b6fb17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3a12aecb-7990-42a8-a929-b89848ec7550"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "05104f37-804b-4e34-9c77-e8dccc0b08a5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6afae0f1-316c-4773-b512-6a9ecf928f38"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8d6a01c1-1f5b-4d6f-bb5c-45c963d1bcd8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "27f78802-3752-479d-8c71-ce999f9c3575"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0b0ef022-7af9-4379-a13d-a949c29baf86",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ce94904e-98d0-481c-a5d7-2ab57c38f8d1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0de84bdd-3dc8-4e3b-bdec-7bfe86e2f151",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "553109b3-dfb3-4731-8317-db7aee02ee48"
            }
          }
        ]
      },
      {
        "id": "356d771e-24b4-4ace-afbe-0472670952f3",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "8fbc416b-10cd-4fb4-8323-c34f9f228b3a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ab80b110-c4f9-4b6d-8603-135f1f177690",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6b2481b7-330f-4fd9-a1e1-d94838bb15bf",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab0cdf9c-1016-4ede-ab8f-54349cb73d20",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9964970f-0367-47d1-9175-e2da7113a073"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c63727b-9880-4b93-808a-0f99eb7dd42e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7644dd4a-8ce1-4098-aa2a-1231c6ee92d1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8fd17667-8157-4c53-86cf-9c9c62856343",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b5ad30a1-c30a-410e-a719-aed586b13c43"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4f3651f8-72a4-4d39-a3d8-da5cb4ae01de",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1860f023-3713-4ad2-8f1e-ae9b1e43eff7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5ab99f64-45e1-4b5e-87e0-e99b1e429467",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "095b4256-5758-4710-b1de-c791408e2a87"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "31e095fe-1f25-40a9-81d4-a98d34874d23",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ab56a927-59ce-46f5-bc47-59734731dae3"
            }
          }
        ]
      },
      {
        "id": "c33bf6fe-d9a2-4965-b894-88bf61714fd3",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7e26845a-f2ce-4c78-8390-afb751829632",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fee8f5e0-2b49-4df1-8152-546c925c5811",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "c6146b73-010f-4edd-ae7b-0d430874d640",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "083e6861-a069-4cfb-8bf0-79581cadb3b9",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "32acf5ad-9fb2-42e5-8473-ff59506dee42",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 37
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 29.353174603174594,
      "responseMin": 7,
      "responseMax": 318,
      "responseSd": 24.26879630407903,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1722645560159,
      "completed": 1722645575617
    },
    "executions": [
      {
        "id": "6ba936a1-82cb-485b-a011-3039ab7962ac",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "9ed3cfe4-bd69-43a1-9557-9be27ef7a542",
          "httpRequestId": "5986ae0a-b092-4cc7-833e-21e493f12b38"
        },
        "item": {
          "id": "6ba936a1-82cb-485b-a011-3039ab7962ac",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "927030b6-ab49-4c43-ae3f-da1cfaec61cb",
          "status": "OK",
          "code": 200,
          "responseTime": 40,
          "responseSize": 0
        }
      },
      {
        "id": "d75465ad-3d75-4a93-8c29-b2d33a238c1a",
        "cursor": {
          "ref": "5c9c7c99-5dc4-4624-89f6-a26864287cc9",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "edcc6bd4-758b-4aea-9c80-bb6e1a649196"
        },
        "item": {
          "id": "d75465ad-3d75-4a93-8c29-b2d33a238c1a",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "181434c0-acbe-421e-ab31-eda1be9f204c",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "44d826c1-30e4-4132-ac89-c95a68ebf6a3",
        "cursor": {
          "ref": "837cc44a-7a29-49fa-ba77-92bffdec5693",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "c8ea781a-32bd-4aed-af88-3c63735210e5"
        },
        "item": {
          "id": "44d826c1-30e4-4132-ac89-c95a68ebf6a3",
          "name": "did_json"
        },
        "response": {
          "id": "c7b6d46c-86b4-4d5c-8ccb-a5a44c88adc1",
          "status": "OK",
          "code": 200,
          "responseTime": 214,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3334eb0-1f58-4c80-9c01-e61a4c364f76",
        "cursor": {
          "ref": "95f4aeb6-1bac-44a7-8cc4-d4939c6db983",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "585bbba0-c267-4583-b551-fa7b6b047abc"
        },
        "item": {
          "id": "c3334eb0-1f58-4c80-9c01-e61a4c364f76",
          "name": "did:invalid"
        },
        "response": {
          "id": "acc9ed3e-2f3a-444a-939f-f0af626bae6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3334eb0-1f58-4c80-9c01-e61a4c364f76",
        "cursor": {
          "ref": "95f4aeb6-1bac-44a7-8cc4-d4939c6db983",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "585bbba0-c267-4583-b551-fa7b6b047abc"
        },
        "item": {
          "id": "c3334eb0-1f58-4c80-9c01-e61a4c364f76",
          "name": "did:invalid"
        },
        "response": {
          "id": "acc9ed3e-2f3a-444a-939f-f0af626bae6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8185c4c6-5a64-47e6-a99e-1e43b380e8ed",
        "cursor": {
          "ref": "94970960-8d34-4404-aa54-b5712fd39806",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "831c56d7-3992-49e4-b4ab-08af159d9a66"
        },
        "item": {
          "id": "8185c4c6-5a64-47e6-a99e-1e43b380e8ed",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "1b5bd8b7-575e-4886-90e0-332d2d54583e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 77,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "679ba9c7-488b-4bf5-933d-cc7d8197b1ee",
        "cursor": {
          "ref": "3fbc6f6e-3c7d-4c5e-82ad-278dfd0a0300",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "3e3d2828-1929-44ce-a3e7-880c81b025f7"
        },
        "item": {
          "id": "679ba9c7-488b-4bf5-933d-cc7d8197b1ee",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "57fb1921-5e9f-4b40-8132-52db3b0074a3",
          "status": "Not Found",
          "code": 404,
          "responseTime": 26,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b387c64-005b-4998-a69b-6e0b30d5b4d6",
        "cursor": {
          "ref": "bd9574f2-3014-4a1d-a1d4-98a123685bea",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "82dd5f38-0fa3-4086-a756-5297e1cacbb3"
        },
        "item": {
          "id": "2b387c64-005b-4998-a69b-6e0b30d5b4d6",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "789579fa-a0aa-4907-bb66-eaa2df197d41",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ac35ab4-6bb2-4efb-9819-5fd251ef782c",
        "cursor": {
          "ref": "ba431001-f210-4e7b-9066-9d130877c656",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "3d7efc07-872f-4064-a66f-2824ed67ed38"
        },
        "item": {
          "id": "8ac35ab4-6bb2-4efb-9819-5fd251ef782c",
          "name": "identifiers"
        },
        "response": {
          "id": "211c3cc9-0816-4ce6-a5f8-b19536aae807",
          "status": "OK",
          "code": 200,
          "responseTime": 186,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e1c1daa-3f06-4f96-a351-12694a8fb705",
        "cursor": {
          "ref": "43432071-87f0-4f5b-9645-42e8ffa07687",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "6af218c7-98be-4e3c-9f37-59b3503e7bce"
        },
        "item": {
          "id": "7e1c1daa-3f06-4f96-a351-12694a8fb705",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "497ccecb-82d0-4d7a-9671-1805e9e71683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35ab8553-5cda-4842-a5eb-d0691a4a603b",
        "cursor": {
          "ref": "eeacce84-508f-4e40-81a3-64ec4d7d90d7",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "a196f8b9-d1f4-42a0-811b-ae2683b73ca0"
        },
        "item": {
          "id": "35ab8553-5cda-4842-a5eb-d0691a4a603b",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "92afbb89-59eb-4d88-b1e6-b86cbb7cdc54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0632a8ca-e6cb-4e99-9a92-eb5ebd32528c",
        "cursor": {
          "ref": "2cfe643f-d702-4f14-a990-1a519cc37efc",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "98926e3f-aef9-4af0-bb9b-b2096a03de67"
        },
        "item": {
          "id": "0632a8ca-e6cb-4e99-9a92-eb5ebd32528c",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "4c2ff927-7bb5-49f3-81c6-5046cdd082f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cdb45f9-8ff2-41e7-9930-ab092474370f",
        "cursor": {
          "ref": "2ef014d9-628f-43f6-89b9-5f3654bdfedc",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "69527804-c0ac-4e8b-b88f-8f3cb3e9125f"
        },
        "item": {
          "id": "0cdb45f9-8ff2-41e7-9930-ab092474370f",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "6de60670-f1e1-4f2c-a85c-260015144063",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "520554e0-0017-485b-970d-b3d6c044099b",
        "cursor": {
          "ref": "093d0807-16f2-4d63-88c3-3352f07977a4",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "36c31b54-f131-4d13-a33b-a8ea2ad9f083"
        },
        "item": {
          "id": "520554e0-0017-485b-970d-b3d6c044099b",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "9f4fa6c9-239b-4b84-9d75-68f3af1765d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b053225-a8a0-489a-9d9f-83c41f9a0beb",
        "cursor": {
          "ref": "829e6086-dccf-4792-bf23-046dc5d820e1",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "ef1af47e-2c4d-4045-8c41-6f8eaf6af33f"
        },
        "item": {
          "id": "3b053225-a8a0-489a-9d9f-83c41f9a0beb",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "cc2055fb-7c01-430e-bd95-e3dbd6a83792",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23b3f459-8cf5-4a8f-bdd1-6a0c9ec804e1",
        "cursor": {
          "ref": "432ebe23-dae9-4113-8f0e-6110621efa5a",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "259170e5-960f-4670-b8d7-bc9a46585c6b"
        },
        "item": {
          "id": "23b3f459-8cf5-4a8f-bdd1-6a0c9ec804e1",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "2f64273c-8ff5-4876-b966-4db732727838",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "571abdd7-e188-46d3-9c44-417fedb01eaa",
        "cursor": {
          "ref": "c1064582-5df7-40ab-8869-7ae9c6e91afa",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "21127776-042a-4d80-8ee0-271524bbc2ee"
        },
        "item": {
          "id": "571abdd7-e188-46d3-9c44-417fedb01eaa",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "989d6360-ad8c-4f2e-ad94-81b609e29a99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39dde617-3e7d-49ab-862b-f771397e1a80",
        "cursor": {
          "ref": "fd651e37-92d3-4e2e-8b45-6ad4ef9018ba",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "970f3057-b482-435f-8875-94c69f797ffc"
        },
        "item": {
          "id": "39dde617-3e7d-49ab-862b-f771397e1a80",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "7028803b-7d3f-40d8-844d-ca52c9f936b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c70b3dce-4838-4d2d-8a80-c6383d17b6f0",
        "cursor": {
          "ref": "84e630cf-bef3-4769-bc18-32aba01b27d5",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "27e581e3-922d-4051-9fd6-64e8acc039e4"
        },
        "item": {
          "id": "c70b3dce-4838-4d2d-8a80-c6383d17b6f0",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "1c8bc53e-3483-48a4-be4f-5211303e1181",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d3923b5-67fc-4b50-ba3f-8b64e0b1f22a",
        "cursor": {
          "ref": "1f14e053-b737-4b85-826d-02e130a04f8f",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "c0df6b98-2b72-44fa-a49b-1609c7664492"
        },
        "item": {
          "id": "8d3923b5-67fc-4b50-ba3f-8b64e0b1f22a",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "47ae5f71-cf25-4412-900c-e3eaef52d447",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e85aedf3-3f27-47dc-b891-d2555a5c39c9",
        "cursor": {
          "ref": "4d16d714-04c9-4786-aec2-49a4bbab7bd7",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "cd172776-9ba2-42bc-bf5f-3a186442ccd5"
        },
        "item": {
          "id": "e85aedf3-3f27-47dc-b891-d2555a5c39c9",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "cdc5aa32-8a30-43f0-930b-11771b3e9375",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "468f0190-1f42-42c3-b732-82065c4751b4",
        "cursor": {
          "ref": "13a5dce3-2018-457b-b993-c8e8613e5ee8",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "69bf866b-76ab-4afa-b18e-64f7c09f3e47"
        },
        "item": {
          "id": "468f0190-1f42-42c3-b732-82065c4751b4",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "857200fd-e441-4b3b-bac5-9f1b9c3d2f6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb410594-594f-4328-abbd-2fe1df0edddf",
        "cursor": {
          "ref": "1de2a8f3-e75a-495b-b8c1-8d08fd00c0d5",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "f78996cc-d24c-4c20-8e8f-dcb0cd466fca"
        },
        "item": {
          "id": "fb410594-594f-4328-abbd-2fe1df0edddf",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "e8d0f32b-e719-4c0e-ab95-a21dca83f5ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1437985-2a5b-4cea-9992-148548ad0c84",
        "cursor": {
          "ref": "2473d9f5-1c36-402a-829d-1314f21aa5bb",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "4ed392e7-e13b-4b86-8b96-bb47ee15a4de"
        },
        "item": {
          "id": "c1437985-2a5b-4cea-9992-148548ad0c84",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "3aa3fddb-00fc-4304-ad2b-0ecf725687d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "955b2c00-6a38-422f-9a1c-97d6491cf7e3",
        "cursor": {
          "ref": "0d5a7369-775e-4d27-8010-0233ac4d1de3",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "87740c47-8f43-4ffc-9633-163d830029e0"
        },
        "item": {
          "id": "955b2c00-6a38-422f-9a1c-97d6491cf7e3",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "7cfd48c0-3478-4c08-aaa7-fbfde9cc0007",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de696afc-2c96-4e24-80d4-88174a07d70e",
        "cursor": {
          "ref": "30939526-ed3b-47a0-80f7-1c989c6c64b0",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "9bcf22bb-a330-47d2-bb42-d02ef48941f1"
        },
        "item": {
          "id": "de696afc-2c96-4e24-80d4-88174a07d70e",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "7c63ac92-85d0-4689-9841-39836ebc5d05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2ed9c45-0d14-4b63-b25a-cf7f872ce2f0",
        "cursor": {
          "ref": "86301f9e-93fb-477a-b8bd-eea93b10ae7f",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "fa818f03-57d7-44e4-a77f-ba919b573420"
        },
        "item": {
          "id": "a2ed9c45-0d14-4b63-b25a-cf7f872ce2f0",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "cce7ca49-eb75-46c5-b611-567e4f8e8637",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a41fb414-cb01-43ec-bfea-8bdce0966c02",
        "cursor": {
          "ref": "f5ef0324-741a-44e2-a0df-6dcb3d9fff18",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "cc54dd12-7f4e-4b28-8b06-054db7e2d8ba"
        },
        "item": {
          "id": "a41fb414-cb01-43ec-bfea-8bdce0966c02",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "e0998f13-f74b-4a77-afa4-2308fcc166b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e662a81f-b593-4a29-a423-2707a118cb0a",
        "cursor": {
          "ref": "95485c0c-b770-4a13-a397-a4de8175f3c9",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "dd335143-845b-4e1a-9446-5904d00f3aa4"
        },
        "item": {
          "id": "e662a81f-b593-4a29-a423-2707a118cb0a",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "a6618dc6-a1e4-4d68-b612-65f5981fce13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b8c6aba-9e9f-4215-8740-f0db5cff47f9",
        "cursor": {
          "ref": "fa02f26c-fae5-4509-9707-c96652a94dcf",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "70a0f61c-aab1-4255-9862-84270fc0c084"
        },
        "item": {
          "id": "6b8c6aba-9e9f-4215-8740-f0db5cff47f9",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "a3c9d2da-c8a5-4251-8229-5eb8c23d44d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e808849a-530d-4fdd-aafb-812220f6064e",
        "cursor": {
          "ref": "e41441ab-8675-4c70-a538-e53520289330",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "f553b111-8c32-402c-8d88-4b8a3c75659b"
        },
        "item": {
          "id": "e808849a-530d-4fdd-aafb-812220f6064e",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "e13fbe4c-c2a5-4585-87f6-089c2f329e72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97db746d-503b-4863-9efb-2f2b08512308",
        "cursor": {
          "ref": "6112b70e-00d2-4987-ab55-a4c7aec6b1e5",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "7b31dacc-c5c1-4eca-bb22-3b8d6cf14d2b"
        },
        "item": {
          "id": "97db746d-503b-4863-9efb-2f2b08512308",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "8657ee63-c792-4a9c-9274-552ab563afc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "653522cb-5c84-4811-add7-596553bbea29",
        "cursor": {
          "ref": "c60aec61-005d-4c7e-8beb-3f59ee26cedc",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "94038045-bb50-4eb2-bdcc-3e4002aa199e"
        },
        "item": {
          "id": "653522cb-5c84-4811-add7-596553bbea29",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "a987a5b4-53f6-408e-9b7a-cbe1e242b083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e15ccde-e938-4864-9586-7b6d0767dcf7",
        "cursor": {
          "ref": "594d6ece-7d8f-43f9-92dc-8b38dba1b259",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "db457a90-d8d8-442e-8074-947460871214"
        },
        "item": {
          "id": "9e15ccde-e938-4864-9586-7b6d0767dcf7",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "65ce12a2-940f-4b22-b7a0-426eef93c439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6699442d-66c6-49f1-bfc1-9909fd5f6492",
        "cursor": {
          "ref": "5a17cb5d-ac34-4515-b2bc-2aeec5f92fd3",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "c04ed521-8d8f-455c-9990-79f11a0c0c6e"
        },
        "item": {
          "id": "6699442d-66c6-49f1-bfc1-9909fd5f6492",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "1143d9f8-24e9-42b4-abe5-add82cf2efe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2b5b284-e885-4dfc-b33c-c00dcb24b9c3",
        "cursor": {
          "ref": "928348b5-f2bb-4303-881b-fa33598c2e18",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "6eba8c24-5681-4bb2-ac03-1c61cb715a37"
        },
        "item": {
          "id": "d2b5b284-e885-4dfc-b33c-c00dcb24b9c3",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "734743c5-b1c9-4942-b85e-7be9e7c6477a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "802b40ad-e012-4bf5-90ec-0158f2b8b01e",
        "cursor": {
          "ref": "09647e6b-753c-4ad5-9977-cba72652c586",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "f3914552-663a-4a7b-bbb7-2261fdf66dd5"
        },
        "item": {
          "id": "802b40ad-e012-4bf5-90ec-0158f2b8b01e",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "77c44d6a-c354-4f50-a8a3-738bd8319357",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c4708c8-b064-4e92-8855-70b23874ba16",
        "cursor": {
          "ref": "e0fc561d-0e46-44a6-bf03-ac7fe07ffe6f",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "7043bd54-84eb-4144-9f6c-ad1ec8a4bc77"
        },
        "item": {
          "id": "2c4708c8-b064-4e92-8855-70b23874ba16",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "58a3a720-7b7e-4c5c-916a-abaf16b804d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9343f33f-2661-47e6-95cd-2b89237d35d3",
        "cursor": {
          "ref": "a477d200-4d78-43b0-8554-e4254b49739f",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "8bcbf6d8-0690-4ce6-a56d-c3d98a57c5c4"
        },
        "item": {
          "id": "9343f33f-2661-47e6-95cd-2b89237d35d3",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "d05ea893-270c-4294-94e6-23fa54d0b95f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97200188-6875-4cda-8dd8-f833066a72db",
        "cursor": {
          "ref": "98c219f4-0ebe-4bb4-8d49-fe2bda7e2b5d",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "eded15f8-d3ab-4a24-8369-e88a6624a0b4"
        },
        "item": {
          "id": "97200188-6875-4cda-8dd8-f833066a72db",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "edf0938f-2698-4454-8f79-ad8a0ff45df9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a8d567c-285a-444c-a3be-d0a1e1c5e1da",
        "cursor": {
          "ref": "1bfb9160-91d5-4d26-b50e-e5170a28149f",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "77eb6b33-2ebc-4ad4-a429-4792a11dc4da"
        },
        "item": {
          "id": "5a8d567c-285a-444c-a3be-d0a1e1c5e1da",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "d6fae3aa-2cf2-4636-9700-ecb301b9e6ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a979d5d3-6c28-4b1f-8562-20f4140094f0",
        "cursor": {
          "ref": "cf7d532d-b17d-488b-b2ec-d801d97cf17f",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "d151ff7f-ad7f-48a2-96d5-8a292cb4f121"
        },
        "item": {
          "id": "a979d5d3-6c28-4b1f-8562-20f4140094f0",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "27160dc5-8439-439a-83e8-fa1e6e1c72b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94bdded8-0bdb-4b51-8053-b013f22a181b",
        "cursor": {
          "ref": "6fdd3b5b-3745-4273-a44c-a02e2c557cc7",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "3a2fff64-8991-429c-b706-f0298dff7262"
        },
        "item": {
          "id": "94bdded8-0bdb-4b51-8053-b013f22a181b",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "b7ea6df4-b72b-480a-ba87-e03940cbe886",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "031c27fd-c8ea-4dec-b72c-22708c50af25",
        "cursor": {
          "ref": "1d3b6d97-c261-466e-ac4c-675e2186d941",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "01ca257c-ee7b-45c6-9da5-aafc45958956"
        },
        "item": {
          "id": "031c27fd-c8ea-4dec-b72c-22708c50af25",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "beca434d-eb11-4785-9eb6-3adaaa361e11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15b4b90f-77bd-4c13-a66a-dd1a2947fd79",
        "cursor": {
          "ref": "10ffe769-7134-4b05-b453-709c4135240f",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "3707b8e6-1f48-4b0d-87ac-d7017cbeb7af"
        },
        "item": {
          "id": "15b4b90f-77bd-4c13-a66a-dd1a2947fd79",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "d3be81a6-d0d0-4169-b45a-35e1cedd94b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2faa8e86-371c-48d2-85e5-8d2ace387233",
        "cursor": {
          "ref": "6f4591d4-047b-4171-9cb4-21594ae4c75e",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "c569e134-9605-4876-a0a9-fe26baf296cb"
        },
        "item": {
          "id": "2faa8e86-371c-48d2-85e5-8d2ace387233",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "741cb588-c7b8-4ce4-81e2-e9cb66df8dc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85594ba0-2e76-4b6c-8792-c413f03a6954",
        "cursor": {
          "ref": "f5cbb746-0c2e-4b68-bb96-c8b6ac90d55f",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "8ae61e22-5b19-45ce-bbdf-6a0e38f31f68"
        },
        "item": {
          "id": "85594ba0-2e76-4b6c-8792-c413f03a6954",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "95de175b-ea9a-4a6e-9cbd-93fd500f741d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56ff10bd-029d-428b-bee5-b3ead6857c67",
        "cursor": {
          "ref": "b51b2c45-9a2e-45d4-b93e-bd3140198e0a",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "fed4f5dd-c5f4-42f1-a95e-3e71c6358246"
        },
        "item": {
          "id": "56ff10bd-029d-428b-bee5-b3ead6857c67",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "955d8ec3-746e-4730-a231-53c04d87dd16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54a12874-40a0-4621-a1a0-c812377682ad",
        "cursor": {
          "ref": "1303b33b-936d-484d-b124-2a5a55d2bfc7",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "a2bc66d5-9126-421b-b965-e88522979054"
        },
        "item": {
          "id": "54a12874-40a0-4621-a1a0-c812377682ad",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "a0406281-ecdb-474b-8706-edb5f2dee541",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9988e79b-7829-4968-9d6a-8c2ece0c4d81",
        "cursor": {
          "ref": "a64c8f44-0705-44b7-9f65-b2e4b1d36987",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "0a7e2d15-7d06-4c7c-823c-137a67dca7e0"
        },
        "item": {
          "id": "9988e79b-7829-4968-9d6a-8c2ece0c4d81",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "77fddeea-cc6d-45cd-950e-337d0a160837",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d459669-faf0-418c-a718-22ac1e7ada51",
        "cursor": {
          "ref": "fa9eb00c-e8fc-4d3a-803f-e3983a11a750",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "c57d4041-7fb8-47fc-bf0f-263a5381b03b"
        },
        "item": {
          "id": "6d459669-faf0-418c-a718-22ac1e7ada51",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "ef31e65d-0049-47bb-a368-5f8eb17ad0b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3e4deb0-6e2e-408f-a59d-d36b84785480",
        "cursor": {
          "ref": "0b3bf8ac-0033-4c9d-a91d-f9d25041c373",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "bb03205b-08a1-4de2-b886-8b6caa32d34a"
        },
        "item": {
          "id": "d3e4deb0-6e2e-408f-a59d-d36b84785480",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "8e2e06bd-7d45-44bc-8635-ce503fcc0528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "608be129-2f75-4762-bb24-37073b1e5349",
        "cursor": {
          "ref": "b2df4f39-eac8-4c50-923a-f1d2004d3788",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "5bc010d0-bd69-4231-b6ff-b31e166dca23"
        },
        "item": {
          "id": "608be129-2f75-4762-bb24-37073b1e5349",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "3a6f2b28-a64a-4faa-afb4-fea91900c96a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dc12797-e5fd-4b8e-bfff-b02cc06f6ac5",
        "cursor": {
          "ref": "09d28e9b-ffb9-44bb-b93e-3d70a44be0fd",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "06426887-83b9-4d4a-8af9-b7a49085d09e"
        },
        "item": {
          "id": "6dc12797-e5fd-4b8e-bfff-b02cc06f6ac5",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "e5d232a7-faae-4e09-a55f-dc206d4b0efd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b87c47bf-36f7-442b-84f9-829a92e7009a",
        "cursor": {
          "ref": "226be7cd-78b2-49a8-a422-686f33703e67",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "6d279e12-b749-43e5-8edb-5804de690220"
        },
        "item": {
          "id": "b87c47bf-36f7-442b-84f9-829a92e7009a",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "c32c0c02-de3e-4622-9237-d32e9cbc51d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5a70efe-0fac-41c6-9810-6c1af85077e6",
        "cursor": {
          "ref": "a4fd0a20-9f3d-4828-9cef-e7d4b915b81d",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "026e7b74-f527-47e9-a9db-2506e1fc3475"
        },
        "item": {
          "id": "c5a70efe-0fac-41c6-9810-6c1af85077e6",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "5fe96bfc-08f4-4f7d-81be-0d1dd6c4b987",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77bcceb3-b412-4808-a0a7-f07256d53553",
        "cursor": {
          "ref": "d24f49fa-3597-408a-8fca-d8eada1e62f7",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "b53b41df-bb80-4894-bc34-ddb38f05c482"
        },
        "item": {
          "id": "77bcceb3-b412-4808-a0a7-f07256d53553",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "c611d7dd-243d-428a-ab6b-17acad9e2e21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f697d31a-7e93-4818-975d-718859d35afa",
        "cursor": {
          "ref": "8f086f5f-5243-4e1f-955c-9fb0be82323d",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "5de86893-ee49-4788-8787-e0d87434f253"
        },
        "item": {
          "id": "f697d31a-7e93-4818-975d-718859d35afa",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "9db0f4e1-6fb0-4f02-a935-4aadeec62d2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90f9120f-64f2-4920-9170-d852c0e11533",
        "cursor": {
          "ref": "14da4e0d-9534-451f-b3fd-5a22aaf49505",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "77e8002b-6439-470a-9e95-378a09eb11ec"
        },
        "item": {
          "id": "90f9120f-64f2-4920-9170-d852c0e11533",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "807d2011-3214-491b-95e8-dd3410aa516d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ff3197d-2008-48dc-a2ed-f12091bce1be",
        "cursor": {
          "ref": "b2c65a25-f620-496d-b7a7-9614f39b4b6b",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "f495b048-f9fd-4e05-8127-ce476d649ec2"
        },
        "item": {
          "id": "6ff3197d-2008-48dc-a2ed-f12091bce1be",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "362d7eeb-f1a7-40e7-9e01-d31f1399f3be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37f0e27e-3f6e-4263-925f-c16a994593ad",
        "cursor": {
          "ref": "ac3ca175-8eed-4b53-84bf-6425a43bf29e",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "e6483293-54b4-459a-b50c-9323cf18dce3"
        },
        "item": {
          "id": "37f0e27e-3f6e-4263-925f-c16a994593ad",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "4f815062-12d4-4fa3-bc4e-83f1b8c5007e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc80c6e3-6faf-4a8e-94a6-133f2aed537e",
        "cursor": {
          "ref": "6296450e-5c85-40c7-8b8a-b20fac806eb6",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "7ed3a9ee-fda2-4887-afa5-93186ea2421d"
        },
        "item": {
          "id": "cc80c6e3-6faf-4a8e-94a6-133f2aed537e",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "8590846d-330f-40af-970a-55756f2107d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ae65150-04b4-4bcb-a978-0b5f3f3b3536",
        "cursor": {
          "ref": "ce66f097-bd55-475f-8638-030007d8d81d",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "16e2f992-d62a-4159-b7e7-bb96b97b95d3"
        },
        "item": {
          "id": "9ae65150-04b4-4bcb-a978-0b5f3f3b3536",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "72569e56-c772-4783-a2f6-3bab4bd5c02b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd3ed52e-5309-4a21-a5fa-4c3203190b2e",
        "cursor": {
          "ref": "d6a84c58-93e9-44a5-9a85-cc83f181e7f1",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "8d0f2ccc-68ac-4c34-9734-c6e099857923"
        },
        "item": {
          "id": "dd3ed52e-5309-4a21-a5fa-4c3203190b2e",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "3282eda9-e3c1-419b-8d9c-c7b60f5bf82a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3a002fd-4ef1-442d-9e65-af787026324e",
        "cursor": {
          "ref": "87404e9f-36c1-4880-a11f-66d7d6d5c169",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "ac6f24c9-316c-4421-96fc-cff6a5d5c4e6"
        },
        "item": {
          "id": "a3a002fd-4ef1-442d-9e65-af787026324e",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "65aaa573-147e-4eea-be81-6bf1b0878e9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41f091c6-7229-4383-957a-ca3a5c64d4ee",
        "cursor": {
          "ref": "3fbb8fd3-f129-4302-90cb-47d6b91ce142",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "1c3149cd-2b8a-4f81-80d6-7729fcdd41ed"
        },
        "item": {
          "id": "41f091c6-7229-4383-957a-ca3a5c64d4ee",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "b6d49cc9-7c38-4d85-a83f-8be80226acaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9544c23a-9158-4ddd-91c6-da12ee3da182",
        "cursor": {
          "ref": "fe64327f-e79c-4a9f-9446-33662f232e36",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "6daa0a58-432c-4b9a-a81b-4b244f0fe66b"
        },
        "item": {
          "id": "9544c23a-9158-4ddd-91c6-da12ee3da182",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "f18910e9-7597-40b1-aeb0-e74786fe1628",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c5368b7-fe39-4c07-a5e2-87f73235e4ba",
        "cursor": {
          "ref": "507f550e-5948-4a5a-accd-6cf6e40ec52b",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "9135d0f1-0c9e-4eb8-b7d3-9a7b0d929b36"
        },
        "item": {
          "id": "5c5368b7-fe39-4c07-a5e2-87f73235e4ba",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "3578e350-1b8a-40c9-bd7b-0595aa588627",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fcdb000-4667-4d32-aa44-84a70d2f53af",
        "cursor": {
          "ref": "d5e1fbcf-b09d-4e7a-8de5-94e9d17107a6",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "b245c8f9-f90c-4efc-91b1-3cc54a46642e"
        },
        "item": {
          "id": "2fcdb000-4667-4d32-aa44-84a70d2f53af",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "516fa54b-c65c-40aa-818b-30cf0bfa026b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6212f594-9972-4532-bac7-d5d578d59dd4",
        "cursor": {
          "ref": "b41253bd-e441-45ac-90f9-f24401027865",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "fd995771-c5d6-4fa1-90bc-8a7c100c9839"
        },
        "item": {
          "id": "6212f594-9972-4532-bac7-d5d578d59dd4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "5376fb7e-f290-45e8-bb65-5a41e86c4615",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0abafd2-d7fa-42ab-8472-4bf63da015a6",
        "cursor": {
          "ref": "e9d9e443-4ac9-4428-8402-a45b913c831f",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "3349e1a2-492d-46e7-b256-0eae4bcda8dc"
        },
        "item": {
          "id": "a0abafd2-d7fa-42ab-8472-4bf63da015a6",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "106fbac9-1eab-42ad-bd34-974ff1d9be94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48338dd5-f761-4465-bd74-0dfbd8d10045",
        "cursor": {
          "ref": "4df2e1c3-e501-4937-9c46-e3a49094a8b4",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "9450f569-35b5-4a2f-ad5f-e655e443c589"
        },
        "item": {
          "id": "48338dd5-f761-4465-bd74-0dfbd8d10045",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "56fbac8f-256b-4fa2-92bb-22855ac73944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb6f304a-5813-4b9a-9f1b-25d486937cfc",
        "cursor": {
          "ref": "6cd5698f-42a8-4e6e-b71f-d5a09bfefbef",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "1aa760a6-659c-4df5-bd54-f29a3e7d5e2e"
        },
        "item": {
          "id": "cb6f304a-5813-4b9a-9f1b-25d486937cfc",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "e425674e-78f3-4f7c-b055-f4053aec3a61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f63ce59e-d208-4de6-b44b-cf3bea70449e",
        "cursor": {
          "ref": "583670d2-5438-4200-82a1-7f0c9df9aa90",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "5c3b5f17-5749-4e6a-8cd0-21fc8d68f711"
        },
        "item": {
          "id": "f63ce59e-d208-4de6-b44b-cf3bea70449e",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "a4cd0704-2bf8-4239-978d-deeb882cbb33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bec6646-8c19-414c-8607-d99afd085b6b",
        "cursor": {
          "ref": "905a69a9-53d0-432b-b553-87f054df977c",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "a8419cd5-c7c9-4910-8ee8-b2031e46b7b4"
        },
        "item": {
          "id": "7bec6646-8c19-414c-8607-d99afd085b6b",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "472a9485-240e-48b4-b117-6ff89d279d9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "349b1df7-6462-4e8b-b138-c634da66e69e",
        "cursor": {
          "ref": "7638da89-c814-4c58-a453-743106dbed3b",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "32fcf319-6ade-4fca-94d0-8241825612fe"
        },
        "item": {
          "id": "349b1df7-6462-4e8b-b138-c634da66e69e",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "8bfbc412-30b6-402f-80a2-056a753deb41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76b7e63a-e0a5-428a-b16d-edf0e1488832",
        "cursor": {
          "ref": "d392839e-1d67-4dc4-a966-2bd92ca19e5e",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "1a66ba4b-cd64-42fc-a6ed-1b55ff8cd2cf"
        },
        "item": {
          "id": "76b7e63a-e0a5-428a-b16d-edf0e1488832",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "562aea6a-b62d-4b96-8213-100ee34ae983",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fabc2f3-3b68-4864-be9b-27a0c0cd8b4c",
        "cursor": {
          "ref": "e0b845fe-4e01-480c-bf67-67d48a1734c6",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "998f0538-9e18-46d4-8ed3-db2c5e4b1a52"
        },
        "item": {
          "id": "2fabc2f3-3b68-4864-be9b-27a0c0cd8b4c",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "defcda59-e1c7-4c91-aa17-21e655769f35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2285110-4fdf-47bd-bf98-51f689a34b86",
        "cursor": {
          "ref": "4469ac4c-7f34-4390-8bb6-4f1092556915",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "32fa99bd-cbba-431b-80d4-e23913abd81d"
        },
        "item": {
          "id": "f2285110-4fdf-47bd-bf98-51f689a34b86",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "165a3bfd-2fc4-48e0-ad42-e61c7c0ddf8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c2ad3c6-57e0-4a9f-9a45-04c1c9a7a76a",
        "cursor": {
          "ref": "60d45514-0a6b-4a4a-9e61-5705e061270f",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "0762f450-48e8-4348-bb03-49bdeafdbbe6"
        },
        "item": {
          "id": "4c2ad3c6-57e0-4a9f-9a45-04c1c9a7a76a",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "e22b6c6a-034f-4267-b98a-1cf28bd77a2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dfe11e3-9f32-4de2-8d1c-226f89fe6da5",
        "cursor": {
          "ref": "3096830b-d5af-4ae6-bb38-b57c46b69461",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "247e578a-2314-4b3c-8184-ca69d9878f10"
        },
        "item": {
          "id": "7dfe11e3-9f32-4de2-8d1c-226f89fe6da5",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "3d6ccea8-cf6d-40e4-9ba6-383d71964397",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb3a2948-f91a-4be3-b4d4-15730052afc2",
        "cursor": {
          "ref": "11cc9932-0445-45c1-bce6-012b623fbff2",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "2cbf498f-5eb0-4c1c-b785-d11996c9c3e9"
        },
        "item": {
          "id": "bb3a2948-f91a-4be3-b4d4-15730052afc2",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "eb1fbe72-9ab2-4fba-ad43-87a86e89dbe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "800cfcdb-b63f-4e1c-9941-c87bdfc929b0",
        "cursor": {
          "ref": "b52ae4c3-c874-44c8-88b4-163345808fa7",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "69066c95-0ec9-4a6b-a7b4-f94c74de5bae"
        },
        "item": {
          "id": "800cfcdb-b63f-4e1c-9941-c87bdfc929b0",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "a274ad50-ec15-4adc-bd92-842aa850a5eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1c40558-913c-4501-87a7-975011ed1621",
        "cursor": {
          "ref": "26097171-32cf-45d9-82c1-517bb04c8bcd",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "55b81a49-9b2e-4e7a-a63e-b01f93fc67d3"
        },
        "item": {
          "id": "b1c40558-913c-4501-87a7-975011ed1621",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "b340a910-3ff9-4131-94a4-fb85da82a9c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "380320f7-3ff2-4472-93da-1afad0042529",
        "cursor": {
          "ref": "6dfc2a26-28ba-4cbc-b9d2-3a00e6e21ae1",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "61971b1f-4d64-43f3-b184-87113f154d7b"
        },
        "item": {
          "id": "380320f7-3ff2-4472-93da-1afad0042529",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "abdb5570-465d-4d06-a8ec-30579613ada1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b52dfda-aea7-4666-92c9-5518a271c651",
        "cursor": {
          "ref": "cbb8b226-924f-43a8-86f7-4428b0b9d83d",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "c81d5881-24c4-46f0-b0b1-435c822ad877"
        },
        "item": {
          "id": "8b52dfda-aea7-4666-92c9-5518a271c651",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "f07d4879-7567-426c-9d49-9de969e7aff1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "650c47cb-ba28-4140-a422-49e4eb476a58",
        "cursor": {
          "ref": "e457d67d-7e6c-4ea3-ad25-253e24380bcb",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "9525a89f-bade-42bb-9fdc-07a721526091"
        },
        "item": {
          "id": "650c47cb-ba28-4140-a422-49e4eb476a58",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "5f3430ea-917e-404f-a998-dd55ff8b5098",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2b5cc7e-5488-4788-8546-161581235864",
        "cursor": {
          "ref": "525e5c41-2df7-4c66-b4b6-265b776fc06b",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "9329b178-7c7b-4a5f-a6e3-517abc8c7af3"
        },
        "item": {
          "id": "c2b5cc7e-5488-4788-8546-161581235864",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "6fcf4c4e-f4b9-4cd4-9e5d-9e499ac3d46b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "332e918f-72b0-4d8a-828a-c73e4000c175",
        "cursor": {
          "ref": "9a445ef0-4e22-4c2c-ae02-bb1a35e3c3f8",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "16e96072-0099-4bc8-8183-9e6bbce88134"
        },
        "item": {
          "id": "332e918f-72b0-4d8a-828a-c73e4000c175",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "8a881d54-17b3-44c1-b544-403dc1b3388c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94afc9c2-5f8a-4e45-b3a7-62aafdb2e5ce",
        "cursor": {
          "ref": "19fe84b6-ee34-4532-bb36-cfb79b512da5",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "1148f4bf-e6b3-4958-bad3-3e9214113d10"
        },
        "item": {
          "id": "94afc9c2-5f8a-4e45-b3a7-62aafdb2e5ce",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "f8fc1168-d6e4-4504-a0be-ef2525588b2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d98579a9-85ac-4954-9bb3-4db67dce8c99",
        "cursor": {
          "ref": "5d02b222-fa4f-4e3a-aefe-a30f7a52ed0a",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "7e3a58e5-0068-45ca-b4a4-cf344f5bdde8"
        },
        "item": {
          "id": "d98579a9-85ac-4954-9bb3-4db67dce8c99",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "572ef5b3-1609-45b7-bd6d-2d3f70755148",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0ce4793-ef1c-4fbe-b638-8675248e5d26",
        "cursor": {
          "ref": "0508d6a4-288d-4a79-9398-62cb1d864830",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "72d7ccf4-6598-4da1-af66-9c469faa7e78"
        },
        "item": {
          "id": "f0ce4793-ef1c-4fbe-b638-8675248e5d26",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "9630d8ac-b7d7-4082-80c3-5053ab8014a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd78ad2e-b14a-4e5f-a69f-83dd43a3ce8a",
        "cursor": {
          "ref": "88fda3c3-e77f-4f9b-9b88-c7ed6a0026c2",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "9c2260ef-290f-4301-9dd4-024e729d57dc"
        },
        "item": {
          "id": "bd78ad2e-b14a-4e5f-a69f-83dd43a3ce8a",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "aa038323-dd67-4682-be0e-2c6bb79a8fab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a804531-a257-4132-8b70-1ba54fa0ad9f",
        "cursor": {
          "ref": "3ef309c6-cbd4-43c9-a3ad-8e9e3ca15edf",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "d30bded6-218c-414f-b1b9-ea73dd18a1e2"
        },
        "item": {
          "id": "5a804531-a257-4132-8b70-1ba54fa0ad9f",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "96e83e8b-4278-476b-b068-34be06754b4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "957b7fa5-b308-4489-9fb0-47f95965286a",
        "cursor": {
          "ref": "51b5f50d-6693-4399-a003-9e386e977a15",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "cfad678d-ab95-491b-979a-2d3206782168"
        },
        "item": {
          "id": "957b7fa5-b308-4489-9fb0-47f95965286a",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "9ea2e81c-310d-4a99-9f82-383eaf4a7539",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe70848f-5252-4c49-95f5-733bcd6e5eb0",
        "cursor": {
          "ref": "fa7328e3-7c53-47df-a298-75c247bdaa0c",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "dee38607-942d-4398-9d53-98a929dd3409"
        },
        "item": {
          "id": "fe70848f-5252-4c49-95f5-733bcd6e5eb0",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "aec3b904-020c-4e32-af8a-936a9aa5be17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55e6f49e-31db-4e3d-bd62-9b3ef11c767d",
        "cursor": {
          "ref": "c19e1a29-4a07-408d-bbb6-11fb1a71ecfc",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "e81bad11-44b8-4916-857e-8e53461011b5"
        },
        "item": {
          "id": "55e6f49e-31db-4e3d-bd62-9b3ef11c767d",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "80d6ff0f-91f7-4477-b840-85d982a45849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4840bf5a-f9e8-4042-b199-8a9483e2a20a",
        "cursor": {
          "ref": "dc603d88-7849-44c4-a711-83725ff29346",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "00efb326-f9a7-4b62-80bf-30c025208d85"
        },
        "item": {
          "id": "4840bf5a-f9e8-4042-b199-8a9483e2a20a",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "35937751-f7be-49e3-a673-29f0d07341a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd6acee5-ba85-4f04-aa53-1cdc425fbd35",
        "cursor": {
          "ref": "f30f70d6-817b-44cb-aeb4-9e2cec52bcda",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "1222cc9f-d0e3-4534-b7f6-b15a30ce2131"
        },
        "item": {
          "id": "bd6acee5-ba85-4f04-aa53-1cdc425fbd35",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "9f70dfaa-83f4-46b6-8720-de8045b271a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d4ba975-6d10-4b18-ba39-8f017629da89",
        "cursor": {
          "ref": "98e65aad-328a-42e8-b166-0180191fb93c",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "ba84e25f-4834-48dd-991b-2bffe6629220"
        },
        "item": {
          "id": "0d4ba975-6d10-4b18-ba39-8f017629da89",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "133c162f-6eae-4185-aece-a3dd2a8587ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e71f760-80c4-4f28-b8dd-516c9e18a760",
        "cursor": {
          "ref": "68e1e207-59cb-46d6-8e58-7da84e79b0de",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "157dbe74-6d83-4b62-a827-077348688d35"
        },
        "item": {
          "id": "2e71f760-80c4-4f28-b8dd-516c9e18a760",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "42942908-84a5-4933-9393-b1b93500a3fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd63f140-f98a-4928-82b2-97cd7d005f71",
        "cursor": {
          "ref": "7fc90c7a-cbb9-4390-8d65-2f694cb8ad83",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "8cf29527-d487-4999-9d0a-29ce644607f0"
        },
        "item": {
          "id": "fd63f140-f98a-4928-82b2-97cd7d005f71",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "af326518-2029-4ed3-a6e0-a630fc4fd3c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9843977e-47a9-4611-a876-6e0b49d136b1",
        "cursor": {
          "ref": "9daeaeb9-b317-4001-8058-52e5c77d79c8",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "bdce10de-765a-4692-a387-b5ea979059c0"
        },
        "item": {
          "id": "9843977e-47a9-4611-a876-6e0b49d136b1",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "46b4430f-5945-4d7b-ac05-bee18e0a10e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "aef2a3d2-2449-4f21-9347-af332b4ebd7f",
        "cursor": {
          "ref": "1b9b0565-a6ff-4be4-b667-c4cf7f988849",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "0ebeaf14-669b-4ee1-bc1a-5492a0fd3faf"
        },
        "item": {
          "id": "aef2a3d2-2449-4f21-9347-af332b4ebd7f",
          "name": "credentials_issue"
        },
        "response": {
          "id": "b2dcdb09-8d06-47ff-8613-35777ba5ac3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "9f074a27-5d99-470c-b492-aa7157750eb8",
        "cursor": {
          "ref": "25af5a36-b331-4315-9137-394f11d5269d",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "4fad800d-17d4-44c5-a681-dd115c9bcb63"
        },
        "item": {
          "id": "9f074a27-5d99-470c-b492-aa7157750eb8",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "4e994617-9d72-4dc7-bf07-c7709f7e5651",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "fed14c1a-d53e-4367-a6b7-b40fcd21115f",
        "cursor": {
          "ref": "e13dd4e7-db8e-4044-8e97-d756787c3430",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "6103be89-532a-4341-be7e-b65f7819708d"
        },
        "item": {
          "id": "fed14c1a-d53e-4367-a6b7-b40fcd21115f",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "a47ea36a-4fdb-47fb-8f41-f71f37683fb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "149cb5a1-0a2c-4f6c-b55e-b8c55b0ed47d",
        "cursor": {
          "ref": "737f5b0c-47bc-4c8c-a3a7-3ee6a04b791a",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "857e8a35-5fb2-4e1d-90a5-5a34de9e0ab4"
        },
        "item": {
          "id": "149cb5a1-0a2c-4f6c-b55e-b8c55b0ed47d",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "41962691-93fe-4cc6-aae1-776ba959f320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "deb43bc4-440d-4304-aac7-a94e3327274c",
        "cursor": {
          "ref": "c9b05876-413d-45ce-9df0-8e1ce4df0d4e",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "a016769f-eea3-4e54-ba14-839f45912a59"
        },
        "item": {
          "id": "deb43bc4-440d-4304-aac7-a94e3327274c",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "8909391a-8079-4f36-a923-2ad2f4fd7805",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "fee63758-9e80-49f4-973b-ac264c3676d0",
        "cursor": {
          "ref": "6cd99db1-1a23-4bc2-a927-b777464b8485",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "ee89ff43-ae74-43ee-bd36-5d8dc971b1ae"
        },
        "item": {
          "id": "fee63758-9e80-49f4-973b-ac264c3676d0",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "c1e8b7c9-e0db-44e6-a020-33bf22978da9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "4602f1a0-6233-4935-92ec-d1d7f8f406f2",
        "cursor": {
          "ref": "809aa7ee-74c5-49b1-b188-960f3ec1a900",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "2341951c-7d95-4b73-99a9-ad4485d0b90d"
        },
        "item": {
          "id": "4602f1a0-6233-4935-92ec-d1d7f8f406f2",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "939a27d6-6bb2-4eeb-9a62-58475b1b40c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beca6442-e919-4f10-97f1-8426780efdce",
        "cursor": {
          "ref": "7420f37d-8746-4afd-a76d-8f805af88ad2",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "eb80ec03-5202-4b90-ae3a-6a0a3d10705e"
        },
        "item": {
          "id": "beca6442-e919-4f10-97f1-8426780efdce",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "0dd9ace5-2b32-48c2-a7c8-98884973ecfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85788e62-1549-4188-b9d4-80f48c2549f1",
        "cursor": {
          "ref": "782ca15c-171a-47b7-bd64-2f4b1dff3f2e",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "3175a235-167b-4656-990b-74779b0adcde"
        },
        "item": {
          "id": "85788e62-1549-4188-b9d4-80f48c2549f1",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "ef05132b-c59f-4a74-8830-1977829b38e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89d9a6c4-548e-4f91-805a-7ace31fa7b5b",
        "cursor": {
          "ref": "657e054e-680c-4b63-bc11-8186e2d00a79",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "1b2d3761-7301-49fe-8e71-91421f0d1cb3"
        },
        "item": {
          "id": "89d9a6c4-548e-4f91-805a-7ace31fa7b5b",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "929d4c50-f570-4011-8801-40b72a1002af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa82fde3-a55b-4fba-a5df-4dfece59d8f0",
        "cursor": {
          "ref": "b54065f5-5535-4904-b75e-d6af2df6d2eb",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "7ebf188a-ceda-41bc-863f-d3a00083d896"
        },
        "item": {
          "id": "aa82fde3-a55b-4fba-a5df-4dfece59d8f0",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "edb45c1f-04bb-4805-99b8-2f714109f4e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7944d11e-a726-4320-820b-b0ca53016677",
        "cursor": {
          "ref": "5d737e7f-c290-4f55-a5f1-b81e400b3cc1",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "d5504f1d-2268-44ef-a0d9-59780c2531c9"
        },
        "item": {
          "id": "7944d11e-a726-4320-820b-b0ca53016677",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b6769ade-1b4b-40ac-9a5b-2f1de8a34674",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9cfc806-547f-4230-8c19-d264ef5b94ba",
        "cursor": {
          "ref": "6b08da81-e1b3-47a3-9ba0-e1898d13a43d",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "3cb96e3a-8d42-4ffa-8066-9b4fc1ccbe61"
        },
        "item": {
          "id": "b9cfc806-547f-4230-8c19-d264ef5b94ba",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "6cbc73fa-0ca4-430b-9463-0172e5b793bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f7522e7-39d0-4f4e-b21a-270e42227934",
        "cursor": {
          "ref": "5c77b721-0e36-4098-a39e-0212ca5f5f63",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "6a4c2a8d-5566-43d9-893e-7464c25ab235"
        },
        "item": {
          "id": "3f7522e7-39d0-4f4e-b21a-270e42227934",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "0ffb83f3-cf84-4339-84ae-eaa1ed10fc5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04ed92ed-72bb-4aef-805b-dfa55d9fb652",
        "cursor": {
          "ref": "63450546-befb-4605-9c1d-79a119e641df",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "54417625-be05-440f-8aa3-eb05fe734dfd"
        },
        "item": {
          "id": "04ed92ed-72bb-4aef-805b-dfa55d9fb652",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "8c080b48-09fa-4548-8092-d115ba61d257",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4244efc-e93e-4350-a942-d7f7f2238375",
        "cursor": {
          "ref": "7b2e7be4-be2d-41d1-be1a-be558bd61b25",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "b7014872-836e-47af-91b6-37073f8ea90f"
        },
        "item": {
          "id": "f4244efc-e93e-4350-a942-d7f7f2238375",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "5112d2ee-d2e3-4da7-b8c0-0922798d7ff2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa0b4f1c-9d9b-42f9-ab76-49164c67e85b",
        "cursor": {
          "ref": "cbcf4324-cc1c-42fc-b550-05895651c701",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "d15451a2-6508-47f1-9801-d5fcac997c3c"
        },
        "item": {
          "id": "fa0b4f1c-9d9b-42f9-ab76-49164c67e85b",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "73ff0d11-2e8d-434b-ab3a-5ffe374d2136",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a9af75a-3b85-491e-81bd-763a921ac4d7",
        "cursor": {
          "ref": "36e83b2e-8304-4672-a1ad-2f1f375dde60",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "41e96893-767e-41ec-a93f-146ce4789362"
        },
        "item": {
          "id": "1a9af75a-3b85-491e-81bd-763a921ac4d7",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "600b38c2-9875-4f1a-bfbe-5470db15a07a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ecceb94-01b7-4e28-8c80-dacf65e10d3f",
        "cursor": {
          "ref": "cd347798-9a69-4199-91ac-36043e160db0",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "89d90df4-3585-40ff-a580-9db80fbe1340"
        },
        "item": {
          "id": "9ecceb94-01b7-4e28-8c80-dacf65e10d3f",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c0972d8a-f91d-43d0-bfd1-f6869ad4311f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c1bec7b-1366-47a7-ac00-fd2e2b48bf82",
        "cursor": {
          "ref": "976e75e8-7f2e-467b-b0c8-5d87b07d71ec",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "3d41b757-86cf-4a57-8249-5d7214f26a98"
        },
        "item": {
          "id": "3c1bec7b-1366-47a7-ac00-fd2e2b48bf82",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "0045e978-11a8-4632-9725-50dff89d6946",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa5f37bf-ca33-46d8-aff6-3ffa41ba15bc",
        "cursor": {
          "ref": "f87e6b4a-8f9e-46a6-b59b-a6d3fe2acc67",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "10bac326-bc05-4e34-9222-3f2888a317d4"
        },
        "item": {
          "id": "fa5f37bf-ca33-46d8-aff6-3ffa41ba15bc",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "259f6be3-2dd4-43a0-ad49-f9a1db36101c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd0f5c4c-2b2e-4c5d-891b-14ca5cf7558e",
        "cursor": {
          "ref": "b97413d6-be82-4ff2-84a2-58650ec0052f",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "d088e673-351f-47ae-aed7-d2c0bfcec1ee"
        },
        "item": {
          "id": "fd0f5c4c-2b2e-4c5d-891b-14ca5cf7558e",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "987e5713-c80b-4199-8289-dd6d9ed614de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d73215b-abcb-4a95-a1a7-ecf999387e61",
        "cursor": {
          "ref": "d37ab132-b86c-4d44-b99d-25b3a507719b",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "10c897b3-7db9-413b-a8af-5990d9c4e00c"
        },
        "item": {
          "id": "8d73215b-abcb-4a95-a1a7-ecf999387e61",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "3051e3c5-cbde-4f38-9a63-ffc745aadfb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "931fbd95-fec6-44af-abab-9026d155c72d",
        "cursor": {
          "ref": "b8ce31dc-658e-44df-851b-3dec521abedd",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "c6562f2a-2f4b-4d89-866e-a07646327caf"
        },
        "item": {
          "id": "931fbd95-fec6-44af-abab-9026d155c72d",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "a508a3ee-fc84-404f-a4f0-9fb93bd0fd92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9048bf1-fc92-46ae-b609-5d6c7850f3c5",
        "cursor": {
          "ref": "be26cf33-aa6f-441f-86bc-875697001f98",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "6f2bb063-e6a4-4dc1-bb2b-bb09e22a3da0"
        },
        "item": {
          "id": "e9048bf1-fc92-46ae-b609-5d6c7850f3c5",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "066995b9-7bef-46d4-8ccb-fb797e53f744",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af358467-e937-48b6-a6c7-6dea00d13339",
        "cursor": {
          "ref": "b10d35d3-c2c2-4a7a-a2e3-04479ef00014",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "5efb68f5-68e2-43f3-8e14-1780482c3535"
        },
        "item": {
          "id": "af358467-e937-48b6-a6c7-6dea00d13339",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "422b1cb7-9d7c-4442-94e8-16b6b6ee2c75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ab5c438-a28c-44bd-a1ee-0f9ee778a136",
        "cursor": {
          "ref": "fd9f0657-d086-47cb-9787-b69d7c3e8d4c",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "193fe143-fa89-4178-b017-14885f9203fd"
        },
        "item": {
          "id": "3ab5c438-a28c-44bd-a1ee-0f9ee778a136",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "ad490e3d-f281-458a-a8ab-6daef8129a5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6244a2a1-63a7-418b-b3fd-20c1b6e8a856",
        "cursor": {
          "ref": "c29e0763-9248-404f-b989-222babe50178",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "21e8b0b6-d462-4b2e-a45a-2f78d83a7c3c"
        },
        "item": {
          "id": "6244a2a1-63a7-418b-b3fd-20c1b6e8a856",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "4d3c0709-6044-42fb-bce0-859e100699b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a7fd7ca-bd37-4875-bfda-83d231042045",
        "cursor": {
          "ref": "5c9d55ba-17cf-4de5-b339-9087ea9a13b5",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "2c87a43e-9d80-4831-a4e9-bfc1979766fa"
        },
        "item": {
          "id": "1a7fd7ca-bd37-4875-bfda-83d231042045",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "90a9cb51-a22f-4357-9aee-cf90b8b0e56a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4233e6e6-40c3-4a06-a178-3f2a9b1f8caf",
        "cursor": {
          "ref": "e39a0e09-e34e-4943-b6e6-64c1b4fc2544",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "a4f7948b-ecd3-4a76-b4a8-58e1890d5f3d"
        },
        "item": {
          "id": "4233e6e6-40c3-4a06-a178-3f2a9b1f8caf",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "3e905f45-7c06-4aa3-97f9-93c1d137fdc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c9904ce-27be-42fb-b804-a39577249f60",
        "cursor": {
          "ref": "7f51589d-a908-4ce9-9b04-55ff051b3d56",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "d34e1c5d-4643-4dbd-98ae-7445b9b9ae39"
        },
        "item": {
          "id": "3c9904ce-27be-42fb-b804-a39577249f60",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "7df3829b-e087-4bf6-9d7e-6f6cda056f93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dff2af7-90f4-4403-ad3e-5471c7272ede",
        "cursor": {
          "ref": "0a2b69c7-6326-429a-bdb5-ccc0ab5a4460",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "cf5da29c-1e7d-4280-aaf7-ed30dfd8eab0"
        },
        "item": {
          "id": "9dff2af7-90f4-4403-ad3e-5471c7272ede",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "dc05445f-72c7-4923-9a48-22459c724ac4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8022760a-08f3-4e26-9632-60fc28c3b1a5",
        "cursor": {
          "ref": "83a8218e-17eb-4809-8f25-d86fc95740a2",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "941cb1bb-6294-4ffa-bfff-be584108eebb"
        },
        "item": {
          "id": "8022760a-08f3-4e26-9632-60fc28c3b1a5",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "4f9f3950-a38b-4759-96b6-df4c51a382e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dedd9804-00fb-4ed6-9dda-067a7071a1e8",
        "cursor": {
          "ref": "1e6a0bf1-faae-4b1d-a578-fa94db5976a2",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "601f5494-60e8-4b56-8a9c-bd37a865735a"
        },
        "item": {
          "id": "dedd9804-00fb-4ed6-9dda-067a7071a1e8",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "007f5bb6-662a-4a94-a00c-5c5945f27c90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b14da0d0-4b6d-49f3-af5d-1e233ec07226",
        "cursor": {
          "ref": "968a6f7a-e328-41da-bc15-eab7fa9741d5",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "14ef07be-2bc4-4ae0-ab8c-52f8f31456ce"
        },
        "item": {
          "id": "b14da0d0-4b6d-49f3-af5d-1e233ec07226",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "93240303-c0af-46de-a6bd-0d34d58cf0d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c16df06e-0b0e-4754-8ddb-0da65d8d5045",
        "cursor": {
          "ref": "e55d19f6-c9ab-43f7-baa9-eea3b1debe60",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "865e3711-46f0-4017-897f-70f30c0dc1bc"
        },
        "item": {
          "id": "c16df06e-0b0e-4754-8ddb-0da65d8d5045",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "e885847c-e797-4068-93c5-dd3826489c67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "202c1115-efbf-4dee-bae4-330f84c25059",
        "cursor": {
          "ref": "33f7cf76-2907-4b86-a1bc-5d76f3e652a7",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "5f897df1-3541-4097-95d3-04090097daec"
        },
        "item": {
          "id": "202c1115-efbf-4dee-bae4-330f84c25059",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "ebae0210-636e-44e2-858c-84316f7897a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cd983cf-5069-406b-b669-fc479ee2f8fc",
        "cursor": {
          "ref": "b8cd9a98-7639-472b-8bf7-17d2322f41e2",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "1067dd75-725a-4377-9a90-dfb6dcb8f850"
        },
        "item": {
          "id": "7cd983cf-5069-406b-b669-fc479ee2f8fc",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "3b4bce95-2c99-4740-8cae-7210c2b63e13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b2c373c-7b13-483a-b8cb-b9ffe2888dce",
        "cursor": {
          "ref": "8fbbf3b7-70e6-4d1d-819e-842be0a49a12",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "1a9dc13f-4dee-440e-acae-7b492d6e43c2"
        },
        "item": {
          "id": "7b2c373c-7b13-483a-b8cb-b9ffe2888dce",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "a0b217ff-932b-4f2b-9064-dfb162e946b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceb724ad-82cb-4f64-8f49-e384a9d07a42",
        "cursor": {
          "ref": "b17cba9b-3ca1-4209-9cda-a53768069eb1",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "234e6342-c12d-4a0c-9f2b-b024b3cecdcf"
        },
        "item": {
          "id": "ceb724ad-82cb-4f64-8f49-e384a9d07a42",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "0ad1688d-1458-4504-ae49-85c1e9632bfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67ca97e0-497a-4021-b956-c106339d4834",
        "cursor": {
          "ref": "3c949704-cae1-4352-a1dc-e405756768e9",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "68a7d5ff-b9a2-4755-8ff0-d655bdf111c7"
        },
        "item": {
          "id": "67ca97e0-497a-4021-b956-c106339d4834",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "07b299b9-af50-46b0-85f3-a25b917ccd53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c65aca94-bade-4d19-9c89-6508a9ccf50d",
        "cursor": {
          "ref": "ed16d2c7-42de-43c7-be7f-bb5ce3749899",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "c7c44d0e-9b9a-42d8-9efc-4c3bc37ede36"
        },
        "item": {
          "id": "c65aca94-bade-4d19-9c89-6508a9ccf50d",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "46d84b04-13d9-40ad-be45-1cac7cbe5c3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "793b5cbd-0ee1-40d8-88c5-2c8e25041107",
        "cursor": {
          "ref": "199f113c-8b86-44ee-9acb-17b4136f1b07",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "ecbdf642-257a-432b-b073-a62b682b8e22"
        },
        "item": {
          "id": "793b5cbd-0ee1-40d8-88c5-2c8e25041107",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "e93202d2-4ecd-4825-a414-bceae4552dd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4b05d01-20bb-4fbe-ade1-2f734c7727b0",
        "cursor": {
          "ref": "dbbd788d-4a6d-46ba-bf9e-b850a74d1a12",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "be791864-249d-42fe-9f27-e14cdfc6ceb7"
        },
        "item": {
          "id": "d4b05d01-20bb-4fbe-ade1-2f734c7727b0",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "d31c664c-28ca-4851-bba5-2179a0ab8038",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4377c02b-f922-4c1f-b526-ff87f847bd9e",
        "cursor": {
          "ref": "8c798a0d-b162-4992-9908-7a729ca9a92e",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "2e7cbb17-152c-4475-84b4-023557adb790"
        },
        "item": {
          "id": "4377c02b-f922-4c1f-b526-ff87f847bd9e",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "5b0fb313-2d4d-429e-a380-9c2fd7f61e23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0ca8543-e6f8-4171-a067-fd0c8fa63f18",
        "cursor": {
          "ref": "9405ce9c-d60d-4610-a501-2efd2bc40725",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "9ef00182-1212-437d-a6dc-1b44449e6cfa"
        },
        "item": {
          "id": "a0ca8543-e6f8-4171-a067-fd0c8fa63f18",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "f9939bf4-c069-4b0f-89a0-766e4be08fa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "215d57b4-4cb7-4d16-9723-5ba7d3b24b27",
        "cursor": {
          "ref": "18e34365-7d4a-4665-bf76-6969078baba4",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "d9ec730a-7f25-469c-b8ea-7ee0a0a896d6"
        },
        "item": {
          "id": "215d57b4-4cb7-4d16-9723-5ba7d3b24b27",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "fa994c9d-3366-4f84-b95f-4b58338a1fd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f22f267-d34b-4ca5-af01-1b5e091a1b37",
        "cursor": {
          "ref": "925bcd37-a916-42b8-b907-d6300705a908",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "1d9fce6f-d32d-4895-8a1c-cb4e3a759a5b"
        },
        "item": {
          "id": "9f22f267-d34b-4ca5-af01-1b5e091a1b37",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "8f6f0b2c-2238-4f4f-bb7a-f2f597d41fde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "668e3e37-9cee-4e85-a71b-a47af3b6bb04",
        "cursor": {
          "ref": "07070bb6-2e5d-4d76-bf7c-f8aeb10b93b5",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "1cfe9fad-1608-48b9-ac79-b724b66a74f0"
        },
        "item": {
          "id": "668e3e37-9cee-4e85-a71b-a47af3b6bb04",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "2dec7379-8b2a-4ddf-9fb7-b4b675a71392",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f108fd2-67e5-4473-917e-e9d9c82d6326",
        "cursor": {
          "ref": "467c31b5-e0da-44d0-a100-a8e496318104",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "3f91574b-755b-42dc-b21f-2829d222e0d4"
        },
        "item": {
          "id": "0f108fd2-67e5-4473-917e-e9d9c82d6326",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "5d49ce25-f5f9-48e3-950e-cd2dce79bc7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05af9318-4acf-4bb3-9cf0-afd572a0f028",
        "cursor": {
          "ref": "48fd9f66-3867-4ddc-9027-f36ae25579cb",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "31c6481d-21a7-4722-8672-270ba6d81c13"
        },
        "item": {
          "id": "05af9318-4acf-4bb3-9cf0-afd572a0f028",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "28766399-76af-47bc-a83e-8917001f16a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a315dac3-9755-42f9-a6bc-77749adaaaaa",
        "cursor": {
          "ref": "9b11f7f6-18b6-430f-b3e7-e9511464d1f6",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "f4e8fea6-eec8-4dc2-a7be-b1602dd5f9fb"
        },
        "item": {
          "id": "a315dac3-9755-42f9-a6bc-77749adaaaaa",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "85e65150-c130-4a6e-a164-75ed391cfc04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5577ddf6-70d0-47a4-a532-59f936740f31",
        "cursor": {
          "ref": "f3cbde03-5401-4304-aec0-22fa5d7eeb59",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "1a3e22f4-8c5e-4184-b92e-c6ad318f859d"
        },
        "item": {
          "id": "5577ddf6-70d0-47a4-a532-59f936740f31",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "79effb57-90d0-4a5f-8b5c-39dd03c0ccef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7f50ff7-3ab1-4599-b34e-fb593d00057e",
        "cursor": {
          "ref": "f6798194-9de5-4767-9a6c-301ba49d1eb4",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "75c6209e-1175-4036-b533-b49a8174cb16"
        },
        "item": {
          "id": "c7f50ff7-3ab1-4599-b34e-fb593d00057e",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "6faaf1d9-006b-4b8a-bd79-932caac3d47c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d099403-a7cb-4e26-a88d-f45004586299",
        "cursor": {
          "ref": "85955cb8-bd3b-4a38-91a3-4c9fd94920f4",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "a2e7d07c-7362-4289-8d02-c035842ab96c"
        },
        "item": {
          "id": "7d099403-a7cb-4e26-a88d-f45004586299",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "31208ef1-ed6d-4720-a5bc-4e60055866ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47fd4c4c-746d-4f8d-8afa-84d277089778",
        "cursor": {
          "ref": "df4dccfd-ff53-4e24-9d21-a2a5432092bf",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "ea4dfe23-8f2b-43fc-886f-6de738c0e046"
        },
        "item": {
          "id": "47fd4c4c-746d-4f8d-8afa-84d277089778",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "683744ba-0252-4283-9cde-f750d142c9da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93da66f4-8906-4373-9359-9592eb8d3cbe",
        "cursor": {
          "ref": "dadf633c-c516-4eb9-aec6-bd1255aa3a07",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "1c721ed3-ca60-4a18-b0d8-63476285ce5f"
        },
        "item": {
          "id": "93da66f4-8906-4373-9359-9592eb8d3cbe",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "567c72d5-51d3-482f-ba68-db21396caf14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b3fe3c0-748e-42e5-9fac-8e153abc13d9",
        "cursor": {
          "ref": "3c994ba3-e2f3-4d82-9b9e-f1ec90c6c28b",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "4a13387f-1d22-46c7-aa1c-316eb5d39527"
        },
        "item": {
          "id": "6b3fe3c0-748e-42e5-9fac-8e153abc13d9",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "8142f96f-6fa9-42eb-bc85-c84a8e8d982c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cdceba3-c467-4094-b357-b9eaccbf38c0",
        "cursor": {
          "ref": "a5ebf997-b377-4b98-9ebc-d77c0aeec141",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "d181e65f-35cc-4ba5-895e-863a26f66e65"
        },
        "item": {
          "id": "9cdceba3-c467-4094-b357-b9eaccbf38c0",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "82a2c82c-a4cb-41da-bad9-3d15ce8f482d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "300e94ac-1d85-4ac1-b8b0-80e83caf260f",
        "cursor": {
          "ref": "5aa3017f-0a95-43bc-b242-10d4c3904427",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "437b16f2-733c-4622-ba71-bdfad57b69c7"
        },
        "item": {
          "id": "300e94ac-1d85-4ac1-b8b0-80e83caf260f",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "5aa066a6-c992-43a5-981e-7f854f865110",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd007f6e-8385-4cc9-aa1c-c3e87e902256",
        "cursor": {
          "ref": "dc232391-34d4-4ebe-9baf-edeb77b81fba",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "95b48007-2a9a-404a-9e7d-61da22990994"
        },
        "item": {
          "id": "fd007f6e-8385-4cc9-aa1c-c3e87e902256",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "6c57776b-5b93-45b9-9793-b1bac7629df8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1135d9e-f181-4c35-b65b-23fb0f4bce5a",
        "cursor": {
          "ref": "a63143e4-8050-4a69-934c-da4e77712b58",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "02d157d7-34be-4f8b-b69b-62f645114382"
        },
        "item": {
          "id": "d1135d9e-f181-4c35-b65b-23fb0f4bce5a",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "d189faba-2867-498d-a21f-31dde2e7e57c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8488b13c-4da4-4cad-98a8-da817a5485ce",
        "cursor": {
          "ref": "79bd4496-7a23-4d7e-8d44-c50c97230540",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "95ce9fdd-023e-416d-a8ba-e1d80364dd8a"
        },
        "item": {
          "id": "8488b13c-4da4-4cad-98a8-da817a5485ce",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "aca1848a-6913-4a53-97a7-5bd6353e94ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24c8a0d9-d95b-43ae-a909-f73665321e45",
        "cursor": {
          "ref": "e37f644a-b357-499e-9320-de102b543e32",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "6184f6f0-5d53-4924-926b-c7a606f5654b"
        },
        "item": {
          "id": "24c8a0d9-d95b-43ae-a909-f73665321e45",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "dccc6062-ddc9-47a1-9050-982ab24e99ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6bf117d-4bc7-4977-bcbc-609eb4c71c44",
        "cursor": {
          "ref": "b00ff4fb-b354-45c6-85f7-2d6dbb9f13fe",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "d30d5533-25ef-4d2d-933b-a2b6d7a09ca7"
        },
        "item": {
          "id": "a6bf117d-4bc7-4977-bcbc-609eb4c71c44",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "d2bcbedc-a028-4768-b4fc-e17a22c80850",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e318b5d-2a5c-4fc5-b34e-e7bd4637ec14",
        "cursor": {
          "ref": "378451ae-cb3f-4fd2-b3c2-41a9b502d451",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "a469b173-8e89-4a45-b92d-3e2aced912f4"
        },
        "item": {
          "id": "6e318b5d-2a5c-4fc5-b34e-e7bd4637ec14",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "20088dff-2e1f-430a-a537-15e99c45e308",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65b0ed0d-8ecb-4aab-a323-c639cefab90d",
        "cursor": {
          "ref": "5ef96206-865a-48f7-aa59-39698200d517",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "1b796f8b-29a4-46e6-8412-eda63e980d41"
        },
        "item": {
          "id": "65b0ed0d-8ecb-4aab-a323-c639cefab90d",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "9560c54d-8111-42d9-b375-e11313a06aac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd2716b8-d803-4a47-a00b-81b648557797",
        "cursor": {
          "ref": "4ee36bdd-69a1-4186-aa3a-b958f72a6302",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "b1fbc528-ca8d-4b40-bd01-6a8f9e8ae571"
        },
        "item": {
          "id": "fd2716b8-d803-4a47-a00b-81b648557797",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "523b7dba-d6ae-450e-83de-2156905a613a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b48d5c5-3f8e-4804-8dc0-753091f87d10",
        "cursor": {
          "ref": "94ddc950-6bc9-4034-aa01-322579a6c6fd",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "5cd1ce3d-27b7-4c8e-a068-d745e0f46a89"
        },
        "item": {
          "id": "3b48d5c5-3f8e-4804-8dc0-753091f87d10",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "71ab5af8-9b6d-4fc1-b776-c81dcac0f8fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78fa9044-7588-4a74-8e63-caccfb5ca8bc",
        "cursor": {
          "ref": "ae892a64-0ba8-48bb-b1a9-17d1675282be",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "50885d8a-a724-4076-ac1f-e10788d02f22"
        },
        "item": {
          "id": "78fa9044-7588-4a74-8e63-caccfb5ca8bc",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "80f59eed-3f8a-48c2-afb2-2141769f8487",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c4cecf6-4c51-47a1-9c72-a88a7e703946",
        "cursor": {
          "ref": "57b11157-f147-4d35-8578-54d243f9e626",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "fb228c17-aef3-4db4-8bd1-db541f0547bc"
        },
        "item": {
          "id": "5c4cecf6-4c51-47a1-9c72-a88a7e703946",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "a04ba78d-39e1-4efb-8f11-632422217adf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e723a52c-781a-4849-b9f9-bd8068dcc5ff",
        "cursor": {
          "ref": "a8d70a2b-ff17-4a74-a548-0d2869677748",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "5783bca5-af7a-425e-878b-8d5eb3eae35f"
        },
        "item": {
          "id": "e723a52c-781a-4849-b9f9-bd8068dcc5ff",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "fc32a6f6-04bc-44e7-959c-c0f98fc6a3e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a07db73f-5f35-474f-b099-b232aa60a5d6",
        "cursor": {
          "ref": "20e9e26f-f9a8-4058-ac94-d009a9351758",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "297d7198-d385-4cc3-a49c-b8921fb4e170"
        },
        "item": {
          "id": "a07db73f-5f35-474f-b099-b232aa60a5d6",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "c673a1d9-0a3e-4bc0-aa5c-1da0c260a030",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "659e03f3-f376-43b8-a2e5-90c96a0a8746",
        "cursor": {
          "ref": "9278247a-f642-4055-abed-251918b59e40",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "90e89cf5-ae50-4501-9ddf-e216e57ed854"
        },
        "item": {
          "id": "659e03f3-f376-43b8-a2e5-90c96a0a8746",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "0a1a9e63-12db-46c6-8379-62fd528fcf3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89d17406-b0df-465c-8e45-e2a7be3dbf5c",
        "cursor": {
          "ref": "0db4590f-63af-4af5-875c-da9dded7559f",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "2deb75f6-8efe-445c-8a7e-4162f693976d"
        },
        "item": {
          "id": "89d17406-b0df-465c-8e45-e2a7be3dbf5c",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "695ce164-5f29-46d2-9dca-83f45195e2b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b009123f-2207-443c-b614-c59d8e13d480",
        "cursor": {
          "ref": "8f2d131e-103f-449e-bb4b-3877b967be6a",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "5ef5fcc0-fd90-4e4b-91ba-30ee8bd8e817"
        },
        "item": {
          "id": "b009123f-2207-443c-b614-c59d8e13d480",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "662f536f-6719-427c-94fc-afa37e01e815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "627835e5-9e3d-4906-aecd-3029ca74a164",
        "cursor": {
          "ref": "6d6d9dc7-07e7-449a-88d4-e2e6dfc70539",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "85956ef1-47ca-4e80-bc25-2dfc12f28b15"
        },
        "item": {
          "id": "627835e5-9e3d-4906-aecd-3029ca74a164",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "49320548-3613-4c7a-b50f-9f91751a58f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bcd560c-084f-471b-aa96-4132cf17ce17",
        "cursor": {
          "ref": "80247079-841f-4ebd-b3ec-97dacea8b090",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "d581ba64-3e14-4747-a5de-9eaac23915a6"
        },
        "item": {
          "id": "7bcd560c-084f-471b-aa96-4132cf17ce17",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "7e51686e-8cf0-4420-ac53-8554e0a0b935",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f01f10ec-7b0a-4368-b73e-c9010a8ff72b",
        "cursor": {
          "ref": "4d03ac9d-b508-4cd2-aac2-c71d80749178",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "ac750b6b-325e-43c6-a50c-6636880d285c"
        },
        "item": {
          "id": "f01f10ec-7b0a-4368-b73e-c9010a8ff72b",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "1c12de6c-e8fe-4c59-b021-39d84007dd19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "766f0c4e-bb2f-4073-a90e-ab5a221b75cd",
        "cursor": {
          "ref": "dae6869e-4fd4-4b12-94b4-6225a9aa275f",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "540fadec-28eb-4a69-90ec-0996b72aa5ac"
        },
        "item": {
          "id": "766f0c4e-bb2f-4073-a90e-ab5a221b75cd",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "a13ab3bf-ede5-48ca-a271-7ca741d127a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a21c506-920f-4f1c-80ea-12fc7c84bd80",
        "cursor": {
          "ref": "90edf01b-e748-4595-8055-8bdcf988940b",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "ac2f59de-9e5d-41d8-8331-147677e88598"
        },
        "item": {
          "id": "2a21c506-920f-4f1c-80ea-12fc7c84bd80",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "3e844558-12ac-4e1f-a21e-b87105102b0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e4f6189-077e-44e6-ad07-2b43f1d36d06",
        "cursor": {
          "ref": "bd79817f-2d90-4038-94dd-6997fbe83046",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "4d3375c2-0757-4d21-9e16-9cda056bfcd0"
        },
        "item": {
          "id": "1e4f6189-077e-44e6-ad07-2b43f1d36d06",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "3a1bc5a6-c874-4c54-adae-4024782c3b72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08665c3d-04ad-495f-abb1-2cdaec45003f",
        "cursor": {
          "ref": "63cccc6a-19c8-4696-8ef9-efa4b8c3737d",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "2a490501-7b03-4e7d-9081-d6a9427d01eb"
        },
        "item": {
          "id": "08665c3d-04ad-495f-abb1-2cdaec45003f",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "f2dc2faf-f947-4836-8d6c-916b62c7e0da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8b83f2f-6d79-4b59-a876-f57046f09cf7",
        "cursor": {
          "ref": "99eb14b6-c6a7-4aa1-9b9d-84e6631f4ce4",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "475e6efb-85c1-445d-8f84-4c3b5a82eaa9"
        },
        "item": {
          "id": "c8b83f2f-6d79-4b59-a876-f57046f09cf7",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "c25da1a5-85a5-4147-9081-fe8ccee3eee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76a5ea1c-ea74-4d16-92aa-d19f8289f024",
        "cursor": {
          "ref": "becfee96-39f9-4407-942d-0b6b615afa4d",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "7a5aa214-181f-4e60-9653-943c8bd913ac"
        },
        "item": {
          "id": "76a5ea1c-ea74-4d16-92aa-d19f8289f024",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "bc0d57d6-3fa3-4c76-a17c-2d2b98013681",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19c326de-4f24-4700-a083-2f4439fe5a28",
        "cursor": {
          "ref": "072dd45a-45ac-4319-bcb7-e1be973963cd",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "8a951881-e8c0-4918-a48f-15339ec637b2"
        },
        "item": {
          "id": "19c326de-4f24-4700-a083-2f4439fe5a28",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "fccbb36e-50b4-4313-82e0-2cd775c852d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "971fe132-6a4e-43db-90c2-5f2d08ecc8ff",
        "cursor": {
          "ref": "92292b20-d9d5-4936-bb93-32c86edc34ad",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "6f10bd68-bf85-4617-a364-49e1ce3aad5c"
        },
        "item": {
          "id": "971fe132-6a4e-43db-90c2-5f2d08ecc8ff",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "dc7d7a30-cd0e-4438-86df-1b069c2c7bea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca4868a9-8c09-47e7-a768-8d6edfc710de",
        "cursor": {
          "ref": "702ce0f1-5a2a-4a34-81c6-033ce9873ed0",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "722b9941-5d35-4dd5-82a6-031ad03d4fb9"
        },
        "item": {
          "id": "ca4868a9-8c09-47e7-a768-8d6edfc710de",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "145b412e-8dfa-4dd1-a075-903ebcc8547c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14954131-9643-479e-bf7e-4a04bb933cff",
        "cursor": {
          "ref": "762d600c-1d5b-44ab-b290-1aadcbe66bb1",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "275d26a4-141d-4625-bea4-63864e201cde"
        },
        "item": {
          "id": "14954131-9643-479e-bf7e-4a04bb933cff",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "1fe14a34-f13f-4034-8c14-cd7900fe6667",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ca06d83-1ecb-4489-8021-4fa084176447",
        "cursor": {
          "ref": "7382bccf-dc3f-4740-90e5-d1d726d5883c",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "20f02f2b-c555-464b-bc79-676f918643e7"
        },
        "item": {
          "id": "8ca06d83-1ecb-4489-8021-4fa084176447",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "43b38c66-cbda-4887-be2f-04979890dcf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae048c81-5233-4826-85b3-91eabf36e518",
        "cursor": {
          "ref": "087c7d80-4248-4dad-a236-5351a1b5d096",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "22218f85-064b-4b46-b523-f163859281b5"
        },
        "item": {
          "id": "ae048c81-5233-4826-85b3-91eabf36e518",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "6103f95a-c612-481d-84b6-732173112cf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0e0f471-ed27-4001-8507-5a407dd7ecbf",
        "cursor": {
          "ref": "bbdf6d48-a07d-41e6-b978-252068a69872",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "a553b8bd-5177-4a06-8ef5-0d6d53919947"
        },
        "item": {
          "id": "d0e0f471-ed27-4001-8507-5a407dd7ecbf",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "f3f8c09b-3654-406f-9275-3d03d24f1f02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a972786-603a-4492-9a14-d75b401b3785",
        "cursor": {
          "ref": "ec558bae-34b2-4663-8abb-38efd34f84d8",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "9b6f7beb-9c7a-4765-aab0-95e793568b07"
        },
        "item": {
          "id": "1a972786-603a-4492-9a14-d75b401b3785",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "8503209a-dc03-4045-81a5-51448abef8c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "845ed912-8e87-4482-bba6-f0dff94e19d5",
        "cursor": {
          "ref": "8c362b9f-62ec-4be6-bac0-f86d1e8d3521",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "9b5d46e4-38d6-4316-856a-e585895f6b84"
        },
        "item": {
          "id": "845ed912-8e87-4482-bba6-f0dff94e19d5",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "03e50d02-ff36-40eb-a9b0-24680ba9d710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7177ce1-a263-461b-8a50-ea0dcdbeff7a",
        "cursor": {
          "ref": "eaed14da-fef9-4b06-ade9-3038672c8b1b",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "d8d7484c-2393-478e-ac68-463fa2e47d63"
        },
        "item": {
          "id": "d7177ce1-a263-461b-8a50-ea0dcdbeff7a",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "186b43a7-0ba2-4f8c-b455-4a2b38d1da00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04e23de2-64fa-49e4-b368-dc4135b19227",
        "cursor": {
          "ref": "8d8b5a57-610d-4a4b-ae8c-312c12bb195b",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "d3c3ffd2-e3b2-4c6c-88a5-b10503ed01c1"
        },
        "item": {
          "id": "04e23de2-64fa-49e4-b368-dc4135b19227",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "893c6287-bc52-4104-b900-d1295dc349c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6462748e-a384-4642-a9d0-a6cdac240637",
        "cursor": {
          "ref": "6ec09534-1d62-485f-8231-cf4b743bab1d",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "57f7fd53-b8fc-413f-bd47-d956edbde260"
        },
        "item": {
          "id": "6462748e-a384-4642-a9d0-a6cdac240637",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "ac18b259-b7fa-4ce4-b0ce-75ddba307028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8399cad5-7b85-470c-b400-e6d60221e836",
        "cursor": {
          "ref": "d1908133-1ac0-45fc-a435-db44e9f4f85b",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "9005fa46-fdb9-4208-9f67-a0cc3b3bc6e0"
        },
        "item": {
          "id": "8399cad5-7b85-470c-b400-e6d60221e836",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "b906097c-f642-4acc-bf91-35ec8a5aa649",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ee84832-3810-48d9-8895-4bc5a5a608a3",
        "cursor": {
          "ref": "30c3df13-e2f0-4078-b708-aacc2f7d6bbd",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "ecea0c7d-3a16-42b6-a5f8-b9177eca1772"
        },
        "item": {
          "id": "9ee84832-3810-48d9-8895-4bc5a5a608a3",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "c0b5ba2f-80ae-4bae-8250-4d6db6c71e0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "797d54e0-fae4-4a87-befd-6cbce8f748cd",
        "cursor": {
          "ref": "6b33ad13-91cf-45c4-b93f-7ef14e6b2264",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "6e3c141d-954d-4dda-b6e1-847de9b29cd3"
        },
        "item": {
          "id": "797d54e0-fae4-4a87-befd-6cbce8f748cd",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "4be49266-5eb3-4206-b078-d48425741cac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa5d58fe-fc29-47b0-9ef1-ca893dfde869",
        "cursor": {
          "ref": "36d585ed-dd81-40b6-b9c3-4e37f7785bbb",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "272d2a27-7e29-4942-9c7a-62b1bb04fcc4"
        },
        "item": {
          "id": "aa5d58fe-fc29-47b0-9ef1-ca893dfde869",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "7f6f0650-093d-4a47-b1fe-b8dece26b233",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d0922d6-b412-43d0-9d10-33989003b797",
        "cursor": {
          "ref": "a8652133-6f3b-4e54-9cdd-2d2dd338df6d",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "906265fe-2f99-485c-93de-73f0c53cd03d"
        },
        "item": {
          "id": "8d0922d6-b412-43d0-9d10-33989003b797",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "d8f6e30f-6c4b-493a-ad01-ee518a2de2f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fa3ab5a-e84a-4201-8a5a-56ccdbabfb1f",
        "cursor": {
          "ref": "b00d18cd-73c7-4b27-a042-99a861e15e5c",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "7a265ca4-1502-4ca6-8682-2a3212a1fbf3"
        },
        "item": {
          "id": "5fa3ab5a-e84a-4201-8a5a-56ccdbabfb1f",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "882b79f0-073d-41bc-a154-8dbcdac3b49c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17e1e15d-4d1c-430e-ae2e-32021859adc5",
        "cursor": {
          "ref": "ef6bb1e7-458e-44d2-953d-d2db7ac0661c",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "b2387b57-081e-4f79-99e6-20f6fe299416"
        },
        "item": {
          "id": "17e1e15d-4d1c-430e-ae2e-32021859adc5",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "b0ba4586-f948-49ae-8040-626691fdee30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cee49ad-a7a8-4c69-9b01-528ed9e004f8",
        "cursor": {
          "ref": "2a72cb8d-967b-4559-bfb0-9e3126c878af",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "d6ebba2b-a47a-4f72-a586-19c23c97ddda"
        },
        "item": {
          "id": "1cee49ad-a7a8-4c69-9b01-528ed9e004f8",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "cce3675d-e40b-423c-a9e9-0a3375fdcf1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b58f808-8c06-43d2-939e-5aa137bff9cd",
        "cursor": {
          "ref": "36125ba6-d776-426e-b3b9-1a66389710ea",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "cb0b5d67-3628-4ee6-b1d8-6f42b63cc316"
        },
        "item": {
          "id": "4b58f808-8c06-43d2-939e-5aa137bff9cd",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "0c0dc12c-9442-457d-b911-94eb6dd98e6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b54cfd9-10e9-45e4-8f94-95b17c7e32d4",
        "cursor": {
          "ref": "e1bbb1dd-53c3-4a04-84db-cf86c5c34144",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "05f49a59-e8e4-4bab-9854-061160b02ce9"
        },
        "item": {
          "id": "7b54cfd9-10e9-45e4-8f94-95b17c7e32d4",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "5e698841-c1cc-4721-8ec7-6c48061f202a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82ec71d7-6258-4ae7-9879-71ea6f28da90",
        "cursor": {
          "ref": "e728b7fa-f7ed-4a9a-a6be-d98254213e9b",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "a1b1643c-a143-4b74-bbc9-9f950fffc041"
        },
        "item": {
          "id": "82ec71d7-6258-4ae7-9879-71ea6f28da90",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "6aca5a57-4ed9-4412-ad8a-1ce3c3fc6c7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c3be610-1af3-445f-a238-c101e5f80950",
        "cursor": {
          "ref": "b64f9034-095d-4592-aa0d-130e72ab0631",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "effd7452-def2-4b31-9e56-fe6efa4b372f"
        },
        "item": {
          "id": "6c3be610-1af3-445f-a238-c101e5f80950",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "4057aa2d-f043-4269-811c-15d17496da06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "569fa1f8-0606-451e-b7a0-6febb6c11b8a",
        "cursor": {
          "ref": "b567c915-fcb6-419c-bbf9-5977c3ee7c15",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "4e5f1f85-04cc-42a8-a241-7a7c2cc8bb4f"
        },
        "item": {
          "id": "569fa1f8-0606-451e-b7a0-6febb6c11b8a",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "e5886796-0c00-4c44-83f7-18f0fc5b5d65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9db9ed6a-7b80-4cfa-9362-4acc6b279de2",
        "cursor": {
          "ref": "056ab896-691e-4c1f-b634-5e2b0b722250",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "2f6e3d56-feb9-4a8c-a019-06a0dc71486b"
        },
        "item": {
          "id": "9db9ed6a-7b80-4cfa-9362-4acc6b279de2",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "efb1372d-d10e-4011-b4d5-4ae0a685b8d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce15815c-9077-4ce7-b661-793033ceffaf",
        "cursor": {
          "ref": "7df7fe33-86ef-499b-8a33-034470070ce5",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "dfa03776-5fc4-4462-a8eb-902b55150608"
        },
        "item": {
          "id": "ce15815c-9077-4ce7-b661-793033ceffaf",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "3c4cd839-31f4-4e24-949f-7a19b17013d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c433583-d488-4d5b-a733-3e317b07a392",
        "cursor": {
          "ref": "e7fd89f9-6141-4932-9382-6ece5d6c7513",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "765c3a8a-ff9e-4928-97d0-f5a7e26060be"
        },
        "item": {
          "id": "2c433583-d488-4d5b-a733-3e317b07a392",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "ae1ff731-844d-4894-aea7-e732c768dcc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cdf0248-f533-40c0-b481-627168039937",
        "cursor": {
          "ref": "1457cf8a-3493-411c-ab1f-1fe45d42bb29",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "49081100-06ab-4380-98e7-156e76fa291a"
        },
        "item": {
          "id": "7cdf0248-f533-40c0-b481-627168039937",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "12adfc6a-2105-4200-a7e9-3e4474357d25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d465886-9499-4fc9-a906-c397be3b920c",
        "cursor": {
          "ref": "5bab135a-d088-4378-9d4c-cd97bbcb9961",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "912fd08b-d929-4230-9604-3f8ad5f12d09"
        },
        "item": {
          "id": "4d465886-9499-4fc9-a906-c397be3b920c",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "0ea35b02-14ee-4060-a656-75a73824309a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95360d6c-e1fc-44b7-ae8e-e834ab339b6c",
        "cursor": {
          "ref": "7a64c38b-582f-4b92-b96d-01e5041f676a",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "63ff0db1-7011-424a-adf8-82cd4b4f4f76"
        },
        "item": {
          "id": "95360d6c-e1fc-44b7-ae8e-e834ab339b6c",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "c8c05ffa-1f69-4b2a-a695-1bcedbe3d0ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3069f09e-b6da-474b-a0a6-ded0d3f3e6b2",
        "cursor": {
          "ref": "b92b927c-aa41-4021-aed9-21897c2753d1",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "28d88ae3-b7d3-40f9-90e1-a745e74924c5"
        },
        "item": {
          "id": "3069f09e-b6da-474b-a0a6-ded0d3f3e6b2",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "78ddd384-99fa-4134-875b-fae03f39d9bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34a3fd96-bbbe-4696-bff6-4e691ca1a892",
        "cursor": {
          "ref": "752ef91d-851e-4961-881c-783ab9761d05",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "40c2bc6f-6f20-4d7a-a1e3-1ebf57701e34"
        },
        "item": {
          "id": "34a3fd96-bbbe-4696-bff6-4e691ca1a892",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "790f6073-bcb4-47a0-a63b-c4e96622dc48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57c2beef-60b6-448a-8a25-b245cc552ba6",
        "cursor": {
          "ref": "86bba99e-b672-4842-89f1-f742df2fe4fc",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "debfe2b0-59e2-4596-a662-a06a88ef99a2"
        },
        "item": {
          "id": "57c2beef-60b6-448a-8a25-b245cc552ba6",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "99a0bbec-ac86-4ad0-8501-a7cdc6b9cd43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79a5a2f3-09c8-40f1-b1d0-cae92bc5c2f8",
        "cursor": {
          "ref": "e1001d40-d954-4648-be90-1060f9658c66",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "5a29d588-1858-4aeb-9407-e559bd3f5cae"
        },
        "item": {
          "id": "79a5a2f3-09c8-40f1-b1d0-cae92bc5c2f8",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "e4810d92-fd31-4dd2-a78b-067b4a83f6fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5db421fb-93d1-4f2d-93ee-68d2811ef7aa",
        "cursor": {
          "ref": "c46a0744-ae8c-4d2f-82aa-7ebb15e33e83",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "831abf14-31bb-42bf-bd21-47106c9ffff2"
        },
        "item": {
          "id": "5db421fb-93d1-4f2d-93ee-68d2811ef7aa",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "391efdd7-9c19-4285-a981-e7e5b76f38ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60dba5ce-7053-459f-9e51-67814f4dab46",
        "cursor": {
          "ref": "74c4c894-80b7-46da-b5e6-690541c05844",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "7b135cab-67af-44a2-b3ad-907d0832aaae"
        },
        "item": {
          "id": "60dba5ce-7053-459f-9e51-67814f4dab46",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "2c2711c5-5d8f-4a43-a68b-d5c4dd5ceb28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a433c156-2184-4bfa-a722-e4630d524adf",
        "cursor": {
          "ref": "6dd1ed85-9d80-4c90-87fc-d1b54da6cb15",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "cc9a1dac-9faf-4b78-8c22-2ff0600c43a6"
        },
        "item": {
          "id": "a433c156-2184-4bfa-a722-e4630d524adf",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "753db765-9acc-42c4-9e19-70a82a217d51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68f64d6d-ef63-4401-a83c-d78fa3ee729e",
        "cursor": {
          "ref": "45b1b6fd-ca56-4b70-a091-24f81651ef77",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "cd1d93ec-10f6-4cbb-a7a3-481af2e742ca"
        },
        "item": {
          "id": "68f64d6d-ef63-4401-a83c-d78fa3ee729e",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "cef042b3-e99c-481b-8b2e-e3c7879ffcd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f77602c0-658e-48d0-ba0b-ab8552a90d2e",
        "cursor": {
          "ref": "f57b0264-944c-4493-8117-57f6d5e3764b",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "ca73d29a-8258-48e2-9f00-91b75f4255e9"
        },
        "item": {
          "id": "f77602c0-658e-48d0-ba0b-ab8552a90d2e",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "9cc5c803-0494-45a4-81e4-7d4b00596060",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f61a0ea-945b-496e-ab25-3c260b9555e0",
        "cursor": {
          "ref": "b423a4c7-8f66-4d1b-9cee-da2a0f7a799f",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "48291c1b-b565-46c1-9fc6-217e7bc400aa"
        },
        "item": {
          "id": "4f61a0ea-945b-496e-ab25-3c260b9555e0",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "870a51ef-cb0c-4b4a-bc20-1fa6a83f4002",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a1e86cc-97d8-4665-943c-3aead5c68f16",
        "cursor": {
          "ref": "6f73188f-0b09-460a-911f-50969b83649e",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "c6de578a-b065-4da4-b2bf-47509d77aad1"
        },
        "item": {
          "id": "5a1e86cc-97d8-4665-943c-3aead5c68f16",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "0e171005-4db1-467a-8495-8a91c41f22f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2572b862-f233-462d-a05c-2b79dffb001f",
        "cursor": {
          "ref": "fe2551fc-e355-4f21-be17-40da30a313e6",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "ca0ef4a5-a000-442b-a8e0-6be2fa181bca"
        },
        "item": {
          "id": "2572b862-f233-462d-a05c-2b79dffb001f",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "dfaf036a-682c-4e9d-b453-fe012844347c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8ec1ee1-472a-40cc-8c9b-6916a61216f8",
        "cursor": {
          "ref": "b1abb65d-24b7-4599-9ffe-876216f57b03",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "22ec5901-c2b3-49ab-8f0c-70e01d4325ce"
        },
        "item": {
          "id": "b8ec1ee1-472a-40cc-8c9b-6916a61216f8",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "285cc769-a42e-4e6c-abb7-6e9e64ff4ea1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19017f43-c420-4878-aa52-77e66c50ac20",
        "cursor": {
          "ref": "f2f802bb-27f1-4980-9533-caff91b74c1f",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "8f54750e-e83d-49a1-85bd-99283bd1caeb"
        },
        "item": {
          "id": "19017f43-c420-4878-aa52-77e66c50ac20",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "7dff7e68-628c-4b59-a161-45b5d511800c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fde4177d-28d2-4000-bf88-9131e2cddfd0",
        "cursor": {
          "ref": "f35d4136-4b8a-46d4-8715-79e67e8d03b1",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "4869c95e-6bcc-4ffc-b09a-ea460f8626a9"
        },
        "item": {
          "id": "fde4177d-28d2-4000-bf88-9131e2cddfd0",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "378a2ff3-d067-4510-a635-7cfdf3bb4a71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c549d395-d983-4348-9ba3-c75fdc29d7a1",
        "cursor": {
          "ref": "3c91b139-5d74-4418-8caa-1cc8df825601",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "a3ce283f-989d-4049-abbe-4d8c9d6d821b"
        },
        "item": {
          "id": "c549d395-d983-4348-9ba3-c75fdc29d7a1",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "f7a04efe-bfc3-4a85-aa9c-7abd1f5f7ee4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8319db22-d41d-4ed2-b44e-cae5561ad683",
        "cursor": {
          "ref": "051f11c1-831c-4fbd-8c88-ee76de91a2a0",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "b9bcbab9-b50e-462a-bd82-eff949ef2ac3"
        },
        "item": {
          "id": "8319db22-d41d-4ed2-b44e-cae5561ad683",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "7746a033-ebba-4a09-b4b6-f5d0590fa784",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfc59677-5f61-4106-8e56-93876cbced49",
        "cursor": {
          "ref": "355e0580-02b6-4ca5-a683-8e1e96e7e887",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "fe2edb66-dafb-41b1-a1e2-36bb7f205aef"
        },
        "item": {
          "id": "dfc59677-5f61-4106-8e56-93876cbced49",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "e940d252-ac70-4650-9a9d-e74889c1a915",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "816f60cb-46d0-4c77-8f27-67c790556fd5",
        "cursor": {
          "ref": "304252b0-fc06-49d9-b4dd-665750fe3957",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "c169f609-8b9b-40be-abe2-8e90edd57811"
        },
        "item": {
          "id": "816f60cb-46d0-4c77-8f27-67c790556fd5",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "83cb1980-9de9-4b05-8214-20f133c4039f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1363b22-7d2a-4ac2-bccd-141701bf2b60",
        "cursor": {
          "ref": "d0173245-f933-492e-9018-1a9cf9b2e3a9",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "a1b5fb50-f2b2-4708-8ccc-2112458776ea"
        },
        "item": {
          "id": "c1363b22-7d2a-4ac2-bccd-141701bf2b60",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "8b1a2bfe-f89a-47d9-a4e1-ca93eabb745c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5717e7fa-54eb-47ab-8348-b07a919d7a49",
        "cursor": {
          "ref": "168f7fb9-d1b9-4b6a-8335-96afe520a14b",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "c677547b-1e3d-44d4-ab0f-8d6ce12cc19d"
        },
        "item": {
          "id": "5717e7fa-54eb-47ab-8348-b07a919d7a49",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "595db842-e5fc-476b-8f19-e3e1b1be8968",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de3fc4ec-5135-42a8-8df1-d71911e643ca",
        "cursor": {
          "ref": "475d3ba7-0874-4fcb-9371-86b688644756",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "da3649c4-91b4-4726-b803-594fe2b3014f"
        },
        "item": {
          "id": "de3fc4ec-5135-42a8-8df1-d71911e643ca",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "b7514a95-83a8-4920-9e6d-b871d7be146a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ae9edd7-17d5-4dae-8aae-66e5a6748a9f",
        "cursor": {
          "ref": "54e3bde5-6371-4a5d-a460-8fba961fff60",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "f0d774f5-c8aa-4a89-ad7b-249fa7a98d0e"
        },
        "item": {
          "id": "2ae9edd7-17d5-4dae-8aae-66e5a6748a9f",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "cc8afa1f-5fa6-4383-8313-d2d6c4962838",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdb82710-5830-4d9b-a057-01292c8bf83b",
        "cursor": {
          "ref": "cd75ee32-8cac-4007-823e-73661eeb6d95",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "0e21e35b-4b82-487e-96e2-7d0c0b91b6ce"
        },
        "item": {
          "id": "bdb82710-5830-4d9b-a057-01292c8bf83b",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "afad70d6-fbcb-496c-8865-eec3a65d56ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bbdec0e-49c3-49c5-b2a3-dcf28113ae4a",
        "cursor": {
          "ref": "f73967fa-c9f8-4cc5-835f-59f3cf5c036e",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "36abd511-0bf9-489f-b870-782e62002ce0"
        },
        "item": {
          "id": "8bbdec0e-49c3-49c5-b2a3-dcf28113ae4a",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "c86b601c-27be-4ae7-8f5e-2927c121be95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf490f97-6b50-4a21-b2f3-0def2ad60c6c",
        "cursor": {
          "ref": "b2a993f9-a420-40e1-8c0b-cea08f17e273",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "32ad8c5b-b10a-4ef1-a302-0f51f9e26a28"
        },
        "item": {
          "id": "bf490f97-6b50-4a21-b2f3-0def2ad60c6c",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "7b18c7b2-9c1f-4844-86f2-b6e2ca311959",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21d95616-cb9d-4428-8ab5-b5516c7dbd7b",
        "cursor": {
          "ref": "73897431-05fb-4614-887b-9d2cdf89656c",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "db2f4a6a-7211-41d7-97e3-eba88a945376"
        },
        "item": {
          "id": "21d95616-cb9d-4428-8ab5-b5516c7dbd7b",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "f1301bbb-e4d9-45fd-9f67-06ccecea97e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "1e6c78cc-91ea-4c1a-96f3-35da2d14719f",
        "cursor": {
          "ref": "fab3f345-7c58-4f82-b6fe-dd758939da97",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "9bdf6bd4-e3b6-43d9-a213-854ae7c2fffe"
        },
        "item": {
          "id": "1e6c78cc-91ea-4c1a-96f3-35da2d14719f",
          "name": "credentials_verify"
        },
        "response": {
          "id": "5d6fe569-4a86-46cb-af28-5e7b00daa499",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "710407fc-04d2-4407-91e8-25a176236935",
        "cursor": {
          "ref": "b26afbe2-2489-4fe4-b988-6dbd19c2892d",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "1829d2c9-c5f3-4e48-b403-b4eda08c500c"
        },
        "item": {
          "id": "710407fc-04d2-4407-91e8-25a176236935",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "dff649cf-8741-4ab0-b588-2ffbd5c1d542",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "4f4bbe60-8bd3-4a25-982a-79ca788f1b1f",
        "cursor": {
          "ref": "2e7d829c-ad31-4e38-95f9-e13ec2bbe957",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "b9b24841-d3ef-4d96-9f23-203c3b8e9946"
        },
        "item": {
          "id": "4f4bbe60-8bd3-4a25-982a-79ca788f1b1f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "082fff8a-62ae-4e7e-9d09-b5affe5315de",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f4bbe60-8bd3-4a25-982a-79ca788f1b1f",
        "cursor": {
          "ref": "2e7d829c-ad31-4e38-95f9-e13ec2bbe957",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "b9b24841-d3ef-4d96-9f23-203c3b8e9946"
        },
        "item": {
          "id": "4f4bbe60-8bd3-4a25-982a-79ca788f1b1f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "082fff8a-62ae-4e7e-9d09-b5affe5315de",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88f2c5fb-9574-4802-911a-eb4f8dd8a980",
        "cursor": {
          "ref": "54266e63-2843-4b13-b11c-aae4c4cba4ac",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "973eea9c-af6f-4d84-bb2a-9b2fe5a7b334"
        },
        "item": {
          "id": "88f2c5fb-9574-4802-911a-eb4f8dd8a980",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "2d970faa-cea8-486c-9cd5-76802dcded1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b2481b7-330f-4fd9-a1e1-d94838bb15bf",
        "cursor": {
          "ref": "33ddc4a3-4cb5-49a6-becf-283fec2557c5",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "bf978531-816e-47e3-b60d-bb6a647780a4"
        },
        "item": {
          "id": "6b2481b7-330f-4fd9-a1e1-d94838bb15bf",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "3a15bd2b-1b24-403d-9a24-85bb0b8f9d18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}