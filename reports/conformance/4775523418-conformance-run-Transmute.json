{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "32ae45c4-4d2a-4351-bedc-f42d55b61ebf",
        "name": "Clear Cache",
        "item": [
          {
            "id": "1b87d975-2ba1-4287-9149-cb1d7db05110",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3cc3b452-307f-4c92-ab75-34e8b66efbe9",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b41fa226-fa77-4db7-84f4-04d91cfb38ae"
                }
              }
            ]
          },
          {
            "id": "be4732a8-f826-4c01-8817-67a0de28eb28",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "68bdfbcf-1fdd-4611-afc2-b1d8cd781739",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "1b596b4c-cd10-4aa4-a12e-6172d53924b8"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "83a0fffa-e665-4af6-ac39-1ee313e439c7",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "69bebb9b-b8e3-479f-be55-3327a56ad77d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c5626e2c-cb99-4cee-9d99-a88ee56dcfb9",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "60aa2320-8dc6-4b8e-90da-6c063ce0a415",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b46103c9-a2dd-4c1f-9ef2-6b81b9ddca69"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "013a5c8f-3f19-4d24-8da7-0c40ed4445f4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4eeb911a-7ff0-4c1d-a87a-34f73f2161d5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1b7159ba-c02d-48cd-a4f2-4cb5b8642adc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7b313dd8-8b12-4e7d-af91-18a149413942"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4171879f-80dd-47d7-a5ac-0f9d7bcc80ff",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "20c4ac77-4aed-4f00-a6ef-aec25910a873"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b00c8ea3-6a7d-4f57-aa6c-c860dabd23db",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d8c86bca-e4ac-41f7-abb9-173f604f66a9"
            }
          }
        ]
      },
      {
        "id": "f7b1425e-c95f-4975-ab20-ef15eef03740",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "b95c0e45-cc20-42da-a5ca-c56c56ebbde1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3ec10462-ddf4-477d-b9b0-9914fd1d827c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5f9984ca-9424-495b-8763-eb9418b48898",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0cfc554-fd26-4807-ac8b-c32cb6dc73e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b0e0bf74-ecf8-4609-a41f-fa578587be5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59892bea-e430-47a8-b038-8a8e4eb05ef1",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ea788b1-823e-48a4-999f-717ad04989f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6cb18009-9c26-4275-839d-524b58caead0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0ba67c4-2c57-4dfd-af05-62c5c6199395",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20680aa9-b391-4818-95ed-d6d33fc5aebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3203dd4f-e3ae-441f-ba74-6a269ee857d4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1ee3cd11-49a9-4ef6-9b5f-71fc2b1d035d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9ee94a37-a53e-4ad6-9bf2-829c8479bead",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1be8ff8b-4cdc-4374-ab27-63507ec63bfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "75dfe782-e328-401c-911a-6aabb51f57d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b535219e-cba5-464e-873e-4419b76e269d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff2a1e5c-ac31-4fd3-b9e1-436503e26be3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03b0d63e-44fd-4b20-bd95-9b874344bb54",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb300776-5cf8-4956-aeca-feb69004a3c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "23465cd1-e9b0-4c13-aab7-c4b2abbaeffe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f883bbf-4b63-474c-9a69-a22df8a0f94c",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "e7b96daf-a175-4642-9daa-2b3e76e7734f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "33da6226-d260-4019-a8d0-251189ab24fe",
            "name": "Positive Testing",
            "item": [
              {
                "id": "82261d57-630a-44f9-ab44-9107c44e50ae",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c368c6b4-d421-458f-9bdb-0b38b7f0e1c9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "d25059af-b5d9-49a9-9a59-380a8f4cf051"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "629e55cb-66e6-415d-8a50-eee84aaa32d5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "cfbabd29-96ff-4dfb-bd09-e7fefb0cdb63"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c8b63c83-96cc-4891-bf39-174ed1461195",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "780f1624-5c82-4cbb-8189-42ce8cd7b2ea"
            }
          }
        ]
      },
      {
        "id": "6923312b-7fcf-4485-adb9-abd245677bd5",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "da0b1524-6617-470e-856a-e57dc557fa10",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cc52e40b-7a07-408a-a21e-367ffac7fa16",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "67548559-f918-4347-9ca0-f4db4855f6a5",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9e073d6-f8de-41c6-96fa-f5e96b93a989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37bbb742-badd-41cd-a520-76314e047356"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f6af556-3d98-498b-8d0a-55a801f5defa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "44dafc67-2b8c-4d52-9b95-23b05c472877"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1ebfe8d-658c-40a9-a08d-2f0de13df369",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe1c8401-6838-466f-956d-64bc70e764e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36bb6b53-6e89-49e4-b6e1-c91a69b3f5f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "427e6591-edbf-4381-914d-7778484132db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8c84d268-5133-4404-9ec1-2d1b568c8de0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "630a3618-b929-479e-b0e8-9fbcab2cf517",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19b90e5d-cedb-4f5d-95a4-cb8e0d98fa92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12628bfe-c7ab-42c9-9fab-9972f72dd303"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3899034-cc71-4255-8b4a-f8d1fd7382bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "227068ac-349a-42b4-9c5e-6b13937600c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d4388b9-9a35-41fa-b970-bcfb5ed74cbb",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f421aba6-d579-4939-903d-641a2386ed27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81526ad2-8f0d-4d87-bee2-b2588e3a21ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "079176e2-6e61-454a-b6f3-a0f05a32296e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e00b4b48-6478-4e10-9a9b-344bdfaae01d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d49a062-7466-44a0-bc24-88f42d1b8f3e",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0a85ea6-eddb-4056-be34-2e039946fac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bc28729-501c-4b1b-b641-0a43778da0b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f118d77-2748-4131-a231-8c336f6856a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "473eeaa0-d8d5-413c-a8a3-fc797362d865"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc0ab59e-4549-437c-b033-02e37ef67790",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1c9d15b-fbd6-490c-8a56-d0e641d67d9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0e27b33-2905-4823-bf74-8ea268826db4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f271ca46-f7eb-4cd8-bd1f-fed46d1e6eb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cd9b45a6-3c92-4741-b307-ec1fa038fac8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "066656af-6791-4343-b6a9-c23bc3bb9a8d",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40186c8b-7605-4f75-9811-6b93966fffbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df4d4eb9-427c-4a09-9fb1-2f9b2b7b4135"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a02b477-70c7-4a06-abd0-92538a7f3357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c0293fe7-bd86-4dce-a091-235efa6527a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c03a6249-8f35-42b0-91b7-d3737088a20a",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "767c75fb-e150-48ea-8fc5-7c4c78c415a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9676163-308e-4708-af21-08988188c671"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc8a1cb6-e81b-4c07-a366-4213c263a8b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b023164e-8122-42c7-8f9f-99580dc6eb53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33b781a6-3c9c-4c6e-a48f-0504c5887ecf",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e303a39-1d28-45ce-8c4b-ef281180ae95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "902ae684-a57c-459e-b3d6-d3fbd972f868"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9b22800-46c9-4f02-a086-88d8a10d89ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "644be199-7c36-46e1-b38d-0662b72adf40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "390324b0-2908-44f6-a168-ea9f670c06c1",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8430e81e-fec7-4231-ad08-6cab711c10a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73da8abd-efed-4b45-9501-12ad01b6cde3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82abaeb6-8584-4930-8101-d9e6952d244b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ee1ad372-c9a6-4b69-a1fe-8823c879ff67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08713745-cdd0-4a0a-b46d-62b608eb698e",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d5216a5-8007-442e-be33-7b07c81537fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff0e77a2-c720-4251-a090-ca759487f798"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33ee722f-5759-47ac-a758-4159c3f64dd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4b2cd812-5dbc-408f-8c24-e2d5d77200bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b38bd0c7-c9b4-4bee-a0a9-e1632fa27ded",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22544fdb-a3ba-4ff3-85f5-eaacd6038b09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bda945fe-863a-45f8-af8f-ace43c06a708"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a694fa9c-b885-48f1-a528-62761009a5a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cb950499-7355-4dba-be2a-a714bf881a96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "665660e5-7204-4911-871a-865ec94d18c3",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c61e0ef0-2112-43cd-932c-94ae5c00643f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "560e2b75-96eb-4bc6-be5b-582270c6b601"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dcba787-e9a4-47bd-aef5-0aa7716515eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c28ab4df-06c6-4c93-a664-1e57145f1e27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff0b4204-2b79-44fa-8b28-5141b082ef9e",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcef6ff2-52c6-418a-b9f9-cec6ea9c890a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4078f0f2-11b6-42cb-9163-7214214e726b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23b090a8-1a35-46b3-9f62-cd89443567ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "99d1f0c0-148c-47fb-af5c-9d1ba35cfd03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbe38c92-4dce-4f99-83b3-d07b3e2d4fe6",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bf5307b-daa5-4273-8c8f-2f8c3d43572d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6a43c15-cb9d-4636-8d65-9c5c74849309"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5289f07-5242-434c-a685-7ec9e8026681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8d39592a-eb88-454c-b187-3620369fdd6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92524aa3-e68f-49aa-8f82-e624bb381e13",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2024cc44-badc-43cb-9255-c319240ce747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d2e3633-1b03-48c6-924e-91e95b298c6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16c0caa8-4c56-4e3e-8ab9-f8bb9656c9f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "21429c59-b287-4e9b-a01b-07b3133a7741"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8847c014-8da9-41e9-9f3b-b228286b70bc",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e004a2c-3002-4687-b23b-b8f0025b0ca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0a7d02c-b842-48d6-9d45-6b49ff929150"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14ee9acd-61cf-4e48-94e2-be2fe6012827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fc030a82-0847-4e2f-9ae7-bbed81e4fa21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0adafd04-ab9b-4ed2-9d20-5e2f883e3cb0",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71631ec9-2b8b-4d4c-b119-bf8f3d9fdeca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "169023a3-dd02-45f5-a5b6-dd26bce414b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cd87778-2e75-4952-be74-ff75939904a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "657d6bb7-a10c-40bf-98ed-55ad39a0f050"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a89a71bc-df41-4e4f-aa88-8c6059a9e3e7",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43527d2f-bd4a-4808-8271-ce826ed39fdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "405992f5-7600-4f78-a026-4c6d9fb5ed5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f4d04f5-bedb-48e0-96ce-8ca67edc75bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ad2c18d-c415-41ce-b1bf-d6ed70a89f0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1926f001-07ec-4937-bc83-a8b595e134a4",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c2b8b19-6c9b-47e4-a461-4d66190d6652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d23adb90-a0f2-4c10-8e0f-c8b777331aa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1422927c-f428-4f97-9e3d-b15f78cab42c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e77ea72-e6c9-4630-9797-23e1375cdcbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e515b927-924b-49d1-a96b-e368ada5a6f8",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b53bfa00-5f29-41b5-8560-01215cc92e2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72ea3de0-7e7d-4b8b-8445-be15ee69ac03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cb42dfd-3b95-4fe0-87ce-4bfe40bc9d74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb8bd79a-1bc1-4083-86b1-981245989605"
                        }
                      }
                    ]
                  },
                  {
                    "id": "056b0ac0-2de4-4507-93ff-ee5bff327d67",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01c11c87-04b2-4aab-bf68-81705c4bbdc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf371ba4-a7a8-4327-954f-a4cc9e6a9391"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "621bb6a6-48ad-462b-a1eb-0a0258f9a414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e6d7508e-972c-4688-b83e-c7e5870ab55d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e213a2f-4a4f-49bd-9aa7-1a1a9052571f",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8b03095-abe3-4683-9b6f-4f1316ecc031",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8404b08-7187-4d0a-8b97-0cce6a7fee0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c74701a-2efd-4634-96db-5b902a2372f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b3594b93-cc25-4d13-a18f-45afcd4dc071"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d16c2102-d2ea-4c0f-85eb-68e39e3d5148",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcf3b58e-39ee-4494-8b7d-e722ec8e472e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b297fa57-40f4-4cf5-befc-55683b371dce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21600868-bea0-4dc7-a54a-9588f490c76e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "df45f9fa-8af6-4288-b1d6-cc0bbc734b70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44454fb0-7041-4ff0-b95b-ff0bbdc2db24",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "148c3c29-d794-4e8e-980d-3f99e8be02aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebb790d4-6dc4-4c78-b388-2f78d05cfc1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e302fe2a-f1d7-473f-ba46-1f18e01bf7dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc339260-f12a-469e-b602-2565bde00917"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0469e559-4813-4bc5-9f6c-3e5886dfe9e7",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70b4f2ec-892d-46fe-b80a-b88749b56964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f9d846a-921c-40b7-9ebd-8c9579ed0615"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b00d42a3-31a0-4ad9-a0d2-487ee09863d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ea46095-bf09-49ec-a109-bae7d12cbc06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "817efb1d-6196-4df6-8b74-779a733ddb69",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fce402c8-5f65-4ae8-ad8b-202334479f94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b093b85-b1e2-449a-bfd8-9740243c35a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9a5560e-19fe-4b7c-8996-6f22c5675cc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "44ca34b8-cf8c-413b-8acb-3ec19e3648c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9890935d-4d6d-48d6-9f63-1efea16f3dfc",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e630b93-4438-46e0-b8da-8f0c74ca4252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b82152b-5c72-4c3f-af94-a5074bcd388d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47f6ed1a-081f-475a-88fb-a489586bd1b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ea227cf-a6a0-4125-916c-34dc0274c3f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe2d9976-eb10-43a9-81da-abca462871f9",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b217cb36-a958-468f-bf3b-0325c77d5681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa905879-0cab-4b56-970c-f91c7db3453a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4e1eb6e-a95f-428d-a004-279f52dc9e78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e90b429-0a2c-4e47-8977-ca467405f88c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05b09be5-653b-4cdb-96f4-79d45905391b",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32554abc-ae0d-4392-8d95-c8c0799c994b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11bbfb11-e2bc-411b-8339-b001cea66e42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94340ae0-9cb0-4304-b59a-d6b0ccf39051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "c630c431-ec11-4bf0-9c16-5abeeecccabf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b938df68-909a-40c8-b78e-06dc0e52d4e1",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b7a0719-2949-4ed8-83e7-b09c0602045a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b17fdc1-56e1-430d-825f-0d0a182c0a27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bbd25ad-7c3a-4202-831d-878ca2968757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "89d6b178-264a-4d4b-a805-a397c226a77e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae5ef897-20f5-41d2-bc68-6248dc293f29",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ab794ac-3dc9-4e46-b798-ec054c441843",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4783f376-9648-46af-bd71-9481bfc2f717"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3daaa6bc-a473-4fe8-b8d6-9a8ded117d9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1942d2fe-f5bc-4e0b-823f-7b8e47d7cfb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7c86ac2-86f3-4655-bcc1-1b633edf63a7",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32711d1d-62cd-4a33-b00d-d51ec4f254da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8cc0c26-2255-4fda-bbe4-0f3f64704e97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bca96407-f531-456f-8ce9-37b619c8371b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "589c5c50-84c3-4fcf-8c20-01e3745af008"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6107f6fd-7767-41cd-a384-1393a6275760",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b398ec66-5e4a-4443-9a5f-e487346d01c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b91168c6-655d-476d-8b3a-d73cac7808f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bed427d-3466-47d9-ad83-ec4888a066b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8b367d1-aeb2-4644-9f21-3b77ebd849c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99ad576b-c1cf-4bc5-a3c0-0d913344d6ff",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "797d55fb-a8d7-4b5c-8d5e-2337c9e36a18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "282148dc-3fa7-45cc-a2a0-f4db3bcc0a80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af623b7f-5c90-4904-8772-7905a955546f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "6218fc34-74a2-4ff4-a6f8-97377bed0162"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6433646-1d99-4424-bdff-b002ac2845e1",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a2a7f9c-d031-40b9-bb13-85bdf1eaa0d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f75b24b2-d407-40ba-947c-34d6798f6e9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffeb4069-247c-47f2-af68-dea63b65371c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d95e776e-73b5-43d7-b937-9de997aa708e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9da85b4e-2931-45fa-b59a-bead17468fa1",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ab62b1c-ae3a-415b-9b2f-59fecc997606",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00e81278-62f3-434c-97a3-78470eaa57d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a9f2ad2-a339-4b4b-a223-b0360eca8a55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4a9feeec-51af-425a-8a51-076de4a16fcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eeff672-6fd4-4e47-bae6-286076af4d9c",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6acd6757-e527-479a-b691-9648362c29aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3d7c381-bd49-4aeb-980e-028aaea04b87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed4e0731-eb17-4ae9-b204-f81cc7c497b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4dfd4264-49c6-4bdd-b105-836fef739765"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4791a23-40bb-4562-b01d-1fedebf85350",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b5729b0-a835-4e6f-8e3b-9f939abf3753",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6f719ad-e7b1-4999-8c58-c93d17e437e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b793139-275f-474d-9e45-66181be5d337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "176283bb-fb4d-4c5b-87d8-443da154d085"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0854e62-77a6-4e4b-9c14-71c1900d11dc",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "215efdc6-8f6e-413f-b9a7-10f0001507b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e323c70-2cd2-4aee-84fb-d5bbe3452f7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd1525a2-e856-46f7-a08e-1853c89eb8f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e21eba1-5a1a-4c7b-94f3-a14ab04aa489"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c0b6a8b-b38d-42bd-a860-0cd5f2c22e86",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c20be82-ff13-4046-85bb-0cc1f4878869",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74aa3cb4-5505-4c46-a9f5-3a81e8090137"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72b3cc75-316a-4efd-a0fb-ad6a58d44985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7dd22937-b557-4c49-85b8-964181b98430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f64e178-0624-4e1e-98ad-33f9ce62789b",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bd53087-f6cc-4fce-92ba-166e90714d0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a675250c-c73f-41d4-badc-fd518ef26f56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ae836d4-4141-41cf-b63c-8bbfc459cc11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "d73f73ce-bf13-436b-9fa0-06a8b1b4575f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5a520ad-227e-48ef-beea-425fc5341803",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cefa4a17-1feb-46d2-8dfc-9b8d3247759f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3585fbf-8599-44c2-a26d-d940d1ca8843"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35d8e6ee-32cb-4bf4-982d-d4e3d3d15336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "267f2bd2-005d-4ab3-8c99-40608a3bd0f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "399df57e-6de2-4b2f-b20d-c3c601514622",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a714283-133b-4563-a4ea-004e0995f321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8c428b2-a64b-41f0-a5d5-037dc73afbbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bf051ff-5405-49be-a3ca-0ec1727633dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "21ef00b9-16cf-45a9-8999-b412acd9723e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a23d4b22-0ec3-4326-b3f8-9b4c72da75c9",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8ca66c7-8f1e-4c07-acef-1e02c203981c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dc809d5-8c7f-4bf5-a3ff-6fad7c32fe27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6e3b8f8-5b79-4bbf-ab56-491d540050b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "084852fc-561f-4be0-afda-4043e2032464"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff3fe620-f762-46d6-b3d1-30a1a1ce4118",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50a36904-40d2-4d13-8b1f-1370028ca732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a1359b9-9caa-4bfa-8734-88e64be39634"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ebf22e2-6d4e-4055-a2d7-fefe18da6f9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "458dc56a-ed6c-4157-a333-121b4d581de7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a949435-e980-4069-a0a5-8895cb6b4434",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afc3db08-c397-40e2-8091-126588df4ded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2143705b-f25a-41ba-90b7-635080bf764e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d95e8ffb-2f1e-41f7-bff8-65a2d18bccf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd1ea84c-3811-45f5-bca0-aaf8db382eb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d826430-be12-4847-ba34-5baa4421b9d1",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8e0492d-a464-408d-bb88-3bfb172c4443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa99fdeb-f638-4ea6-a4e3-a3f3c1829517"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "959abff4-95ac-45b0-97d1-1d511a662e57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "03cd4387-a6b8-429f-87d8-ed122e7c37a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28f0b2ef-3214-4341-9aef-eff320d292a8",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d36a760-5b0e-4224-bfba-45df298407bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c0757b2-70f4-463a-9048-33a272ae6e82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd80a7e6-cd33-4aaa-8bfc-947ff2943de8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "db8d2696-d403-40b3-a154-5242c1bff6e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "286c2fee-1cd1-47f2-8bb3-1c66f0d68fb1",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7acc743b-318a-404b-91c3-71a80243ab34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75624e82-0ac8-4e2a-8db4-37790097d4a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c897de8a-19c1-41d1-ae07-3d7e8442df3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d487381c-67b3-41bd-9435-6abb255f6b08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f228ca4c-8b89-4429-b8aa-f37567eef9fd",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ddef320-d82d-4fbd-bed1-0d6f15303dc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4a588cd-efa2-4252-88fc-91d21d5fe059"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee4a3517-3ab1-494d-8f13-83ad5ce62386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "aaeccd6d-3b0c-4c61-b7ce-ae38e216b4f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d1429f3-db91-4172-a847-289d4059817f",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a9c0d25-20bc-4c3e-9b8f-47be886f107c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f60f254d-3d8e-4cde-934c-2d19979bcda5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac3b257f-addd-4a07-a58d-40bf6f140cf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "47c94549-e9df-49ae-a6c1-1883dd3b805e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "971c649c-73f5-4699-bc13-772303fb014b",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20da24c5-cb46-4311-8c19-fc29bd1979cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae7ab5a2-1766-4c6e-aa09-675b79080550"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82fbdc41-ca65-4071-b481-152baaa35194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c80d59e0-a6e4-433f-a20f-73fec9bbe793"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3174694e-c531-4fff-a4ad-ea0d768722cb",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "808aa939-681a-4fb6-8842-823414dea9dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e06dc63-6183-467d-96ee-788e7892a731"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2f01446-a42a-45fc-8921-9ab8fa444ce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3550d856-350e-47b4-af5c-d7124a2be1d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbe9e40e-35be-41a2-8a47-2942071dd5a7",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c01db30-70c7-4c2c-867b-5d4226f41010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd0ef894-543f-41b4-86c2-f809d4af7da8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db2b464b-a0c7-47d4-9553-effac275c8d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "634d776d-eb73-44d3-8d5b-a5e72ecd4afa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acc55754-d871-4584-816a-8b35503e64c0",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddc42b9b-98e1-4c58-b1d3-eb6b3a2052c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67be43f4-4e0e-4ef2-980b-8864c77c80d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec3b829d-5716-43e1-93d8-e26cebb47595",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "a27524b4-4707-4534-a1a5-9fb4967052ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cd0852d-4c4f-4ecf-8f82-a5380ff5cfb8",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e986f77-a8e9-4528-8f1c-66b916926728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbfd88ba-02fd-48c2-8f46-f503040d8330"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a012437-4c48-432c-a3ca-7ff01af5f263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3df852a4-2eb6-40c0-8439-40e6c77681f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36ec8f23-893f-454f-bfb1-8b8c7ca9e076",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9dc2672-44ee-4a47-87c5-e2cb3d155cad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b265a8e-574e-4e33-bcee-8e312167a1ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2082d734-33ed-4cf8-8439-b01037d9520a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8f916110-fcc0-4c71-8c53-002bff9ef3ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcb07c21-c284-4a4c-879a-497570780da2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b3b2ada-7c66-4d1a-b30e-f8833ba867b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96e09eb4-0b35-4a7f-b394-949224a70f16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73f6055b-365a-4d93-84e7-2526ce595d34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "905a9f53-6a4b-4c0c-9732-d33fd94479e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fbd7975-b1f2-4a20-a5c8-92a63e414a30",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89dee225-9cf3-4810-96c0-ee681c3e9676",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25e0b089-5331-4afb-bca0-c40167de51f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e916298b-87b0-4954-b8c2-6da3a77454ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "aa7e9c3a-2979-44bd-811d-f55e1e19f959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2baa50a9-8fdc-42b1-bc6a-12e9b81322dd",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2a179ae-9e4f-48b1-9c6c-1ee543b29683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "245fd4d0-cd90-4245-b185-a562ea678920"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18d01e29-c6d2-4932-9e38-a50bc4a57748",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ba73c062-b222-42ee-8c45-db8bc78ea8ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a126b7b7-47ea-43d5-b37e-a1fe37780266",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad586afc-e85b-4de0-9d5c-c62d3c3921f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39841411-d42b-4c87-8c9b-ce54d113dd42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20056d78-82d2-4cad-9dcb-69847d632cd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3248fa0-5fd4-433f-8f2b-e0c0602168c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "354cc9b4-852d-4e46-991b-509cbaaa2c71",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef67b20f-9442-4a2f-bf02-996a399bc1d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d1e1037-e502-400f-802d-17764a5208e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2259651f-f0a5-4e60-bee2-2ac25ecb0231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1789f2d-909c-44cc-a538-fff1ebc40fb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9a0ed93-6b4c-46d1-8e83-5f6303341058",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a687b3e0-6a29-4e51-b851-e0485ea32814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be0216a4-dc80-41b9-bfdc-915eaeaadbfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1523b825-1526-4274-8ef5-5002f53624a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "45fac3d4-9e67-4234-8a16-516352ae6636"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69f7690e-a73f-42a8-96a5-7542c3eba851",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0262ea09-33f6-4d0e-882e-6e946ceb6578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4eb31846-cd87-4fc8-ad53-a1ace7ed72dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb669303-c7ce-43aa-b504-55c5eb9ec8b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "819315ba-9404-44eb-9913-0c52b0ea8750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7172acd2-5b36-4ee6-926a-c92dd666380e",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba3e2998-305d-4db1-a5d5-b5dc4648ea6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dd25fd0-6145-4496-837e-5ba6baa18580"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f05ca312-88e6-4197-9dd9-b95331771f41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "56da16e4-090a-4891-bd28-1f29611f0af7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e681931-2c3c-45bf-9571-c15ebd43b9c0",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27f02a18-9109-431e-bdf9-9ccf57e308c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a959b7c7-88f5-4df0-a05d-94afbe9c1aa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b9d87a7-45bb-4dba-9c12-9169cbc5c362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d9abc4e0-238a-4a37-b819-18a47ba7d6e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ae627d0-8607-4816-8395-e2f70f8bf135",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39fc9af3-59b1-4078-aefc-fe42c6c76eb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbf0e9a8-7a09-43cc-9b55-c305f4ab42dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85abb9be-d636-4704-b688-6db31e58aba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "5532bff4-1f55-4f64-9787-318b81289649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e19ffad0-ef7d-4564-b811-1a324b92d320",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb909efe-b6cf-4b4c-8ded-019cf7c3cc63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86d5dffd-ec00-4462-9558-6b691ecfb6a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96f6be61-654a-4a2d-b121-95043aa05d5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "307f8581-a311-4a24-8ca4-11d57ceac015"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec19b886-4a5a-4672-860b-d110a9436fbf",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af3822ec-dac9-4682-83c8-d900549fb667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7990ea6-5ee8-4c4b-83f2-5d436a42895c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0a7d3ba-154a-48f7-bbf7-d0c29f108a6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "524866d1-8baf-4100-b119-c1ec57f89002"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10286715-29a3-46c2-8eeb-31d965d4645a",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "390b0455-db0c-4d19-8a98-f51f19d7060e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb39e11d-136e-4424-8212-5d0147e29301"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a82cba01-e589-46db-a48a-eb7c75a2979b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e17c060b-8528-4a15-b05a-bdb24dd3d674"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0304f825-8983-4c4f-8514-b427f9303091",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc6721a5-8dcf-4115-a77e-3807481a6d89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ba27cad-3ebd-4425-9b9b-c44f000f0151"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f53341f-f973-4213-a3bb-e3e30bb0c112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "edc6fe19-7c16-427b-b120-bf0c7e044fdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ee65cfb-a8ce-4378-806d-617c39a9206d",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d98898e9-8b20-42d9-b22d-4b851c55e933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9de778ec-9983-48a6-b74d-49ebc21e3f43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be3c028b-dc86-4276-8581-6b74b605dc02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "eb56649a-71b4-46a3-b1e7-8a0527832f71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a77d97e-28bf-47cd-8849-c7d425b918f9",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "deeeaf50-c36b-4b25-a2a7-3317f101efb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16cd9bab-622e-4a4a-bd93-c3adb9be497d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00baf50a-6da3-424a-b2bd-2de0ef12cfe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0ec8d0de-de9d-46d8-ba7b-965c8756feab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e7d5231-167c-4191-9711-97b23a321b7b",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d391eea-4423-42eb-b7a7-2556fde651af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ccbdf83-583f-4db3-ba17-4bcb4d548f77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eef67c31-f832-4c7f-a0b8-b6a2774a6011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a396bebd-51e6-4f93-894c-cbca298a1d7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5e00b54-5743-4cd0-9258-1a85ac62fbd1",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7676bd82-0406-4125-a0c0-b257282ad799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "420e502c-d783-4fb0-aead-77a04673ca0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61019e80-4034-4467-9674-fe45fe72e9d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3edd571-961c-43b8-b38b-265a86a6c0c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afeac703-015a-46e3-b3c1-e93a8d32c90a",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d3b2df4-6c03-4391-942c-fa9c4d6264ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e1574f3-1f98-4641-8e0b-4060c597fc74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1592f4d-ba69-49fd-b63c-e6a889a6e99a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c706eac-844c-49d3-9c3b-c9b6f8faeb8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79256cd0-8bd7-42ec-b204-424772d00ad2",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b1c096e-ed25-4fb0-a1c9-4225d4f523ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60a355e9-209f-42cc-92a1-874bfd9d477d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbd04ab0-0f55-4c0b-8d47-955ef09e0cac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "69aff73f-2265-470c-b10a-e22757880f62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10331fcb-0677-4c33-9d89-2b50248fe789",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32489448-09b1-41fa-a3ef-1080583558c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecba23b7-8a0f-40a0-a5f0-948f685ac230"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a01fb76-f97a-4bb5-8cb8-f46dd4832310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fde64afe-50a7-4eb3-a7d1-53f6ea7d2e18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9da95dab-ca5d-428e-9902-c2ec457a6c3a",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1862202-ae7e-4914-9df7-943aebc5f51c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85ce6e48-2124-410b-b769-b88ca88fe862"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a6d8b0f-d2e1-40fa-8cd7-a4f20afaba6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "43f2e06c-a04f-4cca-98a9-0d32ef804785"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12f257a8-be8d-4e09-b099-aebd3910ff9d",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb1a9472-d78e-4664-aa29-8e6fd4c1184b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fc5e4fe-fb41-4c35-b41c-2e5e3162911d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "554bfeb3-8dea-4b26-8e21-dbf0d8162947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e45bc27f-1cdc-4f54-a970-e1416167caf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9f8d1c0-cd20-493d-a514-48bc34d4dad0",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "600dcb6e-2390-49ac-9019-9a7d9ce90d47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5388a8b-e2dc-4a26-b6a5-4bc944d6e010"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7044ebcc-bb90-4303-82c9-3fa010879fa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "272174cd-ad17-4db3-b7cb-afc3d3631de4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f47c6da-a4b9-49a7-8118-f1e46d0452cd",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22a54224-6cf1-422e-b720-b46714bb498a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17a7418a-4c8f-4764-b831-5efc10803dc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38308285-9cdb-414e-a693-c9b1bb65bf50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "809d74a7-6b5b-4c83-8230-39dd7b6903f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87bfcb33-be06-44e9-90cb-413d03e0c36f",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76dec4a7-4e2b-4c54-8593-21eb96b90fdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddfa9e53-2e98-41b6-9094-db58559894d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8c40076-7756-4922-8a55-df27ca63a416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "06b71296-4d53-4ee8-8c30-1a2d301590af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "383632f0-709b-4630-bfa5-38e5d0e5b939",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e27016b5-fb6d-45f1-9c3e-75ea52ff07a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93e5e99c-2b1d-43eb-8a51-eaceaeb8a48b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81d4530d-ead0-4f94-bc3d-f71f307a177a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b4c6e0ba-6af0-4f30-8844-6e0da259b78d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dec02d42-e694-43bb-bc02-c8af50f96395",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c4faa6d-c447-4c68-8891-6db3e7ecef6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "255ada05-8ba1-4a9e-ac43-f328433cd653"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adca4cd2-48e6-49a1-912d-2f6f15644848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2b526eea-02ae-44b3-a1d2-ab059adc81bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd5a27b3-3e0f-4fe0-b693-b0c130a8a304",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f494532-e5b8-4807-a3d0-129fde23251f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b55ba34-ba15-4170-8f8d-7cb9841fad65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eba224a-08c9-4c75-8140-cdd389bd5d54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f2e8927f-912e-4ca0-98a5-2af40fc74acb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a277e99-fa51-411c-82c8-473aaee14c2f",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2993ee3-c0be-4939-821f-58393877bf45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55b126ce-8d03-483e-ba4d-7de1c1c11852"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bf2a8cc-62d1-4860-9323-ff38862f6ebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5ed8d5d4-accf-4025-84bc-0fa9e17bd920"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dd2bd70-66df-45fa-9b05-3da8993eb06c",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "784ed51c-8871-4c62-9b47-ef4c400ce07f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c1d1df7-1cc2-4666-a2be-ddc5f2697ce5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc31dde4-ddcf-4469-9573-c84cc23b2f1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7c90bf07-bfe6-4ce4-b3d2-ab47baec6bfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f321944-c304-4dad-b82e-8f3c1eddd2cd",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "153ac16f-1df5-4775-a9bd-8b105add0f46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98f1236d-fa1f-4223-baf4-faf19b385580"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e40374a-be8a-4dc9-959f-bed1803ab104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "cfceaeae-9878-422d-bb5f-ba6cb3509a69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4f63f72-3631-478e-9c6d-bdacc1b1a1e8",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0a805f6-5909-42b9-94d1-d4576ff1f917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9862b8ad-171f-4b8f-a552-3f973f4fddf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10d3622e-9d42-4be2-9d63-effe7fe80b98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f6a2f49e-9252-431f-b23b-c9e6aa68d887"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c769524c-80cb-4569-aad1-69474de7b7cc",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f62fe6cc-6ffe-4f7d-a752-f64f6daebd2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "7a086f43-35df-42f0-b2a7-96b656ec33c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "324046ab-5fd0-4458-bd91-0f25bd39b478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6a240488-83ee-4bf2-a6d2-5dd6e09dff7e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "80453f9e-f847-40f1-b770-99ccfcf8238c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "240f736a-9471-48f4-baaf-e9c431b3a1b9",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97b4bb91-b468-446d-bc15-7723b4c2a0d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9d729dcc-028b-44c1-843f-3941d06dc894"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eef568f0-bbc3-49ad-95f5-bf88333ac410",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b3017f9e-fa10-47d2-98d2-d7c604935d04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "576a945a-ec04-46d6-8f94-30f416964b72",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e222abbe-6acc-4dc8-8af6-c428995ab01b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7c16b37d-c649-4e77-a6f3-0593b9c2e865"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab01a3f6-7767-4918-9bfd-a6af565f8e6b",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f4b8b1e-2c21-4240-85e6-b0f6031507d0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ac317bc0-f0f0-46f8-9c02-2273504aa346",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "93802196-1383-49d7-b6e8-547462214d91"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "82e51776-14b4-46b8-bc40-3124cdc56c2f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5d843793-e2df-4bcb-9cc2-b89e25cd4baf"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9a465b25-42af-41d9-9f06-ffa309ecbaa3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e591fcd7-3776-4a26-996e-823223ce845c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "64d42c2e-113a-42a3-8c43-5f7f18cc5aec",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f7400e11-ffaa-439e-bb7d-0d8b6dc54199"
                }
              }
            ]
          },
          {
            "id": "dbfc5a01-1ad3-4925-931c-8d1a1ef5587f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2900cae2-7725-4ccc-9bcb-8b2d6801703f",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f315bc60-f9e3-4842-a459-1bea273d5fab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c8142762-c879-47a3-a279-0cbc0181e005"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "be02fd82-e3a6-4c67-b5b9-8a0f70886d4e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "40c7d792-3a39-47e4-8578-f9ffd05356fb"
                    }
                  }
                ]
              },
              {
                "id": "48d010e2-28c2-417b-bcc4-54b365417066",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f1d4ce33-6a82-4584-819e-e88cfaa85322",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "497f5fec-54cc-4b4d-b5ad-7c99294de0d8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7454e387-1f62-44d1-92f1-80828799c897",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f4fa0c11-6048-45e2-893b-edc77f12401d"
                    }
                  }
                ]
              },
              {
                "id": "2fddb28a-7c35-4168-b7b9-c8fe74441040",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1a616e3c-a179-4d6e-a387-4290a8db248f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2de505d7-5e92-4170-890a-fbe7b9dc4ed1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c7da6914-cf8b-4a0a-af36-aa4f8b90e693",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0fa72f25-a0f7-4786-9f94-dbd64020fcbf"
                    }
                  }
                ]
              },
              {
                "id": "80ff5e8b-4e1d-416f-822e-697607a3ceb6",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1a7ff10d-f6a1-4957-ac9a-1265ee5044a6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cea9687a-5014-4e20-9f45-e2f8b9d7db39"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f0e29138-d58a-41e0-ae77-be8b49643534",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "b782667e-2731-4e59-9261-c28657e9d178"
                    }
                  }
                ]
              },
              {
                "id": "291e3e13-5b69-4000-83e5-4f1637e2ac6b",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "32979907-0825-4ea1-b205-3dd07f36ecaf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1e9e52c4-bb01-4bbd-b1aa-bf801c2fd4a9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "abc9eedc-a2e5-410f-a447-c06568016543",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "30e2d6e7-822b-4514-bc82-7625d27b14fe"
                    }
                  }
                ]
              },
              {
                "id": "5e32f490-0df8-488b-8e07-3a64a43c83d8",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "02a5457d-71c9-4031-a30b-2a14bba48cdb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "076316bf-ccb7-4576-8db9-57f8c9554274"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b39f860a-bbdc-4471-972a-a6227e3761b8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6dd58d70-aa83-46de-842d-4ac9c597bcdc"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "34fe88ff-3722-469c-978b-77d7803af756",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6e3b97d7-f13a-49ae-be3c-c8cffef6661a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "118db929-5c78-459b-b881-658794df5447",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "569cd745-3c66-4390-aea8-dac9970a2d41"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "85afd837-01a7-4b1e-bdaa-995a62ce1ca3",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "dd01f2a5-5fd8-4f72-8f5c-c1303d988780"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "09f882de-27ea-4fb8-8620-a3daa8471a3a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "39bbdcd6-b572-4241-9894-a11edbc02cc7"
            }
          }
        ]
      },
      {
        "id": "232bd25e-6fff-4a63-bdac-aba13cc6f191",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "0c41a3c4-8d05-454f-8ffc-96867feaab92",
            "name": "Negative Testing",
            "item": [
              {
                "id": "525bbf9c-53e9-46f4-9b93-f9aea59cd1b9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d522f73d-5717-41bf-a527-202eb654c356",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e8b0208-623e-4f6d-b52d-f8fa09a81e0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e681ac4d-81bd-44dc-99f3-6556520959e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18bdaaab-f8ac-454b-bb8f-83d75f635073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a4aa98a-7b7b-4252-b2f6-57890340820b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "173c37ca-05a7-407f-a8bf-5d27fced4f73",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e80c0da6-e605-48c3-b6d7-e0e84e8f57df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd30770b-6bc7-43cc-af10-16b82fad3ac8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8c2be71-b94e-40c0-9484-b7ec75731525",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8d6036c-b4cc-4abd-a21e-51200de0dca3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80995b01-9f5e-4649-a18a-e9c87edf02d1",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b25c9f36-4ee9-42da-97c3-b31d3ee98539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc5f6108-67b4-44b5-bae1-77fc188cc618"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9e52778-5ebd-48ec-b994-36bbf66849b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "242e5aba-e983-4dfa-b41e-98a07ef2c5af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63923dbd-7023-4525-b92e-5935f69aa00f",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f5a08ce-c5ee-4357-a623-a686f9ef4798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d35858f-9d5a-4d19-bf26-1b6c35c7fd0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95b10351-4b04-4d50-b57d-97024f447a1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e11d270-0033-4a4e-b8ac-64d6c70104af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a248e587-3608-4104-ac68-5b40fc07f4d2",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "775de992-d9a5-47e8-bb9d-a12eb392b169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ce4fcfc-d65e-4bf1-a04f-b01c8a4a15fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48e4dbc7-44de-420e-843b-429f0170ac9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "add2d809-98a2-4b70-b75d-678370ad2cf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bfbe0a7-232b-4c14-bd47-94e8c5b5194a",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d65425b4-a682-43e7-8d27-8e4b8deb5555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b560bbab-b1b9-4a57-a657-af3ead55a581"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db831507-79f9-4a8f-8c2a-64938237c627",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e156c336-1416-4272-9efa-19be21766354"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6015b66-93c1-4a15-a40f-01c10cc5490c",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b876a69-9958-4243-8d67-ea9b10786a39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "657ca6ba-107a-4009-9fcd-13d5b8c49167"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca3fcd56-47db-45d3-8548-2208b7e5b108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce70313c-34f8-4193-ac1f-1119b4db112b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1acd5484-7524-454a-bef1-391e44138842",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3303a07-85e0-45e7-8f9c-8ccfefc9e790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9336c6c5-edb4-4d54-af0d-d128c311915c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac9ad9e2-40f9-4fbf-af6e-2796b0e35d22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "301411fa-178e-4c28-b384-8eb0173e0148"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1377944-3c3f-4e2e-8f7f-3e0e8f8a2b49",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e6aa30f-e1c0-4b3c-b616-0cf1e90648af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd29557f-7a2c-4766-bc2a-f467296b569c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bf9b67c-f52e-4087-a593-0fe579bb877a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fef8e9d2-1125-4098-a91a-2c5b2813abaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13b452da-953c-48ea-91e9-cb25a93f3fac",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a12fd61-53e3-4171-8409-6d55741e824c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85a2ac88-8083-4d47-b811-21165cacfb0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b98085e8-d520-4656-8c7f-b18e338cbe05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "752ce38e-4e44-40f0-a5b1-5f066df10517"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22cb7792-4a9a-45f5-bbbf-54855a3d4cf1",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e43c1b6-4853-41ae-a79b-b050ec6681ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5df66b6e-3061-4304-87f7-06f1e97b0393"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a032e411-1cc4-44d5-a8be-28f6ff2230fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "766b7c95-52f7-481d-a5e2-e1b1fc8fca59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84fffe42-28d2-43aa-b5d9-150e338961eb",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a102554-2569-413b-89d6-febe019d22f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "936dabf2-3028-481d-94fb-cd15b8146f60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6b68228-7f6b-4c34-ad80-66a5cffe7dc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d830a571-43b8-4b0e-9024-9c4944d4b483"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9a41b87-bfb7-430b-b6db-a178a3643bb3",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aee27528-90f6-4bd7-9c05-f6780ee35794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3ba5f38-49dd-4db6-8fdc-09923c79ce94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61a9ef5d-3236-40b1-bef4-924339e4a6dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a43fa922-a9a9-4ef7-a5fc-6b168f47c956"
                        }
                      }
                    ]
                  },
                  {
                    "id": "835f5654-5030-44ec-9c48-175964a07cf7",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6700ba4f-9d3e-4d2c-8062-c758a1296e61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd83bfd7-fa8d-4b3b-afd9-dbd31df70581"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b21546a-cd46-4a17-b59d-c017bf7cc8f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "e497cd03-c8ad-4ead-aea0-4f1b4609db92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9b3f4ef-d496-4812-8b5b-3e72906679fc",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95ef2743-38ed-43a4-ba15-a1e2ab653806",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ee19b04-ad79-4ce1-bf4f-30eae97ed0e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c57a9731-9ed0-4555-a5b0-15c8426f50d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6eee495-e715-4574-abb0-adcb57a5d00f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa5bc55c-2cf0-470b-9752-0e815072af2c",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ea60ad3-deed-4690-a273-42e10c3a4f8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54a49911-d69a-4c56-9d3a-bf9ce91afcd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0834f391-930e-4980-83ba-f4137e0d877b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c91a1ce-1335-48f8-bf11-7e88998d519e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "675abc76-d715-459a-a698-371b04bb17ac",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c973b38-7b68-4bfd-949c-86e9ecef9201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7647a862-3b22-4ce3-9b63-ad200b26684e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2196c21f-ff5c-4c62-9faf-9ff97dc0a90e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "203fc633-b738-48a1-9888-9ddcf87be8b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e7e7431-969c-4f00-a7d4-f6c5690d1b2e",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d42b67a0-4dc9-4125-b61e-2303305b1665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff40efef-01c9-48a9-8ef6-32c2b855f264"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92e03f76-bb22-4c4b-88ac-e82c12c28f43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "851f5e20-6992-48c4-9dbe-fbd612833f05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1723359e-34f4-493c-9fbc-f750d5747f85",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c051cb52-9690-4b3f-b463-40439f8a6dc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80c2d031-43b9-4444-b51d-c6927e767b6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47633c39-c45c-4cd4-baf6-08c0e3494263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e62606ee-7b15-41f6-9d70-24585924ac79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e16af59e-928a-446a-a4a8-a52e5e07f867",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86008e27-db49-4d9d-9cd0-f8c2daa5968e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3aec48b-ca11-4756-8b58-16f52d9a29d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e53d4f5f-5c20-4f3e-9e86-490b2d778abb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef68c118-ee16-40ef-b280-87f095432c80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bc5399e-8510-4a9a-8b37-0de41e731400",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a5f8878-aff7-47e2-8037-115f65232bf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cd1f381-4e76-4578-9c51-e5090eec41a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af166d68-016b-4633-8f7a-8583e88f2035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3b5a1d2-4453-47e2-9384-30c2b5dfcca6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05c99523-892f-4195-b451-fa73b93dff29",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c5186d0-9596-4229-b6ed-a3a5f97e1268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6fe4086-89fd-4608-9c8a-a92dd887288b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd89997f-8ba3-46bd-a65f-bf54941f3a07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "567140e4-82ae-43b8-b2f6-b90523a0ad63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da5459b0-e085-4aff-8289-05cfc8a3124f",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ee1bfd1-8b2d-4647-b6e5-8f6b3efaef8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d8ceca4-dc89-4344-a548-d61bacb19fab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aac961bb-684a-4899-873c-02c9bb4e5308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2494afbc-d736-4a8c-9800-bcce1de03277"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d426670-4ec9-4439-a8c1-60e4a59672b7",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "194b52b6-cbc8-4465-9986-44b85f1c8877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b0535f8-6eeb-4087-b248-8a9b12223f3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4d8553b-4b53-47ab-8d42-e683724feccd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d6e764d-b8d9-4eac-a988-fc3e13fa5939"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df254fe8-1e9b-4a1f-9634-028da1eaf752",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c62890b-7387-4617-b0ca-ec65f10522d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec6b650b-8544-4358-9a71-4580f0d60b21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "979e3e9f-c4c0-4c6b-b239-009cd1f218ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4817ed2-83c5-4b52-8824-6ba4527ed249"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29445dbe-3c3e-437a-9a8a-dab24dc92884",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d764f934-bcf9-4284-beab-4a8cfe6c207a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ad35ca8-078a-4ec2-b9c2-87976a1c3076"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99ce8141-81ef-42bc-9934-a6b20227ae93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "70115e3c-b349-43c2-adac-62198e4a6714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f896142-8b8c-49cb-8c18-e504c68ac405",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e07352bd-8801-4259-a14e-0d2a229bd554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4c9e2df-b679-4f7a-9786-0688a81a48d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d35b0cce-5785-471f-9c9c-83712e752a4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d17a3af4-af1c-4876-abf9-531938733245"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdb80dae-1870-485f-8d4e-289aac2ac1ef",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a56f800-4827-47ef-b2b3-25f68073025e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "323285c1-d443-4d78-ab18-f5d73668fc44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a22a077f-afb4-43e7-894c-7c6f639682e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3db0e00b-89e4-4602-a313-26b35b504437"
                        }
                      }
                    ]
                  },
                  {
                    "id": "958366fd-104d-482d-a0e4-2061ada90623",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54eed1a7-3307-476f-a87e-b534fcc1a533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65d9437c-5acf-43e8-a3ad-bc49f04fb0fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cafc553-1198-40e4-91f8-bc2578283745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f04b3f36-73bc-4982-8598-5f75bff59ab0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baf787bd-c713-4a90-9209-0004dfa2205a",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8acad084-390c-4833-ac03-3b7ee2820c9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04a1b856-6ff8-49b0-9ffe-6a5e225aaaa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ed45435-53d3-442b-b090-028b287b82d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4dabf1f2-3c60-4625-88a6-7918caba3ab4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9f4e06b-1b03-44ca-b3fa-9f92b6ec5797",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdb06c7c-d790-46f2-8e6d-33ae4f4c9692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a3bc8d9-4d23-4b26-8724-785584ef6b8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "081ffd4b-22db-4c8b-97d0-0cdf4ce1317d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0079939b-fe90-4e24-a86e-372f95ef03f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f263e728-931f-4722-ad0f-cda3dc7b313e",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e6675ec-478e-4a81-a84e-a67845faa97e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0c2ce38-8e87-47c5-add1-7b63b93140ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47eb37f2-0b98-480e-9aac-569e735b4d8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7872e5ea-c5f8-4e79-95ff-d8462fb423ef"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "52f3686f-fd60-4119-b65f-ba8be43097ee",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b4eb546e-9676-4f92-bf89-f40b964bd80a",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba8dc738-0042-43c7-abce-38443f1a08e5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ca7bde9c-07d2-4de5-a21b-dfe32c544609"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87ede140-0568-4f87-a609-b785c347e4ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "49a77c10-5f57-44cb-8bf2-9a342dc5430f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e99996f-5186-4c66-8231-d5b0c7e0934e",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef92e33f-6253-497c-9a13-7ea5333a8a1e",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "15401469-bbc9-4238-bb92-b6bc7b4dc8ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36b60bca-80ec-4416-8285-5857e8e37952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3bbd9fb0-c701-4f8e-96ad-f1e5bef98be4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "83a6442a-2f31-41d8-b576-ce7b11743666",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "753cc218-c372-4ac7-ad0e-3bdfbdbc84ed"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2d54b466-8fa8-40ac-8db8-298c3fc547a8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "53e29f3f-181c-4c79-ba64-8d9dba1ebc81"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "01ea9496-c1c7-4524-9722-a1c2c75a26e6",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b19a243f-d992-47bc-a154-36018300bd26"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ad625e30-444d-4db8-aec6-f30f54da24b8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6531ea50-6c09-4994-b95f-4d5f5c1809bf"
            }
          }
        ]
      },
      {
        "id": "18f8296f-0e81-46bb-b509-fbbc0a084cbb",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "16d85c6a-0a47-4771-b86d-c7e78a43bdf2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "32b5d74c-b9c0-47bd-95a1-20c9ef5277b0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d98ec35c-b116-4d84-b60f-98c5e81918a5",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18110790-a74c-4507-8b0f-8dd14ccca4d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7f8702d-34c6-4d92-a8fd-e14538f281b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4857a8b9-4864-4c86-82c3-4d4f9148d892",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "572d780e-15a6-4dcb-9b4c-251a3f86fbbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec59624b-a0e2-44a9-ac50-d9f8102b5295"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f178c0ec-f248-47c4-92bf-5a8070f4aa2b",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32e39e9b-61e5-430a-b9dc-979a84542d52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7465bafa-39ad-472a-aa1f-3a78d308c730"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af67c330-2d3a-4a94-a40d-24889e6591ab",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "946b2990-04f5-464e-a739-62b401de5756",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70da93a2-acd4-46f0-aaaf-8cff45196811"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b90a6cef-89cb-44f8-981d-b67ec8b1df2c",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a3739a6-d0e0-49cd-8b7e-ef70b7d41253",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd4b79bb-1091-4909-a9de-f8783a706777"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aefe5a8b-ee1c-47d6-b0fc-61ca7246c40b",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2edb550a-c36d-4a46-a605-57409a1f00cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f5eda6f-a9b0-4137-bcb0-4aaf47f04b86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50e53534-40d6-4a59-8b8d-d59d964f3c51",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "274bf985-dddf-431f-b8ec-9c024ada5e81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f33bcf4-45a6-4696-8c39-9274b91309ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6887e5f9-a48f-4b99-9b60-8b674b0aa969",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b7c2ce1-7e81-445b-baf1-e5f988893e6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dbbd95f-9058-449c-ae9b-af92bb10d828",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3144356-ced2-4f4d-8912-85e267904e6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f06f0a59-19c6-4bdc-9ea3-8a241b9257ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d3331fa-97e6-4ade-8ee4-757bfcda7b79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "383ae174-43b4-4535-aa74-724bec5e36a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce00772c-caec-4256-a6b1-b362d549c328",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56ec000c-96ef-4419-bffc-19380316184b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0711e4b-6735-4b1b-8d64-877f2fad47c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88c298d8-c83c-4c51-944d-cd5fe6663e93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24ecee4e-8ad9-4751-b639-747d1c8988f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf40e10f-7b02-4c5d-bf2d-2f06e73fbb48",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11f60e67-e635-409d-adcd-2052f247119b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e82b9a68-c599-4388-8a72-1fd3b02e8023"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b24c8a73-026b-468e-85da-fa6605faa041",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b27b80d6-9f2a-43a3-be23-5226ba8fa901"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52202c6e-4e52-4339-98e0-04913c0c2b4b",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83722a0f-67b9-4aab-b486-fefd4a537526",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dc2a58d-781e-4b62-a89a-2eb7a1f1f27f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e638e643-b8de-4026-a4d4-31e5ec9f9933",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9b50a36-64ad-46f7-8e7b-5795aca79353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60fc634c-b373-4a86-86e9-e8a8b2faf2c0",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48ecfd0b-a79f-4687-a17b-a90329479480",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c201e41f-6d94-4d9d-8320-cbc325e82416"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b139e9ab-c4f8-4a7d-a8a5-ad9187a2919e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90fa904f-7864-4bdb-b2df-0c544d784506"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d67bd17-f5f0-4489-a026-ac7f82843e68",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e80e3d23-75cd-4304-bfdf-cc49b8726667",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fce88edd-cd3a-4807-8297-2bd90d393bcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6f6e75a-ceb4-4318-8fb7-414d3ede7886",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e242b94-16e0-46bb-bed8-7bcec098adb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e8f114d-8b96-4d3d-aeca-ad0eb6ae91f5",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dd143b3-3528-43ea-b6e9-6d7e038ff49b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7c9cf9e-d7ba-42cb-8ca1-3ea382d238a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ef6b697-5ede-4b18-98cd-f4ec6ef00ee5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2ac1f85-e56e-44b8-bd82-c7bb4b21b581"
                        }
                      }
                    ]
                  },
                  {
                    "id": "355389cc-a690-43d3-8c5a-66c79ac8a912",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5edf14ce-9ebe-4576-9f48-b1cc6f12c561",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3691e6f-7a59-4e63-9ada-89f3489eb531"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3795662-2a5e-4372-b6d6-08a9d9564b13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d872679a-22a3-40c0-89b2-15c0ace24850"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c903460-639e-4c5f-bca2-299327b1119e",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f85edc6-9bfc-41a4-b817-3abb459ae13a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac76ac6c-7773-4159-aea3-c03270b3cbd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f95caefa-6dad-4d87-bfde-7f4daf4142f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86e4d2fb-0c17-4e43-b037-ccc0ce4e2cd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c2aceaa-bbe6-4a43-af65-a92b0b99945b",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0202b18d-f0d6-455b-ae36-5e95d5f5b8f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e9f9b61-3bcf-4b98-a9e3-766107a1489e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b88656dc-d9c5-467d-914d-931fc82bacdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12527c24-9fe0-40c7-a9d6-57dbfb33d391"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fff6d1fe-c094-4736-821a-8770ef29623c",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7b9170a-fc78-4c1a-8265-9a3ba72d9faf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77b80c67-d646-420f-a77d-f1409d8e33a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ac48752-04b3-4a4e-9368-ffcb3e4dd23c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ace00e01-18fd-4112-8489-3bfd41ad837d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57e6cc64-a2ff-4494-a630-0accbb1191a0",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2e30684-2f79-4627-b1c8-0f32ee0fbf15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f52b28d0-aebe-47c6-80c9-8e6d89d716f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7772f20e-15ed-4b44-8b95-78bce2182c6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ed82c38-d858-4007-8907-30bd5482918e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf9df83f-518a-42d0-a795-f855f9df1ec8",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2232fda3-2337-4679-89a2-6c124bd09012",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60b65c47-4df4-4680-8236-00d120bddc6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe014a58-8c74-4bb3-9ff3-cde3d2c0a431",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b222e8d4-37c7-4355-89e1-2389d098e094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d757c3ce-7451-432c-99da-737b16b903b7",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acb6ee23-81f4-4f95-9938-ff1a712eae9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a11d0a0-4d17-47c3-a0ca-ba42718dec6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df20293c-ca5e-43b9-b70c-ff46a114ac93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "757b66cc-d837-45b9-8d47-ec44b3f11791"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3735593-f8ad-49cd-9165-31427d587d67",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd757488-0918-41bb-9ce1-89e13592856d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0aa6e384-55c4-4620-82c5-03739baf74f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b55c60ea-f4ec-4725-bce9-2c1792354ed7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8bc07a0-da9e-41c8-98cb-9d62f90041e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1179e2fc-68a4-4260-a14f-076fdab211b5",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afb1d0d1-531f-4b13-93d1-8e729d2e19d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "172701da-fd22-4707-9f45-f7aa98ee92b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d01a440b-505b-4941-b4b5-88e763322115",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5766c7d6-b62f-4e90-b65f-43589499e99e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d0f10fd-8759-4ee1-a034-4328a478d9f0",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14934f94-859d-4298-beb8-9ce03f2522ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0bf9e5ac-03bc-4302-a4e8-bf2aafa0bb30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f31e98a-16c2-44e1-a224-1ca4cd6c3845",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff67458d-f295-4c67-bd6a-f69023f5a630"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f1bba4d-460c-4d06-93f9-97e440319547",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a72126c-c518-446a-a0a4-ef18af75f59a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "147ea79d-bd9e-44fe-9f71-95893997c8b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "978beb92-5a5c-4b14-899c-d171bfd0bc13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0ddcf57-ad81-42db-9f70-9ab8cdf9469c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54e4fece-4f1d-483f-a5be-f596272763d0",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0575ca17-83ac-4acd-bd95-642f5eb1f558",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01f4d94f-7d38-4c77-84e1-c6aee9b2a524"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56e31f2b-50d6-48ec-99e0-cccb5504ceda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1550f8f-3ac1-41e5-be3b-f5f8064e6cac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbd43a84-f6c0-4ff3-83e0-91f55cc6feff",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fe07bdc-c21e-47f3-ad4c-2a596044673b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a056851f-5f44-442c-9ce2-47853feb29c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d855dfe3-44d1-4b83-a416-397a3c6acaf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53f6fb5b-1215-43c9-ab3a-a5f47a34d2e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da37606d-c5ef-4bd4-9f65-24d2784bc10d",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0fd218e-13e0-4c8f-9b1a-25b15d3e0838",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72361c27-5c75-4af5-a114-1bfebef589cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff2bc7ab-f7ad-43ff-a847-c3d896704ecb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cca12b6-0cb1-42b3-be1f-0aab05a96424"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4616d0ad-54d5-4a4c-a787-6b2ee8639ba8",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ae8d1da-20b5-4d6e-8814-afbb59b53607",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0b4ee64-94fc-4de5-82cc-36d34fc409a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06006ab7-625e-4c26-94aa-ff88d708c4e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf70e252-4347-480d-bc6e-9d33829ecd1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aafd02a-7e0e-4f65-8b81-9e8be0800dc5",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c2fdd15-d760-4ec5-969d-db30e6408cd8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cfca5a2d-fdd3-4999-8c22-b006ee86ca44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07e1d3e6-e8e6-4ad5-8932-fa0d62a2de11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75d1eee9-d527-46e4-a11f-629d9c2bc299"
                        }
                      }
                    ]
                  },
                  {
                    "id": "601b47c2-c945-49be-8db6-2f64d30255b6",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57eaf954-67c0-470a-b035-50e4fe35bf05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf3d3f7e-85a5-41c9-9030-65d73fdf4eba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ba9c333-6513-46fd-92c3-b24a99636d5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3910a3ab-048e-4293-82d2-ca7da6228d9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cccd96cf-d578-4544-a44b-cf7877c1c06e",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e858ac2c-df95-4661-a887-9eaa3b8539c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4bfaba7b-6db9-44ca-91d4-6ddb603fbf95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9c8461a-ab7d-4fe7-877f-13ccf7855746",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "557ed064-d456-409d-b7f4-26e8d699669a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bde9228b-c8ec-4779-b347-14021ded2049",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ae87a4f-1132-4be4-92a0-478d6307f0da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99c0cbdc-027f-46ca-8e8b-153652427f91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d4f4a82-ae9c-4c21-9247-1594c326c6eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17bb06f9-313e-499e-ab8c-40ea2dea2c0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca333299-8aca-45c5-8623-2f8d1c6117b6",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99c8d957-5a72-4d88-a336-6cdb05eb3c7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87728a71-4746-43b6-a685-2291a7655d30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29beb7a7-7cc6-4500-afc0-a9ace17781da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9d01c6e-57a7-4169-a07d-a8bccf5c9e9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a08f502a-26fb-44b7-89aa-312b3dc4d609",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3d32c62-5e0e-4669-9280-3c35d0b39fb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bac3f4a2-bd31-44d6-8e92-c7dfec5eedcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0732901e-e8c2-4771-bb71-d5e989117e36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac2f347d-8d40-4f4b-8ca3-9d1f47fbbe9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cd4c723-574e-4b71-9977-e41d2815a797",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4486b065-4cd5-4520-b37e-6f8721497e90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "989563e3-d233-41ea-a7fc-ec0c07f9e806"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35401bf9-c714-4c40-bc15-7b684fa342dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57d532a0-d1ca-48ca-9aec-406ff2dc2b4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51ef07a7-fd93-44ef-8f78-88dd194c2539",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23a8b3e4-3c2f-4a99-8d0c-28a1d19a392c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07da6a93-f8eb-4b98-8c75-9cb7e311f74e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33b80678-deec-4597-87e4-d13d1ac9f8ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a2909df-171c-4532-b78f-eeadc9e9d422"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7534d53-07da-4af0-b994-42686494b2c7",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97a6a1a4-c01e-4bc8-a4c0-f6165ec170c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e75d4c2-579f-47c7-80ee-3698254909be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7013c857-4a72-4dc9-9cd6-8f45e900a5ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5de9d31d-d8e4-4df3-9894-bc0c043dd73c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13de97f0-b58f-462e-8f50-cc34a67b114d",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4afce368-2810-46f8-895b-6485b13f8835",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96af8b68-eaab-4f4e-9b2e-7e58c603a89d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcacbac3-9e49-4211-8575-a94ad93580c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1798839-77d9-49b6-849e-b37253e052b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31809806-1a9f-40b0-b325-54b362275216",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "316366cf-a0b0-4e8e-80cd-11d20caa4343",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf8e372e-d233-4b6b-9999-12c96d10fbe8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c2f2595-57be-4ec9-af24-648da509cddf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ffa58fc-fbe7-4a28-95f3-141108497fb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4747c098-8823-45e6-8811-9639f491ff6d",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1bdc0d4-96e7-4b2a-ba0f-1b664306d166",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85f0caab-2eb7-4e37-b9b8-baf31bdd6f7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "452bb821-6753-45d4-ade6-e09085f15901",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e82a15d-02ae-442a-901e-e9a6b2357f50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39778245-d613-4b21-9402-4d15dc412df9",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d669d89-5179-4fd3-a450-b1366ad2e8dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56f3206b-ec0b-4ae7-bb85-3990fae26547"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "117fac04-5da3-426a-a3b3-4aa1eeea766f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3216c0f5-0bb3-4f19-893a-b53f719e1d9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f979f97-73e2-40e8-a807-ce2dcf62e418",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abd2392f-ef77-49b9-bb2d-f59a24c616d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8346914-4c2d-4617-aeb9-37841507d13f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4b4f52e-55d4-4fa4-b01c-c8c94da38c40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7938411-70e4-4270-9d2b-833a25002b73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "348368d3-4771-440f-bb6d-48ec1384d658",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2303cd13-0de0-40ac-9be2-b95799dbd726",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a62805cc-17f7-41f0-8d10-42a5994ca1e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5baca8ed-99f2-4c45-916d-ea54afb9469c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f9c1dd7-2931-4712-b286-614686ceabf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f8ae872-20a2-4707-a257-099246d52c2c",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61db811d-6e60-49b0-9b62-e32511796ed8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a82f79f5-5513-449e-836d-d68fdba256ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb3d3683-18ae-4979-8d23-2368950f39cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea0c317f-88cf-4588-9a6c-be6f9b218ed4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3484310-9c93-4d27-bead-3bcd7ef5606c",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59f7f378-0597-407d-8add-3e3cac32b14a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fa23342-1291-4dce-a601-0b9d618505bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd5c2d38-bb93-44a5-800f-76119c6d5f20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "732a783c-78a2-4868-9350-7dd0bf2fed2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac815d63-9dca-4a6d-90cc-70e7d6819554",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d01634a-4b30-4ef9-b8ca-a36ed8339646",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c82db906-7933-47e0-bcbc-460e1cf3188c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf18a88f-936b-4e1f-8139-7d6f737dd2d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb4b3de1-65f7-4b9c-9071-9ca2a6a79ee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4052e97-c0f2-484c-9084-0c9f507d3e35",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2825db3f-af2a-423e-9536-396f273a7bdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab2266fd-79b6-44c4-9883-908c915529e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfcd0157-03c5-428f-bc21-3aeda1addb1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e59daa91-d5ba-4596-90a6-b15af4be46f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e39eb62-403c-4879-aee4-4e1fd00d2539",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4876b8c9-44b1-4403-842d-deb63f68b19e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "779d2c7d-1145-4486-90e6-47cf6ca5766f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f1719c8-d03f-46f2-b0ca-897f84f9aaa6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a58d6e1-298e-4ecd-b962-54495352a0b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02dcd927-cb2b-45f6-88f7-a293b8328e20",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61ae5d87-476a-42d6-a6e1-9ae310b52c92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2eb50894-e48f-4c8d-b96a-2d990f0a4cb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d62e67a-b5c7-479e-9a47-0364391877b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd1d3e25-f69a-45d3-9b76-025d1d93922d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b7cf2b3-0a51-40fc-af45-d33452995338",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "147a734f-af2a-4c49-bcf0-42b9a5741d06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a81e69a4-7478-4bf8-b309-dcd5f54c0df2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6250230d-2262-4d73-a67d-6a8395d8d20e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4de07585-7b92-4426-bcb3-53871d18fe40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43095462-6f0d-4e2c-b8be-8c2b980da704",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1528fad1-08a2-44a8-b478-daeda55c9607",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48c3b35a-36cd-45bb-b8c3-494d4c22b4c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8340d88a-ca3c-4455-a93a-b1e5b05d568e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57ca4c31-367c-4b26-9ade-8d864b551bdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "598f480a-add4-4be3-8d55-e29ad1e8433e",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81e5969b-5c27-4ff0-9ced-49d4c7cb608f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cd59ab2-522a-4663-8e3f-bd2d4887f143"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3af506fc-e5ce-4202-ba6f-f571896d3ef9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "977f25ce-8dcf-4648-b364-64b039c6d8b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68246571-f32e-4967-bdd5-1e5b5a262ab1",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0278822d-bb06-48e2-8001-a11db3e3fcaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53da9e0f-4051-4a74-a603-af833edfa0e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "635801f9-e312-4c13-99e1-d03a0ec29808",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a7e6750-a7e2-48fe-a1ee-477c263a2a3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33931cdc-a568-4f63-af2d-0a06015d8a9e",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9de91254-89ff-4a31-b753-c80fc30a1c3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df7440bc-7efc-4568-8f14-839fad36ee1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3896ec97-9eaf-4e12-8c70-300fe93a7d19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "241a6cb1-7cf5-406c-a73d-51878a3e6ee8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "586de3cc-e388-4c3a-a329-d3d5aeb14040",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20399f2f-05e6-4b58-88f0-759cec498fc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edce6e17-dd23-4a16-aa43-7d690008499b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d6047cb-af74-487a-8d37-29b4213f3e56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2a4458b-de9a-43f4-a9a8-d8ea3f88d0f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15ab935c-b186-451a-8ca9-5512d19a81bf",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7943aa7-7698-484f-bf42-22ace2531033",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6f7f82a-858e-49d5-b179-8670a827effa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "954b75fc-0705-40d6-bd8f-5865abf39244",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "164ec518-e304-408e-9362-eab308d76031"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92b313cb-2b44-4c6e-bf6f-f5d8ead3cce5",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09f0ee72-1a17-49c1-a374-b3314cab1909",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44dcb791-396f-48c9-9ab4-3d04d4444afc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0db896d5-7dae-4f57-b782-41f82d22e12f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3541bb68-2b12-4fd8-b569-e28ff13925a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df046ae9-faad-4d17-8dbf-69102c155cda",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8abf84f-9f71-4b59-b043-85b0a534f6e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b4583ec-7172-48b5-b8b2-f070a4386139"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c8e0dea-0b55-4e29-ac5c-7580fd33ef49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "363e8340-46c1-48e9-819c-b5592fd57105"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b97bcbc2-d6b1-4b87-afeb-ee388917b28c",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3be6eec-bfa8-4009-ac19-239dcc7d9928",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8dbfa9d-afd3-4620-ae76-0fc407a2929c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0428af7-58f9-446e-a6fc-04ebeae5c3c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "034b89b3-8c51-4de6-b0d0-fc209e4661cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4c83f3b-4457-4846-882d-61ed4f336984",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "429be180-eb14-47d4-8678-a0708e1c4b87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dafbd81-2e57-4b73-92bc-3cf506d80270"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f59f3997-dab2-414e-87f4-2c5bd735a86e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0f64d5d-806f-4dd8-b374-1cbe9ce612e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af3a3fc3-d62d-443b-8e6d-0f2fae922c8a",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "123a35ab-8b8d-44ef-aefe-7dd1ed270427",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62556240-c4f5-4215-9c23-140bacca08ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac4353db-1fac-4d79-a65e-7564f89d53ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a41ecd5e-e193-4485-a4dc-b6e9b17dfd2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af191d72-4c22-4687-925b-4de55d09193b",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef16d17f-2b9e-4e23-8dc7-922a3c5eb4c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffbb03e5-27d7-4ecd-8baf-674423012ce7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1818da6b-52ee-42f5-89a2-32c022006c93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbf5043f-d94c-4a7b-9912-b5cd4d96bf60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11a81d5c-a9eb-4443-9502-2b143ad62802",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6093f1d4-8a21-4f8d-9ef7-482a566de1a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "660cc7af-ab61-425a-a139-6441e8a4f836"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0b4e070-7c2e-40c8-b7d9-1abc570024d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17580c95-bb6c-4496-bc75-d4baf678def3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5592ce3f-6a2a-4810-800c-7c18ad1fcd01",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e23f7bc6-8ebc-4de7-84f8-a202fb078459",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24c1aeba-e12e-494f-8491-0c61d5cef588"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88531181-b770-4b1c-b1dd-ee5872d6dfe5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f210b381-25ec-4230-a074-9ec81664d41f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b60b9686-03e3-4f34-a89f-5975334affcf",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "094af9ae-d494-4800-97d6-e4624f5e02ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a42896d-04c7-42c4-84be-cd55b6ff458d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b31b9dc-015c-40c1-b651-04d78c736fb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e043e682-1452-4749-9ec9-1f7886f3c258"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c186979-a10c-436a-9420-1d0901ece51e",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74ddb9e2-16b0-4d2d-b1ce-fdac56acb468",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c94ced4c-2156-41ee-bfce-0f22c3a45206"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a005fae-2ae9-4143-b100-a55334870308",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f295a321-da31-4e4b-b06c-9cdd23f5c71d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae6688be-a11f-42b7-b097-87382e6f6add",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb9b05fa-9a32-4c22-b1fa-cb26cd37b02a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf40a3d6-9dd0-4ae4-af54-021cbd47d078"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ccc0627-0429-41ca-9dd6-56dc4788d2a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd640621-e8a7-43c9-afff-46f0ac5956d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "143ecec2-bb20-49a5-a3bf-3774dbae52aa",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4f3c84e-22f8-4a21-a798-8a4d098d0cfe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9869cf0-b178-4098-9e1c-09130c16cead"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0c3608a-2880-454a-ae02-c0d4c42d2c8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e32f023-f7f9-4a60-bb37-98388938b043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "041b22ef-0dad-464d-bea2-2bf70307f205",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54f5c530-dd85-43cc-a1f2-4eddbe1e8042",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "422b1a70-0002-4818-8b18-a3241e557011"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e781da8-1b14-485d-abea-2dad51d39c9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cd70c68-d935-4bb0-87d8-14928bf1bbab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c8fcbba-6224-425f-98a5-b5450693727d",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9964568-2161-412f-95d0-7af4bade747e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4a33d38-2770-46fc-b133-9cd6008c77d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee341e9e-e15e-4739-a28d-a609a0d3fa52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58073337-d895-452d-8f1c-923abda5ad41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6260dcd7-61fa-48ac-a29c-6fda529ab2af",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb1a81c2-8420-4b27-9efc-5917aa349533",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "243437e2-cad6-477f-8674-b34c7a9a8760"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7eb4424-5264-4c86-8f74-455981edb7fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7618feb-1d84-4e05-95f7-35d97571c7c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3928d92-21fe-40ef-84fb-038fcfb78200",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c54a6bc-0da2-47cc-8b00-2742a583dbed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd27f4a4-9152-407c-b166-3f31e5a8555c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "826921f1-5521-4385-8a60-5270d28f9dc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6be5e512-dcef-4003-bfdd-ee1757f86fde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "756265b7-8bc6-41d4-a445-45c75b6162f8",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "907c3b78-e121-4ce2-b8f6-079b5dc319ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b7cbca2-8870-4c17-8522-1d53ab31824b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f55e41ba-0990-4a13-bd66-d48892963e88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea853bf1-7111-4386-b39c-05f3316c8441"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26709752-3aa3-428b-ab46-9c774ea2da4d",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62f7adff-d8d2-42a7-a381-0f03b8c47226",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce702ff4-1f8d-496b-aeec-85c37176d5d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70836afd-cba1-403f-bc10-eecc8d958b96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb3d6201-e3e1-4a62-b789-3c7673d0fc2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41f4c611-88d8-4864-b985-f338e8c2cf44",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "378ee1f3-208a-4dee-a756-68a2009b2a05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49aaf777-b049-4d4a-9427-f96ac77ddf6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2543dce-b793-41b7-ae8a-b8894f4e35f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e6c1398-6fe3-43ff-b460-8e728bdbd279"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cd20348-b781-4474-96d7-a20179a8755e",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d539fb28-de8e-4a08-8204-ab113f04bd33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1047a114-9737-4c83-9744-3816df7cb091"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf974272-bcfd-4649-80c8-fee894204348",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ca9cda7-1532-4ac6-beca-5d74335d7210"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b09dc58e-092a-4500-a1a3-77b303e774b0",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e870866f-460d-4085-acc1-be9aa8268017",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d9b5f0e-ce3e-4ea6-b656-1f983ce1604b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b3f3f5b-188d-42ad-b204-a0dac04e6c0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "215a95ae-e45d-419d-bb69-2b78b5da5a29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85e3e759-1404-46e3-84d8-96756a0479f7",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5da3399-4a3f-4bb8-9b9b-236acab73365",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2680bc05-647a-48c7-8b8c-0372d3b00b7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6749b7e-0706-42b3-88be-75ec5f0609ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9f26025-4d63-445e-8e20-179a0d68a3d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6815ffd0-e7ed-4a1f-b109-4d418b428afe",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22effd34-48ae-442a-b5ba-1cd1cf99f687",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "257efa02-96eb-4cc2-b1c1-da2a1e3b5b12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b743cc8-6248-41d8-b1d6-8526d858bebe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00c7dc52-9d64-4021-9e65-88a3e1eedd75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20935ccf-2020-4579-90b8-daaa7b9a93f9",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f3959c0-2c78-4f6f-a31a-b7087d037db2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "378e40ef-497f-46d6-a2c4-8e831aa8a7b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3e00629-c021-4e74-8bdd-1ed6d95f96b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d1a7aed-047f-4936-b6b8-814b1f87030c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdf5680d-6fe7-4305-b512-93b260440880",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c25565c-ed5a-4653-85d9-dcc1357c0a53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "acf3194e-d858-4b74-870b-c262492ac3c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eacd6cba-2f86-43d8-8e57-986a0ef7ca1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c469ae96-0c0f-4296-9f4d-39afe6c76419"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ec071d8-405e-4c2a-b086-2b120ac1dcf7",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8122fac3-0979-49c0-99c4-1cf3bace8965",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93eb0778-a37f-4e85-b02d-c91f1a205120"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa8f774f-ede5-46d9-b7ab-8442746c47ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf089c80-0851-4700-b5db-c846199caeb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d2aa2ae-138e-4c8d-baef-f895a3f16dbc",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5b35c6c-2ed6-4156-b7f8-6ca0500b0790",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2815ce57-92fb-4b70-8fa1-837859f22304"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a32e355d-0bd3-4fd8-b6db-a4888b6720e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd4690a9-f5d5-4a06-9d7b-7daa5961d915"
                        }
                      }
                    ]
                  },
                  {
                    "id": "873e76e4-69ec-4f34-9b0e-377150e6c1f4",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "227a477d-a79a-4472-8156-9c354cc5a719",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62146231-f3df-44b1-92f6-5920d4c9cf4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d61b46e-56f0-4c13-9212-40fa51c501f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa913106-cb06-4c09-a420-dbdc1e18c430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cf78bff-af59-4f3b-a9ad-1ca542d62d58",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaac05ca-a2d1-4f23-b71a-1be41a03550c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef1855e1-62ac-47de-8909-921e70c1ad16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fc71c74-8794-4c1d-b404-7ac0c05a9a1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "623206c0-41db-4a2c-bf03-4e28a63c92f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d09e3c3-753c-4024-973a-15be12df1fcf",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "239f716e-7312-4577-bc99-d35392cf7d0f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3fd060d6-0d9b-456c-8ad8-84acdc662bc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc7610a5-a604-4310-88c6-808540252bd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50573fc4-2235-4fbd-842e-34e0a6eb4690"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f1b94dd-c105-4bb8-9839-99b12198a99b",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bba9b12b-1da7-4877-aff5-16673bb9fde3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38421369-d14e-42bd-8de7-b83093fe58d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84cd299e-154c-4b3b-acba-b83b7515c438",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b111df21-34f7-4b50-a209-b3af1a02c9e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1689f28-cf58-4289-94fa-8de0fb1f7784",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1e6ea74-5e2f-4e7d-a3df-07cbb3e7c798",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e711e05c-1a94-4b5e-9927-d3c314a93eb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dc9fe98-a5bd-4f2c-8d6b-0c30a40ba1b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a08ab8df-44f2-4a92-80ed-67269dac5fda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3772215e-6466-4631-8bff-a7ced2bf3cb8",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2300d4f-3845-4e57-83c4-58fa06e321b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd9edb75-5a8d-47af-b9e6-5371dd5e625d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cab1a70-e8a4-4e4a-982e-5554316a93ef",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b889a067-4595-4b4a-8a0a-0b9559b6e012"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1ddd47b-5107-4d58-988a-35765e6dff92",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b77a0acc-2955-4d7c-b925-b5505a9f7b54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5523a988-e9d4-4f79-ad5c-bb0618666683"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56f37fba-c10b-4609-aff8-5cd5ff3e0cc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5793c34a-79c6-4221-b1e2-3350904638e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80b10ebf-47dd-4574-aea5-82eac611f022",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc18cc37-bacc-44a0-a3a6-7993f10158f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6af42434-3c70-4f53-b420-95cc08e611c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cedc512-ab4a-444b-9a0f-8392bbb5e56b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c4471b8-2669-42e3-89af-ccba1a8f82a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a8406a3-5b81-4db9-b4bd-55c320e39ff3",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "510c7ac3-e7a4-4971-9fe2-4dfb78ebc860",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87abf7ca-811d-4e4b-8e4a-d1850491ec0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58a30ca1-07d7-4263-9b7c-5b5f7b252572",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9c76ae8-1078-4b2a-b48e-0c557c305a5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84a08c00-30a5-4fdc-ab50-2c158a5e54a7",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da0c9513-98eb-4b9c-9775-3865a76fa261",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2058444-f61e-4698-96d8-7f0a29bb548c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d216c22d-6cb8-4b8d-bfe9-d3c8d2af2e1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a578045-d148-4a2d-ab68-6960a7c557f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39699271-bcbc-429a-9a29-57955724ab48",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48196df6-f508-4fbf-bfda-46a8c7cc0080",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2791e2b0-b0f1-4a15-8ae0-87d85c7f1e24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92f384fb-20ef-4685-9f09-c8c23ec0d3dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32dc78e1-6250-4266-afc7-793514a70c12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db82b1d9-0990-4434-8bca-e249038f9651",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6dd1486-c65f-46b7-9a42-4a430c789855",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80a39352-ae7f-463c-b142-c80ddac00d92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1425fe2e-e91f-4edb-8de1-77a0d8622a98",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8cb5b10-6284-40f8-836c-0c8a7a3cc39d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50568335-2c3a-4675-85f9-fd263bcb48dc",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f512dd6d-9e18-4fa2-9ff8-b1a38435b0b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2bff4f0-f4bd-42b6-98e3-cff5933efa42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e2f110c-09c3-47b5-8f67-fbd66b8bb336",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "780e6782-031d-4542-a158-98c98faef703"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d8cee2ff-19c4-493a-8b8e-c03e95855eb5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "60a73379-20dc-4765-9da4-d65c42cd3701"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f19cccdd-724c-4eea-b90f-aa6fa0117bc8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3333d351-66a2-4019-ac6b-8266b33b555b"
                    }
                  }
                ]
              },
              {
                "id": "700288bc-c56e-4727-adfe-2e8b685fa3e7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a29dc505-6ffc-4d3d-a3d3-ad26571e0241",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69f2764e-a4f8-43da-88e8-7b95babef0bd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "f02c6eda-075a-4819-87bf-872b008dc2e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69b8c5e4-17db-4594-b307-79df91dc612b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8d248db7-7e88-4e72-982d-6c3d063dcb15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "350db0fc-976b-49ea-976f-e5b6c5f0bcb3",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "867a16ce-707a-473a-b6b4-83412ef4a546",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "0d05b7f3-155e-4ffa-94ee-2c87bed16d43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bc7c7d8-14ed-4a36-a662-39744e435279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dd98fc65-f718-451e-a720-0a8a87a44e35"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f6b22566-6712-483c-ac59-a5ff63dfc88b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "65a02e5f-ac66-4921-b17f-f97798671feb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f0d52726-c7ea-442a-8dc5-656b139f8f8c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "570a2113-2102-4cb6-9b28-01b77cac41eb"
                    }
                  }
                ]
              },
              {
                "id": "fd005d30-4962-430d-adef-eeee2f5d145d",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "064a9402-1d22-42ee-9c32-7a1a82b99874",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85c9652f-1418-4bcd-8760-2b91aada852c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "deedc058-2f80-444c-a088-51b4b7b43778"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0589ea9d-3b72-4084-ab0b-ab420d4e6a33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "452dfcd8-0153-4902-a9e2-64ee837f8df4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "65a4841e-6ee2-475b-ab57-31c42add7c13",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d9c91344-a73f-41fd-8166-92c5f2c123b1",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fba301ae-b173-4af0-8328-87d665aa103a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "851efc47-b6d5-4111-aa39-d58f850cc564"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8e4e7238-9b08-4b0e-a042-ed8733bfd48e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "50765081-8956-4318-8ba1-4a3ec95fcf7e"
                    }
                  }
                ]
              },
              {
                "id": "ee69a305-6c88-4c9a-9a8e-477d43766b36",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c367e839-c179-41a0-bcc9-a00aebb8af52",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "25cb08de-f55e-44df-b777-524fe1152c0c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f3ca2a8d-5c96-47ad-b537-8acb1c43cd48",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2ee55724-0139-4dbb-9ddf-e241c7559954"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1d02c3b3-7882-455c-b848-e8e59584c589",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "9072acfb-0e38-4a8e-9b91-81cad1710189"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "34d6ed34-f7dd-4ef3-8451-f30801e2bb71",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d7cdefa7-1adb-417f-8824-9a0afed04a94"
            }
          }
        ]
      },
      {
        "id": "cad1cb42-3a9e-409d-a30a-567977d7a9bc",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "a2ef0432-c32d-494f-8721-50d7b7735d79",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bf9e5971-0d8e-47be-a695-ed7c57b31923",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "18f5485e-ed41-4702-95f2-5d4933c81762",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfdbb479-a363-44a2-a781-a89f0e4dad12",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "bb513172-3e50-4d3c-b067-c5e8fca51e85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95022cf3-36a1-406a-b7fc-97be87405bc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bcb3de0d-80d5-4509-b728-aa1309a4d155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b6ec97d-535a-4a03-9b32-ad287ad17b21",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58de5664-b10d-4aa3-9697-13149d96dd56",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "35201ecc-22fe-4c06-b11a-672dc7b8770b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1785ca52-8da4-4d67-baac-6a270cf0a40f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fed28d4c-2dec-41d8-bb75-6019f73db02c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d282c398-284c-4712-b5cb-1ce087da0890",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7b7925b3-a4b6-4fca-80c4-f3e3c665e22d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "17010634-4f7c-4986-9318-7394f19e6312",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "514563bc-d380-4c82-9c76-dd183fe0f643"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fb944125-dc14-4a13-bad3-39ded8946a8b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "2ffe4ac2-3120-4ca1-b29b-c5ebbcf02918"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bedf1569-389c-4f77-ab95-eff2c1d7389b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3c9427d4-13be-4398-97b5-803480dc2c8e"
            }
          }
        ]
      },
      {
        "id": "57dde4e4-0259-49f0-aa9a-af40d6332fb2",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "9fcf6240-4a32-4760-a48e-361fb4fce1fb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "73f6df60-3893-40e3-b5fb-35711c90d249",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0496f7f1-bce8-4c04-9a65-8fce769b8001",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faeb6451-f557-429a-9a7f-397548a97a1c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "252158a0-20fb-469d-857d-767829a8efc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67dfe746-cc82-452a-8e40-96b52be2ede4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d454bbaf-3eec-45a4-8b5f-a98ff5835022"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3b1cf06-be26-4863-a404-1d86d2d74172",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64820754-cd1c-4008-8691-eb5adc72c2d1",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "7126f162-8737-4328-8a57-5894af90fc25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b10d4a34-dc3d-4266-a506-70fda42179b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9dadc562-fa37-40a6-b41e-84cd0f35062e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7f7c147b-9ba7-44b3-929d-1789f4b7bf5f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "25e926d8-7260-4cf8-bc90-be928b800706"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "476cce77-d233-41a0-aa9c-6cf2f2686895",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "38f21f77-9e37-4f84-be39-6ca80a944eb0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5bbbe351-b6cc-46a7-9373-689093b5931a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8db7ed76-61d2-4bb5-ba79-cea733796bef"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ca1d2761-f630-4711-82e7-2627dc44a915",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "34ace64d-24ae-42c8-9b55-8c8edfd06094"
            }
          }
        ]
      },
      {
        "id": "cc77c53b-e017-429c-926b-c360d438074c",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "da1c762c-9565-42b7-9ab6-91ff92dbcb3e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "92804439-c205-4474-a743-a54155bdb4eb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "344598e1-9435-4d36-b08d-2876c99c38b6",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a22959f-1769-467e-87c5-d8901edf9a46",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1c9fa64d-b94e-490b-bcb4-dcf7750346f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6221f112-ff6a-4c2e-b9da-f345f20de66f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f14a6812-3319-433b-9d40-49e87f992773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1b16d6f-f52f-4381-b10a-9a39d549deb5",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9b8572c-2b8a-418c-8dfb-61991d36dbe6",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "45238b94-c8a5-4d94-b73f-b7a0efc907f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0aec495-b3b1-40c5-8ab4-18f91e9048ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "702809b0-6d07-451b-bbf1-c182b93eb9e0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "77a80b12-6298-48eb-a33e-595d72ec1d37",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6af29d5f-c6de-4997-ae83-9c609995ac9b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "efb24160-d14f-4c80-bb32-7a9206c15590",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b71d853f-47c2-4a70-8229-1adb54a24b5c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "88d43597-4092-47df-8097-24d335f12de7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "72b827ec-5aba-4796-9dee-b1d7095e7910"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "98a5d1e5-ffe0-4b35-9572-52f1eba63f33",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ed76be49-161c-4572-bdfd-9a15d333a701"
            }
          }
        ]
      },
      {
        "id": "6a69c972-7e36-432e-9715-1d95a4cc0baa",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2ebc595e-0a91-4460-8383-23e5f68e5990",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cd3130c4-988e-4bab-95c3-faf1298865cd",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "eb48b327-a676-43a5-b50b-02e23b45dc7c",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bb1aa8ef-50e2-4447-8539-b00a56668110",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "becead4d-3540-4fad-bbce-ed3338f822b0",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 678.8000000000002,
      "responseMin": 14,
      "responseMax": 7153,
      "responseSd": 915.2789688227456,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1682210404052,
      "completed": 1682210591102
    },
    "executions": [
      {
        "id": "1b87d975-2ba1-4287-9149-cb1d7db05110",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "73912d0c-10ff-400a-b724-f769b456b12f",
          "httpRequestId": "c17eef2b-afaf-4b3d-a9df-f20b9c1071e6"
        },
        "item": {
          "id": "1b87d975-2ba1-4287-9149-cb1d7db05110",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "d0c317f8-cea6-4e60-a107-1f8a41f2ed83",
          "status": "OK",
          "code": 200,
          "responseTime": 100,
          "responseSize": 0
        }
      },
      {
        "id": "be4732a8-f826-4c01-8817-67a0de28eb28",
        "cursor": {
          "ref": "f5956296-450a-4c14-b20c-c567b5a722a7",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "8cca2615-bf10-487b-a7de-4e500e1bcb12"
        },
        "item": {
          "id": "be4732a8-f826-4c01-8817-67a0de28eb28",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "d1a7bd46-aeb5-46dc-a2ef-69a65b843bcc",
          "status": "OK",
          "code": 200,
          "responseTime": 14,
          "responseSize": 0
        }
      },
      {
        "id": "c5626e2c-cb99-4cee-9d99-a88ee56dcfb9",
        "cursor": {
          "ref": "7f51a47f-c812-4fc7-91e4-bf62235040ef",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "1ba734f8-4b86-4c65-92ca-611433992bd5"
        },
        "item": {
          "id": "c5626e2c-cb99-4cee-9d99-a88ee56dcfb9",
          "name": "did_json"
        },
        "response": {
          "id": "b2c4e9da-3101-42fb-8d2f-dcf75524099d",
          "status": "OK",
          "code": 200,
          "responseTime": 835,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f9984ca-9424-495b-8763-eb9418b48898",
        "cursor": {
          "ref": "b6749ff4-860e-40bd-9a57-af4e35ab3d51",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "9654163f-1ab8-4910-b357-e58bbc892531"
        },
        "item": {
          "id": "5f9984ca-9424-495b-8763-eb9418b48898",
          "name": "did:invalid"
        },
        "response": {
          "id": "95017ac6-77fc-4739-bdcc-c5a09307a5d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 935,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f9984ca-9424-495b-8763-eb9418b48898",
        "cursor": {
          "ref": "b6749ff4-860e-40bd-9a57-af4e35ab3d51",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "9654163f-1ab8-4910-b357-e58bbc892531"
        },
        "item": {
          "id": "5f9984ca-9424-495b-8763-eb9418b48898",
          "name": "did:invalid"
        },
        "response": {
          "id": "95017ac6-77fc-4739-bdcc-c5a09307a5d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 935,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59892bea-e430-47a8-b038-8a8e4eb05ef1",
        "cursor": {
          "ref": "f634fb21-8054-45d7-a8b6-7bf0819ad7de",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "b8a61e7c-7c55-40ce-a824-e8063a93ed9f"
        },
        "item": {
          "id": "59892bea-e430-47a8-b038-8a8e4eb05ef1",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "deba130b-51e9-407a-abd9-3adab4d7d1f1",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1079,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0ba67c4-2c57-4dfd-af05-62c5c6199395",
        "cursor": {
          "ref": "30547bc5-6a9a-4d2c-8c41-50188c1375a2",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "f22a9aec-37cb-43ae-9db9-15059d109cf6"
        },
        "item": {
          "id": "a0ba67c4-2c57-4dfd-af05-62c5c6199395",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "7ceca226-f59d-4f5f-bebe-37b63c890b33",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1011,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ee94a37-a53e-4ad6-9bf2-829c8479bead",
        "cursor": {
          "ref": "4fd8e1d3-efc0-43af-a7a4-29451fac6a56",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "4c16f114-a4f7-4542-b9ee-6be3da9067f9"
        },
        "item": {
          "id": "9ee94a37-a53e-4ad6-9bf2-829c8479bead",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "68bd49a0-5e0f-40b4-a241-3295f6f073f8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03b0d63e-44fd-4b20-bd95-9b874344bb54",
        "cursor": {
          "ref": "020e93e2-c4cf-42a9-a1dd-8455a30b4f5e",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "9927fc4b-c4e6-4049-b997-27962418e6b3"
        },
        "item": {
          "id": "03b0d63e-44fd-4b20-bd95-9b874344bb54",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "d9d421e2-743f-4c14-8fff-632c1beebeed",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 531,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03b0d63e-44fd-4b20-bd95-9b874344bb54",
        "cursor": {
          "ref": "020e93e2-c4cf-42a9-a1dd-8455a30b4f5e",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "9927fc4b-c4e6-4049-b997-27962418e6b3"
        },
        "item": {
          "id": "03b0d63e-44fd-4b20-bd95-9b874344bb54",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "d9d421e2-743f-4c14-8fff-632c1beebeed",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 531,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82261d57-630a-44f9-ab44-9107c44e50ae",
        "cursor": {
          "ref": "0d940c89-926c-40a2-b58e-a78f3cefa3e9",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "3165e7f2-cdb9-45e5-b4c7-5a5b384538db"
        },
        "item": {
          "id": "82261d57-630a-44f9-ab44-9107c44e50ae",
          "name": "identifiers"
        },
        "response": {
          "id": "977e6683-b51b-40a9-9178-bcee240ca4e8",
          "status": "OK",
          "code": 200,
          "responseTime": 899,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67548559-f918-4347-9ca0-f4db4855f6a5",
        "cursor": {
          "ref": "e9811348-9655-445b-a24d-dcf2db63a1de",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "895e6c28-782f-4818-a05a-58cbe37be5a9"
        },
        "item": {
          "id": "67548559-f918-4347-9ca0-f4db4855f6a5",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "be0e4a4b-f593-496b-943c-a94c7d7617de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67548559-f918-4347-9ca0-f4db4855f6a5",
        "cursor": {
          "ref": "e9811348-9655-445b-a24d-dcf2db63a1de",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "895e6c28-782f-4818-a05a-58cbe37be5a9"
        },
        "item": {
          "id": "67548559-f918-4347-9ca0-f4db4855f6a5",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "be0e4a4b-f593-496b-943c-a94c7d7617de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1ebfe8d-658c-40a9-a08d-2f0de13df369",
        "cursor": {
          "ref": "45d868ce-a183-4e03-9ce9-8648c5412240",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "abf978ab-3a0b-4263-981e-679a66e13e12"
        },
        "item": {
          "id": "d1ebfe8d-658c-40a9-a08d-2f0de13df369",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "b50a526f-d6bf-4331-9e93-41426de5bf4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "630a3618-b929-479e-b0e8-9fbcab2cf517",
        "cursor": {
          "ref": "571ad41c-d073-4e49-bed6-f0fb33b48e33",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "f0ebcf33-2880-4aa8-8291-ff70c8f9d776"
        },
        "item": {
          "id": "630a3618-b929-479e-b0e8-9fbcab2cf517",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "4ea8123e-e7f6-4c0b-b74b-b3cae9d6d51c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d4388b9-9a35-41fa-b970-bcfb5ed74cbb",
        "cursor": {
          "ref": "c03c79b5-bbaa-4703-b036-dd23d3193b68",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "67fb6f4b-a1e8-4c3e-bee4-646a0a9e6ff9"
        },
        "item": {
          "id": "4d4388b9-9a35-41fa-b970-bcfb5ed74cbb",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "8c87aaa9-488e-4c80-98aa-c1f9d0abaa9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 550
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d49a062-7466-44a0-bc24-88f42d1b8f3e",
        "cursor": {
          "ref": "fa168f57-2bc5-48cc-9607-d6d93554b26f",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "de4b4060-b85e-4664-8e79-262de3ddb9af"
        },
        "item": {
          "id": "3d49a062-7466-44a0-bc24-88f42d1b8f3e",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "95a1d8ae-109e-418a-8bec-f8e4735cc631",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc0ab59e-4549-437c-b033-02e37ef67790",
        "cursor": {
          "ref": "4d1b104f-8299-48a8-b5c2-f17bc49ea786",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "c1131f01-e205-4bbe-bcd2-2910227ea7b6"
        },
        "item": {
          "id": "dc0ab59e-4549-437c-b033-02e37ef67790",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "b5e459d8-7574-450c-9c7d-bd14c649813e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "066656af-6791-4343-b6a9-c23bc3bb9a8d",
        "cursor": {
          "ref": "fa8d4861-b3b2-4002-9e9f-12b6e715fbf2",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "7cb221c2-4121-45ca-848d-0d56bf0fab79"
        },
        "item": {
          "id": "066656af-6791-4343-b6a9-c23bc3bb9a8d",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "821bfc0f-6ad5-4d0f-b158-55e5abf67206",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c03a6249-8f35-42b0-91b7-d3737088a20a",
        "cursor": {
          "ref": "5f75f9d4-c6f6-4c0f-a58c-d55b19cfc871",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "0a3b377f-c35a-462d-a861-270c87564bf8"
        },
        "item": {
          "id": "c03a6249-8f35-42b0-91b7-d3737088a20a",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "9172845f-25d3-460f-9c2c-41a8e8f457f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33b781a6-3c9c-4c6e-a48f-0504c5887ecf",
        "cursor": {
          "ref": "a7685ccf-8908-4bec-ab68-a14c30f42f76",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "36931793-6d15-4f99-8a8d-734b09b72ca8"
        },
        "item": {
          "id": "33b781a6-3c9c-4c6e-a48f-0504c5887ecf",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "4bf04530-46ce-4eba-911e-6a655d6c8a87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "390324b0-2908-44f6-a168-ea9f670c06c1",
        "cursor": {
          "ref": "f23a467e-bf5c-41c5-b983-291862881135",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "a0ee92f3-55f5-4c0e-8e4c-242888a08861"
        },
        "item": {
          "id": "390324b0-2908-44f6-a168-ea9f670c06c1",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "84aa5369-b816-47f2-aa0a-724af335ae21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08713745-cdd0-4a0a-b46d-62b608eb698e",
        "cursor": {
          "ref": "80d3a143-02cb-4073-91c4-d14c9e104de9",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "93abffea-7123-4908-ba7f-388a1d559654"
        },
        "item": {
          "id": "08713745-cdd0-4a0a-b46d-62b608eb698e",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "fd24447e-af4b-4633-9844-0e3313d53bf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b38bd0c7-c9b4-4bee-a0a9-e1632fa27ded",
        "cursor": {
          "ref": "18b9779c-6436-4e77-8cd7-885e01833228",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "813250ad-6ae9-49fe-bd65-1f691e2ae33d"
        },
        "item": {
          "id": "b38bd0c7-c9b4-4bee-a0a9-e1632fa27ded",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "82b652e0-cad7-4bc3-bdfa-e1c1a0753126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 646
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "665660e5-7204-4911-871a-865ec94d18c3",
        "cursor": {
          "ref": "b75a39e8-5785-4e97-88ca-77f1cfb8681d",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "ace0b807-9389-4be6-bd8f-4b332374b068"
        },
        "item": {
          "id": "665660e5-7204-4911-871a-865ec94d18c3",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "937c8dc1-64ca-47b5-b8df-88ed23f1d3c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff0b4204-2b79-44fa-8b28-5141b082ef9e",
        "cursor": {
          "ref": "a1a3114a-4195-413f-8061-7acf297389c3",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "9574dc1f-c7bd-47b7-900e-b160fbae3796"
        },
        "item": {
          "id": "ff0b4204-2b79-44fa-8b28-5141b082ef9e",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "96a841a4-ca13-4758-b4ff-cdedf9bbf7a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbe38c92-4dce-4f99-83b3-d07b3e2d4fe6",
        "cursor": {
          "ref": "0c0ca55b-ecc7-48ff-97ab-4a4ad2e01206",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "14074c2a-7a3b-487e-b361-600cccdfe5a3"
        },
        "item": {
          "id": "fbe38c92-4dce-4f99-83b3-d07b3e2d4fe6",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "849c2d3c-8716-4ef4-b0b3-24c29b19701e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92524aa3-e68f-49aa-8f82-e624bb381e13",
        "cursor": {
          "ref": "5249503f-c14d-491b-b5c3-afda0344d01b",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "3fdd4e5b-600d-4c2d-b001-6eeedfd0f442"
        },
        "item": {
          "id": "92524aa3-e68f-49aa-8f82-e624bb381e13",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "e4e46eb1-d803-4e3a-9b3e-27d863a5428c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8847c014-8da9-41e9-9f3b-b228286b70bc",
        "cursor": {
          "ref": "83e37b46-c0b3-42b2-b5ae-e1b549ef1157",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "48b2cccd-99cd-4329-85a8-31441db7c289"
        },
        "item": {
          "id": "8847c014-8da9-41e9-9f3b-b228286b70bc",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "9a669a95-e5ac-4447-b2d8-d4c4a99721f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0adafd04-ab9b-4ed2-9d20-5e2f883e3cb0",
        "cursor": {
          "ref": "ffc70321-0a1c-4bde-ad10-7731de50679c",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "b04402dc-331a-4864-a56f-85cfbb338b3b"
        },
        "item": {
          "id": "0adafd04-ab9b-4ed2-9d20-5e2f883e3cb0",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "137f0882-f9fb-473e-be2a-5c4cff2b205a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a89a71bc-df41-4e4f-aa88-8c6059a9e3e7",
        "cursor": {
          "ref": "f3112300-6abb-4870-92de-a5ac6f94c2a4",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "6540b748-c5cc-4c7e-8ad9-472b82e4b9a8"
        },
        "item": {
          "id": "a89a71bc-df41-4e4f-aa88-8c6059a9e3e7",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "33a37b16-4c0e-4ed3-9e8d-b9ec83e0d8e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1926f001-07ec-4937-bc83-a8b595e134a4",
        "cursor": {
          "ref": "95bfe96b-41c6-401b-ba6c-0a9ecddea10b",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "79672ba4-bf4d-413f-b22d-8ce5a228d91c"
        },
        "item": {
          "id": "1926f001-07ec-4937-bc83-a8b595e134a4",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "e56bd123-8f28-4ecc-8118-881236da5ae8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e515b927-924b-49d1-a96b-e368ada5a6f8",
        "cursor": {
          "ref": "fb109b1a-6a3c-4f6c-a854-60aa0b2ea3ea",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "c88da392-dfd9-41c9-b117-6158fed9d637"
        },
        "item": {
          "id": "e515b927-924b-49d1-a96b-e368ada5a6f8",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "78f8982c-aab4-449d-85ca-5adc5a815224",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "056b0ac0-2de4-4507-93ff-ee5bff327d67",
        "cursor": {
          "ref": "70381055-6358-4a28-8c6d-9b2d5502cf54",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "46c27da6-29d0-4042-a323-399e298f59a0"
        },
        "item": {
          "id": "056b0ac0-2de4-4507-93ff-ee5bff327d67",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "19d76160-cfd0-444e-a31e-bc2826625b42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e213a2f-4a4f-49bd-9aa7-1a1a9052571f",
        "cursor": {
          "ref": "ccbe56bd-fbee-475e-9830-69ab4c39b2a1",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "414f915c-7f3c-4a53-ba14-3f4d203bba9a"
        },
        "item": {
          "id": "2e213a2f-4a4f-49bd-9aa7-1a1a9052571f",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "6b156656-242f-4a78-ac89-d8eb46afb021",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d16c2102-d2ea-4c0f-85eb-68e39e3d5148",
        "cursor": {
          "ref": "4c6c4e33-9130-4fe8-b8ea-33df147cacc1",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "dd013d12-70c4-44a1-8f3a-e34c1d7e54fe"
        },
        "item": {
          "id": "d16c2102-d2ea-4c0f-85eb-68e39e3d5148",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "e2a28681-7ed8-45dc-90bf-b8ecff8e4ff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44454fb0-7041-4ff0-b95b-ff0bbdc2db24",
        "cursor": {
          "ref": "3e03d795-b001-4b56-8dcb-a7d2ec3f9abd",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "a4a01675-0fa8-49af-8824-9a34b0783732"
        },
        "item": {
          "id": "44454fb0-7041-4ff0-b95b-ff0bbdc2db24",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "eb39e01a-ca5c-4437-93ee-ba8c918edd6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0469e559-4813-4bc5-9f6c-3e5886dfe9e7",
        "cursor": {
          "ref": "bf111259-d437-4e48-b2cf-45d43b523a9c",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "2e0015cc-b476-42db-988b-4b4089a71d5b"
        },
        "item": {
          "id": "0469e559-4813-4bc5-9f6c-3e5886dfe9e7",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "f62a90bd-1c50-48b6-9908-888c760a90f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 624
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "817efb1d-6196-4df6-8b74-779a733ddb69",
        "cursor": {
          "ref": "576f810e-60bd-45ac-af79-676e814fc1f6",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "fde26546-a017-4a2f-af66-97cd5e2ed8bf"
        },
        "item": {
          "id": "817efb1d-6196-4df6-8b74-779a733ddb69",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "54cd1074-b12e-4f38-a774-1f05edde65b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9890935d-4d6d-48d6-9f63-1efea16f3dfc",
        "cursor": {
          "ref": "358bbcd6-c5d1-4c04-b6a2-a747d59b7c4b",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "252d92e6-86cf-47cb-8e5a-edf84dcdaeb0"
        },
        "item": {
          "id": "9890935d-4d6d-48d6-9f63-1efea16f3dfc",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "f6c086be-18fc-4378-b9ea-b651662a29b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 738,
          "responseSize": 623
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe2d9976-eb10-43a9-81da-abca462871f9",
        "cursor": {
          "ref": "d61e9c68-3822-4981-8469-3892c9e4016d",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "2ca7fdb6-c515-46b1-a555-d81d945f536b"
        },
        "item": {
          "id": "fe2d9976-eb10-43a9-81da-abca462871f9",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "17d954ec-66e8-4c45-bc56-d23d8d18b24e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 927,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05b09be5-653b-4cdb-96f4-79d45905391b",
        "cursor": {
          "ref": "7e17d338-0d05-435f-8cd4-b093e5ba781a",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "dab3d3b2-cc12-4398-8271-32313e274513"
        },
        "item": {
          "id": "05b09be5-653b-4cdb-96f4-79d45905391b",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "ecd7e47b-21b4-4c91-b087-cc511ea5744d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1067,
          "responseSize": 546
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b938df68-909a-40c8-b78e-06dc0e52d4e1",
        "cursor": {
          "ref": "90d25ab7-e97c-40d3-b164-1e0cc7abcd8f",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "bfa96583-b72a-48a6-bc5d-85b247be833d"
        },
        "item": {
          "id": "b938df68-909a-40c8-b78e-06dc0e52d4e1",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "c85f0f93-7348-4778-85c1-c900a35e911e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1059,
          "responseSize": 1046
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae5ef897-20f5-41d2-bc68-6248dc293f29",
        "cursor": {
          "ref": "81e2c9e3-2192-48fd-9818-4e0db434fc64",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "c72a24ef-2474-45ba-96de-2cf686d4977b"
        },
        "item": {
          "id": "ae5ef897-20f5-41d2-bc68-6248dc293f29",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "d73f459c-2159-4795-95f5-49d16a100b2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 680,
          "responseSize": 975
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7c86ac2-86f3-4655-bcc1-1b633edf63a7",
        "cursor": {
          "ref": "147c1c0e-21ab-4d97-ac2f-6b4e22b54d99",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "a1944c60-df9f-4ac2-90a0-df2ab9376e02"
        },
        "item": {
          "id": "b7c86ac2-86f3-4655-bcc1-1b633edf63a7",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "6f9890e8-4771-45df-ae27-3e0de187d98f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 972
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6107f6fd-7767-41cd-a384-1393a6275760",
        "cursor": {
          "ref": "b4438d7f-b5ee-445a-ab52-8de536dd22d7",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "993ccd17-4a3f-4143-94e5-62a0d4c0ffea"
        },
        "item": {
          "id": "6107f6fd-7767-41cd-a384-1393a6275760",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "e2ea1886-d217-4be4-8744-e71966f1496e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99ad576b-c1cf-4bc5-a3c0-0d913344d6ff",
        "cursor": {
          "ref": "2f39e61c-b3af-4075-8f9c-d7c664d4c545",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "6009d105-a4e8-4c55-bbba-7d8f476509e2"
        },
        "item": {
          "id": "99ad576b-c1cf-4bc5-a3c0-0d913344d6ff",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "306cd042-7290-4881-aa49-43e2dd0f1f63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 1377
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6433646-1d99-4424-bdff-b002ac2845e1",
        "cursor": {
          "ref": "95d5f792-c999-4a47-a62b-deb4ca9ed4c9",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "ff357a0b-add7-4152-b606-e825ece69b7c"
        },
        "item": {
          "id": "b6433646-1d99-4424-bdff-b002ac2845e1",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "3030187c-d9fd-426b-a7c8-81841e9735bc",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 663,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9da85b4e-2931-45fa-b59a-bead17468fa1",
        "cursor": {
          "ref": "9ab47470-80f3-40d4-a474-f235e148f102",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "741b42d3-86fd-4d2e-9c45-9751976ced7f"
        },
        "item": {
          "id": "9da85b4e-2931-45fa-b59a-bead17468fa1",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "b26ca3d1-339e-48d4-a8cb-3d73275d1923",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 1005
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eeff672-6fd4-4e47-bae6-286076af4d9c",
        "cursor": {
          "ref": "865f5dd8-2de2-4524-8265-302cfd6659d1",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "255ca6f3-df72-44c7-ba8e-08af1ed32e97"
        },
        "item": {
          "id": "4eeff672-6fd4-4e47-bae6-286076af4d9c",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "ac24bca5-110f-4d66-97ae-55e7a250dd9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4791a23-40bb-4562-b01d-1fedebf85350",
        "cursor": {
          "ref": "0d059f0f-c6fb-433d-8cb9-79d7370e6ed2",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "b3406484-cfc1-4ae0-bced-b3c3cc8e5d36"
        },
        "item": {
          "id": "c4791a23-40bb-4562-b01d-1fedebf85350",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "fba684ce-198d-4ee5-b018-2a774e3fdeb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 1314
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0854e62-77a6-4e4b-9c14-71c1900d11dc",
        "cursor": {
          "ref": "184c0dcd-0ee1-4521-9270-3e806cc1a70f",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "f8706759-1e79-4080-bfe0-809830e09548"
        },
        "item": {
          "id": "e0854e62-77a6-4e4b-9c14-71c1900d11dc",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "87404eee-4fad-4a8f-80c5-a5bde9c31f64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c0b6a8b-b38d-42bd-a860-0cd5f2c22e86",
        "cursor": {
          "ref": "61e24648-8b09-4cf6-946f-11a258aec7e5",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "cbce4cf0-f066-4d06-8670-d415e093f1b8"
        },
        "item": {
          "id": "7c0b6a8b-b38d-42bd-a860-0cd5f2c22e86",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "2cfdadba-42b2-4db2-be1a-8ea75413ab67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 1313
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f64e178-0624-4e1e-98ad-33f9ce62789b",
        "cursor": {
          "ref": "3a6d11eb-1be1-4659-85ba-b719b9429c4f",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "ceeba214-358f-45a0-829f-30e0600b574c"
        },
        "item": {
          "id": "5f64e178-0624-4e1e-98ad-33f9ce62789b",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "ae1ef72c-8645-44d2-b9a8-0974700762b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 1716
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5a520ad-227e-48ef-beea-425fc5341803",
        "cursor": {
          "ref": "97ed845e-2a56-4a4f-8983-e8e15cd58490",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "6344539c-3a10-44fe-8fea-c2125f8b6d1b"
        },
        "item": {
          "id": "b5a520ad-227e-48ef-beea-425fc5341803",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "dd934c64-213f-4abd-9a27-370ff53a4e20",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 668,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "399df57e-6de2-4b2f-b20d-c3c601514622",
        "cursor": {
          "ref": "5f1e915e-8677-4e22-bac3-05905519172b",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "d7d397bb-208a-4fd0-8100-72d7ad93ed09"
        },
        "item": {
          "id": "399df57e-6de2-4b2f-b20d-c3c601514622",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "44207471-96e1-4281-9626-07228f4c1eb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a23d4b22-0ec3-4326-b3f8-9b4c72da75c9",
        "cursor": {
          "ref": "5672c3f4-fccd-445a-bec0-0902a3f3c851",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "bc839cef-23d9-45fa-9eb3-30890d55a70f"
        },
        "item": {
          "id": "a23d4b22-0ec3-4326-b3f8-9b4c72da75c9",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "26bd7852-786d-453d-a093-2998e104bfb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff3fe620-f762-46d6-b3d1-30a1a1ce4118",
        "cursor": {
          "ref": "857d3f29-2483-4608-8c5c-7bd104d07de8",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "89087e2f-3f5d-4039-a478-8e09be22f3ac"
        },
        "item": {
          "id": "ff3fe620-f762-46d6-b3d1-30a1a1ce4118",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "12d03dc8-ca5b-4586-94e9-79be4fc8cdb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a949435-e980-4069-a0a5-8895cb6b4434",
        "cursor": {
          "ref": "21c4c111-a15c-4695-aba8-979e0e4effd6",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "8effd5ee-a5e8-4445-855f-abfdb30143a3"
        },
        "item": {
          "id": "7a949435-e980-4069-a0a5-8895cb6b4434",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "3664fbc1-a537-4e5b-978a-4fe8ebe47852",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d826430-be12-4847-ba34-5baa4421b9d1",
        "cursor": {
          "ref": "ef6c54f4-bb76-41e0-a180-7e50888fa60a",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "68c14c07-9f3f-41a2-8949-14e3c09e2a3c"
        },
        "item": {
          "id": "8d826430-be12-4847-ba34-5baa4421b9d1",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "47722855-12be-47cb-9caa-5640c3b1af49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28f0b2ef-3214-4341-9aef-eff320d292a8",
        "cursor": {
          "ref": "700584b5-1bf0-47a4-a7bc-b526d896ab2c",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "5a75ff2f-bec5-4b6b-ad3f-567ef9e779f7"
        },
        "item": {
          "id": "28f0b2ef-3214-4341-9aef-eff320d292a8",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "07e00c20-cd61-4e01-8498-e8e9319c3d2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "286c2fee-1cd1-47f2-8bb3-1c66f0d68fb1",
        "cursor": {
          "ref": "7126e316-6046-4a89-af61-866966e393c0",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "bae74855-193a-4bf1-b7b3-2070a3c506b8"
        },
        "item": {
          "id": "286c2fee-1cd1-47f2-8bb3-1c66f0d68fb1",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "e994d991-ccf0-4b76-ad3a-7bd92bf80645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f228ca4c-8b89-4429-b8aa-f37567eef9fd",
        "cursor": {
          "ref": "a05a5229-3ffa-4b7e-b2bb-14c83e601135",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "f99bbfb0-f125-41d4-a2bc-c88ccbaf77da"
        },
        "item": {
          "id": "f228ca4c-8b89-4429-b8aa-f37567eef9fd",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "b163d31c-0ba8-4f44-970b-b747b057f13e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d1429f3-db91-4172-a847-289d4059817f",
        "cursor": {
          "ref": "36b50327-f92f-4e36-a598-7a727deb85a9",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "908546e0-3fa8-4659-8c2f-5d0ee24c949c"
        },
        "item": {
          "id": "6d1429f3-db91-4172-a847-289d4059817f",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "56911870-e049-4304-9d00-d9ddef97eb4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 1100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "971c649c-73f5-4699-bc13-772303fb014b",
        "cursor": {
          "ref": "de8edd39-d258-4b68-931f-d75e54f20c31",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "d2e00346-3bd4-440e-becd-f93fffd92ea2"
        },
        "item": {
          "id": "971c649c-73f5-4699-bc13-772303fb014b",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "b3ed25ef-c554-4af5-b309-a972130ed6c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3174694e-c531-4fff-a4ad-ea0d768722cb",
        "cursor": {
          "ref": "a4579a96-6905-4d6a-9c13-5b86be8aa11c",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "e37a16c0-aba7-41e0-8928-c0d1748274fa"
        },
        "item": {
          "id": "3174694e-c531-4fff-a4ad-ea0d768722cb",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "d9230fbd-13b3-4215-bc12-950800611e23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbe9e40e-35be-41a2-8a47-2942071dd5a7",
        "cursor": {
          "ref": "0257f16d-0cd2-460c-89b8-b19f52f01347",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "6e417fb1-0343-493d-8bf1-44ebb2b6b511"
        },
        "item": {
          "id": "bbe9e40e-35be-41a2-8a47-2942071dd5a7",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "2288b62b-87c5-4b84-be8e-579ef620a78e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 908
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acc55754-d871-4584-816a-8b35503e64c0",
        "cursor": {
          "ref": "0cad14eb-441a-4dcf-84f6-1143c9e7cea7",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "af083492-f0d6-4b41-904b-f606d090d353"
        },
        "item": {
          "id": "acc55754-d871-4584-816a-8b35503e64c0",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "4dcaa340-0f3d-4c01-9b9c-7b250a4ff661",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cd0852d-4c4f-4ecf-8f82-a5380ff5cfb8",
        "cursor": {
          "ref": "8b1c633c-a3ee-434b-993b-cd4e21963dc2",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "a382913b-0d21-4d17-b3c0-7961266659b6"
        },
        "item": {
          "id": "6cd0852d-4c4f-4ecf-8f82-a5380ff5cfb8",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "03989e91-c8e9-4308-8135-87cfbbdf7926",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 1415
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36ec8f23-893f-454f-bfb1-8b8c7ca9e076",
        "cursor": {
          "ref": "99075a36-2576-4812-9c71-b636c745c392",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "48de2e2c-1fd9-47f9-a4e0-4851a0ec9039"
        },
        "item": {
          "id": "36ec8f23-893f-454f-bfb1-8b8c7ca9e076",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "c5573aa6-353e-4ce4-87e3-869c205054b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 1401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcb07c21-c284-4a4c-879a-497570780da2",
        "cursor": {
          "ref": "6bde7189-0466-40ce-a5ab-6d6ace5dc3e8",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "38d67527-7e8e-4efb-85f7-961fc2d8e7ed"
        },
        "item": {
          "id": "dcb07c21-c284-4a4c-879a-497570780da2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "cecdf99b-d3d0-48fb-822f-001785a5180a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fbd7975-b1f2-4a20-a5c8-92a63e414a30",
        "cursor": {
          "ref": "7dcd4950-7871-4d97-873c-a5ff2be1978c",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "e7dfc1ca-ab48-47cc-9129-4585da43d44c"
        },
        "item": {
          "id": "8fbd7975-b1f2-4a20-a5c8-92a63e414a30",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "bbd0e92f-0197-49c1-b6e1-8255aeef0ddf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2baa50a9-8fdc-42b1-bc6a-12e9b81322dd",
        "cursor": {
          "ref": "bf184cb6-82f6-410d-929d-c5e00ea78850",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "988184d5-45dc-4239-8298-b756a2c00bc8"
        },
        "item": {
          "id": "2baa50a9-8fdc-42b1-bc6a-12e9b81322dd",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "7c4bcb25-0554-4ac9-b195-fd76d7f13f6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a126b7b7-47ea-43d5-b37e-a1fe37780266",
        "cursor": {
          "ref": "681249a8-a3c2-49c7-9e3f-a7cdb1c472c6",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "3e4dacae-978b-4718-a2e7-d316b3f25453"
        },
        "item": {
          "id": "a126b7b7-47ea-43d5-b37e-a1fe37780266",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "3637c419-2b3d-4ebe-91c8-a533b5aeae3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "354cc9b4-852d-4e46-991b-509cbaaa2c71",
        "cursor": {
          "ref": "a0737f7e-df64-47c3-90fd-5d5ea270a12b",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "1557d4f0-a87a-4013-a6f1-48c78444b579"
        },
        "item": {
          "id": "354cc9b4-852d-4e46-991b-509cbaaa2c71",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "9d3e419d-2fd8-4b5e-bd1a-bce464df0871",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9a0ed93-6b4c-46d1-8e83-5f6303341058",
        "cursor": {
          "ref": "d9ab175c-5859-442b-9f73-18fcf932c514",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "2a8b39b7-3f07-47b9-b118-1d3d4ab7fd7e"
        },
        "item": {
          "id": "d9a0ed93-6b4c-46d1-8e83-5f6303341058",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "aef3f1c5-dc35-491a-aeac-8909d85fc333",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69f7690e-a73f-42a8-96a5-7542c3eba851",
        "cursor": {
          "ref": "f15501b3-b889-4714-b42d-34ef9b598fb9",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "45d6b4cd-deb7-4914-a1ee-0ffc5b05c53e"
        },
        "item": {
          "id": "69f7690e-a73f-42a8-96a5-7542c3eba851",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "253352a1-e666-41de-8c1c-7ce5f3e8dc76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 914,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7172acd2-5b36-4ee6-926a-c92dd666380e",
        "cursor": {
          "ref": "1214a42d-c470-4446-a498-4dbbccd1228b",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "51ed0f4f-5f84-401a-ac32-9cc017933ab8"
        },
        "item": {
          "id": "7172acd2-5b36-4ee6-926a-c92dd666380e",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "dc516481-fa36-4c71-8499-08cb9681533f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1207,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e681931-2c3c-45bf-9571-c15ebd43b9c0",
        "cursor": {
          "ref": "55c7e67c-42f5-45d7-b842-02155ac932d2",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "4cbbd90a-8bed-4524-9ec9-636bd4ebb1f6"
        },
        "item": {
          "id": "9e681931-2c3c-45bf-9571-c15ebd43b9c0",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "412c9d0f-8118-4122-a506-5423f7525a08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 833,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ae627d0-8607-4816-8395-e2f70f8bf135",
        "cursor": {
          "ref": "c4eecba3-d71d-42f6-9034-b5cb6e2d6406",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "9c81e948-e3e3-4a98-bbb9-ae81f5853ebf"
        },
        "item": {
          "id": "7ae627d0-8607-4816-8395-e2f70f8bf135",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "bfa8ce31-d848-4d18-944b-b4dcfeed4868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 858,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e19ffad0-ef7d-4564-b811-1a324b92d320",
        "cursor": {
          "ref": "93cc61e3-1803-44dc-8474-f6f9a94be5a7",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "e9a44085-b8a4-4931-ad2d-15ba8b556751"
        },
        "item": {
          "id": "e19ffad0-ef7d-4564-b811-1a324b92d320",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "e4d18659-6735-454c-930d-a631d043def8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 836
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec19b886-4a5a-4672-860b-d110a9436fbf",
        "cursor": {
          "ref": "85936921-958d-4b20-b58f-f30c3cc246cc",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "bcbf9ce8-0837-4f13-8f96-873030ac1647"
        },
        "item": {
          "id": "ec19b886-4a5a-4672-860b-d110a9436fbf",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "ffc2c550-aa71-4d13-8f25-6fb84b38436e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10286715-29a3-46c2-8eeb-31d965d4645a",
        "cursor": {
          "ref": "b5659a25-767a-4394-9ee9-12517def308a",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "287064d7-aa99-456d-8df4-b1d8727f432d"
        },
        "item": {
          "id": "10286715-29a3-46c2-8eeb-31d965d4645a",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "67821728-0206-4683-8ec8-a9148c143c79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0304f825-8983-4c4f-8514-b427f9303091",
        "cursor": {
          "ref": "6ee05833-4679-4b52-a99f-9d9980c5b0fe",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "f20a8c67-dbe6-43c4-9448-f0f3f45861e6"
        },
        "item": {
          "id": "0304f825-8983-4c4f-8514-b427f9303091",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "d50aefb9-79b5-4a62-8034-0ee7602a3bea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 816
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ee65cfb-a8ce-4378-806d-617c39a9206d",
        "cursor": {
          "ref": "e7769dab-b934-46b7-99af-cd17c563704a",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "45c5e819-57cc-4fcd-bbaa-1df264a78c7e"
        },
        "item": {
          "id": "4ee65cfb-a8ce-4378-806d-617c39a9206d",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "09879c1c-6ee4-4ed0-a867-a18e8ef50dae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a77d97e-28bf-47cd-8849-c7d425b918f9",
        "cursor": {
          "ref": "af79eae9-11fc-4db8-8d23-657b0647e462",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "7054b4d1-2f21-40e7-afd9-c174db031f08"
        },
        "item": {
          "id": "1a77d97e-28bf-47cd-8849-c7d425b918f9",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "f94fe361-9f4f-4aa9-978f-f297f431daf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 623,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e7d5231-167c-4191-9711-97b23a321b7b",
        "cursor": {
          "ref": "c386ece1-afa4-4fac-b66a-e4791c95c225",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "5356001f-f928-46a9-b3b6-9f559e016067"
        },
        "item": {
          "id": "0e7d5231-167c-4191-9711-97b23a321b7b",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "7d19e79d-dca1-4a63-a23c-d086aefd580d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5e00b54-5743-4cd0-9258-1a85ac62fbd1",
        "cursor": {
          "ref": "6d121d45-7e48-49bf-954d-d1a21ecfed73",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "990f738b-fc2a-48af-9411-ae154d417bdb"
        },
        "item": {
          "id": "e5e00b54-5743-4cd0-9258-1a85ac62fbd1",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "c9bb89b7-526d-464e-8b16-3520eed1e550",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afeac703-015a-46e3-b3c1-e93a8d32c90a",
        "cursor": {
          "ref": "08cf3400-9eca-4da4-9267-a265871f182d",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "40ab358d-f183-4bab-abb6-805116ae9b89"
        },
        "item": {
          "id": "afeac703-015a-46e3-b3c1-e93a8d32c90a",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "80a9f560-91fb-4ecd-8397-8ec5cc3b8ad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79256cd0-8bd7-42ec-b204-424772d00ad2",
        "cursor": {
          "ref": "5548f553-86d2-4697-ab3a-92a388bbcaf3",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "074d9820-5c7c-4dfb-8089-5ee44adb2cdf"
        },
        "item": {
          "id": "79256cd0-8bd7-42ec-b204-424772d00ad2",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "45be2233-76e8-4e9d-b259-120130e7c135",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 633
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10331fcb-0677-4c33-9d89-2b50248fe789",
        "cursor": {
          "ref": "554bfa6e-54cf-4677-88c9-8751c1cd8361",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "36844071-d8fe-4e69-80e2-9d286a2dd083"
        },
        "item": {
          "id": "10331fcb-0677-4c33-9d89-2b50248fe789",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "998eb6a0-14de-45fc-87ee-28b67ec9c3a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9da95dab-ca5d-428e-9902-c2ec457a6c3a",
        "cursor": {
          "ref": "7fc80bd9-6bb9-4ca4-924b-5409090d1223",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "dbd4290e-9631-4dad-9c56-fbd8dbd3c859"
        },
        "item": {
          "id": "9da95dab-ca5d-428e-9902-c2ec457a6c3a",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "c091ea05-9b9a-467f-9b3a-972faea1d817",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12f257a8-be8d-4e09-b099-aebd3910ff9d",
        "cursor": {
          "ref": "ca443e1b-ea96-4fb6-aa5d-401fbe43fbb9",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "c5684bf7-35de-4137-b82c-67fad88c335f"
        },
        "item": {
          "id": "12f257a8-be8d-4e09-b099-aebd3910ff9d",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "f6ad8fae-b765-4610-84c3-7957ad8ad235",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9f8d1c0-cd20-493d-a514-48bc34d4dad0",
        "cursor": {
          "ref": "339e7771-29f3-4abb-8f00-c2b928073848",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "7ffc344f-4233-4a63-b688-2033ba7c8e13"
        },
        "item": {
          "id": "f9f8d1c0-cd20-493d-a514-48bc34d4dad0",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "b86647dc-32c2-4cfa-a4ce-ce847047168a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 721,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f47c6da-a4b9-49a7-8118-f1e46d0452cd",
        "cursor": {
          "ref": "9660594f-1a5b-44d2-b926-2589161c8196",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "0a85db08-48fc-4064-8ca7-6dbac474fd7a"
        },
        "item": {
          "id": "5f47c6da-a4b9-49a7-8118-f1e46d0452cd",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "9c320bf2-5188-43aa-9851-163eddd8c801",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1989,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87bfcb33-be06-44e9-90cb-413d03e0c36f",
        "cursor": {
          "ref": "40e57dc7-f389-46f2-b799-ad6980a8a8d4",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "5d8a9c5e-4075-4ada-a350-65a415d415e8"
        },
        "item": {
          "id": "87bfcb33-be06-44e9-90cb-413d03e0c36f",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "eb4f9e4d-9293-4504-b57b-eb0f0e994881",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1487,
          "responseSize": 655
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "383632f0-709b-4630-bfa5-38e5d0e5b939",
        "cursor": {
          "ref": "cfea6f4c-99c1-4ad0-bbc5-8d84e64081bb",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "155fd381-29bc-4bf6-9f1e-19265f459601"
        },
        "item": {
          "id": "383632f0-709b-4630-bfa5-38e5d0e5b939",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "8f3b0427-da26-460b-b8f2-c5b3a46c829f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2719,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dec02d42-e694-43bb-bc02-c8af50f96395",
        "cursor": {
          "ref": "34ab019e-ee94-4c16-9d6e-6023879bd342",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "9af5a436-7035-4f78-9244-a59e475d2df6"
        },
        "item": {
          "id": "dec02d42-e694-43bb-bc02-c8af50f96395",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "a38a4623-e335-46d9-85f0-ea7280e69fae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1956,
          "responseSize": 690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd5a27b3-3e0f-4fe0-b693-b0c130a8a304",
        "cursor": {
          "ref": "f0b5dcb7-f3af-491a-9d6a-c70cd664fb45",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "fa900479-245f-4e25-bb54-481c8c4e0cf3"
        },
        "item": {
          "id": "cd5a27b3-3e0f-4fe0-b693-b0c130a8a304",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "f36da3e0-542d-4eeb-92c5-d2fa17109320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 893,
          "responseSize": 953
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a277e99-fa51-411c-82c8-473aaee14c2f",
        "cursor": {
          "ref": "865fce2c-c742-42a9-9053-581c7a5da290",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "498bce90-5867-4eb4-9247-5d73d0116681"
        },
        "item": {
          "id": "1a277e99-fa51-411c-82c8-473aaee14c2f",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "3a9ca010-5546-4d09-8bc2-fda28b62a96c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dd2bd70-66df-45fa-9b05-3da8993eb06c",
        "cursor": {
          "ref": "2e8ca19a-8281-4f9b-b0d9-8a6dc55d8ac7",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "55923d2c-89f1-4002-ae92-7a8f1c9dff88"
        },
        "item": {
          "id": "1dd2bd70-66df-45fa-9b05-3da8993eb06c",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "10af1122-7df0-4a6e-9917-a68faad50fd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f321944-c304-4dad-b82e-8f3c1eddd2cd",
        "cursor": {
          "ref": "648588b2-4281-45ad-b937-acf79176dfe8",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "82e7df36-b76f-4730-bd5e-47ee61214a32"
        },
        "item": {
          "id": "0f321944-c304-4dad-b82e-8f3c1eddd2cd",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "26594437-5a32-486b-b919-e55b830ee74c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4f63f72-3631-478e-9c6d-bdacc1b1a1e8",
        "cursor": {
          "ref": "7ab325be-4afb-4119-9a47-f4f5116600dd",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "33e0b2a0-93d6-4023-ba1c-efebfaf119a4"
        },
        "item": {
          "id": "b4f63f72-3631-478e-9c6d-bdacc1b1a1e8",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "50934715-525b-471f-a1c4-afd657428b44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c769524c-80cb-4569-aad1-69474de7b7cc",
        "cursor": {
          "ref": "9843394b-1008-45f7-a8aa-ee09842f345f",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "a0c35d59-e33f-4374-9694-c6ec6b3dbded"
        },
        "item": {
          "id": "c769524c-80cb-4569-aad1-69474de7b7cc",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "db9a6b9b-1d84-460c-9e1e-864bf4832f76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 753
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "240f736a-9471-48f4-baaf-e9c431b3a1b9",
        "cursor": {
          "ref": "181c852f-112d-46c1-bcb3-9c0f08fca8e8",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "29d7e55c-772f-47cf-b0b1-3b73d3e18baf"
        },
        "item": {
          "id": "240f736a-9471-48f4-baaf-e9c431b3a1b9",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "1fb15c79-2c82-4fc2-80f0-6a8b7f941136",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "576a945a-ec04-46d6-8f94-30f416964b72",
        "cursor": {
          "ref": "b4a3d94c-c03f-4454-876a-9f278d1e514d",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "7360ebe8-8d14-4a38-9220-4b064be1d2cb"
        },
        "item": {
          "id": "576a945a-ec04-46d6-8f94-30f416964b72",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "6ef7a16a-92f3-4263-b195-02392b7ef426",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 550,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2900cae2-7725-4ccc-9bcb-8b2d6801703f",
        "cursor": {
          "ref": "4a658882-6534-428c-bf38-c987da5c543b",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "2d657d67-3702-4ebb-af70-6ddb05281000"
        },
        "item": {
          "id": "2900cae2-7725-4ccc-9bcb-8b2d6801703f",
          "name": "credentials_issue"
        },
        "response": {
          "id": "5f58b9be-e7aa-4fa0-a336-db7f43048c67",
          "status": "Created",
          "code": 201,
          "responseTime": 6440,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "48d010e2-28c2-417b-bcc4-54b365417066",
        "cursor": {
          "ref": "240215f1-d679-42d7-acc9-36bfde4eaace",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "76a3f24d-89e4-4cc2-90bf-1158fb12d9c5"
        },
        "item": {
          "id": "48d010e2-28c2-417b-bcc4-54b365417066",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "f160e17d-8a5c-4610-8902-2dd8353fccc9",
          "status": "Created",
          "code": 201,
          "responseTime": 6477,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fddb28a-7c35-4168-b7b9-c8fe74441040",
        "cursor": {
          "ref": "87027243-5909-43db-9b5b-0b2960df5e13",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "454e83d9-eea0-4395-87f1-172a27e8d8b7"
        },
        "item": {
          "id": "2fddb28a-7c35-4168-b7b9-c8fe74441040",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "369714d3-9910-428a-a4ba-15ad0bfc947c",
          "status": "Created",
          "code": 201,
          "responseTime": 5800,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "80ff5e8b-4e1d-416f-822e-697607a3ceb6",
        "cursor": {
          "ref": "fe58a25a-2564-4ae5-bcfa-d823a5939648",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "4b1d4a31-5f45-4f8e-8c75-247775c37d13"
        },
        "item": {
          "id": "80ff5e8b-4e1d-416f-822e-697607a3ceb6",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "01160f50-d79d-436f-afcb-01d2eec9ca00",
          "status": "Created",
          "code": 201,
          "responseTime": 7153,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "291e3e13-5b69-4000-83e5-4f1637e2ac6b",
        "cursor": {
          "ref": "275cf492-9461-4403-ab0f-f1f69a389572",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "eb2aeb99-2920-4e54-9d6d-3731443f7c4c"
        },
        "item": {
          "id": "291e3e13-5b69-4000-83e5-4f1637e2ac6b",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "2b43cc42-c376-4340-9891-be107d271d12",
          "status": "Created",
          "code": 201,
          "responseTime": 5658,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e32f490-0df8-488b-8e07-3a64a43c83d8",
        "cursor": {
          "ref": "eaa32d49-e1e6-48d3-ad61-a4107ff71cce",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "6397e05c-4b9c-490f-9b23-d441d625994e"
        },
        "item": {
          "id": "5e32f490-0df8-488b-8e07-3a64a43c83d8",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "b0c780aa-0d84-4a1d-ac1e-ccdc9ede6c02",
          "status": "Created",
          "code": 201,
          "responseTime": 6163,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d522f73d-5717-41bf-a527-202eb654c356",
        "cursor": {
          "ref": "e0804f29-f184-4e6b-9db5-b429123330bb",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "5981358f-7fc8-4a2a-9bf4-5be6c4bd057e"
        },
        "item": {
          "id": "d522f73d-5717-41bf-a527-202eb654c356",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "8a74e07c-3ba6-4163-b622-ed3a1daf4a8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d522f73d-5717-41bf-a527-202eb654c356",
        "cursor": {
          "ref": "e0804f29-f184-4e6b-9db5-b429123330bb",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "5981358f-7fc8-4a2a-9bf4-5be6c4bd057e"
        },
        "item": {
          "id": "d522f73d-5717-41bf-a527-202eb654c356",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "8a74e07c-3ba6-4163-b622-ed3a1daf4a8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "173c37ca-05a7-407f-a8bf-5d27fced4f73",
        "cursor": {
          "ref": "d9714bb8-90e4-4d3d-9b18-df82fa748bd0",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "76093c97-f8d5-4d5b-a6ef-7679a3be6856"
        },
        "item": {
          "id": "173c37ca-05a7-407f-a8bf-5d27fced4f73",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "dfe5093d-6632-4647-9cb5-bf1e8cae3389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80995b01-9f5e-4649-a18a-e9c87edf02d1",
        "cursor": {
          "ref": "722be81f-e737-4afc-af7d-e5789236479c",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "a3aecca1-192d-42bd-9eae-d5440beab950"
        },
        "item": {
          "id": "80995b01-9f5e-4649-a18a-e9c87edf02d1",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "aae87bd7-a5f2-4031-b45e-21c348d8de98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63923dbd-7023-4525-b92e-5935f69aa00f",
        "cursor": {
          "ref": "a3b43c9d-829d-410d-99bd-2a1ac7ae1418",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "7e4ccc92-3d22-4216-bb3a-0dfdac40ea42"
        },
        "item": {
          "id": "63923dbd-7023-4525-b92e-5935f69aa00f",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "1ae8eb60-a2d1-454a-a888-b90d6547224b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a248e587-3608-4104-ac68-5b40fc07f4d2",
        "cursor": {
          "ref": "5762eddd-1f15-47a9-abcc-ce6ce535a27a",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "58bb510e-2777-4574-ab9b-919e119af24b"
        },
        "item": {
          "id": "a248e587-3608-4104-ac68-5b40fc07f4d2",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "9457392d-2230-410c-8e07-a742070ea50e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bfbe0a7-232b-4c14-bd47-94e8c5b5194a",
        "cursor": {
          "ref": "9e92eb0a-dba4-438e-b2ed-0a777175abd9",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "1f8733aa-54b6-4ad2-89a3-3afd0213ca1e"
        },
        "item": {
          "id": "9bfbe0a7-232b-4c14-bd47-94e8c5b5194a",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "5767da4a-5dc0-4c79-b2ac-e80dbdc8de5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6015b66-93c1-4a15-a40f-01c10cc5490c",
        "cursor": {
          "ref": "38fe1ef0-fc1f-4a7f-b2cb-33ad72904ce7",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "fc0d20c3-93af-4b79-a8df-9836f21c7ce0"
        },
        "item": {
          "id": "d6015b66-93c1-4a15-a40f-01c10cc5490c",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "2a3386c9-4a35-4c47-b714-f13e588451a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1acd5484-7524-454a-bef1-391e44138842",
        "cursor": {
          "ref": "657b9a6f-6f5e-4125-89ac-e2253a098a2e",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "76ee9199-ea00-4840-bca4-17a0bc94c036"
        },
        "item": {
          "id": "1acd5484-7524-454a-bef1-391e44138842",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e249aa2e-020d-44e0-aa5c-770451d91d53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1377944-3c3f-4e2e-8f7f-3e0e8f8a2b49",
        "cursor": {
          "ref": "f712770e-27bd-4d55-b5bf-2c82944a049c",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "f8508eb1-245e-403f-8e84-d77a6c4e7d35"
        },
        "item": {
          "id": "c1377944-3c3f-4e2e-8f7f-3e0e8f8a2b49",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "94bd0310-980d-47e8-a086-07038ea170b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13b452da-953c-48ea-91e9-cb25a93f3fac",
        "cursor": {
          "ref": "e69aa6ef-118f-4853-bf06-0b4e7ee9ca47",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "3a64380e-370c-495a-927b-400b9c678dd6"
        },
        "item": {
          "id": "13b452da-953c-48ea-91e9-cb25a93f3fac",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "2ae582ee-0cdd-4d06-bee5-50db0cbf18c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22cb7792-4a9a-45f5-bbbf-54855a3d4cf1",
        "cursor": {
          "ref": "614b65cd-33e0-419c-a22a-e0c7af41fe62",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "883bcca8-377a-4596-8996-646acad850c4"
        },
        "item": {
          "id": "22cb7792-4a9a-45f5-bbbf-54855a3d4cf1",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "9efbb5b1-5f47-473e-ba24-e39e053e7b9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84fffe42-28d2-43aa-b5d9-150e338961eb",
        "cursor": {
          "ref": "8a5da534-3d8f-4753-a165-b7cdc09fd960",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "68593507-b902-47d5-b559-717031882079"
        },
        "item": {
          "id": "84fffe42-28d2-43aa-b5d9-150e338961eb",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "81ed546c-f7cb-426c-a1ed-6a508521af76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9a41b87-bfb7-430b-b6db-a178a3643bb3",
        "cursor": {
          "ref": "211dc873-4efa-4bf7-9275-df8b07a8e0bb",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "600062f9-a2b3-47ec-bbae-b72393eedea4"
        },
        "item": {
          "id": "c9a41b87-bfb7-430b-b6db-a178a3643bb3",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "72ec09ad-5a01-448c-82d1-e0659b9f623f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "835f5654-5030-44ec-9c48-175964a07cf7",
        "cursor": {
          "ref": "4c743269-a7e6-42e8-8db5-03bd6593a2c9",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "6f50d537-202f-4ccf-805d-689add935eb0"
        },
        "item": {
          "id": "835f5654-5030-44ec-9c48-175964a07cf7",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "a0c0ddf8-6256-461b-8109-b72bd8c00a88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9b3f4ef-d496-4812-8b5b-3e72906679fc",
        "cursor": {
          "ref": "318ed5fe-f584-41fd-8537-cc037dc980be",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "55d4a13d-cdc1-49c1-8686-dbdea7d7a9ea"
        },
        "item": {
          "id": "f9b3f4ef-d496-4812-8b5b-3e72906679fc",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "8b4d20d3-8e99-4a9c-9685-90c1e45a5350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 955,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa5bc55c-2cf0-470b-9752-0e815072af2c",
        "cursor": {
          "ref": "652e8326-8b3b-4c7a-928e-bef67310543e",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "5b79f1b5-f4e4-4848-b905-9c95992c2a2c"
        },
        "item": {
          "id": "aa5bc55c-2cf0-470b-9752-0e815072af2c",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "83c37139-8b1d-4a1c-b607-2780a5c93809",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 627,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "675abc76-d715-459a-a698-371b04bb17ac",
        "cursor": {
          "ref": "e72ab9e6-a598-4a18-bcf5-b7a87e3811d9",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "9cd9704e-4768-4f8f-bf6a-d3622179d733"
        },
        "item": {
          "id": "675abc76-d715-459a-a698-371b04bb17ac",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "ec0b06a6-947f-458c-b09a-0b247ad36073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e7e7431-969c-4f00-a7d4-f6c5690d1b2e",
        "cursor": {
          "ref": "1023aea7-ea87-4191-a00a-8fd164769fdc",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "08c818c0-fa3f-48c0-b52a-92d439ae3eb7"
        },
        "item": {
          "id": "2e7e7431-969c-4f00-a7d4-f6c5690d1b2e",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "2485624f-b987-4775-974e-1d2268401fb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 847,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1723359e-34f4-493c-9fbc-f750d5747f85",
        "cursor": {
          "ref": "1195a692-ca33-40b9-8c2c-50700f9d7959",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "06df47c7-a3ff-466f-8d63-8eefbfc150c4"
        },
        "item": {
          "id": "1723359e-34f4-493c-9fbc-f750d5747f85",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "0d915603-559d-40a4-8e36-b5a0e4b7ec40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 912,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e16af59e-928a-446a-a4a8-a52e5e07f867",
        "cursor": {
          "ref": "a260cca3-988d-4d8e-9f5a-f030f882de86",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "09eb07c5-fe6c-4fd6-80d6-2fe8787675f2"
        },
        "item": {
          "id": "e16af59e-928a-446a-a4a8-a52e5e07f867",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "6afc1192-76d2-4c0f-9afd-969dafa11106",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 876,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bc5399e-8510-4a9a-8b37-0de41e731400",
        "cursor": {
          "ref": "5f198637-8d59-4ff6-8845-3f05305ca3e8",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "a593e85a-dd0f-44fd-bc1c-adf79f33279d"
        },
        "item": {
          "id": "2bc5399e-8510-4a9a-8b37-0de41e731400",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "e0aa5038-3063-4dad-84f2-d7660148506e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05c99523-892f-4195-b451-fa73b93dff29",
        "cursor": {
          "ref": "e402ea7c-f6f4-4ced-9ffc-7415b9686587",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "061aac11-bbae-4325-b2cc-916fe28bff29"
        },
        "item": {
          "id": "05c99523-892f-4195-b451-fa73b93dff29",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "e630e270-1ac9-4da7-bb6a-53c227981315",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da5459b0-e085-4aff-8289-05cfc8a3124f",
        "cursor": {
          "ref": "9a47e3fd-3d24-47a9-aa68-0d9d08381c77",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "98bcb43e-75a8-442c-ae1b-5fb49a23ada1"
        },
        "item": {
          "id": "da5459b0-e085-4aff-8289-05cfc8a3124f",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "2702751b-5ca7-40b3-ab07-ebbe8b18ea52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d426670-4ec9-4439-a8c1-60e4a59672b7",
        "cursor": {
          "ref": "036d51a5-dedb-4617-8dc0-0773cd5cf83e",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "20f2c84e-1b5b-4ce7-8d14-8716d6e71936"
        },
        "item": {
          "id": "5d426670-4ec9-4439-a8c1-60e4a59672b7",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "611b2647-68e2-43d5-9687-56264b68ac41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df254fe8-1e9b-4a1f-9634-028da1eaf752",
        "cursor": {
          "ref": "056c2433-3ff7-4800-9130-fa5012131e17",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "48a95ee2-4ebc-4d39-b1ff-3e5b2217e0ec"
        },
        "item": {
          "id": "df254fe8-1e9b-4a1f-9634-028da1eaf752",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "c9de1267-f362-4d46-af3b-50ab92fd70d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29445dbe-3c3e-437a-9a8a-dab24dc92884",
        "cursor": {
          "ref": "745f7c6f-3c76-4f94-9ccb-3aea55f36a98",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "232e6ae0-482f-4633-a860-544491190a24"
        },
        "item": {
          "id": "29445dbe-3c3e-437a-9a8a-dab24dc92884",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "da08b258-48e4-4b9c-8315-ae0a8ca71f22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f896142-8b8c-49cb-8c18-e504c68ac405",
        "cursor": {
          "ref": "cc79ef57-5892-40c5-9b0c-aa18fcae4ac6",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "d7c793a4-8537-453e-9cc7-67c0588c405e"
        },
        "item": {
          "id": "5f896142-8b8c-49cb-8c18-e504c68ac405",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "5190ef0e-ba70-4aa3-9713-7497e2dba623",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdb80dae-1870-485f-8d4e-289aac2ac1ef",
        "cursor": {
          "ref": "67084ac8-2da2-4170-bdd6-d8dc3af6ae78",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "bb09b6ac-a88c-492a-9fae-01e9b54afae1"
        },
        "item": {
          "id": "fdb80dae-1870-485f-8d4e-289aac2ac1ef",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "185cf213-f4a4-4e32-b779-2383fba39dd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "958366fd-104d-482d-a0e4-2061ada90623",
        "cursor": {
          "ref": "41c95962-c94f-468b-a399-b35bda79e3cb",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "74124243-e9ee-4465-a43a-3be1df5155dd"
        },
        "item": {
          "id": "958366fd-104d-482d-a0e4-2061ada90623",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "af49ca79-b25b-4baa-9daa-91a0d3c592a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baf787bd-c713-4a90-9209-0004dfa2205a",
        "cursor": {
          "ref": "b900a9f1-ce2e-4e38-89e2-42099ce6b911",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "48d241a3-904d-4127-a8db-4a40786e788b"
        },
        "item": {
          "id": "baf787bd-c713-4a90-9209-0004dfa2205a",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "56fc2b45-85a4-4101-92c7-d05e6d2453bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9f4e06b-1b03-44ca-b3fa-9f92b6ec5797",
        "cursor": {
          "ref": "6b62ae77-0d46-4973-95f3-38151228364a",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "17548d81-71e6-470f-aa94-421b831f3abc"
        },
        "item": {
          "id": "c9f4e06b-1b03-44ca-b3fa-9f92b6ec5797",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "e0eaebdd-3bd9-42bb-b321-3fd440674891",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f263e728-931f-4722-ad0f-cda3dc7b313e",
        "cursor": {
          "ref": "9618ed90-f107-43ae-aa0f-6a39cdb19a0e",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "a112a1a0-59ea-4c3b-bed6-c01a23bf7d39"
        },
        "item": {
          "id": "f263e728-931f-4722-ad0f-cda3dc7b313e",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "c338cb9f-94f7-4edf-a5ed-315c56c78c9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4eb546e-9676-4f92-bf89-f40b964bd80a",
        "cursor": {
          "ref": "d7d04325-32e5-4ded-8521-413ae306537b",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "b508a905-a538-40bb-97c2-1bf9ed8d7afa"
        },
        "item": {
          "id": "b4eb546e-9676-4f92-bf89-f40b964bd80a",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "944ffe98-a027-4f8c-921d-ee3b66a92924",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e99996f-5186-4c66-8231-d5b0c7e0934e",
        "cursor": {
          "ref": "85fff493-3bf8-4dc6-8126-dc616e6843e4",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "aef722de-8b0a-4850-8fa6-40395dbcaf2a"
        },
        "item": {
          "id": "0e99996f-5186-4c66-8231-d5b0c7e0934e",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "6456a001-d020-4246-ac78-d4219d3b6647",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 549,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d98ec35c-b116-4d84-b60f-98c5e81918a5",
        "cursor": {
          "ref": "d4633a7f-ca40-40bf-a118-9e6a21d75599",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "7d9aa726-92de-480b-8706-d57c3e94cb71"
        },
        "item": {
          "id": "d98ec35c-b116-4d84-b60f-98c5e81918a5",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "34f92036-9fe4-400f-bfa3-04b2dd98a707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d98ec35c-b116-4d84-b60f-98c5e81918a5",
        "cursor": {
          "ref": "d4633a7f-ca40-40bf-a118-9e6a21d75599",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "7d9aa726-92de-480b-8706-d57c3e94cb71"
        },
        "item": {
          "id": "d98ec35c-b116-4d84-b60f-98c5e81918a5",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "34f92036-9fe4-400f-bfa3-04b2dd98a707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4857a8b9-4864-4c86-82c3-4d4f9148d892",
        "cursor": {
          "ref": "7a567e98-de40-410b-a322-514eaaf9a9c6",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "2465ac9f-f0d0-4138-b92e-612e50c723bb"
        },
        "item": {
          "id": "4857a8b9-4864-4c86-82c3-4d4f9148d892",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "7256eeac-44cd-4bec-92a2-53eb6eab5fd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f178c0ec-f248-47c4-92bf-5a8070f4aa2b",
        "cursor": {
          "ref": "42f148ea-3e24-41b5-b56d-45c047d6164d",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "fb10e9b9-f89d-4da3-a485-8ec9d523ed0f"
        },
        "item": {
          "id": "f178c0ec-f248-47c4-92bf-5a8070f4aa2b",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "52fb1c42-d124-4bd4-8076-f0c72230bbb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af67c330-2d3a-4a94-a40d-24889e6591ab",
        "cursor": {
          "ref": "05f95fe5-ab4d-47c6-bad0-dfc41558d0df",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "6a6caafe-a7c6-4eb3-a690-927554f11ae2"
        },
        "item": {
          "id": "af67c330-2d3a-4a94-a40d-24889e6591ab",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "544fa1e3-aac5-4205-9249-b6c234299715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 344,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b90a6cef-89cb-44f8-981d-b67ec8b1df2c",
        "cursor": {
          "ref": "2cb6ddf9-1cd5-413f-8e7a-3f76087cf98b",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "ff378784-e40b-40bd-b915-177162c1dac6"
        },
        "item": {
          "id": "b90a6cef-89cb-44f8-981d-b67ec8b1df2c",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "a2efd149-5db1-48a7-90eb-a6591bb17de1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aefe5a8b-ee1c-47d6-b0fc-61ca7246c40b",
        "cursor": {
          "ref": "a5db1b08-bed8-4b33-b551-29eb714fe53e",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "e6ceb8d3-dce0-4c08-8ed4-349a5f7ef698"
        },
        "item": {
          "id": "aefe5a8b-ee1c-47d6-b0fc-61ca7246c40b",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "12555ba1-9c3a-4a56-be61-3d704e16ce73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 372,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50e53534-40d6-4a59-8b8d-d59d964f3c51",
        "cursor": {
          "ref": "b93d2b28-311b-4440-821f-ae9d85dd77dc",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "36f56032-fe59-4fb3-bc26-7c6a63d2fd79"
        },
        "item": {
          "id": "50e53534-40d6-4a59-8b8d-d59d964f3c51",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "eb500def-a882-4720-b6b3-ee0c6e734089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dbbd95f-9058-449c-ae9b-af92bb10d828",
        "cursor": {
          "ref": "075ea9d3-d54e-46cc-93a7-645583c347a5",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "1e65380a-8d69-4f22-89fb-2f022120e9cd"
        },
        "item": {
          "id": "6dbbd95f-9058-449c-ae9b-af92bb10d828",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "1f3af29f-eac3-42e9-9b7d-106b7826ab82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 869,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce00772c-caec-4256-a6b1-b362d549c328",
        "cursor": {
          "ref": "4992d310-cef8-43a5-addc-a7b2364d8d3c",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "271dffd5-cabf-4476-a2b5-856ad48f971c"
        },
        "item": {
          "id": "ce00772c-caec-4256-a6b1-b362d549c328",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "47b0c8e2-7e62-4abb-a5d9-044e163923ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 748,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf40e10f-7b02-4c5d-bf2d-2f06e73fbb48",
        "cursor": {
          "ref": "e9b5f36b-e0b7-4c7f-ba45-b6d90a2d14bf",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "793c1f0b-85ab-4e57-9e34-35b6fa1013c0"
        },
        "item": {
          "id": "cf40e10f-7b02-4c5d-bf2d-2f06e73fbb48",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "fe666935-bb87-4063-afc5-6820fae4abd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52202c6e-4e52-4339-98e0-04913c0c2b4b",
        "cursor": {
          "ref": "d5f80a3a-d6f7-4c99-b7c0-91c93f22417b",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "4fec16e8-996b-4ad8-a9a8-fbfdcde5b62a"
        },
        "item": {
          "id": "52202c6e-4e52-4339-98e0-04913c0c2b4b",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "1b9a05de-5907-44db-b752-499fb938742b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 790,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60fc634c-b373-4a86-86e9-e8a8b2faf2c0",
        "cursor": {
          "ref": "d80ea175-50c5-4487-9d49-8a9b62e35e32",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "5d7e6e14-cd8f-468e-8fd2-c98b0dd65e15"
        },
        "item": {
          "id": "60fc634c-b373-4a86-86e9-e8a8b2faf2c0",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "399e5bc0-5d38-40a6-9328-4a3faf95051a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 737,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d67bd17-f5f0-4489-a026-ac7f82843e68",
        "cursor": {
          "ref": "7f105a5c-06f1-462b-b7cd-94666a77eaee",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "17173a35-f50e-4845-bea6-e17959d525ee"
        },
        "item": {
          "id": "2d67bd17-f5f0-4489-a026-ac7f82843e68",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "f902ef48-5ae3-4c7e-85e6-c24ebb24c3f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 1532
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e8f114d-8b96-4d3d-aeca-ad0eb6ae91f5",
        "cursor": {
          "ref": "7998fa19-6892-463a-811f-ad2081a6527b",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "656691d6-30cf-44c5-b490-5e36abd98b37"
        },
        "item": {
          "id": "8e8f114d-8b96-4d3d-aeca-ad0eb6ae91f5",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "aaae008d-2614-4fa3-9a4f-fd81dc0aedcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 339,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "355389cc-a690-43d3-8c5a-66c79ac8a912",
        "cursor": {
          "ref": "59c7113d-0c13-48f5-82a5-22d81effb046",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "213568b1-ff54-4ec1-bfad-fc7fd79af171"
        },
        "item": {
          "id": "355389cc-a690-43d3-8c5a-66c79ac8a912",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "d9476b04-3154-4082-b10d-1165e706f378",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 1521
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c903460-639e-4c5f-bca2-299327b1119e",
        "cursor": {
          "ref": "4135229f-fbc8-460a-811a-10ec9a605c41",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "5fbd8931-3029-4cd6-98bf-7009c39111f3"
        },
        "item": {
          "id": "8c903460-639e-4c5f-bca2-299327b1119e",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "3b6396ae-f42b-40ed-8bbc-6c7de6f6171b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 372,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c2aceaa-bbe6-4a43-af65-a92b0b99945b",
        "cursor": {
          "ref": "64e613f3-6c87-434b-92a6-d984f5737967",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "e0c00002-7f7b-4c8f-9ce2-ee097a0c23a4"
        },
        "item": {
          "id": "2c2aceaa-bbe6-4a43-af65-a92b0b99945b",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "76ca5364-0461-4349-901d-82ef3ec90304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 1420
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fff6d1fe-c094-4736-821a-8770ef29623c",
        "cursor": {
          "ref": "815e382c-abac-4971-9f87-28625063fdee",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "a3696dc4-5cbb-40a1-92f0-a1565aa1811c"
        },
        "item": {
          "id": "fff6d1fe-c094-4736-821a-8770ef29623c",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "0a9ac81d-84bb-4279-a5d9-386a383631be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57e6cc64-a2ff-4494-a630-0accbb1191a0",
        "cursor": {
          "ref": "dd6b3c02-1fe7-4d32-ad48-40460f589f5f",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "3c370a19-da8e-4eae-accd-4029dfa490d1"
        },
        "item": {
          "id": "57e6cc64-a2ff-4494-a630-0accbb1191a0",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "e5e6f3a7-721e-43a0-9796-98559b9143a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 350,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf9df83f-518a-42d0-a795-f855f9df1ec8",
        "cursor": {
          "ref": "97759e63-2d7b-4ce1-81f8-205386d20b39",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "05554816-12d7-43b6-b4f3-ef7c014e53d5"
        },
        "item": {
          "id": "cf9df83f-518a-42d0-a795-f855f9df1ec8",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "9e15106e-c7a8-4506-9b3c-fc6e2cb582c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d757c3ce-7451-432c-99da-737b16b903b7",
        "cursor": {
          "ref": "7431664d-c4e6-4758-92c1-7b9582f60cf0",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "092095c8-0279-4594-a80f-97e90bef17e3"
        },
        "item": {
          "id": "d757c3ce-7451-432c-99da-737b16b903b7",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "b41c1fcc-e167-4f31-8623-d8325a24a21e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 336,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3735593-f8ad-49cd-9165-31427d587d67",
        "cursor": {
          "ref": "60165f68-37d5-4afd-936f-9d7e531ad630",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "19f382f4-c057-4f1f-8395-cec67b8005f9"
        },
        "item": {
          "id": "e3735593-f8ad-49cd-9165-31427d587d67",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "111e1cf1-40d8-43ca-a40b-7982e88b4b62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1179e2fc-68a4-4260-a14f-076fdab211b5",
        "cursor": {
          "ref": "50ffe776-2b97-41b4-ac78-8b5081285fc8",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "28489cf7-4cf1-45f2-b40e-6872bc0a76f9"
        },
        "item": {
          "id": "1179e2fc-68a4-4260-a14f-076fdab211b5",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "47d04910-fdf3-4c5b-a36b-c609f2985baf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d0f10fd-8759-4ee1-a034-4328a478d9f0",
        "cursor": {
          "ref": "9b0ad053-76c3-4293-8038-c72951908760",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "1641b95d-bcf2-48ea-9d29-6663100c37bb"
        },
        "item": {
          "id": "7d0f10fd-8759-4ee1-a034-4328a478d9f0",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "e3233e87-b2de-491b-aa7c-e88700982d66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f1bba4d-460c-4d06-93f9-97e440319547",
        "cursor": {
          "ref": "7a6d05ad-458c-401d-b3ff-c4b1fa07adfc",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "fcccdc96-6e08-4da3-b880-36dfce6ab206"
        },
        "item": {
          "id": "9f1bba4d-460c-4d06-93f9-97e440319547",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "164c33c9-eefd-4947-a88e-00b1c5727bb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 336,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54e4fece-4f1d-483f-a5be-f596272763d0",
        "cursor": {
          "ref": "e5c72d63-c2fa-47ae-87c6-edff50b00fde",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "e4f4a830-02e2-462a-a2c4-9dbb8002b178"
        },
        "item": {
          "id": "54e4fece-4f1d-483f-a5be-f596272763d0",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "31145ff1-192b-40e8-b189-ce458a37fb7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbd43a84-f6c0-4ff3-83e0-91f55cc6feff",
        "cursor": {
          "ref": "0dc60f6f-5677-4561-91b8-acee4b84c8f0",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "e918b54e-4451-473f-b56c-f7507118b362"
        },
        "item": {
          "id": "cbd43a84-f6c0-4ff3-83e0-91f55cc6feff",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "e7071b5f-962f-480c-b805-7aca8b86b2fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 344,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da37606d-c5ef-4bd4-9f65-24d2784bc10d",
        "cursor": {
          "ref": "7edd5d8a-5b91-445c-8d64-9d51656d23f9",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "61a54a24-e435-487a-a1f9-c3fe5c8b3699"
        },
        "item": {
          "id": "da37606d-c5ef-4bd4-9f65-24d2784bc10d",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "6a95cf61-a023-4967-8f99-909f46a6b6c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4616d0ad-54d5-4a4c-a787-6b2ee8639ba8",
        "cursor": {
          "ref": "0416367b-dc04-4a8f-b06b-f5fb11b88a44",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "a9db6144-f574-4e4f-a07f-487acbb50294"
        },
        "item": {
          "id": "4616d0ad-54d5-4a4c-a787-6b2ee8639ba8",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "fcf2e2c0-1d1f-40e2-b833-49ddfce66dc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 340,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aafd02a-7e0e-4f65-8b81-9e8be0800dc5",
        "cursor": {
          "ref": "2c0503a8-b402-4c38-8737-416faa71bec1",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "bed3adb4-e380-4db3-bf84-4db52183bbbe"
        },
        "item": {
          "id": "9aafd02a-7e0e-4f65-8b81-9e8be0800dc5",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "e231712e-a32f-4841-a52c-1b75a3d09f24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "601b47c2-c945-49be-8db6-2f64d30255b6",
        "cursor": {
          "ref": "bc44cfa5-9aaa-449c-a483-7646ba9895a4",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "9fb0f395-9cd7-4984-9864-ee4fe0faeceb"
        },
        "item": {
          "id": "601b47c2-c945-49be-8db6-2f64d30255b6",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "8c7de457-0ab3-4ffe-b9ae-04413852df5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cccd96cf-d578-4544-a44b-cf7877c1c06e",
        "cursor": {
          "ref": "59fbbe59-bfec-44f3-a124-5ae0f09a2f65",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "8f5b9887-4b4a-404f-83f5-021393753067"
        },
        "item": {
          "id": "cccd96cf-d578-4544-a44b-cf7877c1c06e",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "3abb17d8-b0ea-4daa-a54d-ae713807a5fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bde9228b-c8ec-4779-b347-14021ded2049",
        "cursor": {
          "ref": "b3be1bf8-93af-4bec-9dcf-b269ca3ffd7f",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "7798ba13-21e7-43ea-9076-7aa769760afe"
        },
        "item": {
          "id": "bde9228b-c8ec-4779-b347-14021ded2049",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "b2639cd2-bd40-443b-81bd-b0a7a08fa7d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca333299-8aca-45c5-8623-2f8d1c6117b6",
        "cursor": {
          "ref": "892cf128-b039-461b-94a8-0d19a59ae62b",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "ebf0dc8c-b0ff-490c-976d-09b15f681aea"
        },
        "item": {
          "id": "ca333299-8aca-45c5-8623-2f8d1c6117b6",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "732a4c37-0bcc-4521-be6e-993a3ab74614",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a08f502a-26fb-44b7-89aa-312b3dc4d609",
        "cursor": {
          "ref": "cd7c673e-93b8-4d40-82c3-aa6ef1d14dd4",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "804ea3a8-c907-4cd7-9955-a644f0ffaa4e"
        },
        "item": {
          "id": "a08f502a-26fb-44b7-89aa-312b3dc4d609",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "3a184a03-029f-4606-ac56-1699b711481b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 339,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cd4c723-574e-4b71-9977-e41d2815a797",
        "cursor": {
          "ref": "44583299-4d87-45fb-bbd2-0b26b896c994",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "95002807-4059-4e7b-b167-f4a20eb722b6"
        },
        "item": {
          "id": "9cd4c723-574e-4b71-9977-e41d2815a797",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "fdcaef52-f30b-45b4-a888-ad00c692fec8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 340,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51ef07a7-fd93-44ef-8f78-88dd194c2539",
        "cursor": {
          "ref": "1cdb7e6a-2cef-4549-bc8c-886fa3543b11",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "1048332a-9082-40d2-9cd3-3ed19fd8b06a"
        },
        "item": {
          "id": "51ef07a7-fd93-44ef-8f78-88dd194c2539",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "caa13723-1609-4ebe-b1cc-6517f9d0199d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7534d53-07da-4af0-b994-42686494b2c7",
        "cursor": {
          "ref": "70e2a509-a2ba-4e6c-8c92-8a8072ec7de2",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "3e13ca7f-12f9-40b3-a374-ed5c0e854bcb"
        },
        "item": {
          "id": "d7534d53-07da-4af0-b994-42686494b2c7",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "db86bc90-4448-444f-889e-086a2784ea26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 339,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13de97f0-b58f-462e-8f50-cc34a67b114d",
        "cursor": {
          "ref": "3ba79e67-f38b-4044-af39-d77b5fbb8324",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "2707cc7a-77a1-42f7-b444-745df93edfe0"
        },
        "item": {
          "id": "13de97f0-b58f-462e-8f50-cc34a67b114d",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "797a2724-d812-40b2-85b3-306481c4ba75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31809806-1a9f-40b0-b325-54b362275216",
        "cursor": {
          "ref": "05c32d69-b4ad-462c-9dd8-393820305538",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "98597458-4410-4f5b-a5d8-6f2c902072be"
        },
        "item": {
          "id": "31809806-1a9f-40b0-b325-54b362275216",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "d9c0c912-ed25-41ae-96a4-20b70c8d5121",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 1817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4747c098-8823-45e6-8811-9639f491ff6d",
        "cursor": {
          "ref": "2073cb93-bccc-4ee2-8f1e-6d3cb8d4b2ed",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "afc7ff43-f580-4b36-bc29-1c6d3dca033d"
        },
        "item": {
          "id": "4747c098-8823-45e6-8811-9639f491ff6d",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "409167d4-d3a8-47a5-b8cb-a6fc060c66d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 334,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39778245-d613-4b21-9402-4d15dc412df9",
        "cursor": {
          "ref": "58d92e1e-9834-4725-8d99-1716e9d9a91c",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "14d7f728-c910-4d86-a4f9-108ee9521be1"
        },
        "item": {
          "id": "39778245-d613-4b21-9402-4d15dc412df9",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "1c3c3daa-bfc3-42a1-80b7-32679ec20bdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f979f97-73e2-40e8-a807-ce2dcf62e418",
        "cursor": {
          "ref": "66d5e96d-ff7a-4462-b9a4-a38a6f5df6e1",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "ae52847f-670b-4bc2-b121-a19e28d1e6ef"
        },
        "item": {
          "id": "5f979f97-73e2-40e8-a807-ce2dcf62e418",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "59f5c87d-60f3-4948-ad34-c30bf4ea9333",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 335,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "348368d3-4771-440f-bb6d-48ec1384d658",
        "cursor": {
          "ref": "19dc9c33-2612-420a-85ec-8cd5ae053d03",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "a4b06e9a-05b7-4779-85f9-853ad50133b5"
        },
        "item": {
          "id": "348368d3-4771-440f-bb6d-48ec1384d658",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "9ae52429-6a90-424b-87a4-27e5067a7881",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f8ae872-20a2-4707-a257-099246d52c2c",
        "cursor": {
          "ref": "8282b117-5359-479c-b041-ac0891310c88",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "7cd5e847-664b-40da-a72c-290b860aeeb7"
        },
        "item": {
          "id": "2f8ae872-20a2-4707-a257-099246d52c2c",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "b3155bd6-3d49-4795-a9f5-5af443bec6d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3484310-9c93-4d27-bead-3bcd7ef5606c",
        "cursor": {
          "ref": "8cc98441-6b7d-442f-8a1b-640303bad1c8",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "2c94fe84-60b6-4805-afb8-08b4b47329ce"
        },
        "item": {
          "id": "f3484310-9c93-4d27-bead-3bcd7ef5606c",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "69b0ac37-9915-443f-ab08-a161adee22a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac815d63-9dca-4a6d-90cc-70e7d6819554",
        "cursor": {
          "ref": "12ca3192-5ca7-407c-a9b8-37d00b6d7c8d",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "fba94151-c6e3-4ddf-a973-09ad23557812"
        },
        "item": {
          "id": "ac815d63-9dca-4a6d-90cc-70e7d6819554",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "84b325ec-83ce-4ec8-8241-6c2be70b2b31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 331,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4052e97-c0f2-484c-9084-0c9f507d3e35",
        "cursor": {
          "ref": "652c72fc-41ed-4fdf-9787-9c5af711b777",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "cc3f517e-e690-4c70-8e02-584b84261bee"
        },
        "item": {
          "id": "c4052e97-c0f2-484c-9084-0c9f507d3e35",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "a287d137-f870-4d62-bb1b-5eb7a8aa9e7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e39eb62-403c-4879-aee4-4e1fd00d2539",
        "cursor": {
          "ref": "0757987c-46c6-41fd-bab3-b5c7cf48fb23",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "72241f5f-ff68-4667-b36c-ab93d2080fc4"
        },
        "item": {
          "id": "4e39eb62-403c-4879-aee4-4e1fd00d2539",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "271e6c91-fb40-4360-822e-cbf35d339057",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02dcd927-cb2b-45f6-88f7-a293b8328e20",
        "cursor": {
          "ref": "9a05e8e8-50d4-48d3-9e85-a9b62d46cf5d",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "83f652b5-29ad-4351-a069-7648932ec9cf"
        },
        "item": {
          "id": "02dcd927-cb2b-45f6-88f7-a293b8328e20",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "80b1ca02-6544-4631-bee9-69b06f35c721",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b7cf2b3-0a51-40fc-af45-d33452995338",
        "cursor": {
          "ref": "843ec961-7e29-4377-9a2f-12ac90f08cb1",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "6e296a5b-6bff-4a17-aa31-b63c9cfb0765"
        },
        "item": {
          "id": "6b7cf2b3-0a51-40fc-af45-d33452995338",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "387e928e-b657-4606-bc7e-24336c05ed4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43095462-6f0d-4e2c-b8be-8c2b980da704",
        "cursor": {
          "ref": "af5a72eb-a3bc-4541-895e-1ae37bd4d4f3",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "a4f49537-98d0-44a5-92c3-7b1d98b13da2"
        },
        "item": {
          "id": "43095462-6f0d-4e2c-b8be-8c2b980da704",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "52a6408b-e993-44fc-aa6f-d2e00dee6be7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "598f480a-add4-4be3-8d55-e29ad1e8433e",
        "cursor": {
          "ref": "107a4ef6-b21a-4b58-8534-7b6d750fe80e",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "cb91d9eb-40a6-4ff4-91f6-e116304b2a80"
        },
        "item": {
          "id": "598f480a-add4-4be3-8d55-e29ad1e8433e",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "53503297-9115-46aa-a0c8-d81ad1b7b70c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68246571-f32e-4967-bdd5-1e5b5a262ab1",
        "cursor": {
          "ref": "a5f8d2f3-38f9-442e-88d6-8360aec5e199",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "396f64c9-f086-41c4-ad18-5c30337288a9"
        },
        "item": {
          "id": "68246571-f32e-4967-bdd5-1e5b5a262ab1",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "89335ffb-3113-461d-ba78-0a18091f8afc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33931cdc-a568-4f63-af2d-0a06015d8a9e",
        "cursor": {
          "ref": "994694b6-e50c-4b0d-848a-553740e14870",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "c59c4e2a-d25f-4df7-a31c-081c0fdf3876"
        },
        "item": {
          "id": "33931cdc-a568-4f63-af2d-0a06015d8a9e",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "8b254d56-1fae-4518-bd36-e64546a9c22e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "586de3cc-e388-4c3a-a329-d3d5aeb14040",
        "cursor": {
          "ref": "757a7a30-250e-4ca9-8fab-6b1b424623b6",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "c120a289-1de6-4d75-979f-e593305eb02f"
        },
        "item": {
          "id": "586de3cc-e388-4c3a-a329-d3d5aeb14040",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "0fc44b1e-1e09-499a-805d-7b9d11ca8fcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 347,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15ab935c-b186-451a-8ca9-5512d19a81bf",
        "cursor": {
          "ref": "36a5c789-6aba-4a4c-9f43-bcddcdf3b738",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "d6c55ae5-be4a-4dc5-9e0f-0f7fdc0d679e"
        },
        "item": {
          "id": "15ab935c-b186-451a-8ca9-5512d19a81bf",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "216cb707-ea86-4cb9-bad9-c0ef53c4f979",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 334,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92b313cb-2b44-4c6e-bf6f-f5d8ead3cce5",
        "cursor": {
          "ref": "2d01e850-40fc-4214-a580-1f8862c1457a",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "d5a90494-067f-4fbf-a1b5-7e43dd950af7"
        },
        "item": {
          "id": "92b313cb-2b44-4c6e-bf6f-f5d8ead3cce5",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "cc424be9-4df2-40b6-908e-d601762996e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 339,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df046ae9-faad-4d17-8dbf-69102c155cda",
        "cursor": {
          "ref": "a7069092-66ae-41a5-a9c8-e9ee2a09f85f",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "40238935-67cd-4f68-bd57-ff9a91c6cec3"
        },
        "item": {
          "id": "df046ae9-faad-4d17-8dbf-69102c155cda",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "656c1972-e73e-4d5f-b5e1-2e14376dfcd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b97bcbc2-d6b1-4b87-afeb-ee388917b28c",
        "cursor": {
          "ref": "7ef00efb-2e4f-4914-bbe6-1349f7d58f14",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "3dd87bee-c838-4a92-b0ca-b40a98034df8"
        },
        "item": {
          "id": "b97bcbc2-d6b1-4b87-afeb-ee388917b28c",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "7b80d7c9-90f3-4972-a747-5bfcc02537ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4c83f3b-4457-4846-882d-61ed4f336984",
        "cursor": {
          "ref": "87a2d9c6-04dd-40f3-95d3-a9294e216f4a",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "7e826172-0941-413d-985d-ad84ec03f094"
        },
        "item": {
          "id": "e4c83f3b-4457-4846-882d-61ed4f336984",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "2f6a02aa-9b8b-4281-a73d-fdb3a645edb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af3a3fc3-d62d-443b-8e6d-0f2fae922c8a",
        "cursor": {
          "ref": "16fd63c0-f8ae-42b2-8c3b-634d0c620cab",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "f41c44c2-9acb-4f93-b2e9-103d2b7944df"
        },
        "item": {
          "id": "af3a3fc3-d62d-443b-8e6d-0f2fae922c8a",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "6b19065b-668d-4011-a453-e3807f116ce1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af191d72-4c22-4687-925b-4de55d09193b",
        "cursor": {
          "ref": "6598e41c-0202-44b0-a3a0-51b9e548966c",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "0051b35a-3390-4173-8c27-a50da831f9fa"
        },
        "item": {
          "id": "af191d72-4c22-4687-925b-4de55d09193b",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "61876ad4-18d1-43f7-a75a-d0c07b2dab1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 331,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11a81d5c-a9eb-4443-9502-2b143ad62802",
        "cursor": {
          "ref": "0034dc01-c9b7-4d4f-8329-0ad0ee6f3271",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "dacea86b-a7e9-4f94-920a-8149ee317b8d"
        },
        "item": {
          "id": "11a81d5c-a9eb-4443-9502-2b143ad62802",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "65f86061-ba0f-4c20-8c18-0d9ac7183d26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 335,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5592ce3f-6a2a-4810-800c-7c18ad1fcd01",
        "cursor": {
          "ref": "6bf86430-1083-4da7-8484-18c9428af79d",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "67179623-ab93-4e6e-80db-77267e58a798"
        },
        "item": {
          "id": "5592ce3f-6a2a-4810-800c-7c18ad1fcd01",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "4c8c358e-f47b-4fda-aa55-a8e340198af4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 331,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b60b9686-03e3-4f34-a89f-5975334affcf",
        "cursor": {
          "ref": "38d20ec9-1cc2-4e4f-bae3-7f535bdfdbd6",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "6cea5fac-6922-4c78-83ee-ac5acd1af83f"
        },
        "item": {
          "id": "b60b9686-03e3-4f34-a89f-5975334affcf",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "172521a2-539a-4e69-b787-ab3a68a2f74c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 348,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c186979-a10c-436a-9420-1d0901ece51e",
        "cursor": {
          "ref": "167561be-adbd-4570-9a39-6e607c85d42a",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "5219068b-0d35-4c71-8847-262dd9ea04f2"
        },
        "item": {
          "id": "4c186979-a10c-436a-9420-1d0901ece51e",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "de61a43b-da40-4ac3-9614-cad0426bd9e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae6688be-a11f-42b7-b097-87382e6f6add",
        "cursor": {
          "ref": "f3f51dcb-c79f-4f8e-bc85-13ca68b6274c",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "ee10b80d-33c5-4a84-ab3b-0ca7310a75ca"
        },
        "item": {
          "id": "ae6688be-a11f-42b7-b097-87382e6f6add",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "07c4780a-da45-42ae-95b2-34ba841ab480",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "143ecec2-bb20-49a5-a3bf-3774dbae52aa",
        "cursor": {
          "ref": "f2606056-60e2-45b8-8d62-83410b0c3bb1",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "e3fffcc2-f0ad-4479-ad34-7f702bea09d2"
        },
        "item": {
          "id": "143ecec2-bb20-49a5-a3bf-3774dbae52aa",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "6b007b71-4cf8-40b3-b6ad-bfdea565ea2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 347,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "041b22ef-0dad-464d-bea2-2bf70307f205",
        "cursor": {
          "ref": "0e4d07e8-1c50-44bd-ab13-f2d9a3218647",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "ff9e10e5-d79b-41ad-88e2-29c1ce1c107f"
        },
        "item": {
          "id": "041b22ef-0dad-464d-bea2-2bf70307f205",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "c6a7dc20-c73d-4d6c-b134-82e81c9df6e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 335,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c8fcbba-6224-425f-98a5-b5450693727d",
        "cursor": {
          "ref": "e7caeb93-1a6d-4995-9523-2082e14cab26",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "5915289f-ec97-429c-b520-3457f6a7d2ca"
        },
        "item": {
          "id": "1c8fcbba-6224-425f-98a5-b5450693727d",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "8783fd58-ceb2-4767-bde4-865a861fd7bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 344,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6260dcd7-61fa-48ac-a29c-6fda529ab2af",
        "cursor": {
          "ref": "287233df-96b8-41f8-b7d8-6390a124fc51",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "3a075d26-bc71-428e-acff-f75ee304f4c3"
        },
        "item": {
          "id": "6260dcd7-61fa-48ac-a29c-6fda529ab2af",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "1e01823d-e0ab-42db-b496-d9995fbc763c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3928d92-21fe-40ef-84fb-038fcfb78200",
        "cursor": {
          "ref": "f8f3bddd-4645-4a27-b677-baf8486fe4a3",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "1c3cebd2-172a-4db9-8949-b203b392c154"
        },
        "item": {
          "id": "d3928d92-21fe-40ef-84fb-038fcfb78200",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "43a008f8-e8d8-40f9-84de-836565b65635",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "756265b7-8bc6-41d4-a445-45c75b6162f8",
        "cursor": {
          "ref": "d87e5c5b-d71a-4d65-b512-237e47f1f7f5",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "32b3f5d8-7374-4a29-8bea-fa4e98b79bf0"
        },
        "item": {
          "id": "756265b7-8bc6-41d4-a445-45c75b6162f8",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "f72038a1-45cb-4d5c-a349-55c24f74b71b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26709752-3aa3-428b-ab46-9c774ea2da4d",
        "cursor": {
          "ref": "5e593cbe-301b-42e2-a5de-f53cdcd3004c",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "9ec2bdd3-da52-47a6-89ca-9873bc654cc4"
        },
        "item": {
          "id": "26709752-3aa3-428b-ab46-9c774ea2da4d",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "e81fc8c0-7687-4d2a-adef-b64572e758d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 423,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41f4c611-88d8-4864-b985-f338e8c2cf44",
        "cursor": {
          "ref": "d33f77ca-e4bd-47f9-8821-9c89d31595cf",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "3d8a916d-a373-422f-ba8d-e21c60059337"
        },
        "item": {
          "id": "41f4c611-88d8-4864-b985-f338e8c2cf44",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "792e898f-e3c6-49bf-83ef-bd866e2ce63c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 767,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cd20348-b781-4474-96d7-a20179a8755e",
        "cursor": {
          "ref": "d3ec30eb-1224-4d20-a545-bd2d53073d7c",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "14550dba-367f-4605-9e5c-21110825bb28"
        },
        "item": {
          "id": "1cd20348-b781-4474-96d7-a20179a8755e",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "14248371-8aaa-4aa5-88fd-c9eb1c35c748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 747,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b09dc58e-092a-4500-a1a3-77b303e774b0",
        "cursor": {
          "ref": "142c0bf7-bbd6-49a7-b8f4-87aa46580540",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "17cee4ff-e265-415d-800f-eec365238013"
        },
        "item": {
          "id": "b09dc58e-092a-4500-a1a3-77b303e774b0",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "a6d275e4-00d4-4590-ac6a-b53bea20c1c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 695,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85e3e759-1404-46e3-84d8-96756a0479f7",
        "cursor": {
          "ref": "624481fe-93c3-4126-95d3-58f2a83d5df7",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "3e972915-c042-4d40-ba3c-a5b851d0003e"
        },
        "item": {
          "id": "85e3e759-1404-46e3-84d8-96756a0479f7",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "ed7e923c-77c9-4719-ba98-63ab60eb48e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 833,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6815ffd0-e7ed-4a1f-b109-4d418b428afe",
        "cursor": {
          "ref": "b4710181-3e33-4fe1-af17-bee2aa71b853",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "cda39203-4bd1-44ad-b634-a951e09a1003"
        },
        "item": {
          "id": "6815ffd0-e7ed-4a1f-b109-4d418b428afe",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "5cf2acdc-4567-47fa-b470-0029b121bf66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 949,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20935ccf-2020-4579-90b8-daaa7b9a93f9",
        "cursor": {
          "ref": "b5010623-1248-48b3-8798-8205ffe5ba6c",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "c886eea8-df55-4602-9673-948e30eba0e6"
        },
        "item": {
          "id": "20935ccf-2020-4579-90b8-daaa7b9a93f9",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "54df4501-7f47-4377-84e5-3cce879ae4b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 968,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdf5680d-6fe7-4305-b512-93b260440880",
        "cursor": {
          "ref": "8f9172a1-cefc-4ac1-915b-50646f90f752",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "c226516f-29f5-4c74-bdef-bbb82d40ac3d"
        },
        "item": {
          "id": "fdf5680d-6fe7-4305-b512-93b260440880",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "65bc731f-7fc6-47ff-b128-d5225a437a1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 745,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ec071d8-405e-4c2a-b086-2b120ac1dcf7",
        "cursor": {
          "ref": "78b3a52a-0c29-4824-ad65-2dd79647a98f",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "4bb2ea0a-599c-465d-857a-90072286cb8b"
        },
        "item": {
          "id": "9ec071d8-405e-4c2a-b086-2b120ac1dcf7",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "39022a40-77b2-4e93-9556-845b01cd551c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d2aa2ae-138e-4c8d-baef-f895a3f16dbc",
        "cursor": {
          "ref": "2abc3be7-5adc-4ad2-9829-6d2446ee3144",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "42fe709e-7b42-48d0-87d7-9472dde14b57"
        },
        "item": {
          "id": "3d2aa2ae-138e-4c8d-baef-f895a3f16dbc",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "2c4cea99-5245-44e0-92e9-0d67375446d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "873e76e4-69ec-4f34-9b0e-377150e6c1f4",
        "cursor": {
          "ref": "26d7a773-1af7-4b5e-9f41-7400a3b8bbd4",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "a0a04d43-ad3c-4932-be9f-03c5feecf851"
        },
        "item": {
          "id": "873e76e4-69ec-4f34-9b0e-377150e6c1f4",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "36afa7e9-52b2-4e20-abba-9808897bfa09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cf78bff-af59-4f3b-a9ad-1ca542d62d58",
        "cursor": {
          "ref": "a58e57e0-7786-40ae-9e35-c95312eb22b4",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "2c756a78-e894-4755-ae1e-2b9425551f54"
        },
        "item": {
          "id": "4cf78bff-af59-4f3b-a9ad-1ca542d62d58",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "58bda81c-3951-45c8-a2ff-822fffeafb51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 468,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d09e3c3-753c-4024-973a-15be12df1fcf",
        "cursor": {
          "ref": "5bc2ea33-fb86-41ec-b484-a32c54999b88",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "b673d8e9-d10d-4948-ae09-2c0faeddba19"
        },
        "item": {
          "id": "8d09e3c3-753c-4024-973a-15be12df1fcf",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "2d5a1f30-e81c-4ee1-9e6a-49ff116ed65e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f1b94dd-c105-4bb8-9839-99b12198a99b",
        "cursor": {
          "ref": "635d1e4d-1f97-461c-b6d2-6858d34ef1b7",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "9ce7a647-85ad-4bf9-8d29-b503365a977e"
        },
        "item": {
          "id": "9f1b94dd-c105-4bb8-9839-99b12198a99b",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "45d71501-4353-4164-a6c6-0e43b51ae33b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 336,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1689f28-cf58-4289-94fa-8de0fb1f7784",
        "cursor": {
          "ref": "fc12464d-0f93-4b0d-8ff3-4afa2dad14de",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "89bfe796-7af0-44bb-b074-b254fd5afa9e"
        },
        "item": {
          "id": "e1689f28-cf58-4289-94fa-8de0fb1f7784",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "c6236a17-dbd2-4410-8d4c-ad8834acffd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3772215e-6466-4631-8bff-a7ced2bf3cb8",
        "cursor": {
          "ref": "08c639f6-7c0f-4e73-9874-68088bebd4a7",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "273ec384-7764-4182-8166-7446301a0ba1"
        },
        "item": {
          "id": "3772215e-6466-4631-8bff-a7ced2bf3cb8",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "96df8091-47c3-4f66-8bf1-389d6993efff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 398,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1ddd47b-5107-4d58-988a-35765e6dff92",
        "cursor": {
          "ref": "5f0468b0-65a6-4141-9699-a701714cc8d6",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "c2c82d34-2f23-4135-a7ff-41bc357a2bff"
        },
        "item": {
          "id": "e1ddd47b-5107-4d58-988a-35765e6dff92",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "5f19cec4-c278-4395-bb30-09467b2b14fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80b10ebf-47dd-4574-aea5-82eac611f022",
        "cursor": {
          "ref": "dab47708-4bcc-45db-b422-b4d1029e2d8a",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "ce1ee19f-b762-4260-ac80-2ea5160b8ebd"
        },
        "item": {
          "id": "80b10ebf-47dd-4574-aea5-82eac611f022",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "710fe186-1ef6-4305-bb8d-900eb826757a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a8406a3-5b81-4db9-b4bd-55c320e39ff3",
        "cursor": {
          "ref": "ee520448-721d-4b7f-875e-fda827a6ec24",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "1b4bbb1a-04fa-417b-b269-b1785ac0d541"
        },
        "item": {
          "id": "1a8406a3-5b81-4db9-b4bd-55c320e39ff3",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "9cfb8917-6b70-49eb-983e-3300158572d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84a08c00-30a5-4fdc-ab50-2c158a5e54a7",
        "cursor": {
          "ref": "893fdfb4-77ae-4946-b4eb-1a13765f5057",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "3d523645-0569-4ad9-80c6-829b7d148cdf"
        },
        "item": {
          "id": "84a08c00-30a5-4fdc-ab50-2c158a5e54a7",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "7e1cc568-886e-401a-88e5-71fa5ce5320a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 385,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39699271-bcbc-429a-9a29-57955724ab48",
        "cursor": {
          "ref": "ab3b5a3c-71a7-4c1a-ad06-a40c3b1e5f7f",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "9af96904-1781-42ad-97bf-4ff22aef258f"
        },
        "item": {
          "id": "39699271-bcbc-429a-9a29-57955724ab48",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "e4656e95-32ad-4b33-99c8-7933699ed538",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 334,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db82b1d9-0990-4434-8bca-e249038f9651",
        "cursor": {
          "ref": "b9b27604-b1d1-4b77-a9df-69c47e5b4fe2",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "97961dc6-98b8-408a-a94a-7638333185bc"
        },
        "item": {
          "id": "db82b1d9-0990-4434-8bca-e249038f9651",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "5c98ae40-ccfc-4c1e-a9b7-73a0854c70fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50568335-2c3a-4675-85f9-fd263bcb48dc",
        "cursor": {
          "ref": "c8205bad-ad30-4edb-ac00-c08da8b0071b",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "e88990c6-4b5f-4b97-9351-08cd55f83acc"
        },
        "item": {
          "id": "50568335-2c3a-4675-85f9-fd263bcb48dc",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "932cc1d6-29a6-47d8-8d44-340290d464b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a29dc505-6ffc-4d3d-a3d3-ad26571e0241",
        "cursor": {
          "ref": "5c7a7030-f2e9-4322-87d3-f4b983a4c958",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "32e59719-607f-4c8b-91c0-d7e81964e799"
        },
        "item": {
          "id": "a29dc505-6ffc-4d3d-a3d3-ad26571e0241",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "45a64a34-794d-473b-ac4c-1cbdb3e5b3d9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "350db0fc-976b-49ea-976f-e5b6c5f0bcb3",
        "cursor": {
          "ref": "7675179f-3ad5-432c-bd44-f2906e908cdd",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "480c2d1b-9641-4d08-9ab1-100c63943b33"
        },
        "item": {
          "id": "350db0fc-976b-49ea-976f-e5b6c5f0bcb3",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "5db6eee5-6341-4191-9548-f177759a196f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 340,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "064a9402-1d22-42ee-9c32-7a1a82b99874",
        "cursor": {
          "ref": "ad02012f-1eb8-4062-8045-00dc22c5a390",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "0a65660a-f6af-40bf-b561-1d53146c96e6"
        },
        "item": {
          "id": "064a9402-1d22-42ee-9c32-7a1a82b99874",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "18ed2cb6-ce97-4b13-8b85-7d5419b734e0",
          "status": "OK",
          "code": 200,
          "responseTime": 397,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9c91344-a73f-41fd-8166-92c5f2c123b1",
        "cursor": {
          "ref": "585bf689-2efc-4f70-a58e-3b8715eceecf",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "9696c0f9-904d-4dd8-aa5e-f8c4a5df1cd2"
        },
        "item": {
          "id": "d9c91344-a73f-41fd-8166-92c5f2c123b1",
          "name": "credentials_verify"
        },
        "response": {
          "id": "d4c8e0e5-9afd-444b-99ca-071e1823f774",
          "status": "OK",
          "code": 200,
          "responseTime": 1837,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee69a305-6c88-4c9a-9a8e-477d43766b36",
        "cursor": {
          "ref": "99ed8f37-2220-4fbc-87a6-3ec54634a0bf",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "7ab62eef-8215-4211-9903-218218a39ea0"
        },
        "item": {
          "id": "ee69a305-6c88-4c9a-9a8e-477d43766b36",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "78db8550-04d6-4d11-82e5-a3cfa7f146ea",
          "status": "OK",
          "code": 200,
          "responseTime": 1494,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "18f5485e-ed41-4702-95f2-5d4933c81762",
        "cursor": {
          "ref": "1617488a-db83-469b-929a-844733b3525f",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "6336292c-774f-490a-a055-61d479d7724e"
        },
        "item": {
          "id": "18f5485e-ed41-4702-95f2-5d4933c81762",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c69960c1-ee18-41ac-974c-414e034d39d2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18f5485e-ed41-4702-95f2-5d4933c81762",
        "cursor": {
          "ref": "1617488a-db83-469b-929a-844733b3525f",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "6336292c-774f-490a-a055-61d479d7724e"
        },
        "item": {
          "id": "18f5485e-ed41-4702-95f2-5d4933c81762",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c69960c1-ee18-41ac-974c-414e034d39d2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18f5485e-ed41-4702-95f2-5d4933c81762",
        "cursor": {
          "ref": "1617488a-db83-469b-929a-844733b3525f",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "6336292c-774f-490a-a055-61d479d7724e"
        },
        "item": {
          "id": "18f5485e-ed41-4702-95f2-5d4933c81762",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c69960c1-ee18-41ac-974c-414e034d39d2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b6ec97d-535a-4a03-9b32-ad287ad17b21",
        "cursor": {
          "ref": "ddce5e8f-8a60-44c5-bd31-7e8f92449e86",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "a3115244-e17f-4df7-be04-e4c367ec5714"
        },
        "item": {
          "id": "1b6ec97d-535a-4a03-9b32-ad287ad17b21",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "e052ade6-403f-4409-8511-8ced585632dd",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 1378,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0496f7f1-bce8-4c04-9a65-8fce769b8001",
        "cursor": {
          "ref": "ac7555c5-7a33-4134-992a-5125d5609b22",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "4c46f5ad-3fb4-4f3c-903c-85786f9e0fb9"
        },
        "item": {
          "id": "0496f7f1-bce8-4c04-9a65-8fce769b8001",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "81d6a25b-2e9b-445d-85e6-01217ed3b154",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0496f7f1-bce8-4c04-9a65-8fce769b8001",
        "cursor": {
          "ref": "ac7555c5-7a33-4134-992a-5125d5609b22",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "4c46f5ad-3fb4-4f3c-903c-85786f9e0fb9"
        },
        "item": {
          "id": "0496f7f1-bce8-4c04-9a65-8fce769b8001",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "81d6a25b-2e9b-445d-85e6-01217ed3b154",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3b1cf06-be26-4863-a404-1d86d2d74172",
        "cursor": {
          "ref": "688c7457-e60a-4342-8a12-af81b0792f1b",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "9840c2e7-6063-4b8e-b00d-27333e1e0f19"
        },
        "item": {
          "id": "e3b1cf06-be26-4863-a404-1d86d2d74172",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "3837d134-31d7-4f30-b3ce-5c06de029376",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 1070,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "344598e1-9435-4d36-b08d-2876c99c38b6",
        "cursor": {
          "ref": "1614c387-9f84-4240-8837-ecf090a0b2b2",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "10a5814a-8b8c-46a7-b397-75ea221aec39"
        },
        "item": {
          "id": "344598e1-9435-4d36-b08d-2876c99c38b6",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "c88a984d-e9c4-4ed8-bb54-6a6f3a42a5c0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "344598e1-9435-4d36-b08d-2876c99c38b6",
        "cursor": {
          "ref": "1614c387-9f84-4240-8837-ecf090a0b2b2",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "10a5814a-8b8c-46a7-b397-75ea221aec39"
        },
        "item": {
          "id": "344598e1-9435-4d36-b08d-2876c99c38b6",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "c88a984d-e9c4-4ed8-bb54-6a6f3a42a5c0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1b16d6f-f52f-4381-b10a-9a39d549deb5",
        "cursor": {
          "ref": "21827349-88a5-4347-b5a4-9d9c7a77ab1c",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "adcaf86a-1e40-473d-ab87-5fd989adb9db"
        },
        "item": {
          "id": "d1b16d6f-f52f-4381-b10a-9a39d549deb5",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "9040a40a-217a-43bb-b895-6d4b756c87ca",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 698,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}